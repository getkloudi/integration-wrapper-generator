/**
 * Amazon Elastic Compute Cloud
 * <fullname>Amazon Elastic Compute Cloud</fullname> <p>Amazon Elastic Compute Cloud (Amazon EC2) provides secure and resizable computing capacity in the AWS cloud. Using Amazon EC2 eliminates the need to invest in hardware up front, so you can develop and deploy applications faster.</p> <p>To learn more, see the following resources:</p> <ul> <li> <p>Amazon EC2: <a href=\"http://aws.amazon.com/ec2\">AmazonEC2 product page</a>, <a href=\"http://aws.amazon.com/documentation/ec2\">Amazon EC2 documentation</a> </p> </li> <li> <p>Amazon EBS: <a href=\"http://aws.amazon.com/ebs\">Amazon EBS product page</a>, <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html\">Amazon EBS documentation</a> </p> </li> <li> <p>Amazon VPC: <a href=\"http://aws.amazon.com/vpc\">Amazon VPC product page</a>, <a href=\"http://aws.amazon.com/documentation/vpc\">Amazon VPC documentation</a> </p> </li> <li> <p>AWS VPN: <a href=\"http://aws.amazon.com/vpn\">AWS VPN product page</a>, <a href=\"http://aws.amazon.com/documentation/vpn\">AWS VPN documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DefaultTargetCapacityType from './DefaultTargetCapacityType';

/**
 * The TargetCapacitySpecification model module.
 * @module model/TargetCapacitySpecification
 * @version 1.1.0
 */
class TargetCapacitySpecification {
    /**
     * Constructs a new <code>TargetCapacitySpecification</code>.
     * &lt;p&gt;The number of units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is &lt;code&gt;maintain&lt;/code&gt;, you can specify a target capacity of 0 and add capacity later.&lt;/p&gt; &lt;p&gt;You can use the On-Demand Instance &lt;code&gt;MaxTotalPrice&lt;/code&gt; parameter, the Spot Instance &lt;code&gt;MaxTotalPrice&lt;/code&gt;, or both to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, EC2 Fleet will launch instances until it reaches the maximum amount that you&#39;re willing to pay. When the maximum amount you&#39;re willing to pay is reached, the fleet stops launching instances even if it hasnâ€™t met the target capacity. The &lt;code&gt;MaxTotalPrice&lt;/code&gt; parameters are located in and &lt;/p&gt;
     * @alias module:model/TargetCapacitySpecification
     */
    constructor() { 
        
        TargetCapacitySpecification.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TargetCapacitySpecification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TargetCapacitySpecification} obj Optional instance to populate.
     * @return {module:model/TargetCapacitySpecification} The populated <code>TargetCapacitySpecification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TargetCapacitySpecification();

            if (data.hasOwnProperty('DefaultTargetCapacityType')) {
                obj['DefaultTargetCapacityType'] = DefaultTargetCapacityType.constructFromObject(data['DefaultTargetCapacityType']);
            }
            if (data.hasOwnProperty('OnDemandTargetCapacity')) {
                obj['OnDemandTargetCapacity'] = ApiClient.convertToType(data['OnDemandTargetCapacity'], 'Number');
            }
            if (data.hasOwnProperty('SpotTargetCapacity')) {
                obj['SpotTargetCapacity'] = ApiClient.convertToType(data['SpotTargetCapacity'], 'Number');
            }
            if (data.hasOwnProperty('TotalTargetCapacity')) {
                obj['TotalTargetCapacity'] = ApiClient.convertToType(data['TotalTargetCapacity'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/DefaultTargetCapacityType} DefaultTargetCapacityType
 */
TargetCapacitySpecification.prototype['DefaultTargetCapacityType'] = undefined;

/**
 * @member {Number} OnDemandTargetCapacity
 */
TargetCapacitySpecification.prototype['OnDemandTargetCapacity'] = undefined;

/**
 * @member {Number} SpotTargetCapacity
 */
TargetCapacitySpecification.prototype['SpotTargetCapacity'] = undefined;

/**
 * @member {Number} TotalTargetCapacity
 */
TargetCapacitySpecification.prototype['TotalTargetCapacity'] = undefined;






export default TargetCapacitySpecification;

