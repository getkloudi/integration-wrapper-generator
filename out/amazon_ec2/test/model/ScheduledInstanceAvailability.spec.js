/**
 * Amazon Elastic Compute Cloud
 * <fullname>Amazon Elastic Compute Cloud</fullname> <p>Amazon Elastic Compute Cloud (Amazon EC2) provides secure and resizable computing capacity in the AWS cloud. Using Amazon EC2 eliminates the need to invest in hardware up front, so you can develop and deploy applications faster.</p> <p>To learn more, see the following resources:</p> <ul> <li> <p>Amazon EC2: <a href=\"http://aws.amazon.com/ec2\">AmazonEC2 product page</a>, <a href=\"http://aws.amazon.com/documentation/ec2\">Amazon EC2 documentation</a> </p> </li> <li> <p>Amazon EBS: <a href=\"http://aws.amazon.com/ebs\">Amazon EBS product page</a>, <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html\">Amazon EBS documentation</a> </p> </li> <li> <p>Amazon VPC: <a href=\"http://aws.amazon.com/vpc\">Amazon VPC product page</a>, <a href=\"http://aws.amazon.com/documentation/vpc\">Amazon VPC documentation</a> </p> </li> <li> <p>AWS VPN: <a href=\"http://aws.amazon.com/vpn\">AWS VPN product page</a>, <a href=\"http://aws.amazon.com/documentation/vpn\">AWS VPN documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonEc2);
  }
}(this, function(expect, AmazonEc2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonEc2.ScheduledInstanceAvailability();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ScheduledInstanceAvailability', function() {
    it('should create an instance of ScheduledInstanceAvailability', function() {
      // uncomment below and update the code to test ScheduledInstanceAvailability
      //var instane = new AmazonEc2.ScheduledInstanceAvailability();
      //expect(instance).to.be.a(AmazonEc2.ScheduledInstanceAvailability);
    });

    it('should have the property availabilityZone (base name: "AvailabilityZone")', function() {
      // uncomment below and update the code to test the property availabilityZone
      //var instane = new AmazonEc2.ScheduledInstanceAvailability();
      //expect(instance).to.be();
    });

    it('should have the property availableInstanceCount (base name: "AvailableInstanceCount")', function() {
      // uncomment below and update the code to test the property availableInstanceCount
      //var instane = new AmazonEc2.ScheduledInstanceAvailability();
      //expect(instance).to.be();
    });

    it('should have the property firstSlotStartTime (base name: "FirstSlotStartTime")', function() {
      // uncomment below and update the code to test the property firstSlotStartTime
      //var instane = new AmazonEc2.ScheduledInstanceAvailability();
      //expect(instance).to.be();
    });

    it('should have the property hourlyPrice (base name: "HourlyPrice")', function() {
      // uncomment below and update the code to test the property hourlyPrice
      //var instane = new AmazonEc2.ScheduledInstanceAvailability();
      //expect(instance).to.be();
    });

    it('should have the property instanceType (base name: "InstanceType")', function() {
      // uncomment below and update the code to test the property instanceType
      //var instane = new AmazonEc2.ScheduledInstanceAvailability();
      //expect(instance).to.be();
    });

    it('should have the property maxTermDurationInDays (base name: "MaxTermDurationInDays")', function() {
      // uncomment below and update the code to test the property maxTermDurationInDays
      //var instane = new AmazonEc2.ScheduledInstanceAvailability();
      //expect(instance).to.be();
    });

    it('should have the property minTermDurationInDays (base name: "MinTermDurationInDays")', function() {
      // uncomment below and update the code to test the property minTermDurationInDays
      //var instane = new AmazonEc2.ScheduledInstanceAvailability();
      //expect(instance).to.be();
    });

    it('should have the property networkPlatform (base name: "NetworkPlatform")', function() {
      // uncomment below and update the code to test the property networkPlatform
      //var instane = new AmazonEc2.ScheduledInstanceAvailability();
      //expect(instance).to.be();
    });

    it('should have the property platform (base name: "Platform")', function() {
      // uncomment below and update the code to test the property platform
      //var instane = new AmazonEc2.ScheduledInstanceAvailability();
      //expect(instance).to.be();
    });

    it('should have the property purchaseToken (base name: "PurchaseToken")', function() {
      // uncomment below and update the code to test the property purchaseToken
      //var instane = new AmazonEc2.ScheduledInstanceAvailability();
      //expect(instance).to.be();
    });

    it('should have the property recurrence (base name: "Recurrence")', function() {
      // uncomment below and update the code to test the property recurrence
      //var instane = new AmazonEc2.ScheduledInstanceAvailability();
      //expect(instance).to.be();
    });

    it('should have the property slotDurationInHours (base name: "SlotDurationInHours")', function() {
      // uncomment below and update the code to test the property slotDurationInHours
      //var instane = new AmazonEc2.ScheduledInstanceAvailability();
      //expect(instance).to.be();
    });

    it('should have the property totalScheduledInstanceHours (base name: "TotalScheduledInstanceHours")', function() {
      // uncomment below and update the code to test the property totalScheduledInstanceHours
      //var instane = new AmazonEc2.ScheduledInstanceAvailability();
      //expect(instance).to.be();
    });

  });

}));
