/**
 * Amazon Elastic Compute Cloud
 * <fullname>Amazon Elastic Compute Cloud</fullname> <p>Amazon Elastic Compute Cloud (Amazon EC2) provides secure and resizable computing capacity in the AWS cloud. Using Amazon EC2 eliminates the need to invest in hardware up front, so you can develop and deploy applications faster.</p> <p>To learn more, see the following resources:</p> <ul> <li> <p>Amazon EC2: <a href=\"http://aws.amazon.com/ec2\">AmazonEC2 product page</a>, <a href=\"http://aws.amazon.com/documentation/ec2\">Amazon EC2 documentation</a> </p> </li> <li> <p>Amazon EBS: <a href=\"http://aws.amazon.com/ebs\">Amazon EBS product page</a>, <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html\">Amazon EBS documentation</a> </p> </li> <li> <p>Amazon VPC: <a href=\"http://aws.amazon.com/vpc\">Amazon VPC product page</a>, <a href=\"http://aws.amazon.com/documentation/vpc\">Amazon VPC documentation</a> </p> </li> <li> <p>AWS VPN: <a href=\"http://aws.amazon.com/vpn\">AWS VPN product page</a>, <a href=\"http://aws.amazon.com/documentation/vpn\">AWS VPN documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonEc2);
  }
}(this, function(expect, AmazonEc2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonEc2.HostReservation();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('HostReservation', function() {
    it('should create an instance of HostReservation', function() {
      // uncomment below and update the code to test HostReservation
      //var instane = new AmazonEc2.HostReservation();
      //expect(instance).to.be.a(AmazonEc2.HostReservation);
    });

    it('should have the property count (base name: "Count")', function() {
      // uncomment below and update the code to test the property count
      //var instane = new AmazonEc2.HostReservation();
      //expect(instance).to.be();
    });

    it('should have the property currencyCode (base name: "CurrencyCode")', function() {
      // uncomment below and update the code to test the property currencyCode
      //var instane = new AmazonEc2.HostReservation();
      //expect(instance).to.be();
    });

    it('should have the property duration (base name: "Duration")', function() {
      // uncomment below and update the code to test the property duration
      //var instane = new AmazonEc2.HostReservation();
      //expect(instance).to.be();
    });

    it('should have the property end (base name: "End")', function() {
      // uncomment below and update the code to test the property end
      //var instane = new AmazonEc2.HostReservation();
      //expect(instance).to.be();
    });

    it('should have the property hostIdSet (base name: "HostIdSet")', function() {
      // uncomment below and update the code to test the property hostIdSet
      //var instane = new AmazonEc2.HostReservation();
      //expect(instance).to.be();
    });

    it('should have the property hostReservationId (base name: "HostReservationId")', function() {
      // uncomment below and update the code to test the property hostReservationId
      //var instane = new AmazonEc2.HostReservation();
      //expect(instance).to.be();
    });

    it('should have the property hourlyPrice (base name: "HourlyPrice")', function() {
      // uncomment below and update the code to test the property hourlyPrice
      //var instane = new AmazonEc2.HostReservation();
      //expect(instance).to.be();
    });

    it('should have the property instanceFamily (base name: "InstanceFamily")', function() {
      // uncomment below and update the code to test the property instanceFamily
      //var instane = new AmazonEc2.HostReservation();
      //expect(instance).to.be();
    });

    it('should have the property offeringId (base name: "OfferingId")', function() {
      // uncomment below and update the code to test the property offeringId
      //var instane = new AmazonEc2.HostReservation();
      //expect(instance).to.be();
    });

    it('should have the property paymentOption (base name: "PaymentOption")', function() {
      // uncomment below and update the code to test the property paymentOption
      //var instane = new AmazonEc2.HostReservation();
      //expect(instance).to.be();
    });

    it('should have the property start (base name: "Start")', function() {
      // uncomment below and update the code to test the property start
      //var instane = new AmazonEc2.HostReservation();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "State")', function() {
      // uncomment below and update the code to test the property state
      //var instane = new AmazonEc2.HostReservation();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "Tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instane = new AmazonEc2.HostReservation();
      //expect(instance).to.be();
    });

    it('should have the property upfrontPrice (base name: "UpfrontPrice")', function() {
      // uncomment below and update the code to test the property upfrontPrice
      //var instane = new AmazonEc2.HostReservation();
      //expect(instance).to.be();
    });

  });

}));
