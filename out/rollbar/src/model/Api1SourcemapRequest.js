/**
 * Rollbar API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Api1SourcemapRequest model module.
 * @module model/Api1SourcemapRequest
 * @version 1.1.0
 */
class Api1SourcemapRequest {
    /**
     * Constructs a new <code>Api1SourcemapRequest</code>.
     * @alias module:model/Api1SourcemapRequest
     * @param version {String} Current code version (typically a git SHA)
     * @param minifiedUrl {String} The full URL of the minified file, as it appears in the stack trace. This should start with `http:` or `https:`.
     * @param sourceMap {File} Your source map file.
     */
    constructor(version, minifiedUrl, sourceMap) { 
        
        Api1SourcemapRequest.initialize(this, version, minifiedUrl, sourceMap);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, version, minifiedUrl, sourceMap) { 
        obj['version'] = version;
        obj['minified_url'] = minifiedUrl;
        obj['source_map'] = sourceMap;
    }

    /**
     * Constructs a <code>Api1SourcemapRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Api1SourcemapRequest} obj Optional instance to populate.
     * @return {module:model/Api1SourcemapRequest} The populated <code>Api1SourcemapRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Api1SourcemapRequest();

            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('minified_url')) {
                obj['minified_url'] = ApiClient.convertToType(data['minified_url'], 'String');
            }
            if (data.hasOwnProperty('source_map')) {
                obj['source_map'] = ApiClient.convertToType(data['source_map'], File);
            }
            if (data.hasOwnProperty('source files')) {
                obj['source files'] = ApiClient.convertToType(data['source files'], File);
            }
        }
        return obj;
    }


}

/**
 * Current code version (typically a git SHA)
 * @member {String} version
 */
Api1SourcemapRequest.prototype['version'] = undefined;

/**
 * The full URL of the minified file, as it appears in the stack trace. This should start with `http:` or `https:`.
 * @member {String} minified_url
 */
Api1SourcemapRequest.prototype['minified_url'] = undefined;

/**
 * Your source map file.
 * @member {File} source_map
 */
Api1SourcemapRequest.prototype['source_map'] = undefined;

/**
 * One or more source unminified files
 * @member {File} source files
 */
Api1SourcemapRequest.prototype['source files'] = undefined;






export default Api1SourcemapRequest;

