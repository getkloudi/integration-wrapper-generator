/**
 * Rollbar API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ItemLevelStats from './ItemLevelStats';

/**
 * The ItemStats model module.
 * @module model/ItemStats
 * @version 1.1.0
 */
class ItemStats {
    /**
     * Constructs a new <code>ItemStats</code>.
     * Items statistics per event type and level. Each item in the specified version has 4 possible event types:   - &#x60;new&#x60; for new items in the code version   - &#x60;repeated&#x60; for an item that already existed in preivous versions   - &#x60;reactivated&#x60; an item that was resolved but was reactivated in the code version   - &#x60;resolved&#x60; an item resolved in one specific version  For each of them we collect the number of items for each possible level: &#x60;debug&#x60;, &#x60;info&#x60;, &#x60;warning&#x60;, &#x60;error&#x60; or &#x60;critical&#x60;.
     * @alias module:model/ItemStats
     */
    constructor() { 
        
        ItemStats.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ItemStats</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ItemStats} obj Optional instance to populate.
     * @return {module:model/ItemStats} The populated <code>ItemStats</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ItemStats();

            if (data.hasOwnProperty('new')) {
                obj['new'] = ItemLevelStats.constructFromObject(data['new']);
            }
            if (data.hasOwnProperty('repeated')) {
                obj['repeated'] = ItemLevelStats.constructFromObject(data['repeated']);
            }
            if (data.hasOwnProperty('reactivated')) {
                obj['reactivated'] = ItemLevelStats.constructFromObject(data['reactivated']);
            }
            if (data.hasOwnProperty('resolved')) {
                obj['resolved'] = ItemLevelStats.constructFromObject(data['resolved']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/ItemLevelStats} new
 */
ItemStats.prototype['new'] = undefined;

/**
 * @member {module:model/ItemLevelStats} repeated
 */
ItemStats.prototype['repeated'] = undefined;

/**
 * @member {module:model/ItemLevelStats} reactivated
 */
ItemStats.prototype['reactivated'] = undefined;

/**
 * @member {module:model/ItemLevelStats} resolved
 */
ItemStats.prototype['resolved'] = undefined;






export default ItemStats;

