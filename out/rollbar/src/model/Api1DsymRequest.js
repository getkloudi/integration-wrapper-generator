/**
 * Rollbar API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Api1DsymRequest model module.
 * @module model/Api1DsymRequest
 * @version 1.1.0
 */
class Api1DsymRequest {
    /**
     * Constructs a new <code>Api1DsymRequest</code>.
     * @alias module:model/Api1DsymRequest
     * @param bundleIdentifier {String} fully-qualified identifier of the bundle (see example)
     * @param version {String} The current code version (typically a semantic version)
     * @param dsym {File} Your zipped dSYM file.  See [upload_dsym.py](https://raw.githubusercontent.com/rollbar/rollbar-ios/master/upload_dsym.py) for an example
     */
    constructor(bundleIdentifier, version, dsym) { 
        
        Api1DsymRequest.initialize(this, bundleIdentifier, version, dsym);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, bundleIdentifier, version, dsym) { 
        obj['bundle_identifier'] = bundleIdentifier;
        obj['version'] = version;
        obj['dsym'] = dsym;
    }

    /**
     * Constructs a <code>Api1DsymRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Api1DsymRequest} obj Optional instance to populate.
     * @return {module:model/Api1DsymRequest} The populated <code>Api1DsymRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Api1DsymRequest();

            if (data.hasOwnProperty('bundle_identifier')) {
                obj['bundle_identifier'] = ApiClient.convertToType(data['bundle_identifier'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('dsym')) {
                obj['dsym'] = ApiClient.convertToType(data['dsym'], File);
            }
        }
        return obj;
    }


}

/**
 * fully-qualified identifier of the bundle (see example)
 * @member {String} bundle_identifier
 */
Api1DsymRequest.prototype['bundle_identifier'] = undefined;

/**
 * The current code version (typically a semantic version)
 * @member {String} version
 */
Api1DsymRequest.prototype['version'] = undefined;

/**
 * Your zipped dSYM file.  See [upload_dsym.py](https://raw.githubusercontent.com/rollbar/rollbar-ios/master/upload_dsym.py) for an example
 * @member {File} dsym
 */
Api1DsymRequest.prototype['dsym'] = undefined;






export default Api1DsymRequest;

