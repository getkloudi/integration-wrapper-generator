/**
 * Rollbar API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OccurrenceInstance model module.
 * @module model/OccurrenceInstance
 * @version 1.1.0
 */
class OccurrenceInstance {
    /**
     * Constructs a new <code>OccurrenceInstance</code>.
     * @alias module:model/OccurrenceInstance
     */
    constructor() { 
        
        OccurrenceInstance.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OccurrenceInstance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OccurrenceInstance} obj Optional instance to populate.
     * @return {module:model/OccurrenceInstance} The populated <code>OccurrenceInstance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OccurrenceInstance();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('project_id')) {
                obj['project_id'] = ApiClient.convertToType(data['project_id'], 'Number');
            }
            if (data.hasOwnProperty('item_id')) {
                obj['item_id'] = ApiClient.convertToType(data['item_id'], 'Number');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], Object);
            }
            if (data.hasOwnProperty('billable')) {
                obj['billable'] = ApiClient.convertToType(data['billable'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * The occurrence id
 * @member {Number} id
 */
OccurrenceInstance.prototype['id'] = undefined;

/**
 * The project id
 * @member {Number} project_id
 */
OccurrenceInstance.prototype['project_id'] = undefined;

/**
 * The item id
 * @member {Number} item_id
 */
OccurrenceInstance.prototype['item_id'] = undefined;

/**
 * The timestamp in ms when the occurrence was received
 * @member {Number} timestamp
 */
OccurrenceInstance.prototype['timestamp'] = undefined;

/**
 * @member {Number} version
 */
OccurrenceInstance.prototype['version'] = undefined;

/**
 * The occurrence data sent to the API
 * @member {Object} data
 */
OccurrenceInstance.prototype['data'] = undefined;

/**
 * @member {Number} billable
 */
OccurrenceInstance.prototype['billable'] = undefined;






export default OccurrenceInstance;

