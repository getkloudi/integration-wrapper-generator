/**
 * Rollbar API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Commit from './Commit';
import ItemStats from './ItemStats';

/**
 * The ProjectVersion model module.
 * @module model/ProjectVersion
 * @version 1.1.0
 */
class ProjectVersion {
    /**
     * Constructs a new <code>ProjectVersion</code>.
     * @alias module:model/ProjectVersion
     */
    constructor() { 
        
        ProjectVersion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProjectVersion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectVersion} obj Optional instance to populate.
     * @return {module:model/ProjectVersion} The populated <code>ProjectVersion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectVersion();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('environment')) {
                obj['environment'] = ApiClient.convertToType(data['environment'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Number');
            }
            if (data.hasOwnProperty('first_version_occurrence_id')) {
                obj['first_version_occurrence_id'] = ApiClient.convertToType(data['first_version_occurrence_id'], 'Number');
            }
            if (data.hasOwnProperty('first_occurrence_timestamp')) {
                obj['first_occurrence_timestamp'] = ApiClient.convertToType(data['first_occurrence_timestamp'], 'Number');
            }
            if (data.hasOwnProperty('last_occurrence_id')) {
                obj['last_occurrence_id'] = ApiClient.convertToType(data['last_occurrence_id'], 'Number');
            }
            if (data.hasOwnProperty('last_occurrence_timestamp')) {
                obj['last_occurrence_timestamp'] = ApiClient.convertToType(data['last_occurrence_timestamp'], 'Number');
            }
            if (data.hasOwnProperty('deployed_by')) {
                obj['deployed_by'] = ApiClient.convertToType(data['deployed_by'], 'String');
            }
            if (data.hasOwnProperty('last_deploy_timestamp')) {
                obj['last_deploy_timestamp'] = ApiClient.convertToType(data['last_deploy_timestamp'], 'Number');
            }
            if (data.hasOwnProperty('item_stats')) {
                obj['item_stats'] = ItemStats.constructFromObject(data['item_stats']);
            }
            if (data.hasOwnProperty('commits')) {
                obj['commits'] = ApiClient.convertToType(data['commits'], [Commit]);
            }
        }
        return obj;
    }


}

/**
 * The internal ID for the project version
 * @member {Number} id
 */
ProjectVersion.prototype['id'] = undefined;

/**
 * The version value received in the item occurrences
 * @member {String} version
 */
ProjectVersion.prototype['version'] = undefined;

/**
 * Environment where this version has been deployed
 * @member {String} environment
 */
ProjectVersion.prototype['environment'] = undefined;

/**
 * Timestamp when the version is created
 * @member {Number} date_created
 */
ProjectVersion.prototype['date_created'] = undefined;

/**
 * First occurrence ID received for this version
 * @member {Number} first_version_occurrence_id
 */
ProjectVersion.prototype['first_version_occurrence_id'] = undefined;

/**
 * First occurrence timestamp of the item on the version
 * @member {Number} first_occurrence_timestamp
 */
ProjectVersion.prototype['first_occurrence_timestamp'] = undefined;

/**
 * Last received occurrence ID of the item on the version
 * @member {Number} last_occurrence_id
 */
ProjectVersion.prototype['last_occurrence_id'] = undefined;

/**
 * Last received occurrence timestamp on the version
 * @member {Number} last_occurrence_timestamp
 */
ProjectVersion.prototype['last_occurrence_timestamp'] = undefined;

/**
 * Username of the user that deployed the version. https://docs.rollbar.com/docs/deploy-tracking
 * @member {String} deployed_by
 */
ProjectVersion.prototype['deployed_by'] = undefined;

/**
 * Last received occurrence timestamp on the version
 * @member {Number} last_deploy_timestamp
 */
ProjectVersion.prototype['last_deploy_timestamp'] = undefined;

/**
 * @member {module:model/ItemStats} item_stats
 */
ProjectVersion.prototype['item_stats'] = undefined;

/**
 * Commits for this version compared to the previous project deploy. If deploy tracking feature is not used this value will be an empty array. https://docs.rollbar.com/docs/deploy-tracking
 * @member {Array.<module:model/Commit>} commits
 */
ProjectVersion.prototype['commits'] = undefined;






export default ProjectVersion;

