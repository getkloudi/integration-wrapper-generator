/**
 * Rollbar API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SlackIntegrationConfig model module.
 * @module model/SlackIntegrationConfig
 * @version 1.1.0
 */
class SlackIntegrationConfig {
    /**
     * Constructs a new <code>SlackIntegrationConfig</code>.
     * @alias module:model/SlackIntegrationConfig
     * @param enabled {Boolean} Enable the Slack notifications globally
     * @param serviceAccountId {Number} You can find your Service Account ID in https://rollbar.com/settings/integrations/#slack
     * @param channel {String} The default Slack channel to send the messages
     */
    constructor(enabled, serviceAccountId, channel) { 
        
        SlackIntegrationConfig.initialize(this, enabled, serviceAccountId, channel);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, enabled, serviceAccountId, channel) { 
        obj['enabled'] = enabled;
        obj['service_account_id'] = serviceAccountId;
        obj['channel'] = channel;
    }

    /**
     * Constructs a <code>SlackIntegrationConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SlackIntegrationConfig} obj Optional instance to populate.
     * @return {module:model/SlackIntegrationConfig} The populated <code>SlackIntegrationConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SlackIntegrationConfig();

            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('service_account_id')) {
                obj['service_account_id'] = ApiClient.convertToType(data['service_account_id'], 'Number');
            }
            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], 'String');
            }
            if (data.hasOwnProperty('show_message_buttons')) {
                obj['show_message_buttons'] = ApiClient.convertToType(data['show_message_buttons'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * Enable the Slack notifications globally
 * @member {Boolean} enabled
 */
SlackIntegrationConfig.prototype['enabled'] = undefined;

/**
 * You can find your Service Account ID in https://rollbar.com/settings/integrations/#slack
 * @member {Number} service_account_id
 */
SlackIntegrationConfig.prototype['service_account_id'] = undefined;

/**
 * The default Slack channel to send the messages
 * @member {String} channel
 */
SlackIntegrationConfig.prototype['channel'] = undefined;

/**
 * Show the Slack actionable buttons
 * @member {Boolean} show_message_buttons
 */
SlackIntegrationConfig.prototype['show_message_buttons'] = undefined;






export default SlackIntegrationConfig;

