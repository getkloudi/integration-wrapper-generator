/**
 * Rollbar API
 * # Getting Started The Rollbar API provides a RESTful interface to much of the data in the system. It is used by our official libraries to report exceptions, deploys, and other messages. It can be used to create notifiers for additional languages, get data out to integrate with other systems, or whatever else you can imagine. If the API is missing something you'd like to see, please [let us know](support@rollbar.com).  # Ping To test whether you're able to ping the API server, you can simply run the following command:  ``` curl 'https://api.rollbar.com/api/1/status/ping' ```  You will get back pong from our server if your request was successful.  # Timestamps All timestamps (inputs and outputs) are GMT unix timestamps.  # Authentication Authentication is done via access token included as a header parameter. For authenticated requests, pass your access token through the `X-Rollbar-Access-Token` parameter in the header.  ``` curl -H \"X-Rollbar-Access-Token: YOUR_ACCESS_TOKEN\" 'https://api.rollbar.com/api/1/item/12345' ```  ## Project access tokens Many operations require a project-specific access token. You can find and administer your access tokens in Settings -> Project Access Tokens. Access tokens can have any or all of the following scopes:  ### post_server_item Can perform all POST requests to /deploy/ and /item/  ### post_client_item Can perform POST requests to /deploy/ and /item/, but only if the item has a client-side (browser, mobile) platform.  ### read Can perform all GET requests  ### write Can perform PATCH and DELETE requests  ## Account Access Tokens Operations performed at the level of the account require an account-specific access token. These can be found and managed at {Account name} Settings -> Account Access Tokens. Account access tokens can have the following scopes:  ### read Supports all GET operations at the account level.  ### write Supports all POST, PUT, PATCH, and DELETE operations at the account level.  # HTTP responses The API can return the following HTTP response codes:  ### 200 OK Operation was completed successfully  ### 400 Bad request The request was malformed and could not be parsed.  ### 403 Access denied Access token was missing, invalid, or does not have the necessary permissions.  ### 404 Not found The requested resource was not found. This response will be returned if the URL is entirely invalid (i.e. /asdf), or if it is a URL that could be valid but is referencing something that does not exist (i.e. /item/12345).  ### 413 Request entity too large The request exceeded the maximum size of 128KB.  ### 422 Unprocessable Entity The request was parseable (i.e. valid JSON), but some parameters were missing or otherwise invalid.  ### 429 Too Many Requests If rate limiting is enabled for your access token, this return code signifies that  # Examples  ### [api-examples](https://github.com/rollbar/api-examples) Author: Rollbar  Language: Python  Examples using RQL, deploys, occurrences, and reports  ### [api-people-example](https://github.com/rollbar/api-people-example) Author: Rollbar  Language: Python  Shows how to gather the Person data for each occurrence of a list of items  ### [rolltools](https://github.com/jslate/rolltools) Author: Jonathan Slate  Language: Ruby  A few utilities using the Rollbar API 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Versions service.
* @module api/VersionsApi
* @version 1.0.0
*/
export default class VersionsApi {

    /**
    * Constructs a new VersionsApi. 
    * @alias module:api/VersionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the versionsVersionGet operation.
     * @callback module:api/VersionsApi~versionsVersionGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Code version details in one project
     * Returns the details about one specific code version in one project  https://docs.rollbar.com/docs/versions 
     * @param {Object} environment The environment where the code version is detected
     * @param {Object} opts Optional parameters
     * @param {module:model/null} opts.UNKNOWN_PARAMETER_NAME 
     * @param {module:model/null} opts.UNKNOWN_PARAMETER_NAME2 
     * @param {module:api/VersionsApi~versionsVersionGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    versionsVersionGet(environment, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'environment' is set
      if (environment === undefined || environment === null) {
        throw new Error("Missing the required parameter 'environment' when calling versionsVersionGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'environment': environment
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accessToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/versions/{version}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the versionsVersionItemsGet operation.
     * @callback module:api/VersionsApi~versionsVersionItemsGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List items by code version
     * List items that have occurrences for one specific code version.  https://docs.rollbar.com/docs/versions 
     * @param {Object} environment For one code version list the items only for this environment
     * @param {Object} event Filter the list of items by the item event produced on the code version. One item can have one of these events in one version:    - `new` for new items in the code version   - `repeated` for an item that already existed in preivous versions   - `reactivated` an item that was resolved but was reactivated in the code version   - `resolved` an item resolved in one specific version 
     * @param {Object} opts Optional parameters
     * @param {module:model/null} opts.UNKNOWN_PARAMETER_NAME 
     * @param {module:model/null} opts.UNKNOWN_PARAMETER_NAME2 
     * @param {Object} opts.level Filter the list of items by level. Multiple levels can be used, and all items for all levels will be returned if no one is specified.
     * @param {module:model/null} opts.UNKNOWN_PARAMETER_NAME2 
     * @param {module:api/VersionsApi~versionsVersionItemsGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    versionsVersionItemsGet(environment, event, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'environment' is set
      if (environment === undefined || environment === null) {
        throw new Error("Missing the required parameter 'environment' when calling versionsVersionItemsGet");
      }
      // verify the required parameter 'event' is set
      if (event === undefined || event === null) {
        throw new Error("Missing the required parameter 'event' when calling versionsVersionItemsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'environment': environment,
        'event': event,
        'level': opts['level']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accessToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/versions/{version}/items', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
