/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PipelineStateCompletedFailedAllOf from './PipelineStateCompletedFailedAllOf';
import PipelineStateCompletedResult from './PipelineStateCompletedResult';

/**
 * The PipelineStateCompletedFailed model module.
 * @module model/PipelineStateCompletedFailed
 * @version 1.1.2
 */
class PipelineStateCompletedFailed {
    /**
     * Constructs a new <code>PipelineStateCompletedFailed</code>.
     * @alias module:model/PipelineStateCompletedFailed
     * @implements module:model/PipelineStateCompletedResult
     * @implements module:model/PipelineStateCompletedFailedAllOf
     * @param type {String} 
     */
    constructor(type) { 
        PipelineStateCompletedResult.initialize(this, type);PipelineStateCompletedFailedAllOf.initialize(this);
        PipelineStateCompletedFailed.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['type'] = type;
    }

    /**
     * Constructs a <code>PipelineStateCompletedFailed</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PipelineStateCompletedFailed} obj Optional instance to populate.
     * @return {module:model/PipelineStateCompletedFailed} The populated <code>PipelineStateCompletedFailed</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PipelineStateCompletedFailed();
            PipelineStateCompletedResult.constructFromObject(data, obj);
            PipelineStateCompletedFailedAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} type
 */
PipelineStateCompletedFailed.prototype['type'] = undefined;

/**
 * The name of the failed result (FAILED).
 * @member {module:model/PipelineStateCompletedFailed.NameEnum} name
 */
PipelineStateCompletedFailed.prototype['name'] = undefined;


// Implement PipelineStateCompletedResult interface:
/**
 * @member {String} type
 */
PipelineStateCompletedResult.prototype['type'] = undefined;
// Implement PipelineStateCompletedFailedAllOf interface:
/**
 * The name of the failed result (FAILED).
 * @member {module:model/PipelineStateCompletedFailedAllOf.NameEnum} name
 */
PipelineStateCompletedFailedAllOf.prototype['name'] = undefined;



/**
 * Allowed values for the <code>name</code> property.
 * @enum {String}
 * @readonly
 */
PipelineStateCompletedFailed['NameEnum'] = {

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED"
};



export default PipelineStateCompletedFailed;

