/**
 * Bitbucket
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Account from './Account';
import AccountAllOfLinks from './AccountAllOfLinks';

/**
 * The Team model module.
 * @module model/Team
 * @version 1.1.0
 */
class Team {
    /**
     * Constructs a new <code>Team</code>.
     * @alias module:model/Team
     * @extends module:model/Account
     * @implements module:model/Account
     * @param type {String} 
     */
    constructor(type) { 
        Account.initialize(this, type);
        Team.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
    }

    /**
     * Constructs a <code>Team</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Team} obj Optional instance to populate.
     * @return {module:model/Team} The populated <code>Team</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Team();
            Account.constructFromObject(data, obj);
            Account.constructFromObject(data, obj);

        }
        return obj;
    }


}


// Implement Account interface:
/**
 * @member {String} type
 */
Account.prototype['type'] = undefined;
/**
 * @member {Date} created_on
 */
Account.prototype['created_on'] = undefined;
/**
 * @member {String} display_name
 */
Account.prototype['display_name'] = undefined;
/**
 * @member {module:model/AccountAllOfLinks} links
 */
Account.prototype['links'] = undefined;
/**
 * @member {String} username
 */
Account.prototype['username'] = undefined;
/**
 * @member {String} uuid
 */
Account.prototype['uuid'] = undefined;
/**
 * @member {String} website
 */
Account.prototype['website'] = undefined;




export default Team;

