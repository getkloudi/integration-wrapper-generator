/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PipelineStateInProgressPausedAllOf from './PipelineStateInProgressPausedAllOf';
import PipelineStateInProgressStage from './PipelineStateInProgressStage';

/**
 * The PipelineStateInProgressPaused model module.
 * @module model/PipelineStateInProgressPaused
 * @version 1.2.0
 */
class PipelineStateInProgressPaused {
    /**
     * Constructs a new <code>PipelineStateInProgressPaused</code>.
     * @alias module:model/PipelineStateInProgressPaused
     * @implements module:model/PipelineStateInProgressStage
     * @implements module:model/PipelineStateInProgressPausedAllOf
     * @param type {String} 
     */
    constructor(type) { 
        PipelineStateInProgressStage.initialize(this, type);PipelineStateInProgressPausedAllOf.initialize(this);
        PipelineStateInProgressPaused.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['type'] = type;
    }

    /**
     * Constructs a <code>PipelineStateInProgressPaused</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PipelineStateInProgressPaused} obj Optional instance to populate.
     * @return {module:model/PipelineStateInProgressPaused} The populated <code>PipelineStateInProgressPaused</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PipelineStateInProgressPaused();
            PipelineStateInProgressStage.constructFromObject(data, obj);
            PipelineStateInProgressPausedAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} type
 */
PipelineStateInProgressPaused.prototype['type'] = undefined;

/**
 * The name of the stage (PAUSED)
 * @member {module:model/PipelineStateInProgressPaused.NameEnum} name
 */
PipelineStateInProgressPaused.prototype['name'] = undefined;


// Implement PipelineStateInProgressStage interface:
/**
 * @member {String} type
 */
PipelineStateInProgressStage.prototype['type'] = undefined;
// Implement PipelineStateInProgressPausedAllOf interface:
/**
 * The name of the stage (PAUSED)
 * @member {module:model/PipelineStateInProgressPausedAllOf.NameEnum} name
 */
PipelineStateInProgressPausedAllOf.prototype['name'] = undefined;



/**
 * Allowed values for the <code>name</code> property.
 * @enum {String}
 * @readonly
 */
PipelineStateInProgressPaused['NameEnum'] = {

    /**
     * value: "PAUSED"
     * @const
     */
    "PAUSED": "PAUSED"
};



export default PipelineStateInProgressPaused;

