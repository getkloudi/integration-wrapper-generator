/**
 * Bitbucket
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountAllOfLinksAvatar from './AccountAllOfLinksAvatar';

/**
 * The ProjectAllOfLinks model module.
 * @module model/ProjectAllOfLinks
 * @version 1.0.0
 */
class ProjectAllOfLinks {
    /**
     * Constructs a new <code>ProjectAllOfLinks</code>.
     * @alias module:model/ProjectAllOfLinks
     */
    constructor() { 
        
        ProjectAllOfLinks.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProjectAllOfLinks</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectAllOfLinks} obj Optional instance to populate.
     * @return {module:model/ProjectAllOfLinks} The populated <code>ProjectAllOfLinks</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectAllOfLinks();

            if (data.hasOwnProperty('avatar')) {
                obj['avatar'] = AccountAllOfLinksAvatar.constructFromObject(data['avatar']);
            }
            if (data.hasOwnProperty('html')) {
                obj['html'] = AccountAllOfLinksAvatar.constructFromObject(data['html']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/AccountAllOfLinksAvatar} avatar
 */
ProjectAllOfLinks.prototype['avatar'] = undefined;

/**
 * @member {module:model/AccountAllOfLinksAvatar} html
 */
ProjectAllOfLinks.prototype['html'] = undefined;






export default ProjectAllOfLinks;

