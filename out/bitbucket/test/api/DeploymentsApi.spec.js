/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Bitbucket);
  }
}(this, function(expect, Bitbucket) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Bitbucket.DeploymentsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DeploymentsApi', function() {
    describe('createEnvironment', function() {
      it('should call createEnvironment successfully', function(done) {
        //uncomment below and update the code to test createEnvironment
        //instance.createEnvironment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEnvironmentForRepository', function() {
      it('should call deleteEnvironmentForRepository successfully', function(done) {
        //uncomment below and update the code to test deleteEnvironmentForRepository
        //instance.deleteEnvironmentForRepository(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeploymentForRepository', function() {
      it('should call getDeploymentForRepository successfully', function(done) {
        //uncomment below and update the code to test getDeploymentForRepository
        //instance.getDeploymentForRepository(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeploymentsForRepository', function() {
      it('should call getDeploymentsForRepository successfully', function(done) {
        //uncomment below and update the code to test getDeploymentsForRepository
        //instance.getDeploymentsForRepository(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEnvironmentForRepository', function() {
      it('should call getEnvironmentForRepository successfully', function(done) {
        //uncomment below and update the code to test getEnvironmentForRepository
        //instance.getEnvironmentForRepository(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEnvironmentsForRepository', function() {
      it('should call getEnvironmentsForRepository successfully', function(done) {
        //uncomment below and update the code to test getEnvironmentsForRepository
        //instance.getEnvironmentsForRepository(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateEnvironmentForRepository', function() {
      it('should call updateEnvironmentForRepository successfully', function(done) {
        //uncomment below and update the code to test updateEnvironmentForRepository
        //instance.updateEnvironmentForRepository(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
