/**
 * GitHub
 * Powerful collaboration, code review, and code management for open source and private projects. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Actor from './model/Actor';
import ActorPlan from './model/ActorPlan';
import Asset from './model/Asset';
import AssetPatch from './model/AssetPatch';
import Blob from './model/Blob';
import Blobs from './model/Blobs';
import Branch from './model/Branch';
import BranchCommit from './model/BranchCommit';
import BranchCommitCommit from './model/BranchCommitCommit';
import BranchCommitCommitAuthor from './model/BranchCommitCommitAuthor';
import BranchCommitCommitTree from './model/BranchCommitCommitTree';
import BranchLinks from './model/BranchLinks';
import Comment from './model/Comment';
import CommentBody from './model/CommentBody';
import Commit from './model/Commit';
import CommitComment from './model/CommitComment';
import CommitCommentBody from './model/CommitCommentBody';
import CommitFiles from './model/CommitFiles';
import CommitStats from './model/CommitStats';
import CompareCommits from './model/CompareCommits';
import CompareCommitsBaseCommit from './model/CompareCommitsBaseCommit';
import CompareCommitsBaseCommitCommit from './model/CompareCommitsBaseCommitCommit';
import CompareCommitsBaseCommitCommitAuthor from './model/CompareCommitsBaseCommitCommitAuthor';
import CompareCommitsFiles from './model/CompareCommitsFiles';
import ContentsPath from './model/ContentsPath';
import ContentsPathLinks from './model/ContentsPathLinks';
import CreateFile from './model/CreateFile';
import CreateFileBody from './model/CreateFileBody';
import CreateFileBodyCommitter from './model/CreateFileBodyCommitter';
import CreateFileCommit from './model/CreateFileCommit';
import CreateFileCommitParents from './model/CreateFileCommitParents';
import CreateFileContent from './model/CreateFileContent';
import DeleteFile from './model/DeleteFile';
import DeleteFileBody from './model/DeleteFileBody';
import DeleteFileCommit from './model/DeleteFileCommit';
import Deployment from './model/Deployment';
import DeploymentPayload from './model/DeploymentPayload';
import DeploymentResp from './model/DeploymentResp';
import DeploymentStatusesCreate from './model/DeploymentStatusesCreate';
import Download from './model/Download';
import EditTeam from './model/EditTeam';
import Event from './model/Event';
import EventRepo from './model/EventRepo';
import Feeds from './model/Feeds';
import FeedsLinks from './model/FeedsLinks';
import FeedsLinksCurrentUser from './model/FeedsLinksCurrentUser';
import ForkBody from './model/ForkBody';
import Forks from './model/Forks';
import Gist from './model/Gist';
import GistFiles from './model/GistFiles';
import GistFilesRingErl from './model/GistFilesRingErl';
import GistForks from './model/GistForks';
import GistHistory from './model/GistHistory';
import GitCommit from './model/GitCommit';
import GitRefPatch from './model/GitRefPatch';
import GitignoreLang from './model/GitignoreLang';
import HeadBranch from './model/HeadBranch';
import HeadBranchObject from './model/HeadBranchObject';
import HookBody from './model/HookBody';
import Issue from './model/Issue';
import IssueEvent from './model/IssueEvent';
import IssueEventIssue from './model/IssueEventIssue';
import IssueEventIssueLabels from './model/IssueEventIssueLabels';
import IssueEventIssueMilestone from './model/IssueEventIssueMilestone';
import IssueEventIssuePullRequest from './model/IssueEventIssuePullRequest';
import IssuesComment from './model/IssuesComment';
import Label from './model/Label';
import Markdown from './model/Markdown';
import Merge from './model/Merge';
import MergePullBody from './model/MergePullBody';
import MergesBody from './model/MergesBody';
import MergesConflict from './model/MergesConflict';
import MergesSuccessful from './model/MergesSuccessful';
import MergesSuccessfulCommit from './model/MergesSuccessfulCommit';
import Meta from './model/Meta';
import Milestone from './model/Milestone';
import MilestoneUpdate from './model/MilestoneUpdate';
import NotificationMarkRead from './model/NotificationMarkRead';
import Notifications from './model/Notifications';
import NotificationsRepository from './model/NotificationsRepository';
import NotificationsSubject from './model/NotificationsSubject';
import OrgTeamsPost from './model/OrgTeamsPost';
import Organization from './model/Organization';
import OrganizationAsTeamMember from './model/OrganizationAsTeamMember';
import OrganizationAsTeamMemberErrors from './model/OrganizationAsTeamMemberErrors';
import ParticipationStats from './model/ParticipationStats';
import PatchGist from './model/PatchGist';
import PatchGistFiles from './model/PatchGistFiles';
import PatchGistFilesFile1Txt from './model/PatchGistFilesFile1Txt';
import PatchGistFilesOldNameTxt from './model/PatchGistFilesOldNameTxt';
import PatchOrg from './model/PatchOrg';
import PostGist from './model/PostGist';
import PostGistFiles from './model/PostGistFiles';
import PostRepo from './model/PostRepo';
import PullRequest from './model/PullRequest';
import PullRequestBase from './model/PullRequestBase';
import PullRequestBaseUser from './model/PullRequestBaseUser';
import PullRequestLinks from './model/PullRequestLinks';
import PullRequestLinksComments from './model/PullRequestLinksComments';
import PullUpdate from './model/PullUpdate';
import PullsComment from './model/PullsComment';
import PullsCommentLinks from './model/PullsCommentLinks';
import PullsCommentPost from './model/PullsCommentPost';
import PullsPost from './model/PullsPost';
import PutSubscription from './model/PutSubscription';
import RateLimit from './model/RateLimit';
import RateLimitRate from './model/RateLimitRate';
import RefsBody from './model/RefsBody';
import Release from './model/Release';
import ReleaseAssets from './model/ReleaseAssets';
import ReleaseCreate from './model/ReleaseCreate';
import Repo from './model/Repo';
import RepoCommit from './model/RepoCommit';
import RepoCommitBody from './model/RepoCommitBody';
import RepoEdit from './model/RepoEdit';
import SearchCode from './model/SearchCode';
import SearchCodeItems from './model/SearchCodeItems';
import SearchCodeRepository from './model/SearchCodeRepository';
import SearchIssues from './model/SearchIssues';
import SearchIssuesByKeyword from './model/SearchIssuesByKeyword';
import SearchIssuesByKeywordIssues from './model/SearchIssuesByKeywordIssues';
import SearchIssuesItems from './model/SearchIssuesItems';
import SearchRepositories from './model/SearchRepositories';
import SearchRepositoriesByKeyword from './model/SearchRepositoriesByKeyword';
import SearchUserByEmail from './model/SearchUserByEmail';
import SearchUsers from './model/SearchUsers';
import SearchUsersByKeyword from './model/SearchUsersByKeyword';
import Subscription from './model/Subscription';
import SubscriptionBody from './model/SubscriptionBody';
import Tag from './model/Tag';
import TagBody from './model/TagBody';
import TagObject from './model/TagObject';
import TagTagger from './model/TagTagger';
import Team from './model/Team';
import TeamMembership from './model/TeamMembership';
import TeamRepos from './model/TeamRepos';
import Tree from './model/Tree';
import TreeTree from './model/TreeTree';
import Trees from './model/Trees';
import User from './model/User';
import UserKeysKeyId from './model/UserKeysKeyId';
import UserKeysPost from './model/UserKeysPost';
import UserUpdate from './model/UserUpdate';
import DefaultApi from './api/DefaultApi';


/**
* Powerful_collaboration_code_review_and_code_management_for_open_source_and_private_projects_.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Github = require('index'); // See note below*.
* var xxxSvc = new Github.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Github.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Github.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Github.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.3.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Actor model constructor.
     * @property {module:model/Actor}
     */
    Actor,

    /**
     * The ActorPlan model constructor.
     * @property {module:model/ActorPlan}
     */
    ActorPlan,

    /**
     * The Asset model constructor.
     * @property {module:model/Asset}
     */
    Asset,

    /**
     * The AssetPatch model constructor.
     * @property {module:model/AssetPatch}
     */
    AssetPatch,

    /**
     * The Blob model constructor.
     * @property {module:model/Blob}
     */
    Blob,

    /**
     * The Blobs model constructor.
     * @property {module:model/Blobs}
     */
    Blobs,

    /**
     * The Branch model constructor.
     * @property {module:model/Branch}
     */
    Branch,

    /**
     * The BranchCommit model constructor.
     * @property {module:model/BranchCommit}
     */
    BranchCommit,

    /**
     * The BranchCommitCommit model constructor.
     * @property {module:model/BranchCommitCommit}
     */
    BranchCommitCommit,

    /**
     * The BranchCommitCommitAuthor model constructor.
     * @property {module:model/BranchCommitCommitAuthor}
     */
    BranchCommitCommitAuthor,

    /**
     * The BranchCommitCommitTree model constructor.
     * @property {module:model/BranchCommitCommitTree}
     */
    BranchCommitCommitTree,

    /**
     * The BranchLinks model constructor.
     * @property {module:model/BranchLinks}
     */
    BranchLinks,

    /**
     * The Comment model constructor.
     * @property {module:model/Comment}
     */
    Comment,

    /**
     * The CommentBody model constructor.
     * @property {module:model/CommentBody}
     */
    CommentBody,

    /**
     * The Commit model constructor.
     * @property {module:model/Commit}
     */
    Commit,

    /**
     * The CommitComment model constructor.
     * @property {module:model/CommitComment}
     */
    CommitComment,

    /**
     * The CommitCommentBody model constructor.
     * @property {module:model/CommitCommentBody}
     */
    CommitCommentBody,

    /**
     * The CommitFiles model constructor.
     * @property {module:model/CommitFiles}
     */
    CommitFiles,

    /**
     * The CommitStats model constructor.
     * @property {module:model/CommitStats}
     */
    CommitStats,

    /**
     * The CompareCommits model constructor.
     * @property {module:model/CompareCommits}
     */
    CompareCommits,

    /**
     * The CompareCommitsBaseCommit model constructor.
     * @property {module:model/CompareCommitsBaseCommit}
     */
    CompareCommitsBaseCommit,

    /**
     * The CompareCommitsBaseCommitCommit model constructor.
     * @property {module:model/CompareCommitsBaseCommitCommit}
     */
    CompareCommitsBaseCommitCommit,

    /**
     * The CompareCommitsBaseCommitCommitAuthor model constructor.
     * @property {module:model/CompareCommitsBaseCommitCommitAuthor}
     */
    CompareCommitsBaseCommitCommitAuthor,

    /**
     * The CompareCommitsFiles model constructor.
     * @property {module:model/CompareCommitsFiles}
     */
    CompareCommitsFiles,

    /**
     * The ContentsPath model constructor.
     * @property {module:model/ContentsPath}
     */
    ContentsPath,

    /**
     * The ContentsPathLinks model constructor.
     * @property {module:model/ContentsPathLinks}
     */
    ContentsPathLinks,

    /**
     * The CreateFile model constructor.
     * @property {module:model/CreateFile}
     */
    CreateFile,

    /**
     * The CreateFileBody model constructor.
     * @property {module:model/CreateFileBody}
     */
    CreateFileBody,

    /**
     * The CreateFileBodyCommitter model constructor.
     * @property {module:model/CreateFileBodyCommitter}
     */
    CreateFileBodyCommitter,

    /**
     * The CreateFileCommit model constructor.
     * @property {module:model/CreateFileCommit}
     */
    CreateFileCommit,

    /**
     * The CreateFileCommitParents model constructor.
     * @property {module:model/CreateFileCommitParents}
     */
    CreateFileCommitParents,

    /**
     * The CreateFileContent model constructor.
     * @property {module:model/CreateFileContent}
     */
    CreateFileContent,

    /**
     * The DeleteFile model constructor.
     * @property {module:model/DeleteFile}
     */
    DeleteFile,

    /**
     * The DeleteFileBody model constructor.
     * @property {module:model/DeleteFileBody}
     */
    DeleteFileBody,

    /**
     * The DeleteFileCommit model constructor.
     * @property {module:model/DeleteFileCommit}
     */
    DeleteFileCommit,

    /**
     * The Deployment model constructor.
     * @property {module:model/Deployment}
     */
    Deployment,

    /**
     * The DeploymentPayload model constructor.
     * @property {module:model/DeploymentPayload}
     */
    DeploymentPayload,

    /**
     * The DeploymentResp model constructor.
     * @property {module:model/DeploymentResp}
     */
    DeploymentResp,

    /**
     * The DeploymentStatusesCreate model constructor.
     * @property {module:model/DeploymentStatusesCreate}
     */
    DeploymentStatusesCreate,

    /**
     * The Download model constructor.
     * @property {module:model/Download}
     */
    Download,

    /**
     * The EditTeam model constructor.
     * @property {module:model/EditTeam}
     */
    EditTeam,

    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event,

    /**
     * The EventRepo model constructor.
     * @property {module:model/EventRepo}
     */
    EventRepo,

    /**
     * The Feeds model constructor.
     * @property {module:model/Feeds}
     */
    Feeds,

    /**
     * The FeedsLinks model constructor.
     * @property {module:model/FeedsLinks}
     */
    FeedsLinks,

    /**
     * The FeedsLinksCurrentUser model constructor.
     * @property {module:model/FeedsLinksCurrentUser}
     */
    FeedsLinksCurrentUser,

    /**
     * The ForkBody model constructor.
     * @property {module:model/ForkBody}
     */
    ForkBody,

    /**
     * The Forks model constructor.
     * @property {module:model/Forks}
     */
    Forks,

    /**
     * The Gist model constructor.
     * @property {module:model/Gist}
     */
    Gist,

    /**
     * The GistFiles model constructor.
     * @property {module:model/GistFiles}
     */
    GistFiles,

    /**
     * The GistFilesRingErl model constructor.
     * @property {module:model/GistFilesRingErl}
     */
    GistFilesRingErl,

    /**
     * The GistForks model constructor.
     * @property {module:model/GistForks}
     */
    GistForks,

    /**
     * The GistHistory model constructor.
     * @property {module:model/GistHistory}
     */
    GistHistory,

    /**
     * The GitCommit model constructor.
     * @property {module:model/GitCommit}
     */
    GitCommit,

    /**
     * The GitRefPatch model constructor.
     * @property {module:model/GitRefPatch}
     */
    GitRefPatch,

    /**
     * The GitignoreLang model constructor.
     * @property {module:model/GitignoreLang}
     */
    GitignoreLang,

    /**
     * The HeadBranch model constructor.
     * @property {module:model/HeadBranch}
     */
    HeadBranch,

    /**
     * The HeadBranchObject model constructor.
     * @property {module:model/HeadBranchObject}
     */
    HeadBranchObject,

    /**
     * The HookBody model constructor.
     * @property {module:model/HookBody}
     */
    HookBody,

    /**
     * The Issue model constructor.
     * @property {module:model/Issue}
     */
    Issue,

    /**
     * The IssueEvent model constructor.
     * @property {module:model/IssueEvent}
     */
    IssueEvent,

    /**
     * The IssueEventIssue model constructor.
     * @property {module:model/IssueEventIssue}
     */
    IssueEventIssue,

    /**
     * The IssueEventIssueLabels model constructor.
     * @property {module:model/IssueEventIssueLabels}
     */
    IssueEventIssueLabels,

    /**
     * The IssueEventIssueMilestone model constructor.
     * @property {module:model/IssueEventIssueMilestone}
     */
    IssueEventIssueMilestone,

    /**
     * The IssueEventIssuePullRequest model constructor.
     * @property {module:model/IssueEventIssuePullRequest}
     */
    IssueEventIssuePullRequest,

    /**
     * The IssuesComment model constructor.
     * @property {module:model/IssuesComment}
     */
    IssuesComment,

    /**
     * The Label model constructor.
     * @property {module:model/Label}
     */
    Label,

    /**
     * The Markdown model constructor.
     * @property {module:model/Markdown}
     */
    Markdown,

    /**
     * The Merge model constructor.
     * @property {module:model/Merge}
     */
    Merge,

    /**
     * The MergePullBody model constructor.
     * @property {module:model/MergePullBody}
     */
    MergePullBody,

    /**
     * The MergesBody model constructor.
     * @property {module:model/MergesBody}
     */
    MergesBody,

    /**
     * The MergesConflict model constructor.
     * @property {module:model/MergesConflict}
     */
    MergesConflict,

    /**
     * The MergesSuccessful model constructor.
     * @property {module:model/MergesSuccessful}
     */
    MergesSuccessful,

    /**
     * The MergesSuccessfulCommit model constructor.
     * @property {module:model/MergesSuccessfulCommit}
     */
    MergesSuccessfulCommit,

    /**
     * The Meta model constructor.
     * @property {module:model/Meta}
     */
    Meta,

    /**
     * The Milestone model constructor.
     * @property {module:model/Milestone}
     */
    Milestone,

    /**
     * The MilestoneUpdate model constructor.
     * @property {module:model/MilestoneUpdate}
     */
    MilestoneUpdate,

    /**
     * The NotificationMarkRead model constructor.
     * @property {module:model/NotificationMarkRead}
     */
    NotificationMarkRead,

    /**
     * The Notifications model constructor.
     * @property {module:model/Notifications}
     */
    Notifications,

    /**
     * The NotificationsRepository model constructor.
     * @property {module:model/NotificationsRepository}
     */
    NotificationsRepository,

    /**
     * The NotificationsSubject model constructor.
     * @property {module:model/NotificationsSubject}
     */
    NotificationsSubject,

    /**
     * The OrgTeamsPost model constructor.
     * @property {module:model/OrgTeamsPost}
     */
    OrgTeamsPost,

    /**
     * The Organization model constructor.
     * @property {module:model/Organization}
     */
    Organization,

    /**
     * The OrganizationAsTeamMember model constructor.
     * @property {module:model/OrganizationAsTeamMember}
     */
    OrganizationAsTeamMember,

    /**
     * The OrganizationAsTeamMemberErrors model constructor.
     * @property {module:model/OrganizationAsTeamMemberErrors}
     */
    OrganizationAsTeamMemberErrors,

    /**
     * The ParticipationStats model constructor.
     * @property {module:model/ParticipationStats}
     */
    ParticipationStats,

    /**
     * The PatchGist model constructor.
     * @property {module:model/PatchGist}
     */
    PatchGist,

    /**
     * The PatchGistFiles model constructor.
     * @property {module:model/PatchGistFiles}
     */
    PatchGistFiles,

    /**
     * The PatchGistFilesFile1Txt model constructor.
     * @property {module:model/PatchGistFilesFile1Txt}
     */
    PatchGistFilesFile1Txt,

    /**
     * The PatchGistFilesOldNameTxt model constructor.
     * @property {module:model/PatchGistFilesOldNameTxt}
     */
    PatchGistFilesOldNameTxt,

    /**
     * The PatchOrg model constructor.
     * @property {module:model/PatchOrg}
     */
    PatchOrg,

    /**
     * The PostGist model constructor.
     * @property {module:model/PostGist}
     */
    PostGist,

    /**
     * The PostGistFiles model constructor.
     * @property {module:model/PostGistFiles}
     */
    PostGistFiles,

    /**
     * The PostRepo model constructor.
     * @property {module:model/PostRepo}
     */
    PostRepo,

    /**
     * The PullRequest model constructor.
     * @property {module:model/PullRequest}
     */
    PullRequest,

    /**
     * The PullRequestBase model constructor.
     * @property {module:model/PullRequestBase}
     */
    PullRequestBase,

    /**
     * The PullRequestBaseUser model constructor.
     * @property {module:model/PullRequestBaseUser}
     */
    PullRequestBaseUser,

    /**
     * The PullRequestLinks model constructor.
     * @property {module:model/PullRequestLinks}
     */
    PullRequestLinks,

    /**
     * The PullRequestLinksComments model constructor.
     * @property {module:model/PullRequestLinksComments}
     */
    PullRequestLinksComments,

    /**
     * The PullUpdate model constructor.
     * @property {module:model/PullUpdate}
     */
    PullUpdate,

    /**
     * The PullsComment model constructor.
     * @property {module:model/PullsComment}
     */
    PullsComment,

    /**
     * The PullsCommentLinks model constructor.
     * @property {module:model/PullsCommentLinks}
     */
    PullsCommentLinks,

    /**
     * The PullsCommentPost model constructor.
     * @property {module:model/PullsCommentPost}
     */
    PullsCommentPost,

    /**
     * The PullsPost model constructor.
     * @property {module:model/PullsPost}
     */
    PullsPost,

    /**
     * The PutSubscription model constructor.
     * @property {module:model/PutSubscription}
     */
    PutSubscription,

    /**
     * The RateLimit model constructor.
     * @property {module:model/RateLimit}
     */
    RateLimit,

    /**
     * The RateLimitRate model constructor.
     * @property {module:model/RateLimitRate}
     */
    RateLimitRate,

    /**
     * The RefsBody model constructor.
     * @property {module:model/RefsBody}
     */
    RefsBody,

    /**
     * The Release model constructor.
     * @property {module:model/Release}
     */
    Release,

    /**
     * The ReleaseAssets model constructor.
     * @property {module:model/ReleaseAssets}
     */
    ReleaseAssets,

    /**
     * The ReleaseCreate model constructor.
     * @property {module:model/ReleaseCreate}
     */
    ReleaseCreate,

    /**
     * The Repo model constructor.
     * @property {module:model/Repo}
     */
    Repo,

    /**
     * The RepoCommit model constructor.
     * @property {module:model/RepoCommit}
     */
    RepoCommit,

    /**
     * The RepoCommitBody model constructor.
     * @property {module:model/RepoCommitBody}
     */
    RepoCommitBody,

    /**
     * The RepoEdit model constructor.
     * @property {module:model/RepoEdit}
     */
    RepoEdit,

    /**
     * The SearchCode model constructor.
     * @property {module:model/SearchCode}
     */
    SearchCode,

    /**
     * The SearchCodeItems model constructor.
     * @property {module:model/SearchCodeItems}
     */
    SearchCodeItems,

    /**
     * The SearchCodeRepository model constructor.
     * @property {module:model/SearchCodeRepository}
     */
    SearchCodeRepository,

    /**
     * The SearchIssues model constructor.
     * @property {module:model/SearchIssues}
     */
    SearchIssues,

    /**
     * The SearchIssuesByKeyword model constructor.
     * @property {module:model/SearchIssuesByKeyword}
     */
    SearchIssuesByKeyword,

    /**
     * The SearchIssuesByKeywordIssues model constructor.
     * @property {module:model/SearchIssuesByKeywordIssues}
     */
    SearchIssuesByKeywordIssues,

    /**
     * The SearchIssuesItems model constructor.
     * @property {module:model/SearchIssuesItems}
     */
    SearchIssuesItems,

    /**
     * The SearchRepositories model constructor.
     * @property {module:model/SearchRepositories}
     */
    SearchRepositories,

    /**
     * The SearchRepositoriesByKeyword model constructor.
     * @property {module:model/SearchRepositoriesByKeyword}
     */
    SearchRepositoriesByKeyword,

    /**
     * The SearchUserByEmail model constructor.
     * @property {module:model/SearchUserByEmail}
     */
    SearchUserByEmail,

    /**
     * The SearchUsers model constructor.
     * @property {module:model/SearchUsers}
     */
    SearchUsers,

    /**
     * The SearchUsersByKeyword model constructor.
     * @property {module:model/SearchUsersByKeyword}
     */
    SearchUsersByKeyword,

    /**
     * The Subscription model constructor.
     * @property {module:model/Subscription}
     */
    Subscription,

    /**
     * The SubscriptionBody model constructor.
     * @property {module:model/SubscriptionBody}
     */
    SubscriptionBody,

    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag,

    /**
     * The TagBody model constructor.
     * @property {module:model/TagBody}
     */
    TagBody,

    /**
     * The TagObject model constructor.
     * @property {module:model/TagObject}
     */
    TagObject,

    /**
     * The TagTagger model constructor.
     * @property {module:model/TagTagger}
     */
    TagTagger,

    /**
     * The Team model constructor.
     * @property {module:model/Team}
     */
    Team,

    /**
     * The TeamMembership model constructor.
     * @property {module:model/TeamMembership}
     */
    TeamMembership,

    /**
     * The TeamRepos model constructor.
     * @property {module:model/TeamRepos}
     */
    TeamRepos,

    /**
     * The Tree model constructor.
     * @property {module:model/Tree}
     */
    Tree,

    /**
     * The TreeTree model constructor.
     * @property {module:model/TreeTree}
     */
    TreeTree,

    /**
     * The Trees model constructor.
     * @property {module:model/Trees}
     */
    Trees,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserKeysKeyId model constructor.
     * @property {module:model/UserKeysKeyId}
     */
    UserKeysKeyId,

    /**
     * The UserKeysPost model constructor.
     * @property {module:model/UserKeysPost}
     */
    UserKeysPost,

    /**
     * The UserUpdate model constructor.
     * @property {module:model/UserUpdate}
     */
    UserUpdate,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
