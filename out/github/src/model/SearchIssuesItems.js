/**
 * GitHub
 * Powerful collaboration, code review, and code management for open source and private projects. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IssueEventIssueLabels from './IssueEventIssueLabels';
import User from './User';

/**
 * The SearchIssuesItems model module.
 * @module model/SearchIssuesItems
 * @version 1.4.6
 */
class SearchIssuesItems {
    /**
     * Constructs a new <code>SearchIssuesItems</code>.
     * @alias module:model/SearchIssuesItems
     */
    constructor() { 
        
        SearchIssuesItems.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SearchIssuesItems</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchIssuesItems} obj Optional instance to populate.
     * @return {module:model/SearchIssuesItems} The populated <code>SearchIssuesItems</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchIssuesItems();

            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'Number');
            }
            if (data.hasOwnProperty('comments_url')) {
                obj['comments_url'] = ApiClient.convertToType(data['comments_url'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('events_url')) {
                obj['events_url'] = ApiClient.convertToType(data['events_url'], 'String');
            }
            if (data.hasOwnProperty('html_url')) {
                obj['html_url'] = ApiClient.convertToType(data['html_url'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], [IssueEventIssueLabels]);
            }
            if (data.hasOwnProperty('labels_url')) {
                obj['labels_url'] = ApiClient.convertToType(data['labels_url'], 'String');
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'Number');
            }
            if (data.hasOwnProperty('pull_request')) {
                obj['pull_request'] = ApiClient.convertToType(data['pull_request'], Object);
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = User.constructFromObject(data['user']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} body
 */
SearchIssuesItems.prototype['body'] = undefined;

/**
 * @member {Number} comments
 */
SearchIssuesItems.prototype['comments'] = undefined;

/**
 * @member {String} comments_url
 */
SearchIssuesItems.prototype['comments_url'] = undefined;

/**
 * @member {String} created_at
 */
SearchIssuesItems.prototype['created_at'] = undefined;

/**
 * @member {String} events_url
 */
SearchIssuesItems.prototype['events_url'] = undefined;

/**
 * @member {String} html_url
 */
SearchIssuesItems.prototype['html_url'] = undefined;

/**
 * @member {Number} id
 */
SearchIssuesItems.prototype['id'] = undefined;

/**
 * @member {Array.<module:model/IssueEventIssueLabels>} labels
 */
SearchIssuesItems.prototype['labels'] = undefined;

/**
 * @member {String} labels_url
 */
SearchIssuesItems.prototype['labels_url'] = undefined;

/**
 * @member {Number} number
 */
SearchIssuesItems.prototype['number'] = undefined;

/**
 * @member {Object} pull_request
 */
SearchIssuesItems.prototype['pull_request'] = undefined;

/**
 * @member {Number} score
 */
SearchIssuesItems.prototype['score'] = undefined;

/**
 * @member {String} state
 */
SearchIssuesItems.prototype['state'] = undefined;

/**
 * @member {String} title
 */
SearchIssuesItems.prototype['title'] = undefined;

/**
 * @member {String} updated_at
 */
SearchIssuesItems.prototype['updated_at'] = undefined;

/**
 * @member {String} url
 */
SearchIssuesItems.prototype['url'] = undefined;

/**
 * @member {module:model/User} user
 */
SearchIssuesItems.prototype['user'] = undefined;






export default SearchIssuesItems;

