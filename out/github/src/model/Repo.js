/**
 * GitHub
 * Powerful collaboration, code review, and code management for open source and private projects. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Actor from './Actor';
import Organization from './Organization';

/**
 * The Repo model module.
 * @module model/Repo
 * @version 1.4.5
 */
class Repo {
    /**
     * Constructs a new <code>Repo</code>.
     * @alias module:model/Repo
     */
    constructor() { 
        
        Repo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Repo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Repo} obj Optional instance to populate.
     * @return {module:model/Repo} The populated <code>Repo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Repo();

            if (data.hasOwnProperty('clone_url')) {
                obj['clone_url'] = ApiClient.convertToType(data['clone_url'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('fork')) {
                obj['fork'] = ApiClient.convertToType(data['fork'], 'Boolean');
            }
            if (data.hasOwnProperty('forks')) {
                obj['forks'] = ApiClient.convertToType(data['forks'], 'Number');
            }
            if (data.hasOwnProperty('forks_count')) {
                obj['forks_count'] = ApiClient.convertToType(data['forks_count'], 'Number');
            }
            if (data.hasOwnProperty('full_name')) {
                obj['full_name'] = ApiClient.convertToType(data['full_name'], 'String');
            }
            if (data.hasOwnProperty('git_url')) {
                obj['git_url'] = ApiClient.convertToType(data['git_url'], 'String');
            }
            if (data.hasOwnProperty('has_downloads')) {
                obj['has_downloads'] = ApiClient.convertToType(data['has_downloads'], 'Boolean');
            }
            if (data.hasOwnProperty('has_issues')) {
                obj['has_issues'] = ApiClient.convertToType(data['has_issues'], 'Boolean');
            }
            if (data.hasOwnProperty('has_wiki')) {
                obj['has_wiki'] = ApiClient.convertToType(data['has_wiki'], 'Boolean');
            }
            if (data.hasOwnProperty('homepage')) {
                obj['homepage'] = ApiClient.convertToType(data['homepage'], 'String');
            }
            if (data.hasOwnProperty('html_url')) {
                obj['html_url'] = ApiClient.convertToType(data['html_url'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('master_branch')) {
                obj['master_branch'] = ApiClient.convertToType(data['master_branch'], 'String');
            }
            if (data.hasOwnProperty('mirror_url')) {
                obj['mirror_url'] = ApiClient.convertToType(data['mirror_url'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('open_issues')) {
                obj['open_issues'] = ApiClient.convertToType(data['open_issues'], 'Number');
            }
            if (data.hasOwnProperty('open_issues_count')) {
                obj['open_issues_count'] = ApiClient.convertToType(data['open_issues_count'], 'Number');
            }
            if (data.hasOwnProperty('organization')) {
                obj['organization'] = Organization.constructFromObject(data['organization']);
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = Actor.constructFromObject(data['owner']);
            }
            if (data.hasOwnProperty('parent')) {
                obj['parent'] = ApiClient.convertToType(data['parent'], Repo);
            }
            if (data.hasOwnProperty('private')) {
                obj['private'] = ApiClient.convertToType(data['private'], 'Boolean');
            }
            if (data.hasOwnProperty('pushed_at')) {
                obj['pushed_at'] = ApiClient.convertToType(data['pushed_at'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], Repo);
            }
            if (data.hasOwnProperty('ssh_url')) {
                obj['ssh_url'] = ApiClient.convertToType(data['ssh_url'], 'String');
            }
            if (data.hasOwnProperty('svn_url')) {
                obj['svn_url'] = ApiClient.convertToType(data['svn_url'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('watchers')) {
                obj['watchers'] = ApiClient.convertToType(data['watchers'], 'Number');
            }
            if (data.hasOwnProperty('watchers_count')) {
                obj['watchers_count'] = ApiClient.convertToType(data['watchers_count'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {String} clone_url
 */
Repo.prototype['clone_url'] = undefined;

/**
 * ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ
 * @member {String} created_at
 */
Repo.prototype['created_at'] = undefined;

/**
 * @member {String} description
 */
Repo.prototype['description'] = undefined;

/**
 * @member {Boolean} fork
 */
Repo.prototype['fork'] = undefined;

/**
 * @member {Number} forks
 */
Repo.prototype['forks'] = undefined;

/**
 * @member {Number} forks_count
 */
Repo.prototype['forks_count'] = undefined;

/**
 * @member {String} full_name
 */
Repo.prototype['full_name'] = undefined;

/**
 * @member {String} git_url
 */
Repo.prototype['git_url'] = undefined;

/**
 * @member {Boolean} has_downloads
 */
Repo.prototype['has_downloads'] = undefined;

/**
 * @member {Boolean} has_issues
 */
Repo.prototype['has_issues'] = undefined;

/**
 * @member {Boolean} has_wiki
 */
Repo.prototype['has_wiki'] = undefined;

/**
 * @member {String} homepage
 */
Repo.prototype['homepage'] = undefined;

/**
 * @member {String} html_url
 */
Repo.prototype['html_url'] = undefined;

/**
 * @member {Number} id
 */
Repo.prototype['id'] = undefined;

/**
 * @member {String} language
 */
Repo.prototype['language'] = undefined;

/**
 * @member {String} master_branch
 */
Repo.prototype['master_branch'] = undefined;

/**
 * @member {String} mirror_url
 */
Repo.prototype['mirror_url'] = undefined;

/**
 * @member {String} name
 */
Repo.prototype['name'] = undefined;

/**
 * @member {Number} open_issues
 */
Repo.prototype['open_issues'] = undefined;

/**
 * @member {Number} open_issues_count
 */
Repo.prototype['open_issues_count'] = undefined;

/**
 * @member {module:model/Organization} organization
 */
Repo.prototype['organization'] = undefined;

/**
 * @member {module:model/Actor} owner
 */
Repo.prototype['owner'] = undefined;

/**
 * @member {module:model/Repo} parent
 */
Repo.prototype['parent'] = undefined;

/**
 * @member {Boolean} private
 */
Repo.prototype['private'] = undefined;

/**
 * ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ
 * @member {String} pushed_at
 */
Repo.prototype['pushed_at'] = undefined;

/**
 * @member {Number} size
 */
Repo.prototype['size'] = undefined;

/**
 * @member {module:model/Repo} source
 */
Repo.prototype['source'] = undefined;

/**
 * @member {String} ssh_url
 */
Repo.prototype['ssh_url'] = undefined;

/**
 * @member {String} svn_url
 */
Repo.prototype['svn_url'] = undefined;

/**
 * ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ
 * @member {String} updated_at
 */
Repo.prototype['updated_at'] = undefined;

/**
 * @member {String} url
 */
Repo.prototype['url'] = undefined;

/**
 * @member {Number} watchers
 */
Repo.prototype['watchers'] = undefined;

/**
 * @member {Number} watchers_count
 */
Repo.prototype['watchers_count'] = undefined;






export default Repo;

