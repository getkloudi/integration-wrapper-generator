/**
 * GitHub
 * Powerful collaboration, code review, and code management for open source and private projects. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GitHub);
  }
}(this, function(expect, GitHub) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GitHub.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('emojisGet', function() {
      it('should call emojisGet successfully', function(done) {
        //uncomment below and update the code to test emojisGet
        //instance.emojisGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventsGet', function() {
      it('should call eventsGet successfully', function(done) {
        //uncomment below and update the code to test eventsGet
        //instance.eventsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedsGet', function() {
      it('should call feedsGet successfully', function(done) {
        //uncomment below and update the code to test feedsGet
        //instance.feedsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gistsGet', function() {
      it('should call gistsGet successfully', function(done) {
        //uncomment below and update the code to test gistsGet
        //instance.gistsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gistsIdCommentsCommentIdDelete', function() {
      it('should call gistsIdCommentsCommentIdDelete successfully', function(done) {
        //uncomment below and update the code to test gistsIdCommentsCommentIdDelete
        //instance.gistsIdCommentsCommentIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gistsIdCommentsCommentIdGet', function() {
      it('should call gistsIdCommentsCommentIdGet successfully', function(done) {
        //uncomment below and update the code to test gistsIdCommentsCommentIdGet
        //instance.gistsIdCommentsCommentIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gistsIdCommentsCommentIdPatch', function() {
      it('should call gistsIdCommentsCommentIdPatch successfully', function(done) {
        //uncomment below and update the code to test gistsIdCommentsCommentIdPatch
        //instance.gistsIdCommentsCommentIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gistsIdCommentsGet', function() {
      it('should call gistsIdCommentsGet successfully', function(done) {
        //uncomment below and update the code to test gistsIdCommentsGet
        //instance.gistsIdCommentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gistsIdCommentsPost', function() {
      it('should call gistsIdCommentsPost successfully', function(done) {
        //uncomment below and update the code to test gistsIdCommentsPost
        //instance.gistsIdCommentsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gistsIdDelete', function() {
      it('should call gistsIdDelete successfully', function(done) {
        //uncomment below and update the code to test gistsIdDelete
        //instance.gistsIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gistsIdForksPost', function() {
      it('should call gistsIdForksPost successfully', function(done) {
        //uncomment below and update the code to test gistsIdForksPost
        //instance.gistsIdForksPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gistsIdGet', function() {
      it('should call gistsIdGet successfully', function(done) {
        //uncomment below and update the code to test gistsIdGet
        //instance.gistsIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gistsIdPatch', function() {
      it('should call gistsIdPatch successfully', function(done) {
        //uncomment below and update the code to test gistsIdPatch
        //instance.gistsIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gistsIdStarDelete', function() {
      it('should call gistsIdStarDelete successfully', function(done) {
        //uncomment below and update the code to test gistsIdStarDelete
        //instance.gistsIdStarDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gistsIdStarGet', function() {
      it('should call gistsIdStarGet successfully', function(done) {
        //uncomment below and update the code to test gistsIdStarGet
        //instance.gistsIdStarGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gistsIdStarPut', function() {
      it('should call gistsIdStarPut successfully', function(done) {
        //uncomment below and update the code to test gistsIdStarPut
        //instance.gistsIdStarPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gistsPost', function() {
      it('should call gistsPost successfully', function(done) {
        //uncomment below and update the code to test gistsPost
        //instance.gistsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gistsPublicGet', function() {
      it('should call gistsPublicGet successfully', function(done) {
        //uncomment below and update the code to test gistsPublicGet
        //instance.gistsPublicGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gistsStarredGet', function() {
      it('should call gistsStarredGet successfully', function(done) {
        //uncomment below and update the code to test gistsStarredGet
        //instance.gistsStarredGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gitignoreTemplatesGet', function() {
      it('should call gitignoreTemplatesGet successfully', function(done) {
        //uncomment below and update the code to test gitignoreTemplatesGet
        //instance.gitignoreTemplatesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gitignoreTemplatesLanguageGet', function() {
      it('should call gitignoreTemplatesLanguageGet successfully', function(done) {
        //uncomment below and update the code to test gitignoreTemplatesLanguageGet
        //instance.gitignoreTemplatesLanguageGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesGet', function() {
      it('should call issuesGet successfully', function(done) {
        //uncomment below and update the code to test issuesGet
        //instance.issuesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('legacyIssuesSearchOwnerRepositoryStateKeywordGet', function() {
      it('should call legacyIssuesSearchOwnerRepositoryStateKeywordGet successfully', function(done) {
        //uncomment below and update the code to test legacyIssuesSearchOwnerRepositoryStateKeywordGet
        //instance.legacyIssuesSearchOwnerRepositoryStateKeywordGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('legacyReposSearchKeywordGet', function() {
      it('should call legacyReposSearchKeywordGet successfully', function(done) {
        //uncomment below and update the code to test legacyReposSearchKeywordGet
        //instance.legacyReposSearchKeywordGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('legacyUserEmailEmailGet', function() {
      it('should call legacyUserEmailEmailGet successfully', function(done) {
        //uncomment below and update the code to test legacyUserEmailEmailGet
        //instance.legacyUserEmailEmailGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('legacyUserSearchKeywordGet', function() {
      it('should call legacyUserSearchKeywordGet successfully', function(done) {
        //uncomment below and update the code to test legacyUserSearchKeywordGet
        //instance.legacyUserSearchKeywordGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('markdownPost', function() {
      it('should call markdownPost successfully', function(done) {
        //uncomment below and update the code to test markdownPost
        //instance.markdownPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('markdownRawPost', function() {
      it('should call markdownRawPost successfully', function(done) {
        //uncomment below and update the code to test markdownRawPost
        //instance.markdownRawPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metaGet', function() {
      it('should call metaGet successfully', function(done) {
        //uncomment below and update the code to test metaGet
        //instance.metaGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networksOwnerRepoEventsGet', function() {
      it('should call networksOwnerRepoEventsGet successfully', function(done) {
        //uncomment below and update the code to test networksOwnerRepoEventsGet
        //instance.networksOwnerRepoEventsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationsGet', function() {
      it('should call notificationsGet successfully', function(done) {
        //uncomment below and update the code to test notificationsGet
        //instance.notificationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationsPut', function() {
      it('should call notificationsPut successfully', function(done) {
        //uncomment below and update the code to test notificationsPut
        //instance.notificationsPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationsThreadsIdGet', function() {
      it('should call notificationsThreadsIdGet successfully', function(done) {
        //uncomment below and update the code to test notificationsThreadsIdGet
        //instance.notificationsThreadsIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationsThreadsIdPatch', function() {
      it('should call notificationsThreadsIdPatch successfully', function(done) {
        //uncomment below and update the code to test notificationsThreadsIdPatch
        //instance.notificationsThreadsIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationsThreadsIdSubscriptionDelete', function() {
      it('should call notificationsThreadsIdSubscriptionDelete successfully', function(done) {
        //uncomment below and update the code to test notificationsThreadsIdSubscriptionDelete
        //instance.notificationsThreadsIdSubscriptionDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationsThreadsIdSubscriptionGet', function() {
      it('should call notificationsThreadsIdSubscriptionGet successfully', function(done) {
        //uncomment below and update the code to test notificationsThreadsIdSubscriptionGet
        //instance.notificationsThreadsIdSubscriptionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationsThreadsIdSubscriptionPut', function() {
      it('should call notificationsThreadsIdSubscriptionPut successfully', function(done) {
        //uncomment below and update the code to test notificationsThreadsIdSubscriptionPut
        //instance.notificationsThreadsIdSubscriptionPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsOrgEventsGet', function() {
      it('should call orgsOrgEventsGet successfully', function(done) {
        //uncomment below and update the code to test orgsOrgEventsGet
        //instance.orgsOrgEventsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsOrgGet', function() {
      it('should call orgsOrgGet successfully', function(done) {
        //uncomment below and update the code to test orgsOrgGet
        //instance.orgsOrgGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsOrgIssuesGet', function() {
      it('should call orgsOrgIssuesGet successfully', function(done) {
        //uncomment below and update the code to test orgsOrgIssuesGet
        //instance.orgsOrgIssuesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsOrgMembersGet', function() {
      it('should call orgsOrgMembersGet successfully', function(done) {
        //uncomment below and update the code to test orgsOrgMembersGet
        //instance.orgsOrgMembersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsOrgMembersUsernameDelete', function() {
      it('should call orgsOrgMembersUsernameDelete successfully', function(done) {
        //uncomment below and update the code to test orgsOrgMembersUsernameDelete
        //instance.orgsOrgMembersUsernameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsOrgMembersUsernameGet', function() {
      it('should call orgsOrgMembersUsernameGet successfully', function(done) {
        //uncomment below and update the code to test orgsOrgMembersUsernameGet
        //instance.orgsOrgMembersUsernameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsOrgPatch', function() {
      it('should call orgsOrgPatch successfully', function(done) {
        //uncomment below and update the code to test orgsOrgPatch
        //instance.orgsOrgPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsOrgPublicMembersGet', function() {
      it('should call orgsOrgPublicMembersGet successfully', function(done) {
        //uncomment below and update the code to test orgsOrgPublicMembersGet
        //instance.orgsOrgPublicMembersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsOrgPublicMembersUsernameDelete', function() {
      it('should call orgsOrgPublicMembersUsernameDelete successfully', function(done) {
        //uncomment below and update the code to test orgsOrgPublicMembersUsernameDelete
        //instance.orgsOrgPublicMembersUsernameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsOrgPublicMembersUsernameGet', function() {
      it('should call orgsOrgPublicMembersUsernameGet successfully', function(done) {
        //uncomment below and update the code to test orgsOrgPublicMembersUsernameGet
        //instance.orgsOrgPublicMembersUsernameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsOrgPublicMembersUsernamePut', function() {
      it('should call orgsOrgPublicMembersUsernamePut successfully', function(done) {
        //uncomment below and update the code to test orgsOrgPublicMembersUsernamePut
        //instance.orgsOrgPublicMembersUsernamePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsOrgReposGet', function() {
      it('should call orgsOrgReposGet successfully', function(done) {
        //uncomment below and update the code to test orgsOrgReposGet
        //instance.orgsOrgReposGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsOrgReposPost', function() {
      it('should call orgsOrgReposPost successfully', function(done) {
        //uncomment below and update the code to test orgsOrgReposPost
        //instance.orgsOrgReposPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsOrgTeamsGet', function() {
      it('should call orgsOrgTeamsGet successfully', function(done) {
        //uncomment below and update the code to test orgsOrgTeamsGet
        //instance.orgsOrgTeamsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsOrgTeamsPost', function() {
      it('should call orgsOrgTeamsPost successfully', function(done) {
        //uncomment below and update the code to test orgsOrgTeamsPost
        //instance.orgsOrgTeamsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rateLimitGet', function() {
      it('should call rateLimitGet successfully', function(done) {
        //uncomment below and update the code to test rateLimitGet
        //instance.rateLimitGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoArchiveFormatPathGet', function() {
      it('should call reposOwnerRepoArchiveFormatPathGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoArchiveFormatPathGet
        //instance.reposOwnerRepoArchiveFormatPathGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoAssigneesAssigneeGet', function() {
      it('should call reposOwnerRepoAssigneesAssigneeGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoAssigneesAssigneeGet
        //instance.reposOwnerRepoAssigneesAssigneeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoAssigneesGet', function() {
      it('should call reposOwnerRepoAssigneesGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoAssigneesGet
        //instance.reposOwnerRepoAssigneesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoBranchesBranchGet', function() {
      it('should call reposOwnerRepoBranchesBranchGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoBranchesBranchGet
        //instance.reposOwnerRepoBranchesBranchGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoBranchesGet', function() {
      it('should call reposOwnerRepoBranchesGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoBranchesGet
        //instance.reposOwnerRepoBranchesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoCollaboratorsGet', function() {
      it('should call reposOwnerRepoCollaboratorsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoCollaboratorsGet
        //instance.reposOwnerRepoCollaboratorsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoCollaboratorsUserDelete', function() {
      it('should call reposOwnerRepoCollaboratorsUserDelete successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoCollaboratorsUserDelete
        //instance.reposOwnerRepoCollaboratorsUserDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoCollaboratorsUserGet', function() {
      it('should call reposOwnerRepoCollaboratorsUserGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoCollaboratorsUserGet
        //instance.reposOwnerRepoCollaboratorsUserGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoCollaboratorsUserPut', function() {
      it('should call reposOwnerRepoCollaboratorsUserPut successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoCollaboratorsUserPut
        //instance.reposOwnerRepoCollaboratorsUserPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoCommentsCommentIdDelete', function() {
      it('should call reposOwnerRepoCommentsCommentIdDelete successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoCommentsCommentIdDelete
        //instance.reposOwnerRepoCommentsCommentIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoCommentsCommentIdGet', function() {
      it('should call reposOwnerRepoCommentsCommentIdGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoCommentsCommentIdGet
        //instance.reposOwnerRepoCommentsCommentIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoCommentsCommentIdPatch', function() {
      it('should call reposOwnerRepoCommentsCommentIdPatch successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoCommentsCommentIdPatch
        //instance.reposOwnerRepoCommentsCommentIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoCommentsGet', function() {
      it('should call reposOwnerRepoCommentsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoCommentsGet
        //instance.reposOwnerRepoCommentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoCommitsGet', function() {
      it('should call reposOwnerRepoCommitsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoCommitsGet
        //instance.reposOwnerRepoCommitsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoCommitsRefStatusGet', function() {
      it('should call reposOwnerRepoCommitsRefStatusGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoCommitsRefStatusGet
        //instance.reposOwnerRepoCommitsRefStatusGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoCommitsShaCodeCommentsGet', function() {
      it('should call reposOwnerRepoCommitsShaCodeCommentsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoCommitsShaCodeCommentsGet
        //instance.reposOwnerRepoCommitsShaCodeCommentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoCommitsShaCodeCommentsPost', function() {
      it('should call reposOwnerRepoCommitsShaCodeCommentsPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoCommitsShaCodeCommentsPost
        //instance.reposOwnerRepoCommitsShaCodeCommentsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoCommitsShaCodeGet', function() {
      it('should call reposOwnerRepoCommitsShaCodeGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoCommitsShaCodeGet
        //instance.reposOwnerRepoCommitsShaCodeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoCompareBaseIdHeadIdGet', function() {
      it('should call reposOwnerRepoCompareBaseIdHeadIdGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoCompareBaseIdHeadIdGet
        //instance.reposOwnerRepoCompareBaseIdHeadIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoContentsPathDelete', function() {
      it('should call reposOwnerRepoContentsPathDelete successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoContentsPathDelete
        //instance.reposOwnerRepoContentsPathDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoContentsPathGet', function() {
      it('should call reposOwnerRepoContentsPathGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoContentsPathGet
        //instance.reposOwnerRepoContentsPathGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoContentsPathPut', function() {
      it('should call reposOwnerRepoContentsPathPut successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoContentsPathPut
        //instance.reposOwnerRepoContentsPathPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoContributorsGet', function() {
      it('should call reposOwnerRepoContributorsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoContributorsGet
        //instance.reposOwnerRepoContributorsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoDelete', function() {
      it('should call reposOwnerRepoDelete successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoDelete
        //instance.reposOwnerRepoDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoDeploymentsGet', function() {
      it('should call reposOwnerRepoDeploymentsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoDeploymentsGet
        //instance.reposOwnerRepoDeploymentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoDeploymentsIdStatusesGet', function() {
      it('should call reposOwnerRepoDeploymentsIdStatusesGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoDeploymentsIdStatusesGet
        //instance.reposOwnerRepoDeploymentsIdStatusesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoDeploymentsIdStatusesPost', function() {
      it('should call reposOwnerRepoDeploymentsIdStatusesPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoDeploymentsIdStatusesPost
        //instance.reposOwnerRepoDeploymentsIdStatusesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoDeploymentsPost', function() {
      it('should call reposOwnerRepoDeploymentsPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoDeploymentsPost
        //instance.reposOwnerRepoDeploymentsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoDownloadsDownloadIdDelete', function() {
      it('should call reposOwnerRepoDownloadsDownloadIdDelete successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoDownloadsDownloadIdDelete
        //instance.reposOwnerRepoDownloadsDownloadIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoDownloadsDownloadIdGet', function() {
      it('should call reposOwnerRepoDownloadsDownloadIdGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoDownloadsDownloadIdGet
        //instance.reposOwnerRepoDownloadsDownloadIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoDownloadsGet', function() {
      it('should call reposOwnerRepoDownloadsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoDownloadsGet
        //instance.reposOwnerRepoDownloadsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoEventsGet', function() {
      it('should call reposOwnerRepoEventsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoEventsGet
        //instance.reposOwnerRepoEventsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoForksGet', function() {
      it('should call reposOwnerRepoForksGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoForksGet
        //instance.reposOwnerRepoForksGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoForksPost', function() {
      it('should call reposOwnerRepoForksPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoForksPost
        //instance.reposOwnerRepoForksPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoGet', function() {
      it('should call reposOwnerRepoGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoGet
        //instance.reposOwnerRepoGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoGitBlobsPost', function() {
      it('should call reposOwnerRepoGitBlobsPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoGitBlobsPost
        //instance.reposOwnerRepoGitBlobsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoGitBlobsShaCodeGet', function() {
      it('should call reposOwnerRepoGitBlobsShaCodeGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoGitBlobsShaCodeGet
        //instance.reposOwnerRepoGitBlobsShaCodeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoGitCommitsPost', function() {
      it('should call reposOwnerRepoGitCommitsPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoGitCommitsPost
        //instance.reposOwnerRepoGitCommitsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoGitCommitsShaCodeGet', function() {
      it('should call reposOwnerRepoGitCommitsShaCodeGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoGitCommitsShaCodeGet
        //instance.reposOwnerRepoGitCommitsShaCodeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoGitRefsGet', function() {
      it('should call reposOwnerRepoGitRefsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoGitRefsGet
        //instance.reposOwnerRepoGitRefsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoGitRefsPost', function() {
      it('should call reposOwnerRepoGitRefsPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoGitRefsPost
        //instance.reposOwnerRepoGitRefsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoGitRefsRefDelete', function() {
      it('should call reposOwnerRepoGitRefsRefDelete successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoGitRefsRefDelete
        //instance.reposOwnerRepoGitRefsRefDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoGitRefsRefGet', function() {
      it('should call reposOwnerRepoGitRefsRefGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoGitRefsRefGet
        //instance.reposOwnerRepoGitRefsRefGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoGitRefsRefPatch', function() {
      it('should call reposOwnerRepoGitRefsRefPatch successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoGitRefsRefPatch
        //instance.reposOwnerRepoGitRefsRefPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoGitTagsPost', function() {
      it('should call reposOwnerRepoGitTagsPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoGitTagsPost
        //instance.reposOwnerRepoGitTagsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoGitTagsShaCodeGet', function() {
      it('should call reposOwnerRepoGitTagsShaCodeGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoGitTagsShaCodeGet
        //instance.reposOwnerRepoGitTagsShaCodeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoGitTreesPost', function() {
      it('should call reposOwnerRepoGitTreesPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoGitTreesPost
        //instance.reposOwnerRepoGitTreesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoGitTreesShaCodeGet', function() {
      it('should call reposOwnerRepoGitTreesShaCodeGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoGitTreesShaCodeGet
        //instance.reposOwnerRepoGitTreesShaCodeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoHooksGet', function() {
      it('should call reposOwnerRepoHooksGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoHooksGet
        //instance.reposOwnerRepoHooksGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoHooksHookIdDelete', function() {
      it('should call reposOwnerRepoHooksHookIdDelete successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoHooksHookIdDelete
        //instance.reposOwnerRepoHooksHookIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoHooksHookIdGet', function() {
      it('should call reposOwnerRepoHooksHookIdGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoHooksHookIdGet
        //instance.reposOwnerRepoHooksHookIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoHooksHookIdPatch', function() {
      it('should call reposOwnerRepoHooksHookIdPatch successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoHooksHookIdPatch
        //instance.reposOwnerRepoHooksHookIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoHooksHookIdTestsPost', function() {
      it('should call reposOwnerRepoHooksHookIdTestsPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoHooksHookIdTestsPost
        //instance.reposOwnerRepoHooksHookIdTestsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoHooksPost', function() {
      it('should call reposOwnerRepoHooksPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoHooksPost
        //instance.reposOwnerRepoHooksPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoIssuesCommentsCommentIdDelete', function() {
      it('should call reposOwnerRepoIssuesCommentsCommentIdDelete successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoIssuesCommentsCommentIdDelete
        //instance.reposOwnerRepoIssuesCommentsCommentIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoIssuesCommentsCommentIdGet', function() {
      it('should call reposOwnerRepoIssuesCommentsCommentIdGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoIssuesCommentsCommentIdGet
        //instance.reposOwnerRepoIssuesCommentsCommentIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoIssuesCommentsCommentIdPatch', function() {
      it('should call reposOwnerRepoIssuesCommentsCommentIdPatch successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoIssuesCommentsCommentIdPatch
        //instance.reposOwnerRepoIssuesCommentsCommentIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoIssuesCommentsGet', function() {
      it('should call reposOwnerRepoIssuesCommentsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoIssuesCommentsGet
        //instance.reposOwnerRepoIssuesCommentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoIssuesEventsEventIdGet', function() {
      it('should call reposOwnerRepoIssuesEventsEventIdGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoIssuesEventsEventIdGet
        //instance.reposOwnerRepoIssuesEventsEventIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoIssuesEventsGet', function() {
      it('should call reposOwnerRepoIssuesEventsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoIssuesEventsGet
        //instance.reposOwnerRepoIssuesEventsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoIssuesGet', function() {
      it('should call reposOwnerRepoIssuesGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoIssuesGet
        //instance.reposOwnerRepoIssuesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoIssuesNumberCommentsGet', function() {
      it('should call reposOwnerRepoIssuesNumberCommentsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoIssuesNumberCommentsGet
        //instance.reposOwnerRepoIssuesNumberCommentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoIssuesNumberCommentsPost', function() {
      it('should call reposOwnerRepoIssuesNumberCommentsPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoIssuesNumberCommentsPost
        //instance.reposOwnerRepoIssuesNumberCommentsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoIssuesNumberEventsGet', function() {
      it('should call reposOwnerRepoIssuesNumberEventsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoIssuesNumberEventsGet
        //instance.reposOwnerRepoIssuesNumberEventsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoIssuesNumberGet', function() {
      it('should call reposOwnerRepoIssuesNumberGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoIssuesNumberGet
        //instance.reposOwnerRepoIssuesNumberGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoIssuesNumberLabelsDelete', function() {
      it('should call reposOwnerRepoIssuesNumberLabelsDelete successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoIssuesNumberLabelsDelete
        //instance.reposOwnerRepoIssuesNumberLabelsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoIssuesNumberLabelsGet', function() {
      it('should call reposOwnerRepoIssuesNumberLabelsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoIssuesNumberLabelsGet
        //instance.reposOwnerRepoIssuesNumberLabelsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoIssuesNumberLabelsNameDelete', function() {
      it('should call reposOwnerRepoIssuesNumberLabelsNameDelete successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoIssuesNumberLabelsNameDelete
        //instance.reposOwnerRepoIssuesNumberLabelsNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoIssuesNumberLabelsPost', function() {
      it('should call reposOwnerRepoIssuesNumberLabelsPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoIssuesNumberLabelsPost
        //instance.reposOwnerRepoIssuesNumberLabelsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoIssuesNumberLabelsPut', function() {
      it('should call reposOwnerRepoIssuesNumberLabelsPut successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoIssuesNumberLabelsPut
        //instance.reposOwnerRepoIssuesNumberLabelsPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoIssuesNumberPatch', function() {
      it('should call reposOwnerRepoIssuesNumberPatch successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoIssuesNumberPatch
        //instance.reposOwnerRepoIssuesNumberPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoIssuesPost', function() {
      it('should call reposOwnerRepoIssuesPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoIssuesPost
        //instance.reposOwnerRepoIssuesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoKeysGet', function() {
      it('should call reposOwnerRepoKeysGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoKeysGet
        //instance.reposOwnerRepoKeysGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoKeysKeyIdDelete', function() {
      it('should call reposOwnerRepoKeysKeyIdDelete successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoKeysKeyIdDelete
        //instance.reposOwnerRepoKeysKeyIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoKeysKeyIdGet', function() {
      it('should call reposOwnerRepoKeysKeyIdGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoKeysKeyIdGet
        //instance.reposOwnerRepoKeysKeyIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoKeysPost', function() {
      it('should call reposOwnerRepoKeysPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoKeysPost
        //instance.reposOwnerRepoKeysPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoLabelsGet', function() {
      it('should call reposOwnerRepoLabelsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoLabelsGet
        //instance.reposOwnerRepoLabelsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoLabelsNameDelete', function() {
      it('should call reposOwnerRepoLabelsNameDelete successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoLabelsNameDelete
        //instance.reposOwnerRepoLabelsNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoLabelsNameGet', function() {
      it('should call reposOwnerRepoLabelsNameGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoLabelsNameGet
        //instance.reposOwnerRepoLabelsNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoLabelsNamePatch', function() {
      it('should call reposOwnerRepoLabelsNamePatch successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoLabelsNamePatch
        //instance.reposOwnerRepoLabelsNamePatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoLabelsPost', function() {
      it('should call reposOwnerRepoLabelsPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoLabelsPost
        //instance.reposOwnerRepoLabelsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoLanguagesGet', function() {
      it('should call reposOwnerRepoLanguagesGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoLanguagesGet
        //instance.reposOwnerRepoLanguagesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoMergesPost', function() {
      it('should call reposOwnerRepoMergesPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoMergesPost
        //instance.reposOwnerRepoMergesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoMilestonesGet', function() {
      it('should call reposOwnerRepoMilestonesGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoMilestonesGet
        //instance.reposOwnerRepoMilestonesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoMilestonesNumberDelete', function() {
      it('should call reposOwnerRepoMilestonesNumberDelete successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoMilestonesNumberDelete
        //instance.reposOwnerRepoMilestonesNumberDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoMilestonesNumberGet', function() {
      it('should call reposOwnerRepoMilestonesNumberGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoMilestonesNumberGet
        //instance.reposOwnerRepoMilestonesNumberGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoMilestonesNumberLabelsGet', function() {
      it('should call reposOwnerRepoMilestonesNumberLabelsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoMilestonesNumberLabelsGet
        //instance.reposOwnerRepoMilestonesNumberLabelsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoMilestonesNumberPatch', function() {
      it('should call reposOwnerRepoMilestonesNumberPatch successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoMilestonesNumberPatch
        //instance.reposOwnerRepoMilestonesNumberPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoMilestonesPost', function() {
      it('should call reposOwnerRepoMilestonesPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoMilestonesPost
        //instance.reposOwnerRepoMilestonesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoNotificationsGet', function() {
      it('should call reposOwnerRepoNotificationsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoNotificationsGet
        //instance.reposOwnerRepoNotificationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoNotificationsPut', function() {
      it('should call reposOwnerRepoNotificationsPut successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoNotificationsPut
        //instance.reposOwnerRepoNotificationsPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoPatch', function() {
      it('should call reposOwnerRepoPatch successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoPatch
        //instance.reposOwnerRepoPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoPullsCommentsCommentIdDelete', function() {
      it('should call reposOwnerRepoPullsCommentsCommentIdDelete successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoPullsCommentsCommentIdDelete
        //instance.reposOwnerRepoPullsCommentsCommentIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoPullsCommentsCommentIdGet', function() {
      it('should call reposOwnerRepoPullsCommentsCommentIdGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoPullsCommentsCommentIdGet
        //instance.reposOwnerRepoPullsCommentsCommentIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoPullsCommentsCommentIdPatch', function() {
      it('should call reposOwnerRepoPullsCommentsCommentIdPatch successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoPullsCommentsCommentIdPatch
        //instance.reposOwnerRepoPullsCommentsCommentIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoPullsCommentsGet', function() {
      it('should call reposOwnerRepoPullsCommentsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoPullsCommentsGet
        //instance.reposOwnerRepoPullsCommentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoPullsGet', function() {
      it('should call reposOwnerRepoPullsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoPullsGet
        //instance.reposOwnerRepoPullsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoPullsNumberCommentsGet', function() {
      it('should call reposOwnerRepoPullsNumberCommentsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoPullsNumberCommentsGet
        //instance.reposOwnerRepoPullsNumberCommentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoPullsNumberCommentsPost', function() {
      it('should call reposOwnerRepoPullsNumberCommentsPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoPullsNumberCommentsPost
        //instance.reposOwnerRepoPullsNumberCommentsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoPullsNumberCommitsGet', function() {
      it('should call reposOwnerRepoPullsNumberCommitsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoPullsNumberCommitsGet
        //instance.reposOwnerRepoPullsNumberCommitsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoPullsNumberFilesGet', function() {
      it('should call reposOwnerRepoPullsNumberFilesGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoPullsNumberFilesGet
        //instance.reposOwnerRepoPullsNumberFilesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoPullsNumberGet', function() {
      it('should call reposOwnerRepoPullsNumberGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoPullsNumberGet
        //instance.reposOwnerRepoPullsNumberGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoPullsNumberMergeGet', function() {
      it('should call reposOwnerRepoPullsNumberMergeGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoPullsNumberMergeGet
        //instance.reposOwnerRepoPullsNumberMergeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoPullsNumberMergePut', function() {
      it('should call reposOwnerRepoPullsNumberMergePut successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoPullsNumberMergePut
        //instance.reposOwnerRepoPullsNumberMergePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoPullsNumberPatch', function() {
      it('should call reposOwnerRepoPullsNumberPatch successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoPullsNumberPatch
        //instance.reposOwnerRepoPullsNumberPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoPullsPost', function() {
      it('should call reposOwnerRepoPullsPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoPullsPost
        //instance.reposOwnerRepoPullsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoReadmeGet', function() {
      it('should call reposOwnerRepoReadmeGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoReadmeGet
        //instance.reposOwnerRepoReadmeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoReleasesAssetsIdDelete', function() {
      it('should call reposOwnerRepoReleasesAssetsIdDelete successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoReleasesAssetsIdDelete
        //instance.reposOwnerRepoReleasesAssetsIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoReleasesAssetsIdGet', function() {
      it('should call reposOwnerRepoReleasesAssetsIdGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoReleasesAssetsIdGet
        //instance.reposOwnerRepoReleasesAssetsIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoReleasesAssetsIdPatch', function() {
      it('should call reposOwnerRepoReleasesAssetsIdPatch successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoReleasesAssetsIdPatch
        //instance.reposOwnerRepoReleasesAssetsIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoReleasesGet', function() {
      it('should call reposOwnerRepoReleasesGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoReleasesGet
        //instance.reposOwnerRepoReleasesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoReleasesIdAssetsGet', function() {
      it('should call reposOwnerRepoReleasesIdAssetsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoReleasesIdAssetsGet
        //instance.reposOwnerRepoReleasesIdAssetsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoReleasesIdDelete', function() {
      it('should call reposOwnerRepoReleasesIdDelete successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoReleasesIdDelete
        //instance.reposOwnerRepoReleasesIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoReleasesIdGet', function() {
      it('should call reposOwnerRepoReleasesIdGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoReleasesIdGet
        //instance.reposOwnerRepoReleasesIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoReleasesIdPatch', function() {
      it('should call reposOwnerRepoReleasesIdPatch successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoReleasesIdPatch
        //instance.reposOwnerRepoReleasesIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoReleasesPost', function() {
      it('should call reposOwnerRepoReleasesPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoReleasesPost
        //instance.reposOwnerRepoReleasesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoStargazersGet', function() {
      it('should call reposOwnerRepoStargazersGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoStargazersGet
        //instance.reposOwnerRepoStargazersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoStatsCodeFrequencyGet', function() {
      it('should call reposOwnerRepoStatsCodeFrequencyGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoStatsCodeFrequencyGet
        //instance.reposOwnerRepoStatsCodeFrequencyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoStatsCommitActivityGet', function() {
      it('should call reposOwnerRepoStatsCommitActivityGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoStatsCommitActivityGet
        //instance.reposOwnerRepoStatsCommitActivityGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoStatsContributorsGet', function() {
      it('should call reposOwnerRepoStatsContributorsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoStatsContributorsGet
        //instance.reposOwnerRepoStatsContributorsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoStatsParticipationGet', function() {
      it('should call reposOwnerRepoStatsParticipationGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoStatsParticipationGet
        //instance.reposOwnerRepoStatsParticipationGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoStatsPunchCardGet', function() {
      it('should call reposOwnerRepoStatsPunchCardGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoStatsPunchCardGet
        //instance.reposOwnerRepoStatsPunchCardGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoStatusesRefGet', function() {
      it('should call reposOwnerRepoStatusesRefGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoStatusesRefGet
        //instance.reposOwnerRepoStatusesRefGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoStatusesRefPost', function() {
      it('should call reposOwnerRepoStatusesRefPost successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoStatusesRefPost
        //instance.reposOwnerRepoStatusesRefPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoSubscribersGet', function() {
      it('should call reposOwnerRepoSubscribersGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoSubscribersGet
        //instance.reposOwnerRepoSubscribersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoSubscriptionDelete', function() {
      it('should call reposOwnerRepoSubscriptionDelete successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoSubscriptionDelete
        //instance.reposOwnerRepoSubscriptionDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoSubscriptionGet', function() {
      it('should call reposOwnerRepoSubscriptionGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoSubscriptionGet
        //instance.reposOwnerRepoSubscriptionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoSubscriptionPut', function() {
      it('should call reposOwnerRepoSubscriptionPut successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoSubscriptionPut
        //instance.reposOwnerRepoSubscriptionPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoTagsGet', function() {
      it('should call reposOwnerRepoTagsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoTagsGet
        //instance.reposOwnerRepoTagsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoTeamsGet', function() {
      it('should call reposOwnerRepoTeamsGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoTeamsGet
        //instance.reposOwnerRepoTeamsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reposOwnerRepoWatchersGet', function() {
      it('should call reposOwnerRepoWatchersGet successfully', function(done) {
        //uncomment below and update the code to test reposOwnerRepoWatchersGet
        //instance.reposOwnerRepoWatchersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesGet', function() {
      it('should call repositoriesGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesGet
        //instance.repositoriesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchCodeGet', function() {
      it('should call searchCodeGet successfully', function(done) {
        //uncomment below and update the code to test searchCodeGet
        //instance.searchCodeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchIssuesGet', function() {
      it('should call searchIssuesGet successfully', function(done) {
        //uncomment below and update the code to test searchIssuesGet
        //instance.searchIssuesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchRepositoriesGet', function() {
      it('should call searchRepositoriesGet successfully', function(done) {
        //uncomment below and update the code to test searchRepositoriesGet
        //instance.searchRepositoriesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchUsersGet', function() {
      it('should call searchUsersGet successfully', function(done) {
        //uncomment below and update the code to test searchUsersGet
        //instance.searchUsersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsTeamIdDelete', function() {
      it('should call teamsTeamIdDelete successfully', function(done) {
        //uncomment below and update the code to test teamsTeamIdDelete
        //instance.teamsTeamIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsTeamIdGet', function() {
      it('should call teamsTeamIdGet successfully', function(done) {
        //uncomment below and update the code to test teamsTeamIdGet
        //instance.teamsTeamIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsTeamIdMembersGet', function() {
      it('should call teamsTeamIdMembersGet successfully', function(done) {
        //uncomment below and update the code to test teamsTeamIdMembersGet
        //instance.teamsTeamIdMembersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsTeamIdMembersUsernameDelete', function() {
      it('should call teamsTeamIdMembersUsernameDelete successfully', function(done) {
        //uncomment below and update the code to test teamsTeamIdMembersUsernameDelete
        //instance.teamsTeamIdMembersUsernameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsTeamIdMembersUsernameGet', function() {
      it('should call teamsTeamIdMembersUsernameGet successfully', function(done) {
        //uncomment below and update the code to test teamsTeamIdMembersUsernameGet
        //instance.teamsTeamIdMembersUsernameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsTeamIdMembersUsernamePut', function() {
      it('should call teamsTeamIdMembersUsernamePut successfully', function(done) {
        //uncomment below and update the code to test teamsTeamIdMembersUsernamePut
        //instance.teamsTeamIdMembersUsernamePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsTeamIdMembershipsUsernameDelete', function() {
      it('should call teamsTeamIdMembershipsUsernameDelete successfully', function(done) {
        //uncomment below and update the code to test teamsTeamIdMembershipsUsernameDelete
        //instance.teamsTeamIdMembershipsUsernameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsTeamIdMembershipsUsernameGet', function() {
      it('should call teamsTeamIdMembershipsUsernameGet successfully', function(done) {
        //uncomment below and update the code to test teamsTeamIdMembershipsUsernameGet
        //instance.teamsTeamIdMembershipsUsernameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsTeamIdMembershipsUsernamePut', function() {
      it('should call teamsTeamIdMembershipsUsernamePut successfully', function(done) {
        //uncomment below and update the code to test teamsTeamIdMembershipsUsernamePut
        //instance.teamsTeamIdMembershipsUsernamePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsTeamIdPatch', function() {
      it('should call teamsTeamIdPatch successfully', function(done) {
        //uncomment below and update the code to test teamsTeamIdPatch
        //instance.teamsTeamIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsTeamIdReposGet', function() {
      it('should call teamsTeamIdReposGet successfully', function(done) {
        //uncomment below and update the code to test teamsTeamIdReposGet
        //instance.teamsTeamIdReposGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsTeamIdReposOwnerRepoDelete', function() {
      it('should call teamsTeamIdReposOwnerRepoDelete successfully', function(done) {
        //uncomment below and update the code to test teamsTeamIdReposOwnerRepoDelete
        //instance.teamsTeamIdReposOwnerRepoDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsTeamIdReposOwnerRepoGet', function() {
      it('should call teamsTeamIdReposOwnerRepoGet successfully', function(done) {
        //uncomment below and update the code to test teamsTeamIdReposOwnerRepoGet
        //instance.teamsTeamIdReposOwnerRepoGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsTeamIdReposOwnerRepoPut', function() {
      it('should call teamsTeamIdReposOwnerRepoPut successfully', function(done) {
        //uncomment below and update the code to test teamsTeamIdReposOwnerRepoPut
        //instance.teamsTeamIdReposOwnerRepoPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userEmailsDelete', function() {
      it('should call userEmailsDelete successfully', function(done) {
        //uncomment below and update the code to test userEmailsDelete
        //instance.userEmailsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userEmailsGet', function() {
      it('should call userEmailsGet successfully', function(done) {
        //uncomment below and update the code to test userEmailsGet
        //instance.userEmailsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userEmailsPost', function() {
      it('should call userEmailsPost successfully', function(done) {
        //uncomment below and update the code to test userEmailsPost
        //instance.userEmailsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userFollowersGet', function() {
      it('should call userFollowersGet successfully', function(done) {
        //uncomment below and update the code to test userFollowersGet
        //instance.userFollowersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userFollowingGet', function() {
      it('should call userFollowingGet successfully', function(done) {
        //uncomment below and update the code to test userFollowingGet
        //instance.userFollowingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userFollowingUsernameDelete', function() {
      it('should call userFollowingUsernameDelete successfully', function(done) {
        //uncomment below and update the code to test userFollowingUsernameDelete
        //instance.userFollowingUsernameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userFollowingUsernameGet', function() {
      it('should call userFollowingUsernameGet successfully', function(done) {
        //uncomment below and update the code to test userFollowingUsernameGet
        //instance.userFollowingUsernameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userFollowingUsernamePut', function() {
      it('should call userFollowingUsernamePut successfully', function(done) {
        //uncomment below and update the code to test userFollowingUsernamePut
        //instance.userFollowingUsernamePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGet', function() {
      it('should call userGet successfully', function(done) {
        //uncomment below and update the code to test userGet
        //instance.userGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userIssuesGet', function() {
      it('should call userIssuesGet successfully', function(done) {
        //uncomment below and update the code to test userIssuesGet
        //instance.userIssuesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userKeysGet', function() {
      it('should call userKeysGet successfully', function(done) {
        //uncomment below and update the code to test userKeysGet
        //instance.userKeysGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userKeysKeyIdDelete', function() {
      it('should call userKeysKeyIdDelete successfully', function(done) {
        //uncomment below and update the code to test userKeysKeyIdDelete
        //instance.userKeysKeyIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userKeysKeyIdGet', function() {
      it('should call userKeysKeyIdGet successfully', function(done) {
        //uncomment below and update the code to test userKeysKeyIdGet
        //instance.userKeysKeyIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userKeysPost', function() {
      it('should call userKeysPost successfully', function(done) {
        //uncomment below and update the code to test userKeysPost
        //instance.userKeysPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userOrgsGet', function() {
      it('should call userOrgsGet successfully', function(done) {
        //uncomment below and update the code to test userOrgsGet
        //instance.userOrgsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPatch', function() {
      it('should call userPatch successfully', function(done) {
        //uncomment below and update the code to test userPatch
        //instance.userPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userReposGet', function() {
      it('should call userReposGet successfully', function(done) {
        //uncomment below and update the code to test userReposGet
        //instance.userReposGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userReposPost', function() {
      it('should call userReposPost successfully', function(done) {
        //uncomment below and update the code to test userReposPost
        //instance.userReposPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userStarredGet', function() {
      it('should call userStarredGet successfully', function(done) {
        //uncomment below and update the code to test userStarredGet
        //instance.userStarredGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userStarredOwnerRepoDelete', function() {
      it('should call userStarredOwnerRepoDelete successfully', function(done) {
        //uncomment below and update the code to test userStarredOwnerRepoDelete
        //instance.userStarredOwnerRepoDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userStarredOwnerRepoGet', function() {
      it('should call userStarredOwnerRepoGet successfully', function(done) {
        //uncomment below and update the code to test userStarredOwnerRepoGet
        //instance.userStarredOwnerRepoGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userStarredOwnerRepoPut', function() {
      it('should call userStarredOwnerRepoPut successfully', function(done) {
        //uncomment below and update the code to test userStarredOwnerRepoPut
        //instance.userStarredOwnerRepoPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userSubscriptionsGet', function() {
      it('should call userSubscriptionsGet successfully', function(done) {
        //uncomment below and update the code to test userSubscriptionsGet
        //instance.userSubscriptionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userSubscriptionsOwnerRepoDelete', function() {
      it('should call userSubscriptionsOwnerRepoDelete successfully', function(done) {
        //uncomment below and update the code to test userSubscriptionsOwnerRepoDelete
        //instance.userSubscriptionsOwnerRepoDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userSubscriptionsOwnerRepoGet', function() {
      it('should call userSubscriptionsOwnerRepoGet successfully', function(done) {
        //uncomment below and update the code to test userSubscriptionsOwnerRepoGet
        //instance.userSubscriptionsOwnerRepoGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userSubscriptionsOwnerRepoPut', function() {
      it('should call userSubscriptionsOwnerRepoPut successfully', function(done) {
        //uncomment below and update the code to test userSubscriptionsOwnerRepoPut
        //instance.userSubscriptionsOwnerRepoPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userTeamsGet', function() {
      it('should call userTeamsGet successfully', function(done) {
        //uncomment below and update the code to test userTeamsGet
        //instance.userTeamsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersGet', function() {
      it('should call usersGet successfully', function(done) {
        //uncomment below and update the code to test usersGet
        //instance.usersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUsernameEventsGet', function() {
      it('should call usersUsernameEventsGet successfully', function(done) {
        //uncomment below and update the code to test usersUsernameEventsGet
        //instance.usersUsernameEventsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUsernameEventsOrgsOrgGet', function() {
      it('should call usersUsernameEventsOrgsOrgGet successfully', function(done) {
        //uncomment below and update the code to test usersUsernameEventsOrgsOrgGet
        //instance.usersUsernameEventsOrgsOrgGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUsernameFollowersGet', function() {
      it('should call usersUsernameFollowersGet successfully', function(done) {
        //uncomment below and update the code to test usersUsernameFollowersGet
        //instance.usersUsernameFollowersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUsernameFollowingTargetUserGet', function() {
      it('should call usersUsernameFollowingTargetUserGet successfully', function(done) {
        //uncomment below and update the code to test usersUsernameFollowingTargetUserGet
        //instance.usersUsernameFollowingTargetUserGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUsernameGet', function() {
      it('should call usersUsernameGet successfully', function(done) {
        //uncomment below and update the code to test usersUsernameGet
        //instance.usersUsernameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUsernameGistsGet', function() {
      it('should call usersUsernameGistsGet successfully', function(done) {
        //uncomment below and update the code to test usersUsernameGistsGet
        //instance.usersUsernameGistsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUsernameKeysGet', function() {
      it('should call usersUsernameKeysGet successfully', function(done) {
        //uncomment below and update the code to test usersUsernameKeysGet
        //instance.usersUsernameKeysGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUsernameOrgsGet', function() {
      it('should call usersUsernameOrgsGet successfully', function(done) {
        //uncomment below and update the code to test usersUsernameOrgsGet
        //instance.usersUsernameOrgsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUsernameReceivedEventsGet', function() {
      it('should call usersUsernameReceivedEventsGet successfully', function(done) {
        //uncomment below and update the code to test usersUsernameReceivedEventsGet
        //instance.usersUsernameReceivedEventsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUsernameReceivedEventsPublicGet', function() {
      it('should call usersUsernameReceivedEventsPublicGet successfully', function(done) {
        //uncomment below and update the code to test usersUsernameReceivedEventsPublicGet
        //instance.usersUsernameReceivedEventsPublicGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUsernameReposGet', function() {
      it('should call usersUsernameReposGet successfully', function(done) {
        //uncomment below and update the code to test usersUsernameReposGet
        //instance.usersUsernameReposGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUsernameStarredGet', function() {
      it('should call usersUsernameStarredGet successfully', function(done) {
        //uncomment below and update the code to test usersUsernameStarredGet
        //instance.usersUsernameStarredGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUsernameSubscriptionsGet', function() {
      it('should call usersUsernameSubscriptionsGet successfully', function(done) {
        //uncomment below and update the code to test usersUsernameSubscriptionsGet
        //instance.usersUsernameSubscriptionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
