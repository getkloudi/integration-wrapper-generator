/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Identity from './Identity';

/**
 * The UserWithPrivateToken model module.
 * @module model/UserWithPrivateToken
 * @version 1.0.0
 */
class UserWithPrivateToken {
    /**
     * Constructs a new <code>UserWithPrivateToken</code>.
     * Login to get token
     * @alias module:model/UserWithPrivateToken
     */
    constructor() { 
        
        UserWithPrivateToken.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserWithPrivateToken</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserWithPrivateToken} obj Optional instance to populate.
     * @return {module:model/UserWithPrivateToken} The populated <code>UserWithPrivateToken</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserWithPrivateToken();

            if (data.hasOwnProperty('avatar_url')) {
                obj['avatar_url'] = ApiClient.convertToType(data['avatar_url'], 'String');
            }
            if (data.hasOwnProperty('bio')) {
                obj['bio'] = ApiClient.convertToType(data['bio'], 'String');
            }
            if (data.hasOwnProperty('can_create_group')) {
                obj['can_create_group'] = ApiClient.convertToType(data['can_create_group'], 'String');
            }
            if (data.hasOwnProperty('can_create_project')) {
                obj['can_create_project'] = ApiClient.convertToType(data['can_create_project'], 'String');
            }
            if (data.hasOwnProperty('color_scheme_id')) {
                obj['color_scheme_id'] = ApiClient.convertToType(data['color_scheme_id'], 'String');
            }
            if (data.hasOwnProperty('confirmed_at')) {
                obj['confirmed_at'] = ApiClient.convertToType(data['confirmed_at'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('current_sign_in_at')) {
                obj['current_sign_in_at'] = ApiClient.convertToType(data['current_sign_in_at'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('external')) {
                obj['external'] = ApiClient.convertToType(data['external'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('identities')) {
                obj['identities'] = Identity.constructFromObject(data['identities']);
            }
            if (data.hasOwnProperty('is_admin')) {
                obj['is_admin'] = ApiClient.convertToType(data['is_admin'], 'String');
            }
            if (data.hasOwnProperty('last_sign_in_at')) {
                obj['last_sign_in_at'] = ApiClient.convertToType(data['last_sign_in_at'], 'String');
            }
            if (data.hasOwnProperty('linkedin')) {
                obj['linkedin'] = ApiClient.convertToType(data['linkedin'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('organization')) {
                obj['organization'] = ApiClient.convertToType(data['organization'], 'String');
            }
            if (data.hasOwnProperty('private_token')) {
                obj['private_token'] = ApiClient.convertToType(data['private_token'], 'String');
            }
            if (data.hasOwnProperty('projects_limit')) {
                obj['projects_limit'] = ApiClient.convertToType(data['projects_limit'], 'String');
            }
            if (data.hasOwnProperty('skype')) {
                obj['skype'] = ApiClient.convertToType(data['skype'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('theme_id')) {
                obj['theme_id'] = ApiClient.convertToType(data['theme_id'], 'String');
            }
            if (data.hasOwnProperty('twitter')) {
                obj['twitter'] = ApiClient.convertToType(data['twitter'], 'String');
            }
            if (data.hasOwnProperty('two_factor_enabled')) {
                obj['two_factor_enabled'] = ApiClient.convertToType(data['two_factor_enabled'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('web_url')) {
                obj['web_url'] = ApiClient.convertToType(data['web_url'], 'String');
            }
            if (data.hasOwnProperty('website_url')) {
                obj['website_url'] = ApiClient.convertToType(data['website_url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} avatar_url
 */
UserWithPrivateToken.prototype['avatar_url'] = undefined;

/**
 * @member {String} bio
 */
UserWithPrivateToken.prototype['bio'] = undefined;

/**
 * @member {String} can_create_group
 */
UserWithPrivateToken.prototype['can_create_group'] = undefined;

/**
 * @member {String} can_create_project
 */
UserWithPrivateToken.prototype['can_create_project'] = undefined;

/**
 * @member {String} color_scheme_id
 */
UserWithPrivateToken.prototype['color_scheme_id'] = undefined;

/**
 * @member {String} confirmed_at
 */
UserWithPrivateToken.prototype['confirmed_at'] = undefined;

/**
 * @member {String} created_at
 */
UserWithPrivateToken.prototype['created_at'] = undefined;

/**
 * @member {String} current_sign_in_at
 */
UserWithPrivateToken.prototype['current_sign_in_at'] = undefined;

/**
 * @member {String} email
 */
UserWithPrivateToken.prototype['email'] = undefined;

/**
 * @member {String} external
 */
UserWithPrivateToken.prototype['external'] = undefined;

/**
 * @member {String} id
 */
UserWithPrivateToken.prototype['id'] = undefined;

/**
 * @member {module:model/Identity} identities
 */
UserWithPrivateToken.prototype['identities'] = undefined;

/**
 * @member {String} is_admin
 */
UserWithPrivateToken.prototype['is_admin'] = undefined;

/**
 * @member {String} last_sign_in_at
 */
UserWithPrivateToken.prototype['last_sign_in_at'] = undefined;

/**
 * @member {String} linkedin
 */
UserWithPrivateToken.prototype['linkedin'] = undefined;

/**
 * @member {String} location
 */
UserWithPrivateToken.prototype['location'] = undefined;

/**
 * @member {String} name
 */
UserWithPrivateToken.prototype['name'] = undefined;

/**
 * @member {String} organization
 */
UserWithPrivateToken.prototype['organization'] = undefined;

/**
 * @member {String} private_token
 */
UserWithPrivateToken.prototype['private_token'] = undefined;

/**
 * @member {String} projects_limit
 */
UserWithPrivateToken.prototype['projects_limit'] = undefined;

/**
 * @member {String} skype
 */
UserWithPrivateToken.prototype['skype'] = undefined;

/**
 * @member {String} state
 */
UserWithPrivateToken.prototype['state'] = undefined;

/**
 * @member {String} theme_id
 */
UserWithPrivateToken.prototype['theme_id'] = undefined;

/**
 * @member {String} twitter
 */
UserWithPrivateToken.prototype['twitter'] = undefined;

/**
 * @member {String} two_factor_enabled
 */
UserWithPrivateToken.prototype['two_factor_enabled'] = undefined;

/**
 * @member {String} username
 */
UserWithPrivateToken.prototype['username'] = undefined;

/**
 * @member {String} web_url
 */
UserWithPrivateToken.prototype['web_url'] = undefined;

/**
 * @member {String} website_url
 */
UserWithPrivateToken.prototype['website_url'] = undefined;






export default UserWithPrivateToken;

