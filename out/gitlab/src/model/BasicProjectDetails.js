/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BasicProjectDetails model module.
 * @module model/BasicProjectDetails
 * @version 1.1.0
 */
class BasicProjectDetails {
    /**
     * Constructs a new <code>BasicProjectDetails</code>.
     * Get all projects for admin user
     * @alias module:model/BasicProjectDetails
     */
    constructor() { 
        
        BasicProjectDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BasicProjectDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BasicProjectDetails} obj Optional instance to populate.
     * @return {module:model/BasicProjectDetails} The populated <code>BasicProjectDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BasicProjectDetails();

            if (data.hasOwnProperty('http_url_to_repo')) {
                obj['http_url_to_repo'] = ApiClient.convertToType(data['http_url_to_repo'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('name_with_namespace')) {
                obj['name_with_namespace'] = ApiClient.convertToType(data['name_with_namespace'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('path_with_namespace')) {
                obj['path_with_namespace'] = ApiClient.convertToType(data['path_with_namespace'], 'String');
            }
            if (data.hasOwnProperty('web_url')) {
                obj['web_url'] = ApiClient.convertToType(data['web_url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} http_url_to_repo
 */
BasicProjectDetails.prototype['http_url_to_repo'] = undefined;

/**
 * @member {String} id
 */
BasicProjectDetails.prototype['id'] = undefined;

/**
 * @member {String} name
 */
BasicProjectDetails.prototype['name'] = undefined;

/**
 * @member {String} name_with_namespace
 */
BasicProjectDetails.prototype['name_with_namespace'] = undefined;

/**
 * @member {String} path
 */
BasicProjectDetails.prototype['path'] = undefined;

/**
 * @member {String} path_with_namespace
 */
BasicProjectDetails.prototype['path_with_namespace'] = undefined;

/**
 * @member {String} web_url
 */
BasicProjectDetails.prototype['web_url'] = undefined;






export default BasicProjectDetails;

