/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProjectService model module.
 * @module model/ProjectService
 * @version 1.0.0
 */
class ProjectService {
    /**
     * Constructs a new <code>ProjectService</code>.
     * Get the service settings for project
     * @alias module:model/ProjectService
     */
    constructor() { 
        
        ProjectService.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProjectService</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectService} obj Optional instance to populate.
     * @return {module:model/ProjectService} The populated <code>ProjectService</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectService();

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'String');
            }
            if (data.hasOwnProperty('build_events')) {
                obj['build_events'] = ApiClient.convertToType(data['build_events'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('issues_events')) {
                obj['issues_events'] = ApiClient.convertToType(data['issues_events'], 'String');
            }
            if (data.hasOwnProperty('merge_requests_events')) {
                obj['merge_requests_events'] = ApiClient.convertToType(data['merge_requests_events'], 'String');
            }
            if (data.hasOwnProperty('note_events')) {
                obj['note_events'] = ApiClient.convertToType(data['note_events'], 'String');
            }
            if (data.hasOwnProperty('pipeline_events')) {
                obj['pipeline_events'] = ApiClient.convertToType(data['pipeline_events'], 'String');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], 'String');
            }
            if (data.hasOwnProperty('push_events')) {
                obj['push_events'] = ApiClient.convertToType(data['push_events'], 'String');
            }
            if (data.hasOwnProperty('tag_push_events')) {
                obj['tag_push_events'] = ApiClient.convertToType(data['tag_push_events'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} active
 */
ProjectService.prototype['active'] = undefined;

/**
 * @member {String} build_events
 */
ProjectService.prototype['build_events'] = undefined;

/**
 * @member {String} created_at
 */
ProjectService.prototype['created_at'] = undefined;

/**
 * @member {String} id
 */
ProjectService.prototype['id'] = undefined;

/**
 * @member {String} issues_events
 */
ProjectService.prototype['issues_events'] = undefined;

/**
 * @member {String} merge_requests_events
 */
ProjectService.prototype['merge_requests_events'] = undefined;

/**
 * @member {String} note_events
 */
ProjectService.prototype['note_events'] = undefined;

/**
 * @member {String} pipeline_events
 */
ProjectService.prototype['pipeline_events'] = undefined;

/**
 * @member {String} properties
 */
ProjectService.prototype['properties'] = undefined;

/**
 * @member {String} push_events
 */
ProjectService.prototype['push_events'] = undefined;

/**
 * @member {String} tag_push_events
 */
ProjectService.prototype['tag_push_events'] = undefined;

/**
 * @member {String} title
 */
ProjectService.prototype['title'] = undefined;

/**
 * @member {String} updated_at
 */
ProjectService.prototype['updated_at'] = undefined;






export default ProjectService;

