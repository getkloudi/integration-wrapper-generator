/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RepoCommit from './RepoCommit';
import RepoDiff from './RepoDiff';

/**
 * The MergeRequestDiffFull model module.
 * @module model/MergeRequestDiffFull
 * @version 1.0.0
 */
class MergeRequestDiffFull {
    /**
     * Constructs a new <code>MergeRequestDiffFull</code>.
     * This feature was introduced in GitLab 8.12.
     * @alias module:model/MergeRequestDiffFull
     */
    constructor() { 
        
        MergeRequestDiffFull.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MergeRequestDiffFull</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MergeRequestDiffFull} obj Optional instance to populate.
     * @return {module:model/MergeRequestDiffFull} The populated <code>MergeRequestDiffFull</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MergeRequestDiffFull();

            if (data.hasOwnProperty('base_commit_sha')) {
                obj['base_commit_sha'] = ApiClient.convertToType(data['base_commit_sha'], 'String');
            }
            if (data.hasOwnProperty('commits')) {
                obj['commits'] = RepoCommit.constructFromObject(data['commits']);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('diffs')) {
                obj['diffs'] = RepoDiff.constructFromObject(data['diffs']);
            }
            if (data.hasOwnProperty('head_commit_sha')) {
                obj['head_commit_sha'] = ApiClient.convertToType(data['head_commit_sha'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('merge_request_id')) {
                obj['merge_request_id'] = ApiClient.convertToType(data['merge_request_id'], 'String');
            }
            if (data.hasOwnProperty('real_size')) {
                obj['real_size'] = ApiClient.convertToType(data['real_size'], 'String');
            }
            if (data.hasOwnProperty('start_commit_sha')) {
                obj['start_commit_sha'] = ApiClient.convertToType(data['start_commit_sha'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} base_commit_sha
 */
MergeRequestDiffFull.prototype['base_commit_sha'] = undefined;

/**
 * @member {module:model/RepoCommit} commits
 */
MergeRequestDiffFull.prototype['commits'] = undefined;

/**
 * @member {String} created_at
 */
MergeRequestDiffFull.prototype['created_at'] = undefined;

/**
 * @member {module:model/RepoDiff} diffs
 */
MergeRequestDiffFull.prototype['diffs'] = undefined;

/**
 * @member {String} head_commit_sha
 */
MergeRequestDiffFull.prototype['head_commit_sha'] = undefined;

/**
 * @member {String} id
 */
MergeRequestDiffFull.prototype['id'] = undefined;

/**
 * @member {String} merge_request_id
 */
MergeRequestDiffFull.prototype['merge_request_id'] = undefined;

/**
 * @member {String} real_size
 */
MergeRequestDiffFull.prototype['real_size'] = undefined;

/**
 * @member {String} start_commit_sha
 */
MergeRequestDiffFull.prototype['start_commit_sha'] = undefined;

/**
 * @member {String} state
 */
MergeRequestDiffFull.prototype['state'] = undefined;






export default MergeRequestDiffFull;

