/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RepoDiff model module.
 * @module model/RepoDiff
 * @version 1.1.0
 */
class RepoDiff {
    /**
     * Constructs a new <code>RepoDiff</code>.
     * @alias module:model/RepoDiff
     */
    constructor() { 
        
        RepoDiff.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RepoDiff</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RepoDiff} obj Optional instance to populate.
     * @return {module:model/RepoDiff} The populated <code>RepoDiff</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RepoDiff();

            if (data.hasOwnProperty('a_mode')) {
                obj['a_mode'] = ApiClient.convertToType(data['a_mode'], 'String');
            }
            if (data.hasOwnProperty('b_mode')) {
                obj['b_mode'] = ApiClient.convertToType(data['b_mode'], 'String');
            }
            if (data.hasOwnProperty('deleted_file')) {
                obj['deleted_file'] = ApiClient.convertToType(data['deleted_file'], 'String');
            }
            if (data.hasOwnProperty('diff')) {
                obj['diff'] = ApiClient.convertToType(data['diff'], 'String');
            }
            if (data.hasOwnProperty('new_file')) {
                obj['new_file'] = ApiClient.convertToType(data['new_file'], 'String');
            }
            if (data.hasOwnProperty('new_path')) {
                obj['new_path'] = ApiClient.convertToType(data['new_path'], 'String');
            }
            if (data.hasOwnProperty('old_path')) {
                obj['old_path'] = ApiClient.convertToType(data['old_path'], 'String');
            }
            if (data.hasOwnProperty('renamed_file')) {
                obj['renamed_file'] = ApiClient.convertToType(data['renamed_file'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} a_mode
 */
RepoDiff.prototype['a_mode'] = undefined;

/**
 * @member {String} b_mode
 */
RepoDiff.prototype['b_mode'] = undefined;

/**
 * @member {String} deleted_file
 */
RepoDiff.prototype['deleted_file'] = undefined;

/**
 * @member {String} diff
 */
RepoDiff.prototype['diff'] = undefined;

/**
 * @member {String} new_file
 */
RepoDiff.prototype['new_file'] = undefined;

/**
 * @member {String} new_path
 */
RepoDiff.prototype['new_path'] = undefined;

/**
 * @member {String} old_path
 */
RepoDiff.prototype['old_path'] = undefined;

/**
 * @member {String} renamed_file
 */
RepoDiff.prototype['renamed_file'] = undefined;






export default RepoDiff;

