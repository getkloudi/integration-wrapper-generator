/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import StatusCategory from '../model/StatusCategory';

/**
* WorkflowStatusCategories service.
* @module api/WorkflowStatusCategoriesApi
* @version 1.4.0
*/
export default class WorkflowStatusCategoriesApi {

    /**
    * Constructs a new WorkflowStatusCategoriesApi. 
    * @alias module:api/WorkflowStatusCategoriesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the statuscategoryGet operation.
     * @callback module:api/WorkflowStatusCategoriesApi~statuscategoryGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/StatusCategory>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all status categories
     * @param {Object} cloudid Cloudi of the project
     * @param {module:api/WorkflowStatusCategoriesApi~statuscategoryGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/StatusCategory>}
     */
    statuscategoryGet(cloudid, callback) {
      let postBody = null;
      // verify the required parameter 'cloudid' is set
      if (cloudid === undefined || cloudid === null) {
        throw new Error("Missing the required parameter 'cloudid' when calling statuscategoryGet");
      }

      let pathParams = {
        'cloudid': cloudid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [StatusCategory];
      return this.apiClient.callApi(
        '/statuscategory', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the statuscategoryIdOrKeyGet operation.
     * @callback module:api/WorkflowStatusCategoriesApi~statuscategoryIdOrKeyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StatusCategory} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get status category
     * @param {Object} cloudid Cloudi of the project
     * @param {String} idOrKey The ID or key of the status category.
     * @param {module:api/WorkflowStatusCategoriesApi~statuscategoryIdOrKeyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StatusCategory}
     */
    statuscategoryIdOrKeyGet(cloudid, idOrKey, callback) {
      let postBody = null;
      // verify the required parameter 'cloudid' is set
      if (cloudid === undefined || cloudid === null) {
        throw new Error("Missing the required parameter 'cloudid' when calling statuscategoryIdOrKeyGet");
      }
      // verify the required parameter 'idOrKey' is set
      if (idOrKey === undefined || idOrKey === null) {
        throw new Error("Missing the required parameter 'idOrKey' when calling statuscategoryIdOrKeyGet");
      }

      let pathParams = {
        'cloudid': cloudid,
        'idOrKey': idOrKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = StatusCategory;
      return this.apiClient.callApi(
        '/statuscategory/{idOrKey}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
