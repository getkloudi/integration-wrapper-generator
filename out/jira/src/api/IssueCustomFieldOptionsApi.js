/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BulkCreateCustomFieldOptionRequest from '../model/BulkCreateCustomFieldOptionRequest';
import CustomFieldOption from '../model/CustomFieldOption';
import ErrorCollection from '../model/ErrorCollection';
import PageBeanCustomFieldOptionDetails from '../model/PageBeanCustomFieldOptionDetails';
import UpdateCustomFieldOption from '../model/UpdateCustomFieldOption';

/**
* IssueCustomFieldOptions service.
* @module api/IssueCustomFieldOptionsApi
* @version 1.4.0
*/
export default class IssueCustomFieldOptionsApi {

    /**
    * Constructs a new IssueCustomFieldOptionsApi. 
    * @alias module:api/IssueCustomFieldOptionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the customFieldFieldIdOptionGet operation.
     * @callback module:api/IssueCustomFieldOptionsApi~customFieldFieldIdOptionGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PageBeanCustomFieldOptionDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get options for field
     * @param {Object} cloudid Cloudi of the project
     * @param {Number} fieldId The ID of the custom field. Note: This is the numeric part of the of the field ID. For example, for a field with the ID *customfield\\_10075* use *10075*.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startAt The index of the first item to return in a page of results (page offset). (default to 0)
     * @param {Number} opts.maxResults The maximum number of items to return per page. (default to 1000)
     * @param {module:api/IssueCustomFieldOptionsApi~customFieldFieldIdOptionGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PageBeanCustomFieldOptionDetails}
     */
    customFieldFieldIdOptionGet(cloudid, fieldId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'cloudid' is set
      if (cloudid === undefined || cloudid === null) {
        throw new Error("Missing the required parameter 'cloudid' when calling customFieldFieldIdOptionGet");
      }
      // verify the required parameter 'fieldId' is set
      if (fieldId === undefined || fieldId === null) {
        throw new Error("Missing the required parameter 'fieldId' when calling customFieldFieldIdOptionGet");
      }

      let pathParams = {
        'cloudid': cloudid,
        'fieldId': fieldId
      };
      let queryParams = {
        'startAt': opts['startAt'],
        'maxResults': opts['maxResults']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PageBeanCustomFieldOptionDetails;
      return this.apiClient.callApi(
        '/customField/{fieldId}/option', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customFieldFieldIdOptionPost operation.
     * @callback module:api/IssueCustomFieldOptionsApi~customFieldFieldIdOptionPostCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create custom field options
     * @param {Object} cloudid Cloudi of the project
     * @param {Number} fieldId The ID of the custom field. Note: This is the numeric part of the of the field ID. For example, for a field with the ID *customfield\\_10075* use *10075*.
     * @param {module:model/BulkCreateCustomFieldOptionRequest} body 
     * @param {module:api/IssueCustomFieldOptionsApi~customFieldFieldIdOptionPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    customFieldFieldIdOptionPost(cloudid, fieldId, body, callback) {
      let postBody = body;
      // verify the required parameter 'cloudid' is set
      if (cloudid === undefined || cloudid === null) {
        throw new Error("Missing the required parameter 'cloudid' when calling customFieldFieldIdOptionPost");
      }
      // verify the required parameter 'fieldId' is set
      if (fieldId === undefined || fieldId === null) {
        throw new Error("Missing the required parameter 'fieldId' when calling customFieldFieldIdOptionPost");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling customFieldFieldIdOptionPost");
      }

      let pathParams = {
        'cloudid': cloudid,
        'fieldId': fieldId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/customField/{fieldId}/option', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customFieldFieldIdOptionPut operation.
     * @callback module:api/IssueCustomFieldOptionsApi~customFieldFieldIdOptionPutCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update custom field options
     * @param {Object} cloudid Cloudi of the project
     * @param {Number} fieldId The ID of the custom field. Note: This is the numeric part of the of the field ID. For example, for a field with the ID *customfield\\_10075* use *10075*.
     * @param {module:model/UpdateCustomFieldOption} body 
     * @param {module:api/IssueCustomFieldOptionsApi~customFieldFieldIdOptionPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    customFieldFieldIdOptionPut(cloudid, fieldId, body, callback) {
      let postBody = body;
      // verify the required parameter 'cloudid' is set
      if (cloudid === undefined || cloudid === null) {
        throw new Error("Missing the required parameter 'cloudid' when calling customFieldFieldIdOptionPut");
      }
      // verify the required parameter 'fieldId' is set
      if (fieldId === undefined || fieldId === null) {
        throw new Error("Missing the required parameter 'fieldId' when calling customFieldFieldIdOptionPut");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling customFieldFieldIdOptionPut");
      }

      let pathParams = {
        'cloudid': cloudid,
        'fieldId': fieldId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/customField/{fieldId}/option', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customFieldOptionIdGet operation.
     * @callback module:api/IssueCustomFieldOptionsApi~customFieldOptionIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomFieldOption} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get custom field option
     * @param {Object} cloudid Cloudi of the project
     * @param {String} id The ID of the custom field option.
     * @param {module:api/IssueCustomFieldOptionsApi~customFieldOptionIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomFieldOption}
     */
    customFieldOptionIdGet(cloudid, id, callback) {
      let postBody = null;
      // verify the required parameter 'cloudid' is set
      if (cloudid === undefined || cloudid === null) {
        throw new Error("Missing the required parameter 'cloudid' when calling customFieldOptionIdGet");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling customFieldOptionIdGet");
      }

      let pathParams = {
        'cloudid': cloudid,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomFieldOption;
      return this.apiClient.callApi(
        '/customFieldOption/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
