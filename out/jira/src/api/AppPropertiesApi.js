/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import EntityProperty from '../model/EntityProperty';
import OperationMessage from '../model/OperationMessage';
import PropertyKeys from '../model/PropertyKeys';

/**
* AppProperties service.
* @module api/AppPropertiesApi
* @version 1.4.0
*/
export default class AppPropertiesApi {

    /**
    * Constructs a new AppPropertiesApi. 
    * @alias module:api/AppPropertiesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the restAtlassianConnect1AddonsAddonKeyPropertiesGet operation.
     * @callback module:api/AppPropertiesApi~restAtlassianConnect1AddonsAddonKeyPropertiesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PropertyKeys} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get app properties
     * @param {Object} cloudid Cloudi of the project
     * @param {String} addonKey The key of the app, as defined in its descriptor.
     * @param {module:api/AppPropertiesApi~restAtlassianConnect1AddonsAddonKeyPropertiesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PropertyKeys}
     */
    restAtlassianConnect1AddonsAddonKeyPropertiesGet(cloudid, addonKey, callback) {
      let postBody = null;
      // verify the required parameter 'cloudid' is set
      if (cloudid === undefined || cloudid === null) {
        throw new Error("Missing the required parameter 'cloudid' when calling restAtlassianConnect1AddonsAddonKeyPropertiesGet");
      }
      // verify the required parameter 'addonKey' is set
      if (addonKey === undefined || addonKey === null) {
        throw new Error("Missing the required parameter 'addonKey' when calling restAtlassianConnect1AddonsAddonKeyPropertiesGet");
      }

      let pathParams = {
        'cloudid': cloudid,
        'addonKey': addonKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PropertyKeys;
      return this.apiClient.callApi(
        '/rest/atlassian-connect/1/addons/{addonKey}/properties', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyDelete operation.
     * @callback module:api/AppPropertiesApi~restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete app property
     * @param {Object} cloudid Cloudi of the project
     * @param {String} addonKey The key of the app, as defined in its descriptor.
     * @param {String} propertyKey The key of the property.
     * @param {module:api/AppPropertiesApi~restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyDelete(cloudid, addonKey, propertyKey, callback) {
      let postBody = null;
      // verify the required parameter 'cloudid' is set
      if (cloudid === undefined || cloudid === null) {
        throw new Error("Missing the required parameter 'cloudid' when calling restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyDelete");
      }
      // verify the required parameter 'addonKey' is set
      if (addonKey === undefined || addonKey === null) {
        throw new Error("Missing the required parameter 'addonKey' when calling restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyDelete");
      }
      // verify the required parameter 'propertyKey' is set
      if (propertyKey === undefined || propertyKey === null) {
        throw new Error("Missing the required parameter 'propertyKey' when calling restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyDelete");
      }

      let pathParams = {
        'cloudid': cloudid,
        'addonKey': addonKey,
        'propertyKey': propertyKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/rest/atlassian-connect/1/addons/{addonKey}/properties/{propertyKey}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyGet operation.
     * @callback module:api/AppPropertiesApi~restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EntityProperty} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get app property
     * @param {Object} cloudid Cloudi of the project
     * @param {String} addonKey The key of the app, as defined in its descriptor.
     * @param {String} propertyKey The key of the property.
     * @param {module:api/AppPropertiesApi~restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EntityProperty}
     */
    restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyGet(cloudid, addonKey, propertyKey, callback) {
      let postBody = null;
      // verify the required parameter 'cloudid' is set
      if (cloudid === undefined || cloudid === null) {
        throw new Error("Missing the required parameter 'cloudid' when calling restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyGet");
      }
      // verify the required parameter 'addonKey' is set
      if (addonKey === undefined || addonKey === null) {
        throw new Error("Missing the required parameter 'addonKey' when calling restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyGet");
      }
      // verify the required parameter 'propertyKey' is set
      if (propertyKey === undefined || propertyKey === null) {
        throw new Error("Missing the required parameter 'propertyKey' when calling restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyGet");
      }

      let pathParams = {
        'cloudid': cloudid,
        'addonKey': addonKey,
        'propertyKey': propertyKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EntityProperty;
      return this.apiClient.callApi(
        '/rest/atlassian-connect/1/addons/{addonKey}/properties/{propertyKey}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyPut operation.
     * @callback module:api/AppPropertiesApi~restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationMessage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set app property
     * @param {Object} cloudid Cloudi of the project
     * @param {String} addonKey The key of the app, as defined in its descriptor.
     * @param {String} propertyKey The key of the property.
     * @param {Object} body 
     * @param {module:api/AppPropertiesApi~restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationMessage}
     */
    restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyPut(cloudid, addonKey, propertyKey, body, callback) {
      let postBody = body;
      // verify the required parameter 'cloudid' is set
      if (cloudid === undefined || cloudid === null) {
        throw new Error("Missing the required parameter 'cloudid' when calling restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyPut");
      }
      // verify the required parameter 'addonKey' is set
      if (addonKey === undefined || addonKey === null) {
        throw new Error("Missing the required parameter 'addonKey' when calling restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyPut");
      }
      // verify the required parameter 'propertyKey' is set
      if (propertyKey === undefined || propertyKey === null) {
        throw new Error("Missing the required parameter 'propertyKey' when calling restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyPut");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyPut");
      }

      let pathParams = {
        'cloudid': cloudid,
        'addonKey': addonKey,
        'propertyKey': propertyKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationMessage;
      return this.apiClient.callApi(
        '/rest/atlassian-connect/1/addons/{addonKey}/properties/{propertyKey}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
