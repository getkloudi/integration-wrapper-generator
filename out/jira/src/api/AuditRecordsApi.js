/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AuditRecords from '../model/AuditRecords';

/**
* AuditRecords service.
* @module api/AuditRecordsApi
* @version 1.4.0
*/
export default class AuditRecordsApi {

    /**
    * Constructs a new AuditRecordsApi. 
    * @alias module:api/AuditRecordsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the auditingRecordGet operation.
     * @callback module:api/AuditRecordsApi~auditingRecordGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AuditRecords} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get audit records
     * @param {Object} cloudid Cloudi of the project
     * @param {Object} opts Optional parameters
     * @param {Number} opts.offset The number of records to skip before returning the first result. (default to 0)
     * @param {Number} opts.limit The maximum number of results to return. (default to 1000)
     * @param {String} opts.filter The query string.
     * @param {Date} opts.from The date and time on or after which returned audit records must have been created. If `to` is provided `from` must be before `to` or no audit records are returned.
     * @param {Date} opts.to The date and time on or before which returned audit results must have been created. If `from` is provided `to` must be after `from` or no audit records are returned.
     * @param {module:api/AuditRecordsApi~auditingRecordGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AuditRecords}
     */
    auditingRecordGet(cloudid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'cloudid' is set
      if (cloudid === undefined || cloudid === null) {
        throw new Error("Missing the required parameter 'cloudid' when calling auditingRecordGet");
      }

      let pathParams = {
        'cloudid': cloudid
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'filter': opts['filter'],
        'from': opts['from'],
        'to': opts['to']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AuditRecords;
      return this.apiClient.callApi(
        '/auditing/record', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
