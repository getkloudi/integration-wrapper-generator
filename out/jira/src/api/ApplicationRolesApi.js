/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApplicationRole from '../model/ApplicationRole';

/**
* ApplicationRoles service.
* @module api/ApplicationRolesApi
* @version 1.4.0
*/
export default class ApplicationRolesApi {

    /**
    * Constructs a new ApplicationRolesApi. 
    * @alias module:api/ApplicationRolesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the applicationroleGet operation.
     * @callback module:api/ApplicationRolesApi~applicationroleGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ApplicationRole>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all application roles
     * @param {Object} cloudid Cloudi of the project
     * @param {module:api/ApplicationRolesApi~applicationroleGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ApplicationRole>}
     */
    applicationroleGet(cloudid, callback) {
      let postBody = null;
      // verify the required parameter 'cloudid' is set
      if (cloudid === undefined || cloudid === null) {
        throw new Error("Missing the required parameter 'cloudid' when calling applicationroleGet");
      }

      let pathParams = {
        'cloudid': cloudid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ApplicationRole];
      return this.apiClient.callApi(
        '/applicationrole', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationroleKeyGet operation.
     * @callback module:api/ApplicationRolesApi~applicationroleKeyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationRole} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get application role
     * @param {Object} cloudid Cloudi of the project
     * @param {String} key The key of the application role. Use the [Get all application roles](#api-rest-api-3-applicationrole-get) operation to get the key for each application role.
     * @param {module:api/ApplicationRolesApi~applicationroleKeyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationRole}
     */
    applicationroleKeyGet(cloudid, key, callback) {
      let postBody = null;
      // verify the required parameter 'cloudid' is set
      if (cloudid === undefined || cloudid === null) {
        throw new Error("Missing the required parameter 'cloudid' when calling applicationroleKeyGet");
      }
      // verify the required parameter 'key' is set
      if (key === undefined || key === null) {
        throw new Error("Missing the required parameter 'key' when calling applicationroleKeyGet");
      }

      let pathParams = {
        'cloudid': cloudid,
        'key': key
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationRole;
      return this.apiClient.callApi(
        '/applicationrole/{key}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
