/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Priority from '../model/Priority';

/**
* IssuePriorities service.
* @module api/IssuePrioritiesApi
* @version 1.4.0
*/
export default class IssuePrioritiesApi {

    /**
    * Constructs a new IssuePrioritiesApi. 
    * @alias module:api/IssuePrioritiesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the priorityGet operation.
     * @callback module:api/IssuePrioritiesApi~priorityGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Priority>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get priorities
     * @param {Object} cloudid Cloudi of the project
     * @param {module:api/IssuePrioritiesApi~priorityGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Priority>}
     */
    priorityGet(cloudid, callback) {
      let postBody = null;
      // verify the required parameter 'cloudid' is set
      if (cloudid === undefined || cloudid === null) {
        throw new Error("Missing the required parameter 'cloudid' when calling priorityGet");
      }

      let pathParams = {
        'cloudid': cloudid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Priority];
      return this.apiClient.callApi(
        '/priority', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the priorityIdGet operation.
     * @callback module:api/IssuePrioritiesApi~priorityIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Priority} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get priority
     * @param {Object} cloudid Cloudi of the project
     * @param {String} id The ID of the issue priority.
     * @param {module:api/IssuePrioritiesApi~priorityIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Priority}
     */
    priorityIdGet(cloudid, id, callback) {
      let postBody = null;
      // verify the required parameter 'cloudid' is set
      if (cloudid === undefined || cloudid === null) {
        throw new Error("Missing the required parameter 'cloudid' when calling priorityIdGet");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling priorityIdGet");
      }

      let pathParams = {
        'cloudid': cloudid,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Priority;
      return this.apiClient.callApi(
        '/priority/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
