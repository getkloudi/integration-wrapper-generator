/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FieldReferenceData model module.
 * @module model/FieldReferenceData
 * @version 1.4.0
 */
class FieldReferenceData {
    /**
     * Constructs a new <code>FieldReferenceData</code>.
     * Details of a field that can be used in advanced searches.
     * @alias module:model/FieldReferenceData
     */
    constructor() { 
        
        FieldReferenceData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FieldReferenceData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FieldReferenceData} obj Optional instance to populate.
     * @return {module:model/FieldReferenceData} The populated <code>FieldReferenceData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FieldReferenceData();

            if (data.hasOwnProperty('auto')) {
                obj['auto'] = ApiClient.convertToType(data['auto'], 'String');
            }
            if (data.hasOwnProperty('cfid')) {
                obj['cfid'] = ApiClient.convertToType(data['cfid'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('operators')) {
                obj['operators'] = ApiClient.convertToType(data['operators'], ['String']);
            }
            if (data.hasOwnProperty('orderable')) {
                obj['orderable'] = ApiClient.convertToType(data['orderable'], 'String');
            }
            if (data.hasOwnProperty('searchable')) {
                obj['searchable'] = ApiClient.convertToType(data['searchable'], 'String');
            }
            if (data.hasOwnProperty('types')) {
                obj['types'] = ApiClient.convertToType(data['types'], ['String']);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Whether the field provide auto-complete suggestions.
 * @member {module:model/FieldReferenceData.AutoEnum} auto
 */
FieldReferenceData.prototype['auto'] = undefined;

/**
 * If the item is a custom field, the ID of the custom field.
 * @member {String} cfid
 */
FieldReferenceData.prototype['cfid'] = undefined;

/**
 * The display name of the field.
 * @member {String} displayName
 */
FieldReferenceData.prototype['displayName'] = undefined;

/**
 * The valid search operators for the field.
 * @member {Array.<String>} operators
 */
FieldReferenceData.prototype['operators'] = undefined;

/**
 * Whether the field can be used in a query's `ORDER BY` clause.
 * @member {module:model/FieldReferenceData.OrderableEnum} orderable
 */
FieldReferenceData.prototype['orderable'] = undefined;

/**
 * Whether the content of this field can be searched.
 * @member {module:model/FieldReferenceData.SearchableEnum} searchable
 */
FieldReferenceData.prototype['searchable'] = undefined;

/**
 * The data types of items in the field.
 * @member {Array.<String>} types
 */
FieldReferenceData.prototype['types'] = undefined;

/**
 * The field identifier.
 * @member {String} value
 */
FieldReferenceData.prototype['value'] = undefined;





/**
 * Allowed values for the <code>auto</code> property.
 * @enum {String}
 * @readonly
 */
FieldReferenceData['AutoEnum'] = {

    /**
     * value: "true"
     * @const
     */
    "true": "true",

    /**
     * value: "false"
     * @const
     */
    "false": "false"
};


/**
 * Allowed values for the <code>orderable</code> property.
 * @enum {String}
 * @readonly
 */
FieldReferenceData['OrderableEnum'] = {

    /**
     * value: "true"
     * @const
     */
    "true": "true",

    /**
     * value: "false"
     * @const
     */
    "false": "false"
};


/**
 * Allowed values for the <code>searchable</code> property.
 * @enum {String}
 * @readonly
 */
FieldReferenceData['SearchableEnum'] = {

    /**
     * value: "true"
     * @const
     */
    "true": "true",

    /**
     * value: "false"
     * @const
     */
    "false": "false"
};



export default FieldReferenceData;

