/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AvatarUrlsBean from './AvatarUrlsBean';
import IssueTypeIssueCreateMetadata from './IssueTypeIssueCreateMetadata';

/**
 * The ProjectIssueCreateMetadata model module.
 * @module model/ProjectIssueCreateMetadata
 * @version 1.4.0
 */
class ProjectIssueCreateMetadata {
    /**
     * Constructs a new <code>ProjectIssueCreateMetadata</code>.
     * Details of the issue creation metadata for a project.
     * @alias module:model/ProjectIssueCreateMetadata
     */
    constructor() { 
        
        ProjectIssueCreateMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProjectIssueCreateMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectIssueCreateMetadata} obj Optional instance to populate.
     * @return {module:model/ProjectIssueCreateMetadata} The populated <code>ProjectIssueCreateMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectIssueCreateMetadata();

            if (data.hasOwnProperty('avatarUrls')) {
                obj['avatarUrls'] = ApiClient.convertToType(data['avatarUrls'], AvatarUrlsBean);
            }
            if (data.hasOwnProperty('expand')) {
                obj['expand'] = ApiClient.convertToType(data['expand'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('issuetypes')) {
                obj['issuetypes'] = ApiClient.convertToType(data['issuetypes'], [IssueTypeIssueCreateMetadata]);
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('self')) {
                obj['self'] = ApiClient.convertToType(data['self'], 'String');
            }
        }
        return obj;
    }


}

/**
 * List of the project's avatars, returning the avatar size and associated URL.
 * @member {module:model/AvatarUrlsBean} avatarUrls
 */
ProjectIssueCreateMetadata.prototype['avatarUrls'] = undefined;

/**
 * Expand options that include additional project issue create metadata details in the response.
 * @member {String} expand
 */
ProjectIssueCreateMetadata.prototype['expand'] = undefined;

/**
 * The ID of the project.
 * @member {String} id
 */
ProjectIssueCreateMetadata.prototype['id'] = undefined;

/**
 * List of the issue types supported by the project.
 * @member {Array.<module:model/IssueTypeIssueCreateMetadata>} issuetypes
 */
ProjectIssueCreateMetadata.prototype['issuetypes'] = undefined;

/**
 * The key of the project.
 * @member {String} key
 */
ProjectIssueCreateMetadata.prototype['key'] = undefined;

/**
 * The name of the project.
 * @member {String} name
 */
ProjectIssueCreateMetadata.prototype['name'] = undefined;

/**
 * The URL of the project.
 * @member {String} self
 */
ProjectIssueCreateMetadata.prototype['self'] = undefined;






export default ProjectIssueCreateMetadata;

