/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FieldDetails from './FieldDetails';
import GroupName from './GroupName';
import ProjectRole from './ProjectRole';
import UserDetails from './UserDetails';

/**
 * The EventNotification model module.
 * @module model/EventNotification
 * @version 1.4.0
 */
class EventNotification {
    /**
     * Constructs a new <code>EventNotification</code>.
     * Details about a notification associated with an event.
     * @alias module:model/EventNotification
     */
    constructor() { 
        
        EventNotification.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventNotification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventNotification} obj Optional instance to populate.
     * @return {module:model/EventNotification} The populated <code>EventNotification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventNotification();

            if (data.hasOwnProperty('emailAddress')) {
                obj['emailAddress'] = ApiClient.convertToType(data['emailAddress'], 'String');
            }
            if (data.hasOwnProperty('expand')) {
                obj['expand'] = ApiClient.convertToType(data['expand'], 'String');
            }
            if (data.hasOwnProperty('field')) {
                obj['field'] = ApiClient.convertToType(data['field'], FieldDetails);
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], GroupName);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('notificationType')) {
                obj['notificationType'] = ApiClient.convertToType(data['notificationType'], 'String');
            }
            if (data.hasOwnProperty('parameter')) {
                obj['parameter'] = ApiClient.convertToType(data['parameter'], 'String');
            }
            if (data.hasOwnProperty('projectRole')) {
                obj['projectRole'] = ApiClient.convertToType(data['projectRole'], ProjectRole);
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], UserDetails);
            }
        }
        return obj;
    }


}

/**
 * The email address.
 * @member {String} emailAddress
 */
EventNotification.prototype['emailAddress'] = undefined;

/**
 * Expand options that include additional event notification details in the response.
 * @member {String} expand
 */
EventNotification.prototype['expand'] = undefined;

/**
 * The custom user or group field.
 * @member {module:model/FieldDetails} field
 */
EventNotification.prototype['field'] = undefined;

/**
 * The specified group.
 * @member {module:model/GroupName} group
 */
EventNotification.prototype['group'] = undefined;

/**
 * The ID of the notification.
 * @member {Number} id
 */
EventNotification.prototype['id'] = undefined;

/**
 * Identifies the recipients of the notification.
 * @member {module:model/EventNotification.NotificationTypeEnum} notificationType
 */
EventNotification.prototype['notificationType'] = undefined;

/**
 * The value of the `notificationType`:   *  `User` The `parameter` is the user account ID.  *  `Group` The `parameter` is the group name.  *  `ProjectRole` The `parameter` is the project role ID.  *  `UserCustomField` The `parameter` is the ID of the custom field.  *  `GroupCustomField` The `parameter` is the ID of the custom field.
 * @member {String} parameter
 */
EventNotification.prototype['parameter'] = undefined;

/**
 * The specified project role.
 * @member {module:model/ProjectRole} projectRole
 */
EventNotification.prototype['projectRole'] = undefined;

/**
 * The specified user.
 * @member {module:model/UserDetails} user
 */
EventNotification.prototype['user'] = undefined;





/**
 * Allowed values for the <code>notificationType</code> property.
 * @enum {String}
 * @readonly
 */
EventNotification['NotificationTypeEnum'] = {

    /**
     * value: "CurrentAssignee"
     * @const
     */
    "CurrentAssignee": "CurrentAssignee",

    /**
     * value: "Reporter"
     * @const
     */
    "Reporter": "Reporter",

    /**
     * value: "CurrentUser"
     * @const
     */
    "CurrentUser": "CurrentUser",

    /**
     * value: "ProjectLead"
     * @const
     */
    "ProjectLead": "ProjectLead",

    /**
     * value: "ComponentLead"
     * @const
     */
    "ComponentLead": "ComponentLead",

    /**
     * value: "User"
     * @const
     */
    "User": "User",

    /**
     * value: "Group"
     * @const
     */
    "Group": "Group",

    /**
     * value: "ProjectRole"
     * @const
     */
    "ProjectRole": "ProjectRole",

    /**
     * value: "EmailAddress"
     * @const
     */
    "EmailAddress": "EmailAddress",

    /**
     * value: "AllWatchers"
     * @const
     */
    "AllWatchers": "AllWatchers",

    /**
     * value: "UserCustomField"
     * @const
     */
    "UserCustomField": "UserCustomField",

    /**
     * value: "GroupCustomField"
     * @const
     */
    "GroupCustomField": "GroupCustomField"
};



export default EventNotification;

