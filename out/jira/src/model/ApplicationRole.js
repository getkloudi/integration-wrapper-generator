/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApplicationRole model module.
 * @module model/ApplicationRole
 * @version 1.4.0
 */
class ApplicationRole {
    /**
     * Constructs a new <code>ApplicationRole</code>.
     * Details of an application role.
     * @alias module:model/ApplicationRole
     */
    constructor() { 
        
        ApplicationRole.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplicationRole</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationRole} obj Optional instance to populate.
     * @return {module:model/ApplicationRole} The populated <code>ApplicationRole</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationRole();

            if (data.hasOwnProperty('defaultGroups')) {
                obj['defaultGroups'] = ApiClient.convertToType(data['defaultGroups'], ['String']);
            }
            if (data.hasOwnProperty('defined')) {
                obj['defined'] = ApiClient.convertToType(data['defined'], 'Boolean');
            }
            if (data.hasOwnProperty('groups')) {
                obj['groups'] = ApiClient.convertToType(data['groups'], ['String']);
            }
            if (data.hasOwnProperty('hasUnlimitedSeats')) {
                obj['hasUnlimitedSeats'] = ApiClient.convertToType(data['hasUnlimitedSeats'], 'Boolean');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('numberOfSeats')) {
                obj['numberOfSeats'] = ApiClient.convertToType(data['numberOfSeats'], 'Number');
            }
            if (data.hasOwnProperty('platform')) {
                obj['platform'] = ApiClient.convertToType(data['platform'], 'Boolean');
            }
            if (data.hasOwnProperty('remainingSeats')) {
                obj['remainingSeats'] = ApiClient.convertToType(data['remainingSeats'], 'Number');
            }
            if (data.hasOwnProperty('selectedByDefault')) {
                obj['selectedByDefault'] = ApiClient.convertToType(data['selectedByDefault'], 'Boolean');
            }
            if (data.hasOwnProperty('userCount')) {
                obj['userCount'] = ApiClient.convertToType(data['userCount'], 'Number');
            }
            if (data.hasOwnProperty('userCountDescription')) {
                obj['userCountDescription'] = ApiClient.convertToType(data['userCountDescription'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The groups that are granted default access for this application role.
 * @member {Array.<String>} defaultGroups
 */
ApplicationRole.prototype['defaultGroups'] = undefined;

/**
 * Deprecated.
 * @member {Boolean} defined
 */
ApplicationRole.prototype['defined'] = undefined;

/**
 * The groups associated with the application role.
 * @member {Array.<String>} groups
 */
ApplicationRole.prototype['groups'] = undefined;

/**
 * @member {Boolean} hasUnlimitedSeats
 */
ApplicationRole.prototype['hasUnlimitedSeats'] = undefined;

/**
 * The key of the application role.
 * @member {String} key
 */
ApplicationRole.prototype['key'] = undefined;

/**
 * The display name of the application role.
 * @member {String} name
 */
ApplicationRole.prototype['name'] = undefined;

/**
 * The maximum count of users on your license.
 * @member {Number} numberOfSeats
 */
ApplicationRole.prototype['numberOfSeats'] = undefined;

/**
 * Indicates if the application role belongs to Jira platform (`jira-core`).
 * @member {Boolean} platform
 */
ApplicationRole.prototype['platform'] = undefined;

/**
 * The count of users remaining on your license.
 * @member {Number} remainingSeats
 */
ApplicationRole.prototype['remainingSeats'] = undefined;

/**
 * Determines whether this application role should be selected by default on user creation.
 * @member {Boolean} selectedByDefault
 */
ApplicationRole.prototype['selectedByDefault'] = undefined;

/**
 * The number of users counting against your license.
 * @member {Number} userCount
 */
ApplicationRole.prototype['userCount'] = undefined;

/**
 * The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.
 * @member {String} userCountDescription
 */
ApplicationRole.prototype['userCountDescription'] = undefined;






export default ApplicationRole;

