/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IssueTypeCreateBean model module.
 * @module model/IssueTypeCreateBean
 * @version 1.4.0
 */
class IssueTypeCreateBean {
    /**
     * Constructs a new <code>IssueTypeCreateBean</code>.
     * @alias module:model/IssueTypeCreateBean
     * @param name {String} The unique name for the issue type. The maximum length is 60 characters.
     */
    constructor(name) { 
        
        IssueTypeCreateBean.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>IssueTypeCreateBean</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IssueTypeCreateBean} obj Optional instance to populate.
     * @return {module:model/IssueTypeCreateBean} The populated <code>IssueTypeCreateBean</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IssueTypeCreateBean();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The description of the issue type.
 * @member {String} description
 */
IssueTypeCreateBean.prototype['description'] = undefined;

/**
 * The unique name for the issue type. The maximum length is 60 characters.
 * @member {String} name
 */
IssueTypeCreateBean.prototype['name'] = undefined;

/**
 * Whether the issue type is `subtype` or `standard`. Defaults to `standard`.
 * @member {module:model/IssueTypeCreateBean.TypeEnum} type
 */
IssueTypeCreateBean.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
IssueTypeCreateBean['TypeEnum'] = {

    /**
     * value: "subtask"
     * @const
     */
    "subtask": "subtask",

    /**
     * value: "standard"
     * @const
     */
    "standard": "standard"
};



export default IssueTypeCreateBean;

