/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Icon from './Icon';
import Status from './Status';

/**
 * The RemoteObject model module.
 * @module model/RemoteObject
 * @version 1.4.0
 */
class RemoteObject {
    /**
     * Constructs a new <code>RemoteObject</code>.
     * The linked item.
     * @alias module:model/RemoteObject
     * @param title {String} The title of the item.
     * @param url {String} The URL of the item.
     */
    constructor(title, url) { 
        
        RemoteObject.initialize(this, title, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, title, url) { 
        obj['title'] = title;
        obj['url'] = url;
    }

    /**
     * Constructs a <code>RemoteObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RemoteObject} obj Optional instance to populate.
     * @return {module:model/RemoteObject} The populated <code>RemoteObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RemoteObject();

            if (data.hasOwnProperty('icon')) {
                obj['icon'] = ApiClient.convertToType(data['icon'], Icon);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], Status);
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = ApiClient.convertToType(data['summary'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Details of the icon for the item. If no icon is defined, the default link icon is used in Jira.
 * @member {module:model/Icon} icon
 */
RemoteObject.prototype['icon'] = undefined;

/**
 * The status of the item.
 * @member {module:model/Status} status
 */
RemoteObject.prototype['status'] = undefined;

/**
 * The summary details of the item.
 * @member {String} summary
 */
RemoteObject.prototype['summary'] = undefined;

/**
 * The title of the item.
 * @member {String} title
 */
RemoteObject.prototype['title'] = undefined;

/**
 * The URL of the item.
 * @member {String} url
 */
RemoteObject.prototype['url'] = undefined;






export default RemoteObject;

