/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IssueTypeSchemeMapping model module.
 * @module model/IssueTypeSchemeMapping
 * @version 1.4.0
 */
class IssueTypeSchemeMapping {
    /**
     * Constructs a new <code>IssueTypeSchemeMapping</code>.
     * Issue type scheme item.
     * @alias module:model/IssueTypeSchemeMapping
     * @param issueTypeId {String} The ID of the issue type.
     * @param issueTypeSchemeId {String} The ID of the issue type scheme.
     */
    constructor(issueTypeId, issueTypeSchemeId) { 
        
        IssueTypeSchemeMapping.initialize(this, issueTypeId, issueTypeSchemeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, issueTypeId, issueTypeSchemeId) { 
        obj['issueTypeId'] = issueTypeId;
        obj['issueTypeSchemeId'] = issueTypeSchemeId;
    }

    /**
     * Constructs a <code>IssueTypeSchemeMapping</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IssueTypeSchemeMapping} obj Optional instance to populate.
     * @return {module:model/IssueTypeSchemeMapping} The populated <code>IssueTypeSchemeMapping</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IssueTypeSchemeMapping();

            if (data.hasOwnProperty('issueTypeId')) {
                obj['issueTypeId'] = ApiClient.convertToType(data['issueTypeId'], 'String');
            }
            if (data.hasOwnProperty('issueTypeSchemeId')) {
                obj['issueTypeSchemeId'] = ApiClient.convertToType(data['issueTypeSchemeId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The ID of the issue type.
 * @member {String} issueTypeId
 */
IssueTypeSchemeMapping.prototype['issueTypeId'] = undefined;

/**
 * The ID of the issue type scheme.
 * @member {String} issueTypeSchemeId
 */
IssueTypeSchemeMapping.prototype['issueTypeSchemeId'] = undefined;






export default IssueTypeSchemeMapping;

