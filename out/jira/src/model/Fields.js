/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IssueTypeDetails from './IssueTypeDetails';
import Priority from './Priority';
import StatusDetails from './StatusDetails';
import UserDetails from './UserDetails';

/**
 * The Fields model module.
 * @module model/Fields
 * @version 1.4.0
 */
class Fields {
    /**
     * Constructs a new <code>Fields</code>.
     * Key fields from the linked issue.
     * @alias module:model/Fields
     */
    constructor() { 
        
        Fields.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Fields</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Fields} obj Optional instance to populate.
     * @return {module:model/Fields} The populated <code>Fields</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Fields();

            if (data.hasOwnProperty('assignee')) {
                obj['assignee'] = ApiClient.convertToType(data['assignee'], UserDetails);
            }
            if (data.hasOwnProperty('issueType')) {
                obj['issueType'] = ApiClient.convertToType(data['issueType'], IssueTypeDetails);
            }
            if (data.hasOwnProperty('issuetype')) {
                obj['issuetype'] = IssueTypeDetails.constructFromObject(data['issuetype']);
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], Priority);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], StatusDetails);
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = ApiClient.convertToType(data['summary'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The assignee of the linked issue.
 * @member {module:model/UserDetails} assignee
 */
Fields.prototype['assignee'] = undefined;

/**
 * The type of the linked issue.
 * @member {module:model/IssueTypeDetails} issueType
 */
Fields.prototype['issueType'] = undefined;

/**
 * @member {module:model/IssueTypeDetails} issuetype
 */
Fields.prototype['issuetype'] = undefined;

/**
 * The priority of the linked issue.
 * @member {module:model/Priority} priority
 */
Fields.prototype['priority'] = undefined;

/**
 * The status of the linked issue.
 * @member {module:model/StatusDetails} status
 */
Fields.prototype['status'] = undefined;

/**
 * The summary description of the linked issue.
 * @member {String} summary
 */
Fields.prototype['summary'] = undefined;






export default Fields;

