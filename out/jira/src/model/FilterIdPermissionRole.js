/**
 * Jira
 * The Jira Cloud Platform REST API
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FilterIdPermissionRoleActors from './FilterIdPermissionRoleActors';
import FilterIdPermissionRoleScope from './FilterIdPermissionRoleScope';

/**
 * The FilterIdPermissionRole model module.
 * @module model/FilterIdPermissionRole
 * @version 1.3.0
 */
class FilterIdPermissionRole {
    /**
     * Constructs a new <code>FilterIdPermissionRole</code>.
     * @alias module:model/FilterIdPermissionRole
     * @param actors {Array.<module:model/FilterIdPermissionRoleActors>} 
     * @param description {String} 
     * @param id {Number} 
     * @param name {String} 
     * @param scope {module:model/FilterIdPermissionRoleScope} 
     * @param self {String} 
     */
    constructor(actors, description, id, name, scope, self) { 
        
        FilterIdPermissionRole.initialize(this, actors, description, id, name, scope, self);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, actors, description, id, name, scope, self) { 
        obj['actors'] = actors;
        obj['description'] = description;
        obj['id'] = id;
        obj['name'] = name;
        obj['scope'] = scope;
        obj['self'] = self;
    }

    /**
     * Constructs a <code>FilterIdPermissionRole</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FilterIdPermissionRole} obj Optional instance to populate.
     * @return {module:model/FilterIdPermissionRole} The populated <code>FilterIdPermissionRole</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FilterIdPermissionRole();

            if (data.hasOwnProperty('actors')) {
                obj['actors'] = ApiClient.convertToType(data['actors'], [FilterIdPermissionRoleActors]);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = FilterIdPermissionRoleScope.constructFromObject(data['scope']);
            }
            if (data.hasOwnProperty('self')) {
                obj['self'] = ApiClient.convertToType(data['self'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:model/FilterIdPermissionRoleActors>} actors
 */
FilterIdPermissionRole.prototype['actors'] = undefined;

/**
 * @member {String} description
 */
FilterIdPermissionRole.prototype['description'] = undefined;

/**
 * @member {Number} id
 */
FilterIdPermissionRole.prototype['id'] = undefined;

/**
 * @member {String} name
 */
FilterIdPermissionRole.prototype['name'] = undefined;

/**
 * @member {module:model/FilterIdPermissionRoleScope} scope
 */
FilterIdPermissionRole.prototype['scope'] = undefined;

/**
 * @member {String} self
 */
FilterIdPermissionRole.prototype['self'] = undefined;






export default FilterIdPermissionRole;

