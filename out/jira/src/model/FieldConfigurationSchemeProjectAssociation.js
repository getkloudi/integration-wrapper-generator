/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FieldConfigurationSchemeProjectAssociation model module.
 * @module model/FieldConfigurationSchemeProjectAssociation
 * @version 1.4.0
 */
class FieldConfigurationSchemeProjectAssociation {
    /**
     * Constructs a new <code>FieldConfigurationSchemeProjectAssociation</code>.
     * Associated field configuration scheme and project.
     * @alias module:model/FieldConfigurationSchemeProjectAssociation
     * @param projectId {String} The ID of the project.
     */
    constructor(projectId) { 
        
        FieldConfigurationSchemeProjectAssociation.initialize(this, projectId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, projectId) { 
        obj['projectId'] = projectId;
    }

    /**
     * Constructs a <code>FieldConfigurationSchemeProjectAssociation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FieldConfigurationSchemeProjectAssociation} obj Optional instance to populate.
     * @return {module:model/FieldConfigurationSchemeProjectAssociation} The populated <code>FieldConfigurationSchemeProjectAssociation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FieldConfigurationSchemeProjectAssociation();

            if (data.hasOwnProperty('fieldConfigurationSchemeId')) {
                obj['fieldConfigurationSchemeId'] = ApiClient.convertToType(data['fieldConfigurationSchemeId'], 'String');
            }
            if (data.hasOwnProperty('projectId')) {
                obj['projectId'] = ApiClient.convertToType(data['projectId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The ID of the field configuration scheme. If the field configuration scheme ID is `null`, the operation assigns the default field configuration scheme.
 * @member {String} fieldConfigurationSchemeId
 */
FieldConfigurationSchemeProjectAssociation.prototype['fieldConfigurationSchemeId'] = undefined;

/**
 * The ID of the project.
 * @member {String} projectId
 */
FieldConfigurationSchemeProjectAssociation.prototype['projectId'] = undefined;






export default FieldConfigurationSchemeProjectAssociation;

