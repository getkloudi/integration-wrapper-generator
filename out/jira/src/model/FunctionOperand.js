/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FunctionOperand model module.
 * @module model/FunctionOperand
 * @version 1.4.0
 */
class FunctionOperand {
    /**
     * Constructs a new <code>FunctionOperand</code>.
     * An operand that is a function. See [Advanced searching - functions reference](https://confluence.atlassian.com/x/dwiiLQ) for more information about JQL functions.
     * @alias module:model/FunctionOperand
     * @param _function {String} The name of the function.
     */
    constructor(_function) { 
        
        FunctionOperand.initialize(this, _function);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, _function) { 
        obj['function'] = _function;
    }

    /**
     * Constructs a <code>FunctionOperand</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FunctionOperand} obj Optional instance to populate.
     * @return {module:model/FunctionOperand} The populated <code>FunctionOperand</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FunctionOperand();

            if (data.hasOwnProperty('arguments')) {
                obj['arguments'] = ApiClient.convertToType(data['arguments'], ['String']);
            }
            if (data.hasOwnProperty('function')) {
                obj['function'] = ApiClient.convertToType(data['function'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The list of function arguments.
 * @member {Array.<String>} arguments
 */
FunctionOperand.prototype['arguments'] = undefined;

/**
 * The name of the function.
 * @member {String} function
 */
FunctionOperand.prototype['function'] = undefined;






export default FunctionOperand;

