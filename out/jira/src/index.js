/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ActorInputBean from './model/ActorInputBean';
import ActorsMap from './model/ActorsMap';
import AddFieldBean from './model/AddFieldBean';
import AddGroupBean from './model/AddGroupBean';
import Application from './model/Application';
import ApplicationProperty from './model/ApplicationProperty';
import ApplicationRole from './model/ApplicationRole';
import AssociatedItemBean from './model/AssociatedItemBean';
import Attachment from './model/Attachment';
import AttachmentArchiveEntry from './model/AttachmentArchiveEntry';
import AttachmentArchiveImpl from './model/AttachmentArchiveImpl';
import AttachmentArchiveItemReadable from './model/AttachmentArchiveItemReadable';
import AttachmentArchiveMetadataReadable from './model/AttachmentArchiveMetadataReadable';
import AttachmentMetadata from './model/AttachmentMetadata';
import AttachmentSettings from './model/AttachmentSettings';
import AuditRecordBean from './model/AuditRecordBean';
import AuditRecords from './model/AuditRecords';
import AutoCompleteSuggestion from './model/AutoCompleteSuggestion';
import AutoCompleteSuggestions from './model/AutoCompleteSuggestions';
import Avatar from './model/Avatar';
import AvatarUrls from './model/AvatarUrls';
import AvatarUrlsBean from './model/AvatarUrlsBean';
import Avatars from './model/Avatars';
import BulkCreateCustomFieldOptionRequest from './model/BulkCreateCustomFieldOptionRequest';
import BulkIssuePropertyUpdateRequest from './model/BulkIssuePropertyUpdateRequest';
import BulkOperationErrorResult from './model/BulkOperationErrorResult';
import BulkPermissionGrants from './model/BulkPermissionGrants';
import BulkPermissionsRequestBean from './model/BulkPermissionsRequestBean';
import BulkProjectPermissionGrants from './model/BulkProjectPermissionGrants';
import BulkProjectPermissions from './model/BulkProjectPermissions';
import ChangeDetails from './model/ChangeDetails';
import ChangedValueBean from './model/ChangedValueBean';
import ChangedWorklog from './model/ChangedWorklog';
import ChangedWorklogs from './model/ChangedWorklogs';
import Changelog from './model/Changelog';
import ColumnItem from './model/ColumnItem';
import Comment from './model/Comment';
import Component from './model/Component';
import ComponentIssuesCount from './model/ComponentIssuesCount';
import ComponentWithIssueCount from './model/ComponentWithIssueCount';
import CompoundClause from './model/CompoundClause';
import Configuration from './model/Configuration';
import ConnectWorkflowTransitionRule from './model/ConnectWorkflowTransitionRule';
import ContainerForRegisteredWebhooks from './model/ContainerForRegisteredWebhooks';
import ContainerForWebhookIDs from './model/ContainerForWebhookIDs';
import ContainerOfWorkflowSchemeAssociations from './model/ContainerOfWorkflowSchemeAssociations';
import Context from './model/Context';
import ConvertedJQLQueries from './model/ConvertedJQLQueries';
import CreateUpdateRoleRequestBean from './model/CreateUpdateRoleRequestBean';
import CreatedIssue from './model/CreatedIssue';
import CreatedIssues from './model/CreatedIssues';
import CustomFieldDefinitionJsonBean from './model/CustomFieldDefinitionJsonBean';
import CustomFieldOption from './model/CustomFieldOption';
import CustomFieldOptionDetails from './model/CustomFieldOptionDetails';
import CustomFieldOptionValue from './model/CustomFieldOptionValue';
import CustomFieldReplacement from './model/CustomFieldReplacement';
import Dashboard from './model/Dashboard';
import DashboardRequest from './model/DashboardRequest';
import DefaultShareScope from './model/DefaultShareScope';
import DefaultWorkflow from './model/DefaultWorkflow';
import DeleteAndReplaceVersionBean from './model/DeleteAndReplaceVersionBean';
import DeprecatedWorkflow from './model/DeprecatedWorkflow';
import EntityProperty from './model/EntityProperty';
import ErrorCollection from './model/ErrorCollection';
import ErrorMessage from './model/ErrorMessage';
import EventNotification from './model/EventNotification';
import FailedWebhook from './model/FailedWebhook';
import FailedWebhooks from './model/FailedWebhooks';
import Field from './model/Field';
import FieldChangedClause from './model/FieldChangedClause';
import FieldConfiguration from './model/FieldConfiguration';
import FieldConfigurationIssueTypeItem from './model/FieldConfigurationIssueTypeItem';
import FieldConfigurationItem from './model/FieldConfigurationItem';
import FieldConfigurationScheme from './model/FieldConfigurationScheme';
import FieldConfigurationSchemeProjectAssociation from './model/FieldConfigurationSchemeProjectAssociation';
import FieldConfigurationSchemeProjects from './model/FieldConfigurationSchemeProjects';
import FieldDetails from './model/FieldDetails';
import FieldLastUsed from './model/FieldLastUsed';
import FieldMetadata from './model/FieldMetadata';
import FieldReferenceData from './model/FieldReferenceData';
import FieldUpdateOperation from './model/FieldUpdateOperation';
import FieldValueClause from './model/FieldValueClause';
import FieldWasClause from './model/FieldWasClause';
import Fields from './model/Fields';
import Filter from './model/Filter';
import FilterSubscription from './model/FilterSubscription';
import FilterSubscriptionsList from './model/FilterSubscriptionsList';
import FoundFilter from './model/FoundFilter';
import FoundGroup from './model/FoundGroup';
import FoundGroups from './model/FoundGroups';
import FoundUsers from './model/FoundUsers';
import FoundUsersAndGroups from './model/FoundUsersAndGroups';
import FunctionOperand from './model/FunctionOperand';
import FunctionReferenceData from './model/FunctionReferenceData';
import GlobalScopeBean from './model/GlobalScopeBean';
import Group from './model/Group';
import GroupLabel from './model/GroupLabel';
import GroupName from './model/GroupName';
import HealthCheckResult from './model/HealthCheckResult';
import Hierarchy from './model/Hierarchy';
import HierarchyLevel from './model/HierarchyLevel';
import HistoryMetadata from './model/HistoryMetadata';
import HistoryMetadataParticipant from './model/HistoryMetadataParticipant';
import Icon from './model/Icon';
import IconBean from './model/IconBean';
import IdBean from './model/IdBean';
import IdOrKeyBean from './model/IdOrKeyBean';
import IncludedFields from './model/IncludedFields';
import IssueBean from './model/IssueBean';
import IssueCommentListRequestBean from './model/IssueCommentListRequestBean';
import IssueCreateMetadata from './model/IssueCreateMetadata';
import IssueEntityProperties from './model/IssueEntityProperties';
import IssueFieldOption from './model/IssueFieldOption';
import IssueFieldOptionConfiguration from './model/IssueFieldOptionConfiguration';
import IssueFieldOptionCreateBean from './model/IssueFieldOptionCreateBean';
import IssueFieldOptionScopeBean from './model/IssueFieldOptionScopeBean';
import IssueFilterForBulkPropertyDelete from './model/IssueFilterForBulkPropertyDelete';
import IssueFilterForBulkPropertySet from './model/IssueFilterForBulkPropertySet';
import IssueLink from './model/IssueLink';
import IssueLinkType from './model/IssueLinkType';
import IssueLinkTypes from './model/IssueLinkTypes';
import IssueMatches from './model/IssueMatches';
import IssueMatchesForJQL from './model/IssueMatchesForJQL';
import IssuePickerSuggestions from './model/IssuePickerSuggestions';
import IssuePickerSuggestionsIssueType from './model/IssuePickerSuggestionsIssueType';
import IssueSecurityLevelMember from './model/IssueSecurityLevelMember';
import IssueTransition from './model/IssueTransition';
import IssueTypeCreateBean from './model/IssueTypeCreateBean';
import IssueTypeDetails from './model/IssueTypeDetails';
import IssueTypeInfo from './model/IssueTypeInfo';
import IssueTypeIssueCreateMetadata from './model/IssueTypeIssueCreateMetadata';
import IssueTypeScheme from './model/IssueTypeScheme';
import IssueTypeSchemeMapping from './model/IssueTypeSchemeMapping';
import IssueTypeSchemeProjectAssociation from './model/IssueTypeSchemeProjectAssociation';
import IssueTypeSchemeProjects from './model/IssueTypeSchemeProjects';
import IssueTypeScreenScheme from './model/IssueTypeScreenScheme';
import IssueTypeScreenSchemeItem from './model/IssueTypeScreenSchemeItem';
import IssueTypeScreenSchemeProjectAssociation from './model/IssueTypeScreenSchemeProjectAssociation';
import IssueTypeScreenSchemesProjects from './model/IssueTypeScreenSchemesProjects';
import IssueTypeUpdateBean from './model/IssueTypeUpdateBean';
import IssueTypeWithStatus from './model/IssueTypeWithStatus';
import IssueTypeWorkflowMapping from './model/IssueTypeWorkflowMapping';
import IssueTypesWorkflowMapping from './model/IssueTypesWorkflowMapping';
import IssueUpdateDetails from './model/IssueUpdateDetails';
import IssueUpdateMetadata from './model/IssueUpdateMetadata';
import IssuesAndJQLQueries from './model/IssuesAndJQLQueries';
import IssuesJqlMetaDataBean from './model/IssuesJqlMetaDataBean';
import IssuesMetaBean from './model/IssuesMetaBean';
import IssuesUpdateBean from './model/IssuesUpdateBean';
import JQLPersonalDataMigrationRequest from './model/JQLPersonalDataMigrationRequest';
import JQLQueryWithUnknownUsers from './model/JQLQueryWithUnknownUsers';
import JQLReferenceData from './model/JQLReferenceData';
import JexpIssues from './model/JexpIssues';
import JexpJqlIssues from './model/JexpJqlIssues';
import JiraExpressionAnalysis from './model/JiraExpressionAnalysis';
import JiraExpressionEvalContextBean from './model/JiraExpressionEvalContextBean';
import JiraExpressionEvalRequestBean from './model/JiraExpressionEvalRequestBean';
import JiraExpressionEvaluationMetaDataBean from './model/JiraExpressionEvaluationMetaDataBean';
import JiraExpressionForAnalysis from './model/JiraExpressionForAnalysis';
import JiraExpressionResult from './model/JiraExpressionResult';
import JiraExpressionValidationError from './model/JiraExpressionValidationError';
import JiraExpressionsAnalysis from './model/JiraExpressionsAnalysis';
import JiraExpressionsComplexityBean from './model/JiraExpressionsComplexityBean';
import JiraExpressionsComplexityValueBean from './model/JiraExpressionsComplexityValueBean';
import JqlQueriesToParse from './model/JqlQueriesToParse';
import JqlQuery from './model/JqlQuery';
import JqlQueryClauseTimePredicate from './model/JqlQueryClauseTimePredicate';
import JqlQueryField from './model/JqlQueryField';
import JqlQueryFieldEntityProperty from './model/JqlQueryFieldEntityProperty';
import JqlQueryOrderByClause from './model/JqlQueryOrderByClause';
import JqlQueryOrderByClauseElement from './model/JqlQueryOrderByClauseElement';
import JsonNode from './model/JsonNode';
import JsonTypeBean from './model/JsonTypeBean';
import KeywordOperand from './model/KeywordOperand';
import LinkGroup from './model/LinkGroup';
import LinkIssueRequestJsonBean from './model/LinkIssueRequestJsonBean';
import LinkedIssue from './model/LinkedIssue';
import ListOperand from './model/ListOperand';
import Locale from './model/Locale';
import MoveFieldBean from './model/MoveFieldBean';
import NestedResponse from './model/NestedResponse';
import Notification from './model/Notification';
import NotificationEvent from './model/NotificationEvent';
import NotificationRecipients from './model/NotificationRecipients';
import NotificationRecipientsRestrictions from './model/NotificationRecipientsRestrictions';
import NotificationScheme from './model/NotificationScheme';
import NotificationSchemeEvent from './model/NotificationSchemeEvent';
import OperationMessage from './model/OperationMessage';
import Operations from './model/Operations';
import PageBeanChangelog from './model/PageBeanChangelog';
import PageBeanComment from './model/PageBeanComment';
import PageBeanComponentWithIssueCount from './model/PageBeanComponentWithIssueCount';
import PageBeanContext from './model/PageBeanContext';
import PageBeanCustomFieldOptionDetails from './model/PageBeanCustomFieldOptionDetails';
import PageBeanDashboard from './model/PageBeanDashboard';
import PageBeanField from './model/PageBeanField';
import PageBeanFieldConfiguration from './model/PageBeanFieldConfiguration';
import PageBeanFieldConfigurationIssueTypeItem from './model/PageBeanFieldConfigurationIssueTypeItem';
import PageBeanFieldConfigurationItem from './model/PageBeanFieldConfigurationItem';
import PageBeanFieldConfigurationScheme from './model/PageBeanFieldConfigurationScheme';
import PageBeanFieldConfigurationSchemeProjects from './model/PageBeanFieldConfigurationSchemeProjects';
import PageBeanFoundFilter from './model/PageBeanFoundFilter';
import PageBeanIssueFieldOption from './model/PageBeanIssueFieldOption';
import PageBeanIssueSecurityLevelMember from './model/PageBeanIssueSecurityLevelMember';
import PageBeanIssueTypeScheme from './model/PageBeanIssueTypeScheme';
import PageBeanIssueTypeSchemeMapping from './model/PageBeanIssueTypeSchemeMapping';
import PageBeanIssueTypeSchemeProjects from './model/PageBeanIssueTypeSchemeProjects';
import PageBeanIssueTypeScreenScheme from './model/PageBeanIssueTypeScreenScheme';
import PageBeanIssueTypeScreenSchemeItem from './model/PageBeanIssueTypeScreenSchemeItem';
import PageBeanIssueTypeScreenSchemesProjects from './model/PageBeanIssueTypeScreenSchemesProjects';
import PageBeanNotificationScheme from './model/PageBeanNotificationScheme';
import PageBeanProject from './model/PageBeanProject';
import PageBeanScreen from './model/PageBeanScreen';
import PageBeanScreenScheme from './model/PageBeanScreenScheme';
import PageBeanString from './model/PageBeanString';
import PageBeanUser from './model/PageBeanUser';
import PageBeanUserDetails from './model/PageBeanUserDetails';
import PageBeanUserKey from './model/PageBeanUserKey';
import PageBeanVersion from './model/PageBeanVersion';
import PageBeanWebhook from './model/PageBeanWebhook';
import PageBeanWorkflow from './model/PageBeanWorkflow';
import PageBeanWorkflowScheme from './model/PageBeanWorkflowScheme';
import PageBeanWorkflowTransitionRules from './model/PageBeanWorkflowTransitionRules';
import PageOfChangelogs from './model/PageOfChangelogs';
import PageOfComments from './model/PageOfComments';
import PageOfDashboards from './model/PageOfDashboards';
import PageOfWorklogs from './model/PageOfWorklogs';
import PagedListUserDetailsApplicationUser from './model/PagedListUserDetailsApplicationUser';
import ParsedJqlQueries from './model/ParsedJqlQueries';
import ParsedJqlQuery from './model/ParsedJqlQuery';
import PermissionGrant from './model/PermissionGrant';
import PermissionGrants from './model/PermissionGrants';
import PermissionHolder from './model/PermissionHolder';
import PermissionScheme from './model/PermissionScheme';
import PermissionSchemes from './model/PermissionSchemes';
import Permissions from './model/Permissions';
import PermissionsKeysBean from './model/PermissionsKeysBean';
import PermittedProjects from './model/PermittedProjects';
import Priority from './model/Priority';
import Project from './model/Project';
import ProjectAvatars from './model/ProjectAvatars';
import ProjectCategory from './model/ProjectCategory';
import ProjectForScope from './model/ProjectForScope';
import ProjectIdentifierBean from './model/ProjectIdentifierBean';
import ProjectIdentifiers from './model/ProjectIdentifiers';
import ProjectInputBean from './model/ProjectInputBean';
import ProjectInsight from './model/ProjectInsight';
import ProjectIssueCreateMetadata from './model/ProjectIssueCreateMetadata';
import ProjectIssueSecurityLevels from './model/ProjectIssueSecurityLevels';
import ProjectIssueTypeHierarchy from './model/ProjectIssueTypeHierarchy';
import ProjectIssueTypesHierarchyLevel from './model/ProjectIssueTypesHierarchyLevel';
import ProjectPermissions from './model/ProjectPermissions';
import ProjectRole from './model/ProjectRole';
import ProjectRoleActorsUpdateBean from './model/ProjectRoleActorsUpdateBean';
import ProjectRoleGroup from './model/ProjectRoleGroup';
import ProjectRoleUser from './model/ProjectRoleUser';
import ProjectScopeBean from './model/ProjectScopeBean';
import ProjectType from './model/ProjectType';
import PropertyKey from './model/PropertyKey';
import PropertyKeys from './model/PropertyKeys';
import PublishedWorkflowId from './model/PublishedWorkflowId';
import RegisteredWebhook from './model/RegisteredWebhook';
import RemoteIssueLink from './model/RemoteIssueLink';
import RemoteIssueLinkIdentifies from './model/RemoteIssueLinkIdentifies';
import RemoteIssueLinkRequest from './model/RemoteIssueLinkRequest';
import RemoteObject from './model/RemoteObject';
import RemoveOptionFromIssuesResult from './model/RemoveOptionFromIssuesResult';
import RenamedCascadingOption from './model/RenamedCascadingOption';
import RenamedOption from './model/RenamedOption';
import Resolution from './model/Resolution';
import RestrictedPermission from './model/RestrictedPermission';
import RichText from './model/RichText';
import RoleActor from './model/RoleActor';
import RuleConfiguration from './model/RuleConfiguration';
import Scope from './model/Scope';
import Screen from './model/Screen';
import ScreenID from './model/ScreenID';
import ScreenScheme from './model/ScreenScheme';
import ScreenTypeIDsBean from './model/ScreenTypeIDsBean';
import ScreenableField from './model/ScreenableField';
import ScreenableTab from './model/ScreenableTab';
import SearchRequestBean from './model/SearchRequestBean';
import SearchResults from './model/SearchResults';
import SecurityLevel from './model/SecurityLevel';
import SecurityScheme from './model/SecurityScheme';
import SecuritySchemes from './model/SecuritySchemes';
import ServerInformation from './model/ServerInformation';
import SharePermission from './model/SharePermission';
import SharePermissionInputBean from './model/SharePermissionInputBean';
import SimpleApplicationPropertyBean from './model/SimpleApplicationPropertyBean';
import SimpleErrorCollection from './model/SimpleErrorCollection';
import SimpleLink from './model/SimpleLink';
import SimpleListWrapperApplicationRole from './model/SimpleListWrapperApplicationRole';
import SimpleListWrapperGroupName from './model/SimpleListWrapperGroupName';
import Status from './model/Status';
import StatusCategory from './model/StatusCategory';
import StatusDetails from './model/StatusDetails';
import SuggestedIssue from './model/SuggestedIssue';
import SystemAvatars from './model/SystemAvatars';
import TaskProgressBeanObject from './model/TaskProgressBeanObject';
import TaskProgressBeanRemoveOptionFromIssuesResult from './model/TaskProgressBeanRemoveOptionFromIssuesResult';
import TimeTrackingConfiguration from './model/TimeTrackingConfiguration';
import TimeTrackingProvider from './model/TimeTrackingProvider';
import Transition from './model/Transition';
import Transitions from './model/Transitions';
import UnrestrictedUserEmail from './model/UnrestrictedUserEmail';
import UpdateCustomFieldOption from './model/UpdateCustomFieldOption';
import UpdateUserToGroupBean from './model/UpdateUserToGroupBean';
import UpdatedProjectCategory from './model/UpdatedProjectCategory';
import User from './model/User';
import UserBean from './model/UserBean';
import UserBeanAvatarUrls from './model/UserBeanAvatarUrls';
import UserDetails from './model/UserDetails';
import UserKey from './model/UserKey';
import UserList from './model/UserList';
import UserMigrationBean from './model/UserMigrationBean';
import UserPermission from './model/UserPermission';
import UserPickerUser from './model/UserPickerUser';
import UserWriteBean from './model/UserWriteBean';
import ValueOperand from './model/ValueOperand';
import Version from './model/Version';
import VersionIssueCounts from './model/VersionIssueCounts';
import VersionIssuesStatus from './model/VersionIssuesStatus';
import VersionMoveBean from './model/VersionMoveBean';
import VersionUnresolvedIssuesCount from './model/VersionUnresolvedIssuesCount';
import VersionUsageInCustomField from './model/VersionUsageInCustomField';
import Visibility from './model/Visibility';
import Votes from './model/Votes';
import Watchers from './model/Watchers';
import Webhook from './model/Webhook';
import WebhookDetails from './model/WebhookDetails';
import WebhookRegistrationDetails from './model/WebhookRegistrationDetails';
import WebhooksExpirationDate from './model/WebhooksExpirationDate';
import Workflow from './model/Workflow';
import WorkflowId from './model/WorkflowId';
import WorkflowRules from './model/WorkflowRules';
import WorkflowScheme from './model/WorkflowScheme';
import WorkflowSchemeAssociations from './model/WorkflowSchemeAssociations';
import WorkflowStatus from './model/WorkflowStatus';
import WorkflowStatusProperties from './model/WorkflowStatusProperties';
import WorkflowTransition from './model/WorkflowTransition';
import WorkflowTransitionProperty from './model/WorkflowTransitionProperty';
import WorkflowTransitionRule from './model/WorkflowTransitionRule';
import WorkflowTransitionRules from './model/WorkflowTransitionRules';
import WorkflowTransitionRulesUpdate from './model/WorkflowTransitionRulesUpdate';
import WorkflowTransitionRulesUpdateErrorDetails from './model/WorkflowTransitionRulesUpdateErrorDetails';
import WorkflowTransitionRulesUpdateErrors from './model/WorkflowTransitionRulesUpdateErrors';
import Worklog from './model/Worklog';
import WorklogIdsRequestBean from './model/WorklogIdsRequestBean';
import AppPropertiesApi from './api/AppPropertiesApi';
import ApplicationRolesApi from './api/ApplicationRolesApi';
import AuditRecordsApi from './api/AuditRecordsApi';
import AvatarsApi from './api/AvatarsApi';
import DashboardsApi from './api/DashboardsApi';
import DynamicModulesApi from './api/DynamicModulesApi';
import FilterSharingApi from './api/FilterSharingApi';
import FiltersApi from './api/FiltersApi';
import GroupAndUserPickerApi from './api/GroupAndUserPickerApi';
import GroupsApi from './api/GroupsApi';
import IssueAttachmentsApi from './api/IssueAttachmentsApi';
import IssueCommentPropertiesApi from './api/IssueCommentPropertiesApi';
import IssueCommentsApi from './api/IssueCommentsApi';
import IssueCustomFieldOptionsApi from './api/IssueCustomFieldOptionsApi';
import IssueCustomFieldOptionsAppsApi from './api/IssueCustomFieldOptionsAppsApi';
import IssueFieldConfigurationsApi from './api/IssueFieldConfigurationsApi';
import IssueFieldsApi from './api/IssueFieldsApi';
import IssueLinkTypesApi from './api/IssueLinkTypesApi';
import IssueLinksApi from './api/IssueLinksApi';
import IssueNavigatorSettingsApi from './api/IssueNavigatorSettingsApi';
import IssueNotificationSchemesApi from './api/IssueNotificationSchemesApi';
import IssuePrioritiesApi from './api/IssuePrioritiesApi';
import IssuePropertiesApi from './api/IssuePropertiesApi';
import IssueRemoteLinksApi from './api/IssueRemoteLinksApi';
import IssueResolutionsApi from './api/IssueResolutionsApi';
import IssueSearchApi from './api/IssueSearchApi';
import IssueSecurityLevelApi from './api/IssueSecurityLevelApi';
import IssueSecuritySchemesApi from './api/IssueSecuritySchemesApi';
import IssueTypePropertiesApi from './api/IssueTypePropertiesApi';
import IssueTypeSchemesApi from './api/IssueTypeSchemesApi';
import IssueTypeScreenSchemesApi from './api/IssueTypeScreenSchemesApi';
import IssueTypesApi from './api/IssueTypesApi';
import IssueVotesApi from './api/IssueVotesApi';
import IssueWatchersApi from './api/IssueWatchersApi';
import IssueWorklogPropertiesApi from './api/IssueWorklogPropertiesApi';
import IssueWorklogsApi from './api/IssueWorklogsApi';
import IssuesApi from './api/IssuesApi';
import JQLApi from './api/JQLApi';
import JiraExpressionsApi from './api/JiraExpressionsApi';
import JiraSettingsApi from './api/JiraSettingsApi';
import LabelsApi from './api/LabelsApi';
import MyselfApi from './api/MyselfApi';
import PermissionSchemesApi from './api/PermissionSchemesApi';
import PermissionsApi from './api/PermissionsApi';
import ProjectAvatarsApi from './api/ProjectAvatarsApi';
import ProjectCategoriesApi from './api/ProjectCategoriesApi';
import ProjectComponentsApi from './api/ProjectComponentsApi';
import ProjectKeyAndNameValidationApi from './api/ProjectKeyAndNameValidationApi';
import ProjectPermissionSchemesApi from './api/ProjectPermissionSchemesApi';
import ProjectPropertiesApi from './api/ProjectPropertiesApi';
import ProjectRoleActorsApi from './api/ProjectRoleActorsApi';
import ProjectRolesApi from './api/ProjectRolesApi';
import ProjectTypesApi from './api/ProjectTypesApi';
import ProjectVersionsApi from './api/ProjectVersionsApi';
import ProjectsApi from './api/ProjectsApi';
import ScreensApi from './api/ScreensApi';
import ServerInfoApi from './api/ServerInfoApi';
import TasksApi from './api/TasksApi';
import TimeTrackingApi from './api/TimeTrackingApi';
import UserPropertiesApi from './api/UserPropertiesApi';
import UserSearchApi from './api/UserSearchApi';
import UsersApi from './api/UsersApi';
import WebhooksApi from './api/WebhooksApi';
import WorkflowSchemeDraftsApi from './api/WorkflowSchemeDraftsApi';
import WorkflowSchemeProjectAssociationsApi from './api/WorkflowSchemeProjectAssociationsApi';
import WorkflowSchemesApi from './api/WorkflowSchemesApi';
import WorkflowStatusCategoriesApi from './api/WorkflowStatusCategoriesApi';
import WorkflowStatusesApi from './api/WorkflowStatusesApi';
import WorkflowTransitionPropertiesApi from './api/WorkflowTransitionPropertiesApi';
import WorkflowTransitionRulesApi from './api/WorkflowTransitionRulesApi';
import WorkflowsApi from './api/WorkflowsApi';


/**
* Jira_Cloud_platform_REST_API_documentation.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Jira = require('index'); // See note below*.
* var xxxSvc = new Jira.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Jira.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Jira.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Jira.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.4.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ActorInputBean model constructor.
     * @property {module:model/ActorInputBean}
     */
    ActorInputBean,

    /**
     * The ActorsMap model constructor.
     * @property {module:model/ActorsMap}
     */
    ActorsMap,

    /**
     * The AddFieldBean model constructor.
     * @property {module:model/AddFieldBean}
     */
    AddFieldBean,

    /**
     * The AddGroupBean model constructor.
     * @property {module:model/AddGroupBean}
     */
    AddGroupBean,

    /**
     * The Application model constructor.
     * @property {module:model/Application}
     */
    Application,

    /**
     * The ApplicationProperty model constructor.
     * @property {module:model/ApplicationProperty}
     */
    ApplicationProperty,

    /**
     * The ApplicationRole model constructor.
     * @property {module:model/ApplicationRole}
     */
    ApplicationRole,

    /**
     * The AssociatedItemBean model constructor.
     * @property {module:model/AssociatedItemBean}
     */
    AssociatedItemBean,

    /**
     * The Attachment model constructor.
     * @property {module:model/Attachment}
     */
    Attachment,

    /**
     * The AttachmentArchiveEntry model constructor.
     * @property {module:model/AttachmentArchiveEntry}
     */
    AttachmentArchiveEntry,

    /**
     * The AttachmentArchiveImpl model constructor.
     * @property {module:model/AttachmentArchiveImpl}
     */
    AttachmentArchiveImpl,

    /**
     * The AttachmentArchiveItemReadable model constructor.
     * @property {module:model/AttachmentArchiveItemReadable}
     */
    AttachmentArchiveItemReadable,

    /**
     * The AttachmentArchiveMetadataReadable model constructor.
     * @property {module:model/AttachmentArchiveMetadataReadable}
     */
    AttachmentArchiveMetadataReadable,

    /**
     * The AttachmentMetadata model constructor.
     * @property {module:model/AttachmentMetadata}
     */
    AttachmentMetadata,

    /**
     * The AttachmentSettings model constructor.
     * @property {module:model/AttachmentSettings}
     */
    AttachmentSettings,

    /**
     * The AuditRecordBean model constructor.
     * @property {module:model/AuditRecordBean}
     */
    AuditRecordBean,

    /**
     * The AuditRecords model constructor.
     * @property {module:model/AuditRecords}
     */
    AuditRecords,

    /**
     * The AutoCompleteSuggestion model constructor.
     * @property {module:model/AutoCompleteSuggestion}
     */
    AutoCompleteSuggestion,

    /**
     * The AutoCompleteSuggestions model constructor.
     * @property {module:model/AutoCompleteSuggestions}
     */
    AutoCompleteSuggestions,

    /**
     * The Avatar model constructor.
     * @property {module:model/Avatar}
     */
    Avatar,

    /**
     * The AvatarUrls model constructor.
     * @property {module:model/AvatarUrls}
     */
    AvatarUrls,

    /**
     * The AvatarUrlsBean model constructor.
     * @property {module:model/AvatarUrlsBean}
     */
    AvatarUrlsBean,

    /**
     * The Avatars model constructor.
     * @property {module:model/Avatars}
     */
    Avatars,

    /**
     * The BulkCreateCustomFieldOptionRequest model constructor.
     * @property {module:model/BulkCreateCustomFieldOptionRequest}
     */
    BulkCreateCustomFieldOptionRequest,

    /**
     * The BulkIssuePropertyUpdateRequest model constructor.
     * @property {module:model/BulkIssuePropertyUpdateRequest}
     */
    BulkIssuePropertyUpdateRequest,

    /**
     * The BulkOperationErrorResult model constructor.
     * @property {module:model/BulkOperationErrorResult}
     */
    BulkOperationErrorResult,

    /**
     * The BulkPermissionGrants model constructor.
     * @property {module:model/BulkPermissionGrants}
     */
    BulkPermissionGrants,

    /**
     * The BulkPermissionsRequestBean model constructor.
     * @property {module:model/BulkPermissionsRequestBean}
     */
    BulkPermissionsRequestBean,

    /**
     * The BulkProjectPermissionGrants model constructor.
     * @property {module:model/BulkProjectPermissionGrants}
     */
    BulkProjectPermissionGrants,

    /**
     * The BulkProjectPermissions model constructor.
     * @property {module:model/BulkProjectPermissions}
     */
    BulkProjectPermissions,

    /**
     * The ChangeDetails model constructor.
     * @property {module:model/ChangeDetails}
     */
    ChangeDetails,

    /**
     * The ChangedValueBean model constructor.
     * @property {module:model/ChangedValueBean}
     */
    ChangedValueBean,

    /**
     * The ChangedWorklog model constructor.
     * @property {module:model/ChangedWorklog}
     */
    ChangedWorklog,

    /**
     * The ChangedWorklogs model constructor.
     * @property {module:model/ChangedWorklogs}
     */
    ChangedWorklogs,

    /**
     * The Changelog model constructor.
     * @property {module:model/Changelog}
     */
    Changelog,

    /**
     * The ColumnItem model constructor.
     * @property {module:model/ColumnItem}
     */
    ColumnItem,

    /**
     * The Comment model constructor.
     * @property {module:model/Comment}
     */
    Comment,

    /**
     * The Component model constructor.
     * @property {module:model/Component}
     */
    Component,

    /**
     * The ComponentIssuesCount model constructor.
     * @property {module:model/ComponentIssuesCount}
     */
    ComponentIssuesCount,

    /**
     * The ComponentWithIssueCount model constructor.
     * @property {module:model/ComponentWithIssueCount}
     */
    ComponentWithIssueCount,

    /**
     * The CompoundClause model constructor.
     * @property {module:model/CompoundClause}
     */
    CompoundClause,

    /**
     * The Configuration model constructor.
     * @property {module:model/Configuration}
     */
    Configuration,

    /**
     * The ConnectWorkflowTransitionRule model constructor.
     * @property {module:model/ConnectWorkflowTransitionRule}
     */
    ConnectWorkflowTransitionRule,

    /**
     * The ContainerForRegisteredWebhooks model constructor.
     * @property {module:model/ContainerForRegisteredWebhooks}
     */
    ContainerForRegisteredWebhooks,

    /**
     * The ContainerForWebhookIDs model constructor.
     * @property {module:model/ContainerForWebhookIDs}
     */
    ContainerForWebhookIDs,

    /**
     * The ContainerOfWorkflowSchemeAssociations model constructor.
     * @property {module:model/ContainerOfWorkflowSchemeAssociations}
     */
    ContainerOfWorkflowSchemeAssociations,

    /**
     * The Context model constructor.
     * @property {module:model/Context}
     */
    Context,

    /**
     * The ConvertedJQLQueries model constructor.
     * @property {module:model/ConvertedJQLQueries}
     */
    ConvertedJQLQueries,

    /**
     * The CreateUpdateRoleRequestBean model constructor.
     * @property {module:model/CreateUpdateRoleRequestBean}
     */
    CreateUpdateRoleRequestBean,

    /**
     * The CreatedIssue model constructor.
     * @property {module:model/CreatedIssue}
     */
    CreatedIssue,

    /**
     * The CreatedIssues model constructor.
     * @property {module:model/CreatedIssues}
     */
    CreatedIssues,

    /**
     * The CustomFieldDefinitionJsonBean model constructor.
     * @property {module:model/CustomFieldDefinitionJsonBean}
     */
    CustomFieldDefinitionJsonBean,

    /**
     * The CustomFieldOption model constructor.
     * @property {module:model/CustomFieldOption}
     */
    CustomFieldOption,

    /**
     * The CustomFieldOptionDetails model constructor.
     * @property {module:model/CustomFieldOptionDetails}
     */
    CustomFieldOptionDetails,

    /**
     * The CustomFieldOptionValue model constructor.
     * @property {module:model/CustomFieldOptionValue}
     */
    CustomFieldOptionValue,

    /**
     * The CustomFieldReplacement model constructor.
     * @property {module:model/CustomFieldReplacement}
     */
    CustomFieldReplacement,

    /**
     * The Dashboard model constructor.
     * @property {module:model/Dashboard}
     */
    Dashboard,

    /**
     * The DashboardRequest model constructor.
     * @property {module:model/DashboardRequest}
     */
    DashboardRequest,

    /**
     * The DefaultShareScope model constructor.
     * @property {module:model/DefaultShareScope}
     */
    DefaultShareScope,

    /**
     * The DefaultWorkflow model constructor.
     * @property {module:model/DefaultWorkflow}
     */
    DefaultWorkflow,

    /**
     * The DeleteAndReplaceVersionBean model constructor.
     * @property {module:model/DeleteAndReplaceVersionBean}
     */
    DeleteAndReplaceVersionBean,

    /**
     * The DeprecatedWorkflow model constructor.
     * @property {module:model/DeprecatedWorkflow}
     */
    DeprecatedWorkflow,

    /**
     * The EntityProperty model constructor.
     * @property {module:model/EntityProperty}
     */
    EntityProperty,

    /**
     * The ErrorCollection model constructor.
     * @property {module:model/ErrorCollection}
     */
    ErrorCollection,

    /**
     * The ErrorMessage model constructor.
     * @property {module:model/ErrorMessage}
     */
    ErrorMessage,

    /**
     * The EventNotification model constructor.
     * @property {module:model/EventNotification}
     */
    EventNotification,

    /**
     * The FailedWebhook model constructor.
     * @property {module:model/FailedWebhook}
     */
    FailedWebhook,

    /**
     * The FailedWebhooks model constructor.
     * @property {module:model/FailedWebhooks}
     */
    FailedWebhooks,

    /**
     * The Field model constructor.
     * @property {module:model/Field}
     */
    Field,

    /**
     * The FieldChangedClause model constructor.
     * @property {module:model/FieldChangedClause}
     */
    FieldChangedClause,

    /**
     * The FieldConfiguration model constructor.
     * @property {module:model/FieldConfiguration}
     */
    FieldConfiguration,

    /**
     * The FieldConfigurationIssueTypeItem model constructor.
     * @property {module:model/FieldConfigurationIssueTypeItem}
     */
    FieldConfigurationIssueTypeItem,

    /**
     * The FieldConfigurationItem model constructor.
     * @property {module:model/FieldConfigurationItem}
     */
    FieldConfigurationItem,

    /**
     * The FieldConfigurationScheme model constructor.
     * @property {module:model/FieldConfigurationScheme}
     */
    FieldConfigurationScheme,

    /**
     * The FieldConfigurationSchemeProjectAssociation model constructor.
     * @property {module:model/FieldConfigurationSchemeProjectAssociation}
     */
    FieldConfigurationSchemeProjectAssociation,

    /**
     * The FieldConfigurationSchemeProjects model constructor.
     * @property {module:model/FieldConfigurationSchemeProjects}
     */
    FieldConfigurationSchemeProjects,

    /**
     * The FieldDetails model constructor.
     * @property {module:model/FieldDetails}
     */
    FieldDetails,

    /**
     * The FieldLastUsed model constructor.
     * @property {module:model/FieldLastUsed}
     */
    FieldLastUsed,

    /**
     * The FieldMetadata model constructor.
     * @property {module:model/FieldMetadata}
     */
    FieldMetadata,

    /**
     * The FieldReferenceData model constructor.
     * @property {module:model/FieldReferenceData}
     */
    FieldReferenceData,

    /**
     * The FieldUpdateOperation model constructor.
     * @property {module:model/FieldUpdateOperation}
     */
    FieldUpdateOperation,

    /**
     * The FieldValueClause model constructor.
     * @property {module:model/FieldValueClause}
     */
    FieldValueClause,

    /**
     * The FieldWasClause model constructor.
     * @property {module:model/FieldWasClause}
     */
    FieldWasClause,

    /**
     * The Fields model constructor.
     * @property {module:model/Fields}
     */
    Fields,

    /**
     * The Filter model constructor.
     * @property {module:model/Filter}
     */
    Filter,

    /**
     * The FilterSubscription model constructor.
     * @property {module:model/FilterSubscription}
     */
    FilterSubscription,

    /**
     * The FilterSubscriptionsList model constructor.
     * @property {module:model/FilterSubscriptionsList}
     */
    FilterSubscriptionsList,

    /**
     * The FoundFilter model constructor.
     * @property {module:model/FoundFilter}
     */
    FoundFilter,

    /**
     * The FoundGroup model constructor.
     * @property {module:model/FoundGroup}
     */
    FoundGroup,

    /**
     * The FoundGroups model constructor.
     * @property {module:model/FoundGroups}
     */
    FoundGroups,

    /**
     * The FoundUsers model constructor.
     * @property {module:model/FoundUsers}
     */
    FoundUsers,

    /**
     * The FoundUsersAndGroups model constructor.
     * @property {module:model/FoundUsersAndGroups}
     */
    FoundUsersAndGroups,

    /**
     * The FunctionOperand model constructor.
     * @property {module:model/FunctionOperand}
     */
    FunctionOperand,

    /**
     * The FunctionReferenceData model constructor.
     * @property {module:model/FunctionReferenceData}
     */
    FunctionReferenceData,

    /**
     * The GlobalScopeBean model constructor.
     * @property {module:model/GlobalScopeBean}
     */
    GlobalScopeBean,

    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group,

    /**
     * The GroupLabel model constructor.
     * @property {module:model/GroupLabel}
     */
    GroupLabel,

    /**
     * The GroupName model constructor.
     * @property {module:model/GroupName}
     */
    GroupName,

    /**
     * The HealthCheckResult model constructor.
     * @property {module:model/HealthCheckResult}
     */
    HealthCheckResult,

    /**
     * The Hierarchy model constructor.
     * @property {module:model/Hierarchy}
     */
    Hierarchy,

    /**
     * The HierarchyLevel model constructor.
     * @property {module:model/HierarchyLevel}
     */
    HierarchyLevel,

    /**
     * The HistoryMetadata model constructor.
     * @property {module:model/HistoryMetadata}
     */
    HistoryMetadata,

    /**
     * The HistoryMetadataParticipant model constructor.
     * @property {module:model/HistoryMetadataParticipant}
     */
    HistoryMetadataParticipant,

    /**
     * The Icon model constructor.
     * @property {module:model/Icon}
     */
    Icon,

    /**
     * The IconBean model constructor.
     * @property {module:model/IconBean}
     */
    IconBean,

    /**
     * The IdBean model constructor.
     * @property {module:model/IdBean}
     */
    IdBean,

    /**
     * The IdOrKeyBean model constructor.
     * @property {module:model/IdOrKeyBean}
     */
    IdOrKeyBean,

    /**
     * The IncludedFields model constructor.
     * @property {module:model/IncludedFields}
     */
    IncludedFields,

    /**
     * The IssueBean model constructor.
     * @property {module:model/IssueBean}
     */
    IssueBean,

    /**
     * The IssueCommentListRequestBean model constructor.
     * @property {module:model/IssueCommentListRequestBean}
     */
    IssueCommentListRequestBean,

    /**
     * The IssueCreateMetadata model constructor.
     * @property {module:model/IssueCreateMetadata}
     */
    IssueCreateMetadata,

    /**
     * The IssueEntityProperties model constructor.
     * @property {module:model/IssueEntityProperties}
     */
    IssueEntityProperties,

    /**
     * The IssueFieldOption model constructor.
     * @property {module:model/IssueFieldOption}
     */
    IssueFieldOption,

    /**
     * The IssueFieldOptionConfiguration model constructor.
     * @property {module:model/IssueFieldOptionConfiguration}
     */
    IssueFieldOptionConfiguration,

    /**
     * The IssueFieldOptionCreateBean model constructor.
     * @property {module:model/IssueFieldOptionCreateBean}
     */
    IssueFieldOptionCreateBean,

    /**
     * The IssueFieldOptionScopeBean model constructor.
     * @property {module:model/IssueFieldOptionScopeBean}
     */
    IssueFieldOptionScopeBean,

    /**
     * The IssueFilterForBulkPropertyDelete model constructor.
     * @property {module:model/IssueFilterForBulkPropertyDelete}
     */
    IssueFilterForBulkPropertyDelete,

    /**
     * The IssueFilterForBulkPropertySet model constructor.
     * @property {module:model/IssueFilterForBulkPropertySet}
     */
    IssueFilterForBulkPropertySet,

    /**
     * The IssueLink model constructor.
     * @property {module:model/IssueLink}
     */
    IssueLink,

    /**
     * The IssueLinkType model constructor.
     * @property {module:model/IssueLinkType}
     */
    IssueLinkType,

    /**
     * The IssueLinkTypes model constructor.
     * @property {module:model/IssueLinkTypes}
     */
    IssueLinkTypes,

    /**
     * The IssueMatches model constructor.
     * @property {module:model/IssueMatches}
     */
    IssueMatches,

    /**
     * The IssueMatchesForJQL model constructor.
     * @property {module:model/IssueMatchesForJQL}
     */
    IssueMatchesForJQL,

    /**
     * The IssuePickerSuggestions model constructor.
     * @property {module:model/IssuePickerSuggestions}
     */
    IssuePickerSuggestions,

    /**
     * The IssuePickerSuggestionsIssueType model constructor.
     * @property {module:model/IssuePickerSuggestionsIssueType}
     */
    IssuePickerSuggestionsIssueType,

    /**
     * The IssueSecurityLevelMember model constructor.
     * @property {module:model/IssueSecurityLevelMember}
     */
    IssueSecurityLevelMember,

    /**
     * The IssueTransition model constructor.
     * @property {module:model/IssueTransition}
     */
    IssueTransition,

    /**
     * The IssueTypeCreateBean model constructor.
     * @property {module:model/IssueTypeCreateBean}
     */
    IssueTypeCreateBean,

    /**
     * The IssueTypeDetails model constructor.
     * @property {module:model/IssueTypeDetails}
     */
    IssueTypeDetails,

    /**
     * The IssueTypeInfo model constructor.
     * @property {module:model/IssueTypeInfo}
     */
    IssueTypeInfo,

    /**
     * The IssueTypeIssueCreateMetadata model constructor.
     * @property {module:model/IssueTypeIssueCreateMetadata}
     */
    IssueTypeIssueCreateMetadata,

    /**
     * The IssueTypeScheme model constructor.
     * @property {module:model/IssueTypeScheme}
     */
    IssueTypeScheme,

    /**
     * The IssueTypeSchemeMapping model constructor.
     * @property {module:model/IssueTypeSchemeMapping}
     */
    IssueTypeSchemeMapping,

    /**
     * The IssueTypeSchemeProjectAssociation model constructor.
     * @property {module:model/IssueTypeSchemeProjectAssociation}
     */
    IssueTypeSchemeProjectAssociation,

    /**
     * The IssueTypeSchemeProjects model constructor.
     * @property {module:model/IssueTypeSchemeProjects}
     */
    IssueTypeSchemeProjects,

    /**
     * The IssueTypeScreenScheme model constructor.
     * @property {module:model/IssueTypeScreenScheme}
     */
    IssueTypeScreenScheme,

    /**
     * The IssueTypeScreenSchemeItem model constructor.
     * @property {module:model/IssueTypeScreenSchemeItem}
     */
    IssueTypeScreenSchemeItem,

    /**
     * The IssueTypeScreenSchemeProjectAssociation model constructor.
     * @property {module:model/IssueTypeScreenSchemeProjectAssociation}
     */
    IssueTypeScreenSchemeProjectAssociation,

    /**
     * The IssueTypeScreenSchemesProjects model constructor.
     * @property {module:model/IssueTypeScreenSchemesProjects}
     */
    IssueTypeScreenSchemesProjects,

    /**
     * The IssueTypeUpdateBean model constructor.
     * @property {module:model/IssueTypeUpdateBean}
     */
    IssueTypeUpdateBean,

    /**
     * The IssueTypeWithStatus model constructor.
     * @property {module:model/IssueTypeWithStatus}
     */
    IssueTypeWithStatus,

    /**
     * The IssueTypeWorkflowMapping model constructor.
     * @property {module:model/IssueTypeWorkflowMapping}
     */
    IssueTypeWorkflowMapping,

    /**
     * The IssueTypesWorkflowMapping model constructor.
     * @property {module:model/IssueTypesWorkflowMapping}
     */
    IssueTypesWorkflowMapping,

    /**
     * The IssueUpdateDetails model constructor.
     * @property {module:model/IssueUpdateDetails}
     */
    IssueUpdateDetails,

    /**
     * The IssueUpdateMetadata model constructor.
     * @property {module:model/IssueUpdateMetadata}
     */
    IssueUpdateMetadata,

    /**
     * The IssuesAndJQLQueries model constructor.
     * @property {module:model/IssuesAndJQLQueries}
     */
    IssuesAndJQLQueries,

    /**
     * The IssuesJqlMetaDataBean model constructor.
     * @property {module:model/IssuesJqlMetaDataBean}
     */
    IssuesJqlMetaDataBean,

    /**
     * The IssuesMetaBean model constructor.
     * @property {module:model/IssuesMetaBean}
     */
    IssuesMetaBean,

    /**
     * The IssuesUpdateBean model constructor.
     * @property {module:model/IssuesUpdateBean}
     */
    IssuesUpdateBean,

    /**
     * The JQLPersonalDataMigrationRequest model constructor.
     * @property {module:model/JQLPersonalDataMigrationRequest}
     */
    JQLPersonalDataMigrationRequest,

    /**
     * The JQLQueryWithUnknownUsers model constructor.
     * @property {module:model/JQLQueryWithUnknownUsers}
     */
    JQLQueryWithUnknownUsers,

    /**
     * The JQLReferenceData model constructor.
     * @property {module:model/JQLReferenceData}
     */
    JQLReferenceData,

    /**
     * The JexpIssues model constructor.
     * @property {module:model/JexpIssues}
     */
    JexpIssues,

    /**
     * The JexpJqlIssues model constructor.
     * @property {module:model/JexpJqlIssues}
     */
    JexpJqlIssues,

    /**
     * The JiraExpressionAnalysis model constructor.
     * @property {module:model/JiraExpressionAnalysis}
     */
    JiraExpressionAnalysis,

    /**
     * The JiraExpressionEvalContextBean model constructor.
     * @property {module:model/JiraExpressionEvalContextBean}
     */
    JiraExpressionEvalContextBean,

    /**
     * The JiraExpressionEvalRequestBean model constructor.
     * @property {module:model/JiraExpressionEvalRequestBean}
     */
    JiraExpressionEvalRequestBean,

    /**
     * The JiraExpressionEvaluationMetaDataBean model constructor.
     * @property {module:model/JiraExpressionEvaluationMetaDataBean}
     */
    JiraExpressionEvaluationMetaDataBean,

    /**
     * The JiraExpressionForAnalysis model constructor.
     * @property {module:model/JiraExpressionForAnalysis}
     */
    JiraExpressionForAnalysis,

    /**
     * The JiraExpressionResult model constructor.
     * @property {module:model/JiraExpressionResult}
     */
    JiraExpressionResult,

    /**
     * The JiraExpressionValidationError model constructor.
     * @property {module:model/JiraExpressionValidationError}
     */
    JiraExpressionValidationError,

    /**
     * The JiraExpressionsAnalysis model constructor.
     * @property {module:model/JiraExpressionsAnalysis}
     */
    JiraExpressionsAnalysis,

    /**
     * The JiraExpressionsComplexityBean model constructor.
     * @property {module:model/JiraExpressionsComplexityBean}
     */
    JiraExpressionsComplexityBean,

    /**
     * The JiraExpressionsComplexityValueBean model constructor.
     * @property {module:model/JiraExpressionsComplexityValueBean}
     */
    JiraExpressionsComplexityValueBean,

    /**
     * The JqlQueriesToParse model constructor.
     * @property {module:model/JqlQueriesToParse}
     */
    JqlQueriesToParse,

    /**
     * The JqlQuery model constructor.
     * @property {module:model/JqlQuery}
     */
    JqlQuery,

    /**
     * The JqlQueryClauseTimePredicate model constructor.
     * @property {module:model/JqlQueryClauseTimePredicate}
     */
    JqlQueryClauseTimePredicate,

    /**
     * The JqlQueryField model constructor.
     * @property {module:model/JqlQueryField}
     */
    JqlQueryField,

    /**
     * The JqlQueryFieldEntityProperty model constructor.
     * @property {module:model/JqlQueryFieldEntityProperty}
     */
    JqlQueryFieldEntityProperty,

    /**
     * The JqlQueryOrderByClause model constructor.
     * @property {module:model/JqlQueryOrderByClause}
     */
    JqlQueryOrderByClause,

    /**
     * The JqlQueryOrderByClauseElement model constructor.
     * @property {module:model/JqlQueryOrderByClauseElement}
     */
    JqlQueryOrderByClauseElement,

    /**
     * The JsonNode model constructor.
     * @property {module:model/JsonNode}
     */
    JsonNode,

    /**
     * The JsonTypeBean model constructor.
     * @property {module:model/JsonTypeBean}
     */
    JsonTypeBean,

    /**
     * The KeywordOperand model constructor.
     * @property {module:model/KeywordOperand}
     */
    KeywordOperand,

    /**
     * The LinkGroup model constructor.
     * @property {module:model/LinkGroup}
     */
    LinkGroup,

    /**
     * The LinkIssueRequestJsonBean model constructor.
     * @property {module:model/LinkIssueRequestJsonBean}
     */
    LinkIssueRequestJsonBean,

    /**
     * The LinkedIssue model constructor.
     * @property {module:model/LinkedIssue}
     */
    LinkedIssue,

    /**
     * The ListOperand model constructor.
     * @property {module:model/ListOperand}
     */
    ListOperand,

    /**
     * The Locale model constructor.
     * @property {module:model/Locale}
     */
    Locale,

    /**
     * The MoveFieldBean model constructor.
     * @property {module:model/MoveFieldBean}
     */
    MoveFieldBean,

    /**
     * The NestedResponse model constructor.
     * @property {module:model/NestedResponse}
     */
    NestedResponse,

    /**
     * The Notification model constructor.
     * @property {module:model/Notification}
     */
    Notification,

    /**
     * The NotificationEvent model constructor.
     * @property {module:model/NotificationEvent}
     */
    NotificationEvent,

    /**
     * The NotificationRecipients model constructor.
     * @property {module:model/NotificationRecipients}
     */
    NotificationRecipients,

    /**
     * The NotificationRecipientsRestrictions model constructor.
     * @property {module:model/NotificationRecipientsRestrictions}
     */
    NotificationRecipientsRestrictions,

    /**
     * The NotificationScheme model constructor.
     * @property {module:model/NotificationScheme}
     */
    NotificationScheme,

    /**
     * The NotificationSchemeEvent model constructor.
     * @property {module:model/NotificationSchemeEvent}
     */
    NotificationSchemeEvent,

    /**
     * The OperationMessage model constructor.
     * @property {module:model/OperationMessage}
     */
    OperationMessage,

    /**
     * The Operations model constructor.
     * @property {module:model/Operations}
     */
    Operations,

    /**
     * The PageBeanChangelog model constructor.
     * @property {module:model/PageBeanChangelog}
     */
    PageBeanChangelog,

    /**
     * The PageBeanComment model constructor.
     * @property {module:model/PageBeanComment}
     */
    PageBeanComment,

    /**
     * The PageBeanComponentWithIssueCount model constructor.
     * @property {module:model/PageBeanComponentWithIssueCount}
     */
    PageBeanComponentWithIssueCount,

    /**
     * The PageBeanContext model constructor.
     * @property {module:model/PageBeanContext}
     */
    PageBeanContext,

    /**
     * The PageBeanCustomFieldOptionDetails model constructor.
     * @property {module:model/PageBeanCustomFieldOptionDetails}
     */
    PageBeanCustomFieldOptionDetails,

    /**
     * The PageBeanDashboard model constructor.
     * @property {module:model/PageBeanDashboard}
     */
    PageBeanDashboard,

    /**
     * The PageBeanField model constructor.
     * @property {module:model/PageBeanField}
     */
    PageBeanField,

    /**
     * The PageBeanFieldConfiguration model constructor.
     * @property {module:model/PageBeanFieldConfiguration}
     */
    PageBeanFieldConfiguration,

    /**
     * The PageBeanFieldConfigurationIssueTypeItem model constructor.
     * @property {module:model/PageBeanFieldConfigurationIssueTypeItem}
     */
    PageBeanFieldConfigurationIssueTypeItem,

    /**
     * The PageBeanFieldConfigurationItem model constructor.
     * @property {module:model/PageBeanFieldConfigurationItem}
     */
    PageBeanFieldConfigurationItem,

    /**
     * The PageBeanFieldConfigurationScheme model constructor.
     * @property {module:model/PageBeanFieldConfigurationScheme}
     */
    PageBeanFieldConfigurationScheme,

    /**
     * The PageBeanFieldConfigurationSchemeProjects model constructor.
     * @property {module:model/PageBeanFieldConfigurationSchemeProjects}
     */
    PageBeanFieldConfigurationSchemeProjects,

    /**
     * The PageBeanFoundFilter model constructor.
     * @property {module:model/PageBeanFoundFilter}
     */
    PageBeanFoundFilter,

    /**
     * The PageBeanIssueFieldOption model constructor.
     * @property {module:model/PageBeanIssueFieldOption}
     */
    PageBeanIssueFieldOption,

    /**
     * The PageBeanIssueSecurityLevelMember model constructor.
     * @property {module:model/PageBeanIssueSecurityLevelMember}
     */
    PageBeanIssueSecurityLevelMember,

    /**
     * The PageBeanIssueTypeScheme model constructor.
     * @property {module:model/PageBeanIssueTypeScheme}
     */
    PageBeanIssueTypeScheme,

    /**
     * The PageBeanIssueTypeSchemeMapping model constructor.
     * @property {module:model/PageBeanIssueTypeSchemeMapping}
     */
    PageBeanIssueTypeSchemeMapping,

    /**
     * The PageBeanIssueTypeSchemeProjects model constructor.
     * @property {module:model/PageBeanIssueTypeSchemeProjects}
     */
    PageBeanIssueTypeSchemeProjects,

    /**
     * The PageBeanIssueTypeScreenScheme model constructor.
     * @property {module:model/PageBeanIssueTypeScreenScheme}
     */
    PageBeanIssueTypeScreenScheme,

    /**
     * The PageBeanIssueTypeScreenSchemeItem model constructor.
     * @property {module:model/PageBeanIssueTypeScreenSchemeItem}
     */
    PageBeanIssueTypeScreenSchemeItem,

    /**
     * The PageBeanIssueTypeScreenSchemesProjects model constructor.
     * @property {module:model/PageBeanIssueTypeScreenSchemesProjects}
     */
    PageBeanIssueTypeScreenSchemesProjects,

    /**
     * The PageBeanNotificationScheme model constructor.
     * @property {module:model/PageBeanNotificationScheme}
     */
    PageBeanNotificationScheme,

    /**
     * The PageBeanProject model constructor.
     * @property {module:model/PageBeanProject}
     */
    PageBeanProject,

    /**
     * The PageBeanScreen model constructor.
     * @property {module:model/PageBeanScreen}
     */
    PageBeanScreen,

    /**
     * The PageBeanScreenScheme model constructor.
     * @property {module:model/PageBeanScreenScheme}
     */
    PageBeanScreenScheme,

    /**
     * The PageBeanString model constructor.
     * @property {module:model/PageBeanString}
     */
    PageBeanString,

    /**
     * The PageBeanUser model constructor.
     * @property {module:model/PageBeanUser}
     */
    PageBeanUser,

    /**
     * The PageBeanUserDetails model constructor.
     * @property {module:model/PageBeanUserDetails}
     */
    PageBeanUserDetails,

    /**
     * The PageBeanUserKey model constructor.
     * @property {module:model/PageBeanUserKey}
     */
    PageBeanUserKey,

    /**
     * The PageBeanVersion model constructor.
     * @property {module:model/PageBeanVersion}
     */
    PageBeanVersion,

    /**
     * The PageBeanWebhook model constructor.
     * @property {module:model/PageBeanWebhook}
     */
    PageBeanWebhook,

    /**
     * The PageBeanWorkflow model constructor.
     * @property {module:model/PageBeanWorkflow}
     */
    PageBeanWorkflow,

    /**
     * The PageBeanWorkflowScheme model constructor.
     * @property {module:model/PageBeanWorkflowScheme}
     */
    PageBeanWorkflowScheme,

    /**
     * The PageBeanWorkflowTransitionRules model constructor.
     * @property {module:model/PageBeanWorkflowTransitionRules}
     */
    PageBeanWorkflowTransitionRules,

    /**
     * The PageOfChangelogs model constructor.
     * @property {module:model/PageOfChangelogs}
     */
    PageOfChangelogs,

    /**
     * The PageOfComments model constructor.
     * @property {module:model/PageOfComments}
     */
    PageOfComments,

    /**
     * The PageOfDashboards model constructor.
     * @property {module:model/PageOfDashboards}
     */
    PageOfDashboards,

    /**
     * The PageOfWorklogs model constructor.
     * @property {module:model/PageOfWorklogs}
     */
    PageOfWorklogs,

    /**
     * The PagedListUserDetailsApplicationUser model constructor.
     * @property {module:model/PagedListUserDetailsApplicationUser}
     */
    PagedListUserDetailsApplicationUser,

    /**
     * The ParsedJqlQueries model constructor.
     * @property {module:model/ParsedJqlQueries}
     */
    ParsedJqlQueries,

    /**
     * The ParsedJqlQuery model constructor.
     * @property {module:model/ParsedJqlQuery}
     */
    ParsedJqlQuery,

    /**
     * The PermissionGrant model constructor.
     * @property {module:model/PermissionGrant}
     */
    PermissionGrant,

    /**
     * The PermissionGrants model constructor.
     * @property {module:model/PermissionGrants}
     */
    PermissionGrants,

    /**
     * The PermissionHolder model constructor.
     * @property {module:model/PermissionHolder}
     */
    PermissionHolder,

    /**
     * The PermissionScheme model constructor.
     * @property {module:model/PermissionScheme}
     */
    PermissionScheme,

    /**
     * The PermissionSchemes model constructor.
     * @property {module:model/PermissionSchemes}
     */
    PermissionSchemes,

    /**
     * The Permissions model constructor.
     * @property {module:model/Permissions}
     */
    Permissions,

    /**
     * The PermissionsKeysBean model constructor.
     * @property {module:model/PermissionsKeysBean}
     */
    PermissionsKeysBean,

    /**
     * The PermittedProjects model constructor.
     * @property {module:model/PermittedProjects}
     */
    PermittedProjects,

    /**
     * The Priority model constructor.
     * @property {module:model/Priority}
     */
    Priority,

    /**
     * The Project model constructor.
     * @property {module:model/Project}
     */
    Project,

    /**
     * The ProjectAvatars model constructor.
     * @property {module:model/ProjectAvatars}
     */
    ProjectAvatars,

    /**
     * The ProjectCategory model constructor.
     * @property {module:model/ProjectCategory}
     */
    ProjectCategory,

    /**
     * The ProjectForScope model constructor.
     * @property {module:model/ProjectForScope}
     */
    ProjectForScope,

    /**
     * The ProjectIdentifierBean model constructor.
     * @property {module:model/ProjectIdentifierBean}
     */
    ProjectIdentifierBean,

    /**
     * The ProjectIdentifiers model constructor.
     * @property {module:model/ProjectIdentifiers}
     */
    ProjectIdentifiers,

    /**
     * The ProjectInputBean model constructor.
     * @property {module:model/ProjectInputBean}
     */
    ProjectInputBean,

    /**
     * The ProjectInsight model constructor.
     * @property {module:model/ProjectInsight}
     */
    ProjectInsight,

    /**
     * The ProjectIssueCreateMetadata model constructor.
     * @property {module:model/ProjectIssueCreateMetadata}
     */
    ProjectIssueCreateMetadata,

    /**
     * The ProjectIssueSecurityLevels model constructor.
     * @property {module:model/ProjectIssueSecurityLevels}
     */
    ProjectIssueSecurityLevels,

    /**
     * The ProjectIssueTypeHierarchy model constructor.
     * @property {module:model/ProjectIssueTypeHierarchy}
     */
    ProjectIssueTypeHierarchy,

    /**
     * The ProjectIssueTypesHierarchyLevel model constructor.
     * @property {module:model/ProjectIssueTypesHierarchyLevel}
     */
    ProjectIssueTypesHierarchyLevel,

    /**
     * The ProjectPermissions model constructor.
     * @property {module:model/ProjectPermissions}
     */
    ProjectPermissions,

    /**
     * The ProjectRole model constructor.
     * @property {module:model/ProjectRole}
     */
    ProjectRole,

    /**
     * The ProjectRoleActorsUpdateBean model constructor.
     * @property {module:model/ProjectRoleActorsUpdateBean}
     */
    ProjectRoleActorsUpdateBean,

    /**
     * The ProjectRoleGroup model constructor.
     * @property {module:model/ProjectRoleGroup}
     */
    ProjectRoleGroup,

    /**
     * The ProjectRoleUser model constructor.
     * @property {module:model/ProjectRoleUser}
     */
    ProjectRoleUser,

    /**
     * The ProjectScopeBean model constructor.
     * @property {module:model/ProjectScopeBean}
     */
    ProjectScopeBean,

    /**
     * The ProjectType model constructor.
     * @property {module:model/ProjectType}
     */
    ProjectType,

    /**
     * The PropertyKey model constructor.
     * @property {module:model/PropertyKey}
     */
    PropertyKey,

    /**
     * The PropertyKeys model constructor.
     * @property {module:model/PropertyKeys}
     */
    PropertyKeys,

    /**
     * The PublishedWorkflowId model constructor.
     * @property {module:model/PublishedWorkflowId}
     */
    PublishedWorkflowId,

    /**
     * The RegisteredWebhook model constructor.
     * @property {module:model/RegisteredWebhook}
     */
    RegisteredWebhook,

    /**
     * The RemoteIssueLink model constructor.
     * @property {module:model/RemoteIssueLink}
     */
    RemoteIssueLink,

    /**
     * The RemoteIssueLinkIdentifies model constructor.
     * @property {module:model/RemoteIssueLinkIdentifies}
     */
    RemoteIssueLinkIdentifies,

    /**
     * The RemoteIssueLinkRequest model constructor.
     * @property {module:model/RemoteIssueLinkRequest}
     */
    RemoteIssueLinkRequest,

    /**
     * The RemoteObject model constructor.
     * @property {module:model/RemoteObject}
     */
    RemoteObject,

    /**
     * The RemoveOptionFromIssuesResult model constructor.
     * @property {module:model/RemoveOptionFromIssuesResult}
     */
    RemoveOptionFromIssuesResult,

    /**
     * The RenamedCascadingOption model constructor.
     * @property {module:model/RenamedCascadingOption}
     */
    RenamedCascadingOption,

    /**
     * The RenamedOption model constructor.
     * @property {module:model/RenamedOption}
     */
    RenamedOption,

    /**
     * The Resolution model constructor.
     * @property {module:model/Resolution}
     */
    Resolution,

    /**
     * The RestrictedPermission model constructor.
     * @property {module:model/RestrictedPermission}
     */
    RestrictedPermission,

    /**
     * The RichText model constructor.
     * @property {module:model/RichText}
     */
    RichText,

    /**
     * The RoleActor model constructor.
     * @property {module:model/RoleActor}
     */
    RoleActor,

    /**
     * The RuleConfiguration model constructor.
     * @property {module:model/RuleConfiguration}
     */
    RuleConfiguration,

    /**
     * The Scope model constructor.
     * @property {module:model/Scope}
     */
    Scope,

    /**
     * The Screen model constructor.
     * @property {module:model/Screen}
     */
    Screen,

    /**
     * The ScreenID model constructor.
     * @property {module:model/ScreenID}
     */
    ScreenID,

    /**
     * The ScreenScheme model constructor.
     * @property {module:model/ScreenScheme}
     */
    ScreenScheme,

    /**
     * The ScreenTypeIDsBean model constructor.
     * @property {module:model/ScreenTypeIDsBean}
     */
    ScreenTypeIDsBean,

    /**
     * The ScreenableField model constructor.
     * @property {module:model/ScreenableField}
     */
    ScreenableField,

    /**
     * The ScreenableTab model constructor.
     * @property {module:model/ScreenableTab}
     */
    ScreenableTab,

    /**
     * The SearchRequestBean model constructor.
     * @property {module:model/SearchRequestBean}
     */
    SearchRequestBean,

    /**
     * The SearchResults model constructor.
     * @property {module:model/SearchResults}
     */
    SearchResults,

    /**
     * The SecurityLevel model constructor.
     * @property {module:model/SecurityLevel}
     */
    SecurityLevel,

    /**
     * The SecurityScheme model constructor.
     * @property {module:model/SecurityScheme}
     */
    SecurityScheme,

    /**
     * The SecuritySchemes model constructor.
     * @property {module:model/SecuritySchemes}
     */
    SecuritySchemes,

    /**
     * The ServerInformation model constructor.
     * @property {module:model/ServerInformation}
     */
    ServerInformation,

    /**
     * The SharePermission model constructor.
     * @property {module:model/SharePermission}
     */
    SharePermission,

    /**
     * The SharePermissionInputBean model constructor.
     * @property {module:model/SharePermissionInputBean}
     */
    SharePermissionInputBean,

    /**
     * The SimpleApplicationPropertyBean model constructor.
     * @property {module:model/SimpleApplicationPropertyBean}
     */
    SimpleApplicationPropertyBean,

    /**
     * The SimpleErrorCollection model constructor.
     * @property {module:model/SimpleErrorCollection}
     */
    SimpleErrorCollection,

    /**
     * The SimpleLink model constructor.
     * @property {module:model/SimpleLink}
     */
    SimpleLink,

    /**
     * The SimpleListWrapperApplicationRole model constructor.
     * @property {module:model/SimpleListWrapperApplicationRole}
     */
    SimpleListWrapperApplicationRole,

    /**
     * The SimpleListWrapperGroupName model constructor.
     * @property {module:model/SimpleListWrapperGroupName}
     */
    SimpleListWrapperGroupName,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The StatusCategory model constructor.
     * @property {module:model/StatusCategory}
     */
    StatusCategory,

    /**
     * The StatusDetails model constructor.
     * @property {module:model/StatusDetails}
     */
    StatusDetails,

    /**
     * The SuggestedIssue model constructor.
     * @property {module:model/SuggestedIssue}
     */
    SuggestedIssue,

    /**
     * The SystemAvatars model constructor.
     * @property {module:model/SystemAvatars}
     */
    SystemAvatars,

    /**
     * The TaskProgressBeanObject model constructor.
     * @property {module:model/TaskProgressBeanObject}
     */
    TaskProgressBeanObject,

    /**
     * The TaskProgressBeanRemoveOptionFromIssuesResult model constructor.
     * @property {module:model/TaskProgressBeanRemoveOptionFromIssuesResult}
     */
    TaskProgressBeanRemoveOptionFromIssuesResult,

    /**
     * The TimeTrackingConfiguration model constructor.
     * @property {module:model/TimeTrackingConfiguration}
     */
    TimeTrackingConfiguration,

    /**
     * The TimeTrackingProvider model constructor.
     * @property {module:model/TimeTrackingProvider}
     */
    TimeTrackingProvider,

    /**
     * The Transition model constructor.
     * @property {module:model/Transition}
     */
    Transition,

    /**
     * The Transitions model constructor.
     * @property {module:model/Transitions}
     */
    Transitions,

    /**
     * The UnrestrictedUserEmail model constructor.
     * @property {module:model/UnrestrictedUserEmail}
     */
    UnrestrictedUserEmail,

    /**
     * The UpdateCustomFieldOption model constructor.
     * @property {module:model/UpdateCustomFieldOption}
     */
    UpdateCustomFieldOption,

    /**
     * The UpdateUserToGroupBean model constructor.
     * @property {module:model/UpdateUserToGroupBean}
     */
    UpdateUserToGroupBean,

    /**
     * The UpdatedProjectCategory model constructor.
     * @property {module:model/UpdatedProjectCategory}
     */
    UpdatedProjectCategory,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserBean model constructor.
     * @property {module:model/UserBean}
     */
    UserBean,

    /**
     * The UserBeanAvatarUrls model constructor.
     * @property {module:model/UserBeanAvatarUrls}
     */
    UserBeanAvatarUrls,

    /**
     * The UserDetails model constructor.
     * @property {module:model/UserDetails}
     */
    UserDetails,

    /**
     * The UserKey model constructor.
     * @property {module:model/UserKey}
     */
    UserKey,

    /**
     * The UserList model constructor.
     * @property {module:model/UserList}
     */
    UserList,

    /**
     * The UserMigrationBean model constructor.
     * @property {module:model/UserMigrationBean}
     */
    UserMigrationBean,

    /**
     * The UserPermission model constructor.
     * @property {module:model/UserPermission}
     */
    UserPermission,

    /**
     * The UserPickerUser model constructor.
     * @property {module:model/UserPickerUser}
     */
    UserPickerUser,

    /**
     * The UserWriteBean model constructor.
     * @property {module:model/UserWriteBean}
     */
    UserWriteBean,

    /**
     * The ValueOperand model constructor.
     * @property {module:model/ValueOperand}
     */
    ValueOperand,

    /**
     * The Version model constructor.
     * @property {module:model/Version}
     */
    Version,

    /**
     * The VersionIssueCounts model constructor.
     * @property {module:model/VersionIssueCounts}
     */
    VersionIssueCounts,

    /**
     * The VersionIssuesStatus model constructor.
     * @property {module:model/VersionIssuesStatus}
     */
    VersionIssuesStatus,

    /**
     * The VersionMoveBean model constructor.
     * @property {module:model/VersionMoveBean}
     */
    VersionMoveBean,

    /**
     * The VersionUnresolvedIssuesCount model constructor.
     * @property {module:model/VersionUnresolvedIssuesCount}
     */
    VersionUnresolvedIssuesCount,

    /**
     * The VersionUsageInCustomField model constructor.
     * @property {module:model/VersionUsageInCustomField}
     */
    VersionUsageInCustomField,

    /**
     * The Visibility model constructor.
     * @property {module:model/Visibility}
     */
    Visibility,

    /**
     * The Votes model constructor.
     * @property {module:model/Votes}
     */
    Votes,

    /**
     * The Watchers model constructor.
     * @property {module:model/Watchers}
     */
    Watchers,

    /**
     * The Webhook model constructor.
     * @property {module:model/Webhook}
     */
    Webhook,

    /**
     * The WebhookDetails model constructor.
     * @property {module:model/WebhookDetails}
     */
    WebhookDetails,

    /**
     * The WebhookRegistrationDetails model constructor.
     * @property {module:model/WebhookRegistrationDetails}
     */
    WebhookRegistrationDetails,

    /**
     * The WebhooksExpirationDate model constructor.
     * @property {module:model/WebhooksExpirationDate}
     */
    WebhooksExpirationDate,

    /**
     * The Workflow model constructor.
     * @property {module:model/Workflow}
     */
    Workflow,

    /**
     * The WorkflowId model constructor.
     * @property {module:model/WorkflowId}
     */
    WorkflowId,

    /**
     * The WorkflowRules model constructor.
     * @property {module:model/WorkflowRules}
     */
    WorkflowRules,

    /**
     * The WorkflowScheme model constructor.
     * @property {module:model/WorkflowScheme}
     */
    WorkflowScheme,

    /**
     * The WorkflowSchemeAssociations model constructor.
     * @property {module:model/WorkflowSchemeAssociations}
     */
    WorkflowSchemeAssociations,

    /**
     * The WorkflowStatus model constructor.
     * @property {module:model/WorkflowStatus}
     */
    WorkflowStatus,

    /**
     * The WorkflowStatusProperties model constructor.
     * @property {module:model/WorkflowStatusProperties}
     */
    WorkflowStatusProperties,

    /**
     * The WorkflowTransition model constructor.
     * @property {module:model/WorkflowTransition}
     */
    WorkflowTransition,

    /**
     * The WorkflowTransitionProperty model constructor.
     * @property {module:model/WorkflowTransitionProperty}
     */
    WorkflowTransitionProperty,

    /**
     * The WorkflowTransitionRule model constructor.
     * @property {module:model/WorkflowTransitionRule}
     */
    WorkflowTransitionRule,

    /**
     * The WorkflowTransitionRules model constructor.
     * @property {module:model/WorkflowTransitionRules}
     */
    WorkflowTransitionRules,

    /**
     * The WorkflowTransitionRulesUpdate model constructor.
     * @property {module:model/WorkflowTransitionRulesUpdate}
     */
    WorkflowTransitionRulesUpdate,

    /**
     * The WorkflowTransitionRulesUpdateErrorDetails model constructor.
     * @property {module:model/WorkflowTransitionRulesUpdateErrorDetails}
     */
    WorkflowTransitionRulesUpdateErrorDetails,

    /**
     * The WorkflowTransitionRulesUpdateErrors model constructor.
     * @property {module:model/WorkflowTransitionRulesUpdateErrors}
     */
    WorkflowTransitionRulesUpdateErrors,

    /**
     * The Worklog model constructor.
     * @property {module:model/Worklog}
     */
    Worklog,

    /**
     * The WorklogIdsRequestBean model constructor.
     * @property {module:model/WorklogIdsRequestBean}
     */
    WorklogIdsRequestBean,

    /**
    * The AppPropertiesApi service constructor.
    * @property {module:api/AppPropertiesApi}
    */
    AppPropertiesApi,

    /**
    * The ApplicationRolesApi service constructor.
    * @property {module:api/ApplicationRolesApi}
    */
    ApplicationRolesApi,

    /**
    * The AuditRecordsApi service constructor.
    * @property {module:api/AuditRecordsApi}
    */
    AuditRecordsApi,

    /**
    * The AvatarsApi service constructor.
    * @property {module:api/AvatarsApi}
    */
    AvatarsApi,

    /**
    * The DashboardsApi service constructor.
    * @property {module:api/DashboardsApi}
    */
    DashboardsApi,

    /**
    * The DynamicModulesApi service constructor.
    * @property {module:api/DynamicModulesApi}
    */
    DynamicModulesApi,

    /**
    * The FilterSharingApi service constructor.
    * @property {module:api/FilterSharingApi}
    */
    FilterSharingApi,

    /**
    * The FiltersApi service constructor.
    * @property {module:api/FiltersApi}
    */
    FiltersApi,

    /**
    * The GroupAndUserPickerApi service constructor.
    * @property {module:api/GroupAndUserPickerApi}
    */
    GroupAndUserPickerApi,

    /**
    * The GroupsApi service constructor.
    * @property {module:api/GroupsApi}
    */
    GroupsApi,

    /**
    * The IssueAttachmentsApi service constructor.
    * @property {module:api/IssueAttachmentsApi}
    */
    IssueAttachmentsApi,

    /**
    * The IssueCommentPropertiesApi service constructor.
    * @property {module:api/IssueCommentPropertiesApi}
    */
    IssueCommentPropertiesApi,

    /**
    * The IssueCommentsApi service constructor.
    * @property {module:api/IssueCommentsApi}
    */
    IssueCommentsApi,

    /**
    * The IssueCustomFieldOptionsApi service constructor.
    * @property {module:api/IssueCustomFieldOptionsApi}
    */
    IssueCustomFieldOptionsApi,

    /**
    * The IssueCustomFieldOptionsAppsApi service constructor.
    * @property {module:api/IssueCustomFieldOptionsAppsApi}
    */
    IssueCustomFieldOptionsAppsApi,

    /**
    * The IssueFieldConfigurationsApi service constructor.
    * @property {module:api/IssueFieldConfigurationsApi}
    */
    IssueFieldConfigurationsApi,

    /**
    * The IssueFieldsApi service constructor.
    * @property {module:api/IssueFieldsApi}
    */
    IssueFieldsApi,

    /**
    * The IssueLinkTypesApi service constructor.
    * @property {module:api/IssueLinkTypesApi}
    */
    IssueLinkTypesApi,

    /**
    * The IssueLinksApi service constructor.
    * @property {module:api/IssueLinksApi}
    */
    IssueLinksApi,

    /**
    * The IssueNavigatorSettingsApi service constructor.
    * @property {module:api/IssueNavigatorSettingsApi}
    */
    IssueNavigatorSettingsApi,

    /**
    * The IssueNotificationSchemesApi service constructor.
    * @property {module:api/IssueNotificationSchemesApi}
    */
    IssueNotificationSchemesApi,

    /**
    * The IssuePrioritiesApi service constructor.
    * @property {module:api/IssuePrioritiesApi}
    */
    IssuePrioritiesApi,

    /**
    * The IssuePropertiesApi service constructor.
    * @property {module:api/IssuePropertiesApi}
    */
    IssuePropertiesApi,

    /**
    * The IssueRemoteLinksApi service constructor.
    * @property {module:api/IssueRemoteLinksApi}
    */
    IssueRemoteLinksApi,

    /**
    * The IssueResolutionsApi service constructor.
    * @property {module:api/IssueResolutionsApi}
    */
    IssueResolutionsApi,

    /**
    * The IssueSearchApi service constructor.
    * @property {module:api/IssueSearchApi}
    */
    IssueSearchApi,

    /**
    * The IssueSecurityLevelApi service constructor.
    * @property {module:api/IssueSecurityLevelApi}
    */
    IssueSecurityLevelApi,

    /**
    * The IssueSecuritySchemesApi service constructor.
    * @property {module:api/IssueSecuritySchemesApi}
    */
    IssueSecuritySchemesApi,

    /**
    * The IssueTypePropertiesApi service constructor.
    * @property {module:api/IssueTypePropertiesApi}
    */
    IssueTypePropertiesApi,

    /**
    * The IssueTypeSchemesApi service constructor.
    * @property {module:api/IssueTypeSchemesApi}
    */
    IssueTypeSchemesApi,

    /**
    * The IssueTypeScreenSchemesApi service constructor.
    * @property {module:api/IssueTypeScreenSchemesApi}
    */
    IssueTypeScreenSchemesApi,

    /**
    * The IssueTypesApi service constructor.
    * @property {module:api/IssueTypesApi}
    */
    IssueTypesApi,

    /**
    * The IssueVotesApi service constructor.
    * @property {module:api/IssueVotesApi}
    */
    IssueVotesApi,

    /**
    * The IssueWatchersApi service constructor.
    * @property {module:api/IssueWatchersApi}
    */
    IssueWatchersApi,

    /**
    * The IssueWorklogPropertiesApi service constructor.
    * @property {module:api/IssueWorklogPropertiesApi}
    */
    IssueWorklogPropertiesApi,

    /**
    * The IssueWorklogsApi service constructor.
    * @property {module:api/IssueWorklogsApi}
    */
    IssueWorklogsApi,

    /**
    * The IssuesApi service constructor.
    * @property {module:api/IssuesApi}
    */
    IssuesApi,

    /**
    * The JQLApi service constructor.
    * @property {module:api/JQLApi}
    */
    JQLApi,

    /**
    * The JiraExpressionsApi service constructor.
    * @property {module:api/JiraExpressionsApi}
    */
    JiraExpressionsApi,

    /**
    * The JiraSettingsApi service constructor.
    * @property {module:api/JiraSettingsApi}
    */
    JiraSettingsApi,

    /**
    * The LabelsApi service constructor.
    * @property {module:api/LabelsApi}
    */
    LabelsApi,

    /**
    * The MyselfApi service constructor.
    * @property {module:api/MyselfApi}
    */
    MyselfApi,

    /**
    * The PermissionSchemesApi service constructor.
    * @property {module:api/PermissionSchemesApi}
    */
    PermissionSchemesApi,

    /**
    * The PermissionsApi service constructor.
    * @property {module:api/PermissionsApi}
    */
    PermissionsApi,

    /**
    * The ProjectAvatarsApi service constructor.
    * @property {module:api/ProjectAvatarsApi}
    */
    ProjectAvatarsApi,

    /**
    * The ProjectCategoriesApi service constructor.
    * @property {module:api/ProjectCategoriesApi}
    */
    ProjectCategoriesApi,

    /**
    * The ProjectComponentsApi service constructor.
    * @property {module:api/ProjectComponentsApi}
    */
    ProjectComponentsApi,

    /**
    * The ProjectKeyAndNameValidationApi service constructor.
    * @property {module:api/ProjectKeyAndNameValidationApi}
    */
    ProjectKeyAndNameValidationApi,

    /**
    * The ProjectPermissionSchemesApi service constructor.
    * @property {module:api/ProjectPermissionSchemesApi}
    */
    ProjectPermissionSchemesApi,

    /**
    * The ProjectPropertiesApi service constructor.
    * @property {module:api/ProjectPropertiesApi}
    */
    ProjectPropertiesApi,

    /**
    * The ProjectRoleActorsApi service constructor.
    * @property {module:api/ProjectRoleActorsApi}
    */
    ProjectRoleActorsApi,

    /**
    * The ProjectRolesApi service constructor.
    * @property {module:api/ProjectRolesApi}
    */
    ProjectRolesApi,

    /**
    * The ProjectTypesApi service constructor.
    * @property {module:api/ProjectTypesApi}
    */
    ProjectTypesApi,

    /**
    * The ProjectVersionsApi service constructor.
    * @property {module:api/ProjectVersionsApi}
    */
    ProjectVersionsApi,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi,

    /**
    * The ScreensApi service constructor.
    * @property {module:api/ScreensApi}
    */
    ScreensApi,

    /**
    * The ServerInfoApi service constructor.
    * @property {module:api/ServerInfoApi}
    */
    ServerInfoApi,

    /**
    * The TasksApi service constructor.
    * @property {module:api/TasksApi}
    */
    TasksApi,

    /**
    * The TimeTrackingApi service constructor.
    * @property {module:api/TimeTrackingApi}
    */
    TimeTrackingApi,

    /**
    * The UserPropertiesApi service constructor.
    * @property {module:api/UserPropertiesApi}
    */
    UserPropertiesApi,

    /**
    * The UserSearchApi service constructor.
    * @property {module:api/UserSearchApi}
    */
    UserSearchApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi,

    /**
    * The WebhooksApi service constructor.
    * @property {module:api/WebhooksApi}
    */
    WebhooksApi,

    /**
    * The WorkflowSchemeDraftsApi service constructor.
    * @property {module:api/WorkflowSchemeDraftsApi}
    */
    WorkflowSchemeDraftsApi,

    /**
    * The WorkflowSchemeProjectAssociationsApi service constructor.
    * @property {module:api/WorkflowSchemeProjectAssociationsApi}
    */
    WorkflowSchemeProjectAssociationsApi,

    /**
    * The WorkflowSchemesApi service constructor.
    * @property {module:api/WorkflowSchemesApi}
    */
    WorkflowSchemesApi,

    /**
    * The WorkflowStatusCategoriesApi service constructor.
    * @property {module:api/WorkflowStatusCategoriesApi}
    */
    WorkflowStatusCategoriesApi,

    /**
    * The WorkflowStatusesApi service constructor.
    * @property {module:api/WorkflowStatusesApi}
    */
    WorkflowStatusesApi,

    /**
    * The WorkflowTransitionPropertiesApi service constructor.
    * @property {module:api/WorkflowTransitionPropertiesApi}
    */
    WorkflowTransitionPropertiesApi,

    /**
    * The WorkflowTransitionRulesApi service constructor.
    * @property {module:api/WorkflowTransitionRulesApi}
    */
    WorkflowTransitionRulesApi,

    /**
    * The WorkflowsApi service constructor.
    * @property {module:api/WorkflowsApi}
    */
    WorkflowsApi
};
