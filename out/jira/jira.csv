api,http-method,description,functionName,functionParameters
/comment/{commentId}/properties,GET,"
Get comment property keys

",commentCommentIdPropertiesGet,cloudid commentId
/comment/{commentId}/properties/{propertyKey},DELETE,"
Delete comment property

",commentCommentIdPropertiesPropertyKeyDelete,cloudid commentId propertyKey
/comment/{commentId}/properties/{propertyKey},GET,"
Get comment property

",commentCommentIdPropertiesPropertyKeyGet,cloudid commentId propertyKey
/comment/{commentId}/properties/{propertyKey},PUT,"
Set comment property

",commentCommentIdPropertiesPropertyKeyPut,cloudid commentId propertyKey body
/workflow/rule/config,GET,"
Get workflow transition rule configurations

",workflowRuleConfigGet,cloudid types opts
/workflow/rule/config,PUT,"
Update workflow transition rule configurations

",workflowRuleConfigPut,cloudid body
/rest/atlassian-connect/1/app/module/dynamic,DELETE,"
Remove modules

",restAtlassianConnect1AppModuleDynamicDelete,cloudid opts
/rest/atlassian-connect/1/app/module/dynamic,GET,"
Get modules

",restAtlassianConnect1AppModuleDynamicGet,cloudid
/rest/atlassian-connect/1/app/module/dynamic,POST,"
Register modules

",restAtlassianConnect1AppModuleDynamicPost,cloudid body
/projectCategory,GET,"
Get all project categories

",projectCategoryGet,cloudid
/projectCategory/{id},DELETE,"
Delete project category

",projectCategoryIdDelete,cloudid id
/projectCategory/{id},GET,"
Get project category by id

",projectCategoryIdGet,cloudid id
/projectCategory/{id},PUT,"
Update project category

",projectCategoryIdPut,cloudid id body
/projectCategory,POST,"
Create project category

",projectCategoryPost,cloudid body
/jql/autocompletedata,GET,"
Get field reference data

",jqlAutocompletedataGet,cloudid
/jql/autocompletedata/suggestions,GET,"
Get field auto complete suggestions

",jqlAutocompletedataSuggestionsGet,cloudid opts
/jql/parse,POST,"
Parse JQL query

",jqlParsePost,cloudid body
/jql/pdcleaner,POST,"
Convert user identifiers to account IDs in JQL queries

",jqlPdcleanerPost,cloudid body
/issue/picker,GET,"
Get issue picker suggestions

",issuePickerGet,cloudid opts
/jql/match,POST,"
Check issues against JQL

",jqlMatchPost,cloudid body
/search,GET,"
Search for issues using JQL (GET)

",searchGet,cloudid opts
/search,POST,"
Search for issues using JQL (POST)

",searchPost,cloudid body
/avatar/{type}/system,GET,"
Get system avatars by type

",avatarTypeSystemGet,cloudid type
/universal_avatar/type/{type}/owner/{entityId},GET,"
Get avatars

",universalAvatarTypeTypeOwnerEntityIdGet,cloudid type entityId
/universal_avatar/type/{type}/owner/{entityId},POST,"
Load avatar

",universalAvatarTypeTypeOwnerEntityIdPost,cloudid type entityId size body opts
/universal_avatar/type/{type}/owner/{owningObjectId}/avatar/{id},DELETE,"
Delete avatar

",universalAvatarTypeTypeOwnerOwningObjectIdAvatarIdDelete,cloudid type owningObjectId id
/project/{projectIdOrKey}/role/{id},DELETE,"
Delete actors from project role

",projectProjectIdOrKeyRoleIdDelete,cloudid projectIdOrKey id opts
/project/{projectIdOrKey}/role/{id},POST,"
Add actors to project role

",projectProjectIdOrKeyRoleIdPost,cloudid projectIdOrKey id body
/project/{projectIdOrKey}/role/{id},PUT,"
Set actors for project role

",projectProjectIdOrKeyRoleIdPut,cloudid projectIdOrKey id body
/role/{id}/actors,DELETE,"
Delete default actors from project role

",roleIdActorsDelete,cloudid id opts
/role/{id}/actors,GET,"
Get default actors for project role

",roleIdActorsGet,cloudid id
/role/{id}/actors,POST,"
Add default actors to project role

",roleIdActorsPost,cloudid id body
/expression/analyse,POST,"
Analyse Jira expression

",expressionAnalysePost,cloudid body
/expression/eval,POST,"
Evaluate Jira expression

",expressionEvalPost,cloudid body opts
/issuesecurityschemes,GET,"
Get issue security schemes

",issuesecurityschemesGet,cloudid
/issuesecurityschemes/{id},GET,"
Get issue security scheme

",issuesecurityschemesIdGet,cloudid id
/attachment/{id},DELETE,"
Delete attachment

",attachmentIdDelete,cloudid id
/attachment/{id}/expand/human,GET,"
Get all metadata for an expanded attachment

",attachmentIdExpandHumanGet,cloudid id
/attachment/{id}/expand/raw,GET,"
Get contents metadata for an expanded attachment

",attachmentIdExpandRawGet,cloudid id
/attachment/{id},GET,"
Get attachment metadata

",attachmentIdGet,cloudid id
/attachment/meta,GET,"
Get Jira attachment settings

",attachmentMetaGet,cloudid
/issue/{issueIdOrKey}/attachments,POST,"
Add attachment

",issueIssueIdOrKeyAttachmentsPost,cloudid issueIdOrKey opts
/issuesecurityschemes/{issueSecuritySchemeId}/members,GET,"
Get issue security level members

",issuesecurityschemesIssueSecuritySchemeIdMembersGet,cloudid issueSecuritySchemeId opts
/securitylevel/{id},GET,"
Get issue security level

",securitylevelIdGet,cloudid id
/project/{projectIdOrKey}/role,GET,"
Get project roles for project

",projectProjectIdOrKeyRoleGet,cloudid projectIdOrKey
/project/{projectIdOrKey}/role/{id},GET,"
Get project role for project

",projectProjectIdOrKeyRoleIdGet,cloudid projectIdOrKey id
/project/{projectIdOrKey}/roledetails,GET,"
Get project role details

",projectProjectIdOrKeyRoledetailsGet,cloudid projectIdOrKey opts
/role,GET,"
Get all project roles

",roleGet,cloudid
/role/{id},DELETE,"
Delete project role

",roleIdDelete,cloudid id opts
/role/{id},GET,"
Get project role by ID

",roleIdGet,cloudid id
/role/{id},POST,"
Partial update project role

",roleIdPost,cloudid id body
/role/{id},PUT,"
Fully update project role

",roleIdPut,cloudid id body
/role,POST,"
Create project role

",rolePost,cloudid body
/mypermissions,GET,"
Get my permissions

",mypermissionsGet,cloudid opts
/permissions/check,POST,"
Get bulk permissions

",permissionsCheckPost,cloudid body
/permissions,GET,"
Get all permissions

",permissionsGet,cloudid
/permissions/project,POST,"
Get permitted projects

",permissionsProjectPost,cloudid body
/field/{fieldId}/screens,GET,"
Get screens for a field

",fieldFieldIdScreensGet,cloudid fieldId opts
/screens/addToDefault/{fieldId},POST,"
Add field to default screen

",screensAddToDefaultFieldIdPost,cloudid fieldId
/screens,GET,"
Get all screens

",screensGet,cloudid opts
/screens/{screenId}/availableFields,GET,"
Get available screen fields

",screensScreenIdAvailableFieldsGet,cloudid screenId
/screens/{screenId}/tabs,GET,"
Get all screen tabs

",screensScreenIdTabsGet,cloudid screenId opts
/screens/{screenId}/tabs,POST,"
Create screen tab

",screensScreenIdTabsPost,cloudid screenId body
/screens/{screenId}/tabs/{tabId},DELETE,"
Delete screen tab

",screensScreenIdTabsTabIdDelete,cloudid screenId tabId
/screens/{screenId}/tabs/{tabId}/fields,GET,"
Get all screen tab fields

",screensScreenIdTabsTabIdFieldsGet,cloudid screenId tabId opts
/screens/{screenId}/tabs/{tabId}/fields/{id},DELETE,"
Remove screen tab field

",screensScreenIdTabsTabIdFieldsIdDelete,cloudid screenId tabId id
/screens/{screenId}/tabs/{tabId}/fields/{id}/move,POST,"
Move screen tab field

",screensScreenIdTabsTabIdFieldsIdMovePost,cloudid screenId tabId id body
/screens/{screenId}/tabs/{tabId}/fields,POST,"
Add screen tab field

",screensScreenIdTabsTabIdFieldsPost,cloudid screenId tabId body
/screens/{screenId}/tabs/{tabId}/move/{pos},POST,"
Move screen tab

",screensScreenIdTabsTabIdMovePosPost,cloudid screenId tabId pos
/screens/{screenId}/tabs/{tabId},PUT,"
Update screen tab

",screensScreenIdTabsTabIdPut,cloudid screenId tabId body
/screenscheme,GET,"
Get screen schemes

",screenschemeGet,cloudid opts
/user/assignable/multiProjectSearch,GET,"
Find users assignable to projects

",userAssignableMultiProjectSearchGet,cloudid projectKeys opts
/user/assignable/search,GET,"
Find users assignable to issues

",userAssignableSearchGet,cloudid opts
/user/permission/search,GET,"
Find users with permissions

",userPermissionSearchGet,cloudid permissions opts
/user/picker,GET,"
Find users for picker

",userPickerGet,cloudid query opts
/user/search,GET,"
Find users

",userSearchGet,cloudid opts
/user/search/query,GET,"
Find users by query

",userSearchQueryGet,cloudid query opts
/user/search/query/key,GET,"
Find user keys by query

",userSearchQueryKeyGet,cloudid query opts
/user/viewissue/search,GET,"
Find users with browse permission

",userViewissueSearchGet,cloudid opts
/issue/{issueIdOrKey}/watchers,DELETE,"
Delete watcher

",issueIssueIdOrKeyWatchersDelete,cloudid issueIdOrKey opts
/issue/{issueIdOrKey}/watchers,GET,"
Get issue watchers

",issueIssueIdOrKeyWatchersGet,cloudid issueIdOrKey
/issue/{issueIdOrKey}/watchers,POST,"
Add watcher

",issueIssueIdOrKeyWatchersPost,cloudid issueIdOrKey body
/issue/{issueIdOrKey}/worklog/{worklogId}/properties,GET,"
Get worklog property keys

",issueIssueIdOrKeyWorklogWorklogIdPropertiesGet,cloudid issueIdOrKey worklogId
/issue/{issueIdOrKey}/worklog/{worklogId}/properties/{propertyKey},DELETE,"
Delete worklog property

",issueIssueIdOrKeyWorklogWorklogIdPropertiesPropertyKeyDelete,cloudid issueIdOrKey worklogId propertyKey
/issue/{issueIdOrKey}/worklog/{worklogId}/properties/{propertyKey},GET,"
Get worklog property

",issueIssueIdOrKeyWorklogWorklogIdPropertiesPropertyKeyGet,cloudid issueIdOrKey worklogId propertyKey
/issue/{issueIdOrKey}/worklog/{worklogId}/properties/{propertyKey},PUT,"
Set worklog property

",issueIssueIdOrKeyWorklogWorklogIdPropertiesPropertyKeyPut,cloudid issueIdOrKey worklogId propertyKey body
/workflow/transitions/{transitionId}/properties,DELETE,"
Delete workflow transition property

",workflowTransitionsTransitionIdPropertiesDelete,cloudid transitionId key workflowName opts
/workflow/transitions/{transitionId}/properties,GET,"
Get workflow transition properties

",workflowTransitionsTransitionIdPropertiesGet,cloudid transitionId workflowName opts
/workflow/transitions/{transitionId}/properties,POST,"
Create workflow transition property

",workflowTransitionsTransitionIdPropertiesPost,cloudid transitionId key workflowName body opts
/workflow/transitions/{transitionId}/properties,PUT,"
Update workflow transition property

",workflowTransitionsTransitionIdPropertiesPut,cloudid transitionId key workflowName body opts
/settings/columns,GET,"
Get issue navigator default columns

",settingsColumnsGet,cloudid
/settings/columns,PUT,"
Set issue navigator default columns

",settingsColumnsPut,cloudid opts
/auditing/record,GET,"
Get audit records

",auditingRecordGet,cloudid opts
/project/{projectIdOrKey}/properties,GET,"
Get project property keys

",projectProjectIdOrKeyPropertiesGet,cloudid projectIdOrKey
/project/{projectIdOrKey}/properties/{propertyKey},DELETE,"
Delete project property

",projectProjectIdOrKeyPropertiesPropertyKeyDelete,cloudid projectIdOrKey propertyKey
/project/{projectIdOrKey}/properties/{propertyKey},GET,"
Get project property

",projectProjectIdOrKeyPropertiesPropertyKeyGet,cloudid projectIdOrKey propertyKey
/project/{projectIdOrKey}/properties/{propertyKey},PUT,"
Set project property

",projectProjectIdOrKeyPropertiesPropertyKeyPut,cloudid projectIdOrKey propertyKey body
/project/{projectIdOrKey}/version,GET,"
Get project versions paginated

",projectProjectIdOrKeyVersionGet,cloudid projectIdOrKey opts
/project/{projectIdOrKey}/versions,GET,"
Get project versions

",projectProjectIdOrKeyVersionsGet,cloudid projectIdOrKey opts
/version/{id},DELETE,"
Delete version

",versionIdDelete,cloudid id opts
/version/{id},GET,"
Get version

",versionIdGet,cloudid id opts
/version/{id}/mergeto/{moveIssuesTo},PUT,"
Merge versions

",versionIdMergetoMoveIssuesToPut,cloudid id moveIssuesTo
/version/{id}/move,POST,"
Move version

",versionIdMovePost,cloudid id body
/version/{id},PUT,"
Update version

",versionIdPut,cloudid id body
/version/{id}/relatedIssueCounts,GET,"
Get version&#39;s related issues count

",versionIdRelatedIssueCountsGet,cloudid id
/version/{id}/removeAndSwap,POST,"
Delete and replace version

",versionIdRemoveAndSwapPost,cloudid id body
/version/{id}/unresolvedIssueCount,GET,"
Get version&#39;s unresolved issues count

",versionIdUnresolvedIssueCountGet,cloudid id
/version,POST,"
Create version

",versionPost,cloudid body
/notificationscheme,GET,"
Get notification schemes paginated

",notificationschemeGet,cloudid opts
/notificationscheme/{id},GET,"
Get notification scheme

",notificationschemeIdGet,cloudid id opts
/user/bulk,GET,"
Bulk get users

",userBulkGet,cloudid accountId opts
/user/bulk/migration,GET,"
Get account IDs for users

",userBulkMigrationGet,cloudid opts
/user/columns,DELETE,"
Reset user default columns

",userColumnsDelete,cloudid opts
/user/columns,GET,"
Get user default columns

",userColumnsGet,cloudid opts
/user/columns,PUT,"
Set user default columns

",userColumnsPut,cloudid opts
/user,DELETE,"
Delete user

",userDelete,cloudid accountId opts
/user/email/bulk,GET,"
Get user email bulk

",userEmailBulkGet,cloudid accountId
/user/email,GET,"
Get user email

",userEmailGet,cloudid accountId
/user,GET,"
Get user

",userGet,cloudid opts
/user/groups,GET,"
Get user groups

",userGroupsGet,cloudid accountId opts
/user,POST,"
Create user

",userPost,cloudid body
/users,GET,"
Get all users default

",usersGet,cloudid opts
/users/search,GET,"
Get all users

",usersSearchGet,cloudid opts
/status,GET,"
Get all statuses

",statusGet,cloudid
/status/{idOrName},GET,"
Get status

",statusIdOrNameGet,cloudid idOrName
/issue/bulk,POST,"
Bulk create issue

",issueBulkPost,cloudid body
/issue/createmeta,GET,"
Get create issue metadata

",issueCreatemetaGet,cloudid opts
/issue/{issueIdOrKey}/assignee,PUT,"
Assign issue

",issueIssueIdOrKeyAssigneePut,cloudid issueIdOrKey body
/issue/{issueIdOrKey}/changelog,GET,"
Get change logs

",issueIssueIdOrKeyChangelogGet,cloudid issueIdOrKey opts
/issue/{issueIdOrKey},DELETE,"
Delete issue

",issueIssueIdOrKeyDelete,cloudid issueIdOrKey opts
/issue/{issueIdOrKey}/editmeta,GET,"
Get edit issue metadata

",issueIssueIdOrKeyEditmetaGet,cloudid issueIdOrKey opts
/issue/{issueIdOrKey},GET,"
Get issue

",issueIssueIdOrKeyGet,cloudid issueIdOrKey opts
/issue/{issueIdOrKey}/notify,POST,"
Send notification for issue

",issueIssueIdOrKeyNotifyPost,cloudid issueIdOrKey body
/issue/{issueIdOrKey},PUT,"
Edit issue

",issueIssueIdOrKeyPut,cloudid issueIdOrKey body opts
/issue/{issueIdOrKey}/transitions,GET,"
Get transitions

",issueIssueIdOrKeyTransitionsGet,cloudid issueIdOrKey opts
/issue/{issueIdOrKey}/transitions,POST,"
Transition issue

",issueIssueIdOrKeyTransitionsPost,cloudid issueIdOrKey body
/issue,POST,"
Create issue

",issuePost,cloudid body opts
/mypreferences,DELETE,"
Delete preference

",mypreferencesDelete,cloudid key
/mypreferences,GET,"
Get preference

",mypreferencesGet,cloudid key
/mypreferences/locale,DELETE,"
Delete locale

",mypreferencesLocaleDelete,cloudid
/mypreferences/locale,GET,"
Get locale

",mypreferencesLocaleGet,cloudid
/mypreferences/locale,PUT,"
Set locale

",mypreferencesLocalePut,cloudid body
/mypreferences,PUT,"
Set preference

",mypreferencesPut,cloudid key body
/myself,GET,"
Get current user

",myselfGet,cloudid opts
/issuetypescheme,GET,"
Get all issue type schemes

",issuetypeschemeGet,cloudid opts
/issuetypescheme/mapping,GET,"
Get issue type scheme items

",issuetypeschemeMappingGet,cloudid opts
/issuetypescheme/project,GET,"
Get issue type schemes for projects

",issuetypeschemeProjectGet,cloudid projectId opts
/issuetypescheme/project,PUT,"
Assign issue type scheme to project

",issuetypeschemeProjectPut,cloudid body
/comment/list,POST,"
Get comments by IDs

",commentListPost,cloudid body opts
/issue/{issueIdOrKey}/comment,GET,"
Get comments

",issueIssueIdOrKeyCommentGet,cloudid issueIdOrKey opts
/issue/{issueIdOrKey}/comment/{id},DELETE,"
Delete comment

",issueIssueIdOrKeyCommentIdDelete,cloudid issueIdOrKey id
/issue/{issueIdOrKey}/comment/{id},GET,"
Get comment

",issueIssueIdOrKeyCommentIdGet,cloudid issueIdOrKey id opts
/issue/{issueIdOrKey}/comment/{id},PUT,"
Update comment

",issueIssueIdOrKeyCommentIdPut,cloudid issueIdOrKey id body opts
/issue/{issueIdOrKey}/comment,POST,"
Add comment

",issueIssueIdOrKeyCommentPost,cloudid issueIdOrKey body opts
/filter/defaultShareScope,GET,"
Get default share scope

",filterDefaultShareScopeGet,cloudid
/filter/defaultShareScope,PUT,"
Set default share scope

",filterDefaultShareScopePut,cloudid body
/filter/{id}/permission,GET,"
Get share permissions

",filterIdPermissionGet,cloudid id
/filter/{id}/permission/{permissionId},DELETE,"
Delete share permission

",filterIdPermissionPermissionIdDelete,cloudid id permissionId
/filter/{id}/permission/{permissionId},GET,"
Get share permission

",filterIdPermissionPermissionIdGet,cloudid id permissionId
/filter/{id}/permission,POST,"
Add share permission

",filterIdPermissionPost,cloudid id body
/workflowscheme/project,GET,"
Get workflow scheme project associations

",workflowschemeProjectGet,cloudid projectId
/project/{projectIdOrKey}/avatar2,POST,"
Load project avatar

",projectProjectIdOrKeyAvatar2Post,cloudid projectIdOrKey body opts
/project/{projectIdOrKey}/avatar/{id},DELETE,"
Delete project avatar

",projectProjectIdOrKeyAvatarIdDelete,cloudid projectIdOrKey id
/project/{projectIdOrKey}/avatar,PUT,"
Set project avatar

",projectProjectIdOrKeyAvatarPut,cloudid projectIdOrKey body
/project/{projectIdOrKey}/avatars,GET,"
Get all project avatars

",projectProjectIdOrKeyAvatarsGet,cloudid projectIdOrKey
/issuetype,GET,"
Get all issue types for user

",issuetypeGet,cloudid
/issuetype/{id}/alternatives,GET,"
Get alternative issue types

",issuetypeIdAlternativesGet,cloudid id
/issuetype/{id}/avatar2,POST,"
Load issue type avatar

",issuetypeIdAvatar2Post,cloudid id size body opts
/issuetype/{id},DELETE,"
Delete issue type

",issuetypeIdDelete,cloudid id opts
/issuetype/{id},GET,"
Get issue type

",issuetypeIdGet,cloudid id
/issuetype/{id},PUT,"
Update issue type

",issuetypeIdPut,cloudid id body
/issuetype,POST,"
Create issue type

",issuetypePost,cloudid body
/workflowscheme,GET,"
Get all workflow schemes

",workflowschemeGet,cloudid opts
/workflowscheme/{id}/default,DELETE,"
Delete default workflow

",workflowschemeIdDefaultDelete,cloudid id opts
/workflowscheme/{id}/default,GET,"
Get default workflow

",workflowschemeIdDefaultGet,cloudid id opts
/workflowscheme/{id}/default,PUT,"
Update default workflow

",workflowschemeIdDefaultPut,cloudid id body
/workflowscheme/{id},DELETE,"
Delete workflow scheme

",workflowschemeIdDelete,cloudid id
/workflowscheme/{id},GET,"
Get workflow scheme

",workflowschemeIdGet,cloudid id opts
/workflowscheme/{id}/issuetype/{issueType},DELETE,"
Delete workflow for issue type in workflow scheme

",workflowschemeIdIssuetypeIssueTypeDelete,cloudid id issueType opts
/workflowscheme/{id}/issuetype/{issueType},GET,"
Get workflow for issue type in workflow scheme

",workflowschemeIdIssuetypeIssueTypeGet,cloudid id issueType opts
/workflowscheme/{id}/issuetype/{issueType},PUT,"
Set workflow for issue type in workflow scheme

",workflowschemeIdIssuetypeIssueTypePut,cloudid id issueType body
/workflowscheme/{id},PUT,"
Update workflow scheme

",workflowschemeIdPut,cloudid id body
/workflowscheme/{id}/workflow,DELETE,"
Delete issue types for workflow in workflow scheme

",workflowschemeIdWorkflowDelete,cloudid id workflowName opts
/workflowscheme/{id}/workflow,GET,"
Get issue types for workflows in workflow scheme

",workflowschemeIdWorkflowGet,cloudid id opts
/workflowscheme/{id}/workflow,PUT,"
Set issue types for workflow in workflow scheme

",workflowschemeIdWorkflowPut,cloudid id workflowName body
/workflowscheme,POST,"
Create workflow scheme

",workflowschemePost,cloudid body
/issueLinkType,GET,"
Get issue link types

",issueLinkTypeGet,cloudid
/issueLinkType/{issueLinkTypeId},DELETE,"
Delete issue link type

",issueLinkTypeIssueLinkTypeIdDelete,cloudid issueLinkTypeId
/issueLinkType/{issueLinkTypeId},GET,"
Get issue link type

",issueLinkTypeIssueLinkTypeIdGet,cloudid issueLinkTypeId
/issueLinkType/{issueLinkTypeId},PUT,"
Update issue link type

",issueLinkTypeIssueLinkTypeIdPut,cloudid issueLinkTypeId body
/issueLinkType,POST,"
Create issue link type

",issueLinkTypePost,cloudid body
/issuetype/{issueTypeId}/properties,GET,"
Get issue type property keys

",issuetypeIssueTypeIdPropertiesGet,cloudid issueTypeId
/issuetype/{issueTypeId}/properties/{propertyKey},DELETE,"
Delete issue type property

",issuetypeIssueTypeIdPropertiesPropertyKeyDelete,cloudid issueTypeId propertyKey
/issuetype/{issueTypeId}/properties/{propertyKey},GET,"
Get issue type property

",issuetypeIssueTypeIdPropertiesPropertyKeyGet,cloudid issueTypeId propertyKey
/issuetype/{issueTypeId}/properties/{propertyKey},PUT,"
Set issue type property

",issuetypeIssueTypeIdPropertiesPropertyKeyPut,cloudid issueTypeId propertyKey body
/statuscategory,GET,"
Get all status categories

",statuscategoryGet,cloudid
/statuscategory/{idOrKey},GET,"
Get status category

",statuscategoryIdOrKeyGet,cloudid idOrKey
/project/type/accessible,GET,"
Get licensed project types

",projectTypeAccessibleGet,cloudid
/project/type,GET,"
Get all project types

",projectTypeGet,cloudid
/project/type/{projectTypeKey}/accessible,GET,"
Get accessible project type by key

",projectTypeProjectTypeKeyAccessibleGet,cloudid projectTypeKey
/project/type/{projectTypeKey},GET,"
Get project type by key

",projectTypeProjectTypeKeyGet,cloudid projectTypeKey
/filter/favourite,GET,"
Get favorite filters

",filterFavouriteGet,cloudid opts
/filter,GET,"
Get filters

",filterGet,cloudid opts
/filter/{id}/columns,DELETE,"
Reset columns

",filterIdColumnsDelete,cloudid id
/filter/{id}/columns,GET,"
Get columns

",filterIdColumnsGet,cloudid id
/filter/{id}/columns,PUT,"
Set columns

",filterIdColumnsPut,cloudid id opts
/filter/{id},DELETE,"
Delete filter

",filterIdDelete,cloudid id
/filter/{id}/favourite,DELETE,"
Remove filter as favorite

",filterIdFavouriteDelete,cloudid id opts
/filter/{id}/favourite,PUT,"
Add filter as favorite

",filterIdFavouritePut,cloudid id opts
/filter/{id},GET,"
Get filter

",filterIdGet,cloudid id opts
/filter/{id},PUT,"
Update filter

",filterIdPut,cloudid id body opts
/filter/my,GET,"
Get my filters

",filterMyGet,cloudid opts
/filter,POST,"
Create filter

",filterPost,cloudid body opts
/filter/search,GET,"
Search for filters

",filterSearchGet,cloudid opts
/groupuserpicker,GET,"
Find users and groups

",groupuserpickerGet,cloudid query opts
/workflow,GET,"
Get all workflows

",workflowGet,cloudid opts
/workflow/search,GET,"
Get workflows paginated

",workflowSearchGet,cloudid opts
/permissionscheme,GET,"
Get all permission schemes

",permissionschemeGet,cloudid opts
/permissionscheme,POST,"
Create permission scheme

",permissionschemePost,cloudid body opts
/permissionscheme/{schemeId},DELETE,"
Delete permission scheme

",permissionschemeSchemeIdDelete,cloudid schemeId
/permissionscheme/{schemeId},GET,"
Get permission scheme

",permissionschemeSchemeIdGet,cloudid schemeId opts
/permissionscheme/{schemeId}/permission,GET,"
Get permission scheme grants

",permissionschemeSchemeIdPermissionGet,cloudid schemeId opts
/permissionscheme/{schemeId}/permission/{permissionId},DELETE,"
Delete permission scheme grant

",permissionschemeSchemeIdPermissionPermissionIdDelete,cloudid schemeId permissionId
/permissionscheme/{schemeId}/permission/{permissionId},GET,"
Get permission scheme grant

",permissionschemeSchemeIdPermissionPermissionIdGet,cloudid schemeId permissionId opts
/permissionscheme/{schemeId}/permission,POST,"
Create permission grant

",permissionschemeSchemeIdPermissionPost,cloudid schemeId body opts
/permissionscheme/{schemeId},PUT,"
Update permission scheme

",permissionschemeSchemeIdPut,cloudid schemeId body opts
/issue/{issueIdOrKey}/remotelink,DELETE,"
Delete remote issue link by global ID

",issueIssueIdOrKeyRemotelinkDelete,cloudid issueIdOrKey globalId
/issue/{issueIdOrKey}/remotelink,GET,"
Get remote issue links

",issueIssueIdOrKeyRemotelinkGet,cloudid issueIdOrKey opts
/issue/{issueIdOrKey}/remotelink/{linkId},DELETE,"
Delete remote issue link by ID

",issueIssueIdOrKeyRemotelinkLinkIdDelete,cloudid issueIdOrKey linkId
/issue/{issueIdOrKey}/remotelink/{linkId},GET,"
Get remote issue link by ID

",issueIssueIdOrKeyRemotelinkLinkIdGet,cloudid issueIdOrKey linkId
/issue/{issueIdOrKey}/remotelink/{linkId},PUT,"
Update remote issue link by ID

",issueIssueIdOrKeyRemotelinkLinkIdPut,cloudid issueIdOrKey linkId body
/issue/{issueIdOrKey}/remotelink,POST,"
Create or update remote issue link

",issueIssueIdOrKeyRemotelinkPost,cloudid issueIdOrKey body
/priority,GET,"
Get priorities

",priorityGet,cloudid
/priority/{id},GET,"
Get priority

",priorityIdGet,cloudid id
/application-properties/advanced-settings,GET,"
Get advanced settings

",applicationPropertiesAdvancedSettingsGet,cloudid
/application-properties,GET,"
Get application property

",applicationPropertiesGet,cloudid opts
/application-properties/{id},PUT,"
Set application property

",applicationPropertiesIdPut,cloudid id body
/configuration,GET,"
Get global settings

",configurationGet,cloudid
/task/{taskId}/cancel,POST,"
Cancel task

",taskTaskIdCancelPost,cloudid taskId
/task/{taskId},GET,"
Get task

",taskTaskIdGet,cloudid taskId
/issue/{issueIdOrKey}/votes,DELETE,"
Delete vote

",issueIssueIdOrKeyVotesDelete,cloudid issueIdOrKey
/issue/{issueIdOrKey}/votes,GET,"
Get votes

",issueIssueIdOrKeyVotesGet,cloudid issueIdOrKey
/issue/{issueIdOrKey}/votes,POST,"
Add vote

",issueIssueIdOrKeyVotesPost,cloudid issueIdOrKey
/serverInfo,GET,"
Get Jira instance info

",serverInfoGet,cloudid
/applicationrole,GET,"
Get all application roles

",applicationroleGet,cloudid
/applicationrole/{key},GET,"
Get application role

",applicationroleKeyGet,cloudid key
/component/{id},DELETE,"
Delete component

",componentIdDelete,cloudid id opts
/component/{id},GET,"
Get component

",componentIdGet,cloudid id
/component/{id},PUT,"
Update component

",componentIdPut,cloudid id body
/component/{id}/relatedIssueCounts,GET,"
Get component issues count

",componentIdRelatedIssueCountsGet,cloudid id
/component,POST,"
Create component

",componentPost,cloudid body
/project/{projectIdOrKey}/component,GET,"
Get project components paginated

",projectProjectIdOrKeyComponentGet,cloudid projectIdOrKey opts
/project/{projectIdOrKey}/components,GET,"
Get project components

",projectProjectIdOrKeyComponentsGet,cloudid projectIdOrKey
/customField/{fieldId}/option,GET,"
Get options for field

",customFieldFieldIdOptionGet,cloudid fieldId opts
/customField/{fieldId}/option,POST,"
Create custom field options

",customFieldFieldIdOptionPost,cloudid fieldId body
/customField/{fieldId}/option,PUT,"
Update custom field options

",customFieldFieldIdOptionPut,cloudid fieldId body
/customFieldOption/{id},GET,"
Get custom field option

",customFieldOptionIdGet,cloudid id
/resolution,GET,"
Get resolutions

",resolutionGet,cloudid
/resolution/{id},GET,"
Get resolution

",resolutionIdGet,cloudid id
/workflowscheme/{id}/createdraft,POST,"
Create draft workflow scheme

",workflowschemeIdCreatedraftPost,cloudid id
/workflowscheme/{id}/draft/default,DELETE,"
Delete draft default workflow

",workflowschemeIdDraftDefaultDelete,cloudid id
/workflowscheme/{id}/draft/default,GET,"
Get draft default workflow

",workflowschemeIdDraftDefaultGet,cloudid id
/workflowscheme/{id}/draft/default,PUT,"
Update draft default workflow

",workflowschemeIdDraftDefaultPut,cloudid id body
/workflowscheme/{id}/draft,DELETE,"
Delete draft workflow scheme

",workflowschemeIdDraftDelete,cloudid id
/workflowscheme/{id}/draft,GET,"
Get draft workflow scheme

",workflowschemeIdDraftGet,cloudid id
/workflowscheme/{id}/draft/issuetype/{issueType},DELETE,"
Delete workflow for issue type in draft workflow scheme

",workflowschemeIdDraftIssuetypeIssueTypeDelete,cloudid id issueType
/workflowscheme/{id}/draft/issuetype/{issueType},GET,"
Get workflow for issue type in draft workflow scheme

",workflowschemeIdDraftIssuetypeIssueTypeGet,cloudid id issueType
/workflowscheme/{id}/draft/issuetype/{issueType},PUT,"
Set workflow for issue type in draft workflow scheme

",workflowschemeIdDraftIssuetypeIssueTypePut,cloudid id issueType body
/workflowscheme/{id}/draft,PUT,"
Update draft workflow scheme

",workflowschemeIdDraftPut,cloudid id body
/workflowscheme/{id}/draft/workflow,DELETE,"
Delete issue types for workflow in draft workflow scheme

",workflowschemeIdDraftWorkflowDelete,cloudid id workflowName
/workflowscheme/{id}/draft/workflow,GET,"
Get issue types for workflows in draft workflow scheme

",workflowschemeIdDraftWorkflowGet,cloudid id opts
/workflowscheme/{id}/draft/workflow,PUT,"
Set issue types for workflow in workflow scheme

",workflowschemeIdDraftWorkflowPut,cloudid id workflowName body
/group,DELETE,"
Remove group

",groupDelete,cloudid groupname opts
/group,GET,"
Get group

",groupGet,cloudid groupname opts
/group/member,GET,"
Get users from group

",groupMemberGet,cloudid groupname opts
/group,POST,"
Create group

",groupPost,cloudid body
/group/user,DELETE,"
Remove user from group

",groupUserDelete,cloudid groupname accountId opts
/group/user,POST,"
Add user to group

",groupUserPost,cloudid groupname body
/groups/picker,GET,"
Find groups

",groupsPickerGet,cloudid opts
/label,GET,"
Get all labels

",labelGet,cloudid opts
/user/properties,GET,"
Get user property keys

",userPropertiesGet,cloudid opts
/user/properties/{propertyKey},DELETE,"
Delete user property

",userPropertiesPropertyKeyDelete,cloudid propertyKey opts
/user/properties/{propertyKey},GET,"
Get user property

",userPropertiesPropertyKeyGet,cloudid propertyKey opts
/user/properties/{propertyKey},PUT,"
Set user property

",userPropertiesPropertyKeyPut,cloudid propertyKey body opts
/issuetypescreenscheme,GET,"
Get issue type screen schemes

",issuetypescreenschemeGet,cloudid opts
/issuetypescreenscheme/mapping,GET,"
Get issue type screen scheme items

",issuetypescreenschemeMappingGet,cloudid opts
/issuetypescreenscheme/project,GET,"
Get issue type screen schemes for projects

",issuetypescreenschemeProjectGet,cloudid opts
/issuetypescreenscheme/project,PUT,"
Assign issue type screen scheme to project

",issuetypescreenschemeProjectPut,cloudid body
/field/{fieldKey}/option,GET,"
Get all issue field options

",fieldFieldKeyOptionGet,cloudid fieldKey opts
/field/{fieldKey}/option/{optionId},DELETE,"
Delete issue field option

",fieldFieldKeyOptionOptionIdDelete,cloudid fieldKey optionId
/field/{fieldKey}/option/{optionId},GET,"
Get issue field option

",fieldFieldKeyOptionOptionIdGet,cloudid fieldKey optionId
/field/{fieldKey}/option/{optionId}/issue,DELETE,"
Replace issue field option

",fieldFieldKeyOptionOptionIdIssueDelete,cloudid fieldKey optionId opts
/field/{fieldKey}/option/{optionId},PUT,"
Update issue field option

",fieldFieldKeyOptionOptionIdPut,cloudid fieldKey optionId body
/field/{fieldKey}/option,POST,"
Create issue field option

",fieldFieldKeyOptionPost,cloudid fieldKey body
/field/{fieldKey}/option/suggestions/edit,GET,"
Get selectable issue field options

",fieldFieldKeyOptionSuggestionsEditGet,cloudid fieldKey opts
/field/{fieldKey}/option/suggestions/search,GET,"
Get visible issue field options

",fieldFieldKeyOptionSuggestionsSearchGet,cloudid fieldKey opts
/issueLink/{linkId},DELETE,"
Delete issue link

",issueLinkLinkIdDelete,cloudid linkId
/issueLink/{linkId},GET,"
Get issue link

",issueLinkLinkIdGet,cloudid linkId
/issueLink,POST,"
Create issue link

",issueLinkPost,cloudid body
/field/{fieldId}/contexts,GET,"
Get contexts for a field

",fieldFieldIdContextsGet,cloudid fieldId opts
/field,GET,"
Get fields

",fieldGet,cloudid
/field,POST,"
Create custom field

",fieldPost,cloudid body
/field/search,GET,"
Get fields paginated

",fieldSearchGet,cloudid opts
/webhook,DELETE,"
Delete webhooks by ID

",webhookDelete,cloudid body
/webhook/failed,GET,"
Get failed webhooks

",webhookFailedGet,cloudid opts
/webhook,GET,"
Get dynamic webhooks for app

",webhookGet,cloudid opts
/webhook,POST,"
Register dynamic webhooks

",webhookPost,cloudid body
/webhook/refresh,PUT,"
Extend webhook life

",webhookRefreshPut,cloudid body
/fieldconfiguration,GET,"
Get all field configurations

",fieldconfigurationGet,cloudid opts
/fieldconfiguration/{id}/fields,GET,"
Get field configuration items

",fieldconfigurationIdFieldsGet,cloudid id opts
/fieldconfigurationscheme,GET,"
Get all field configuration schemes

",fieldconfigurationschemeGet,cloudid opts
/fieldconfigurationscheme/mapping,GET,"
Get field configuration issue type items

",fieldconfigurationschemeMappingGet,cloudid opts
/fieldconfigurationscheme/project,GET,"
Get field configuration schemes for projects

",fieldconfigurationschemeProjectGet,cloudid projectId opts
/fieldconfigurationscheme/project,PUT,"
Assign field configuration scheme to project

",fieldconfigurationschemeProjectPut,cloudid body
/project/{projectKeyOrId}/issuesecuritylevelscheme,GET,"
Get project issue security scheme

",projectProjectKeyOrIdIssuesecuritylevelschemeGet,cloudid projectKeyOrId
/project/{projectKeyOrId}/permissionscheme,GET,"
Get assigned permission scheme

",projectProjectKeyOrIdPermissionschemeGet,cloudid projectKeyOrId opts
/project/{projectKeyOrId}/permissionscheme,PUT,"
Assign permission scheme

",projectProjectKeyOrIdPermissionschemePut,cloudid projectKeyOrId body opts
/project/{projectKeyOrId}/securitylevel,GET,"
Get project issue security levels

",projectProjectKeyOrIdSecuritylevelGet,cloudid projectKeyOrId
/project,GET,"
Get all projects

",projectGet,cloudid opts
/project,POST,"
Create project

",projectPost,cloudid body
/project/{projectId}/hierarchy,GET,"
Get project issue type hierarchy

",projectProjectIdHierarchyGet,cloudid projectId
/project/{projectIdOrKey},DELETE,"
Delete project

",projectProjectIdOrKeyDelete,cloudid projectIdOrKey opts
/project/{projectIdOrKey}/delete,POST,"
Delete project asynchronously

",projectProjectIdOrKeyDeletePost,cloudid projectIdOrKey
/project/{projectIdOrKey},GET,"
Get project

",projectProjectIdOrKeyGet,cloudid projectIdOrKey opts
/project/{projectIdOrKey},PUT,"
Update project

",projectProjectIdOrKeyPut,cloudid projectIdOrKey body opts
/project/{projectIdOrKey}/statuses,GET,"
Get all statuses for project

",projectProjectIdOrKeyStatusesGet,cloudid projectIdOrKey
/project/{projectIdOrKey}/type/{newProjectTypeKey},PUT,"
Update project type

",projectProjectIdOrKeyTypeNewProjectTypeKeyPut,cloudid projectIdOrKey newProjectTypeKey
/project/{projectKeyOrId}/notificationscheme,GET,"
Get project notification scheme

",projectProjectKeyOrIdNotificationschemeGet,cloudid projectKeyOrId opts
/project/search,GET,"
Get projects paginated

",projectSearchGet,cloudid opts
/issue/{issueIdOrKey}/properties,GET,"
Get issue property keys

",issueIssueIdOrKeyPropertiesGet,cloudid issueIdOrKey
/issue/{issueIdOrKey}/properties/{propertyKey},DELETE,"
Delete issue property

",issueIssueIdOrKeyPropertiesPropertyKeyDelete,cloudid issueIdOrKey propertyKey
/issue/{issueIdOrKey}/properties/{propertyKey},GET,"
Get issue property

",issueIssueIdOrKeyPropertiesPropertyKeyGet,cloudid issueIdOrKey propertyKey
/issue/{issueIdOrKey}/properties/{propertyKey},PUT,"
Set issue property

",issueIssueIdOrKeyPropertiesPropertyKeyPut,cloudid issueIdOrKey propertyKey body
/issue/properties,POST,"
Bulk set issues properties

",issuePropertiesPost,cloudid body
/issue/properties/{propertyKey},DELETE,"
Bulk delete issue property

",issuePropertiesPropertyKeyDelete,cloudid propertyKey body
/issue/properties/{propertyKey},PUT,"
Bulk set issue property

",issuePropertiesPropertyKeyPut,cloudid propertyKey body
/configuration/timetracking,GET,"
Get selected time tracking provider

",configurationTimetrackingGet,cloudid
/configuration/timetracking/list,GET,"
Get all time tracking providers

",configurationTimetrackingListGet,cloudid
/configuration/timetracking/options,GET,"
Get time tracking settings

",configurationTimetrackingOptionsGet,cloudid
/configuration/timetracking/options,PUT,"
Set time tracking settings

",configurationTimetrackingOptionsPut,cloudid body
/configuration/timetracking,PUT,"
Select time tracking provider

",configurationTimetrackingPut,cloudid body
/dashboard/{dashboardId}/items/{itemId}/properties,GET,"
Get dashboard item property keys

",dashboardDashboardIdItemsItemIdPropertiesGet,cloudid dashboardId itemId
/dashboard/{dashboardId}/items/{itemId}/properties/{propertyKey},DELETE,"
Delete dashboard item property

",dashboardDashboardIdItemsItemIdPropertiesPropertyKeyDelete,cloudid dashboardId itemId propertyKey
/dashboard/{dashboardId}/items/{itemId}/properties/{propertyKey},GET,"
Get dashboard item property

",dashboardDashboardIdItemsItemIdPropertiesPropertyKeyGet,cloudid dashboardId itemId propertyKey
/dashboard/{dashboardId}/items/{itemId}/properties/{propertyKey},PUT,"
Set dashboard item property

",dashboardDashboardIdItemsItemIdPropertiesPropertyKeyPut,cloudid dashboardId itemId propertyKey body
/dashboard,GET,"
Get all dashboards

",dashboardGet,cloudid opts
/dashboard/{id}/copy,POST,"
Copy dashboard

",dashboardIdCopyPost,cloudid id body
/dashboard/{id},DELETE,"
Delete dashboard

",dashboardIdDelete,cloudid id
/dashboard/{id},GET,"
Get dashboard

",dashboardIdGet,cloudid id
/dashboard/{id},PUT,"
Update dashboard

",dashboardIdPut,cloudid id body
/dashboard,POST,"
Create dashboard

",dashboardPost,cloudid body
/dashboard/search,GET,"
Search for dashboards

",dashboardSearchGet,cloudid opts
/rest/atlassian-connect/1/addons/{addonKey}/properties,GET,"
Get app properties

",restAtlassianConnect1AddonsAddonKeyPropertiesGet,cloudid addonKey
/rest/atlassian-connect/1/addons/{addonKey}/properties/{propertyKey},DELETE,"
Delete app property

",restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyDelete,cloudid addonKey propertyKey
/rest/atlassian-connect/1/addons/{addonKey}/properties/{propertyKey},GET,"
Get app property

",restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyGet,cloudid addonKey propertyKey
/rest/atlassian-connect/1/addons/{addonKey}/properties/{propertyKey},PUT,"
Set app property

",restAtlassianConnect1AddonsAddonKeyPropertiesPropertyKeyPut,cloudid addonKey propertyKey body
/issue/{issueIdOrKey}/worklog,GET,"
Get issue worklogs

",issueIssueIdOrKeyWorklogGet,cloudid issueIdOrKey opts
/issue/{issueIdOrKey}/worklog/{id},DELETE,"
Delete worklog

",issueIssueIdOrKeyWorklogIdDelete,cloudid issueIdOrKey id opts
/issue/{issueIdOrKey}/worklog/{id},GET,"
Get worklog

",issueIssueIdOrKeyWorklogIdGet,cloudid issueIdOrKey id opts
/issue/{issueIdOrKey}/worklog/{id},PUT,"
Update worklog

",issueIssueIdOrKeyWorklogIdPut,cloudid issueIdOrKey id body opts
/issue/{issueIdOrKey}/worklog,POST,"
Add worklog

",issueIssueIdOrKeyWorklogPost,cloudid issueIdOrKey body opts
/worklog/deleted,GET,"
Get IDs of deleted worklogs

",worklogDeletedGet,cloudid opts
/worklog/list,POST,"
Get worklogs

",worklogListPost,cloudid body opts
/worklog/updated,GET,"
Get IDs of updated worklogs

",worklogUpdatedGet,cloudid opts
/projectvalidate/key,GET,"
Validate project key

",projectvalidateKeyGet,cloudid opts
/projectvalidate/validProjectKey,GET,"
Get valid project key

",projectvalidateValidProjectKeyGet,cloudid opts
/projectvalidate/validProjectName,GET,"
Get valid project name

",projectvalidateValidProjectNameGet,cloudid name
