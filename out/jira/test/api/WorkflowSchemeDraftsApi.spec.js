/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Jira);
  }
}(this, function(expect, Jira) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Jira.WorkflowSchemeDraftsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WorkflowSchemeDraftsApi', function() {
    describe('workflowschemeIdCreatedraftPost', function() {
      it('should call workflowschemeIdCreatedraftPost successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdCreatedraftPost
        //instance.workflowschemeIdCreatedraftPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftDefaultDelete', function() {
      it('should call workflowschemeIdDraftDefaultDelete successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftDefaultDelete
        //instance.workflowschemeIdDraftDefaultDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftDefaultGet', function() {
      it('should call workflowschemeIdDraftDefaultGet successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftDefaultGet
        //instance.workflowschemeIdDraftDefaultGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftDefaultPut', function() {
      it('should call workflowschemeIdDraftDefaultPut successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftDefaultPut
        //instance.workflowschemeIdDraftDefaultPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftDelete', function() {
      it('should call workflowschemeIdDraftDelete successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftDelete
        //instance.workflowschemeIdDraftDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftGet', function() {
      it('should call workflowschemeIdDraftGet successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftGet
        //instance.workflowschemeIdDraftGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftIssuetypeIssueTypeDelete', function() {
      it('should call workflowschemeIdDraftIssuetypeIssueTypeDelete successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftIssuetypeIssueTypeDelete
        //instance.workflowschemeIdDraftIssuetypeIssueTypeDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftIssuetypeIssueTypeGet', function() {
      it('should call workflowschemeIdDraftIssuetypeIssueTypeGet successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftIssuetypeIssueTypeGet
        //instance.workflowschemeIdDraftIssuetypeIssueTypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftIssuetypeIssueTypePut', function() {
      it('should call workflowschemeIdDraftIssuetypeIssueTypePut successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftIssuetypeIssueTypePut
        //instance.workflowschemeIdDraftIssuetypeIssueTypePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftPut', function() {
      it('should call workflowschemeIdDraftPut successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftPut
        //instance.workflowschemeIdDraftPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftWorkflowDelete', function() {
      it('should call workflowschemeIdDraftWorkflowDelete successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftWorkflowDelete
        //instance.workflowschemeIdDraftWorkflowDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftWorkflowGet', function() {
      it('should call workflowschemeIdDraftWorkflowGet successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftWorkflowGet
        //instance.workflowschemeIdDraftWorkflowGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftWorkflowPut', function() {
      it('should call workflowschemeIdDraftWorkflowPut successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftWorkflowPut
        //instance.workflowschemeIdDraftWorkflowPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
