/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Jira);
  }
}(this, function(expect, Jira) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Jira.ScreensApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ScreensApi', function() {
    describe('fieldFieldIdScreensGet', function() {
      it('should call fieldFieldIdScreensGet successfully', function(done) {
        //uncomment below and update the code to test fieldFieldIdScreensGet
        //instance.fieldFieldIdScreensGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensAddToDefaultFieldIdPost', function() {
      it('should call screensAddToDefaultFieldIdPost successfully', function(done) {
        //uncomment below and update the code to test screensAddToDefaultFieldIdPost
        //instance.screensAddToDefaultFieldIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensGet', function() {
      it('should call screensGet successfully', function(done) {
        //uncomment below and update the code to test screensGet
        //instance.screensGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensScreenIdAvailableFieldsGet', function() {
      it('should call screensScreenIdAvailableFieldsGet successfully', function(done) {
        //uncomment below and update the code to test screensScreenIdAvailableFieldsGet
        //instance.screensScreenIdAvailableFieldsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensScreenIdTabsGet', function() {
      it('should call screensScreenIdTabsGet successfully', function(done) {
        //uncomment below and update the code to test screensScreenIdTabsGet
        //instance.screensScreenIdTabsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensScreenIdTabsPost', function() {
      it('should call screensScreenIdTabsPost successfully', function(done) {
        //uncomment below and update the code to test screensScreenIdTabsPost
        //instance.screensScreenIdTabsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensScreenIdTabsTabIdDelete', function() {
      it('should call screensScreenIdTabsTabIdDelete successfully', function(done) {
        //uncomment below and update the code to test screensScreenIdTabsTabIdDelete
        //instance.screensScreenIdTabsTabIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensScreenIdTabsTabIdFieldsGet', function() {
      it('should call screensScreenIdTabsTabIdFieldsGet successfully', function(done) {
        //uncomment below and update the code to test screensScreenIdTabsTabIdFieldsGet
        //instance.screensScreenIdTabsTabIdFieldsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensScreenIdTabsTabIdFieldsIdDelete', function() {
      it('should call screensScreenIdTabsTabIdFieldsIdDelete successfully', function(done) {
        //uncomment below and update the code to test screensScreenIdTabsTabIdFieldsIdDelete
        //instance.screensScreenIdTabsTabIdFieldsIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensScreenIdTabsTabIdFieldsIdMovePost', function() {
      it('should call screensScreenIdTabsTabIdFieldsIdMovePost successfully', function(done) {
        //uncomment below and update the code to test screensScreenIdTabsTabIdFieldsIdMovePost
        //instance.screensScreenIdTabsTabIdFieldsIdMovePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensScreenIdTabsTabIdFieldsPost', function() {
      it('should call screensScreenIdTabsTabIdFieldsPost successfully', function(done) {
        //uncomment below and update the code to test screensScreenIdTabsTabIdFieldsPost
        //instance.screensScreenIdTabsTabIdFieldsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensScreenIdTabsTabIdMovePosPost', function() {
      it('should call screensScreenIdTabsTabIdMovePosPost successfully', function(done) {
        //uncomment below and update the code to test screensScreenIdTabsTabIdMovePosPost
        //instance.screensScreenIdTabsTabIdMovePosPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensScreenIdTabsTabIdPut', function() {
      it('should call screensScreenIdTabsTabIdPut successfully', function(done) {
        //uncomment below and update the code to test screensScreenIdTabsTabIdPut
        //instance.screensScreenIdTabsTabIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screenschemeGet', function() {
      it('should call screenschemeGet successfully', function(done) {
        //uncomment below and update the code to test screenschemeGet
        //instance.screenschemeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
