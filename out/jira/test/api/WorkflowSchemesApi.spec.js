/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Jira);
  }
}(this, function(expect, Jira) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Jira.WorkflowSchemesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WorkflowSchemesApi', function() {
    describe('workflowschemeGet', function() {
      it('should call workflowschemeGet successfully', function(done) {
        //uncomment below and update the code to test workflowschemeGet
        //instance.workflowschemeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDefaultDelete', function() {
      it('should call workflowschemeIdDefaultDelete successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDefaultDelete
        //instance.workflowschemeIdDefaultDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDefaultGet', function() {
      it('should call workflowschemeIdDefaultGet successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDefaultGet
        //instance.workflowschemeIdDefaultGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDefaultPut', function() {
      it('should call workflowschemeIdDefaultPut successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDefaultPut
        //instance.workflowschemeIdDefaultPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDelete', function() {
      it('should call workflowschemeIdDelete successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDelete
        //instance.workflowschemeIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdGet', function() {
      it('should call workflowschemeIdGet successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdGet
        //instance.workflowschemeIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdIssuetypeIssueTypeDelete', function() {
      it('should call workflowschemeIdIssuetypeIssueTypeDelete successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdIssuetypeIssueTypeDelete
        //instance.workflowschemeIdIssuetypeIssueTypeDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdIssuetypeIssueTypeGet', function() {
      it('should call workflowschemeIdIssuetypeIssueTypeGet successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdIssuetypeIssueTypeGet
        //instance.workflowschemeIdIssuetypeIssueTypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdIssuetypeIssueTypePut', function() {
      it('should call workflowschemeIdIssuetypeIssueTypePut successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdIssuetypeIssueTypePut
        //instance.workflowschemeIdIssuetypeIssueTypePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdPut', function() {
      it('should call workflowschemeIdPut successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdPut
        //instance.workflowschemeIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdWorkflowDelete', function() {
      it('should call workflowschemeIdWorkflowDelete successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdWorkflowDelete
        //instance.workflowschemeIdWorkflowDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdWorkflowGet', function() {
      it('should call workflowschemeIdWorkflowGet successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdWorkflowGet
        //instance.workflowschemeIdWorkflowGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdWorkflowPut', function() {
      it('should call workflowschemeIdWorkflowPut successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdWorkflowPut
        //instance.workflowschemeIdWorkflowPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemePost', function() {
      it('should call workflowschemePost successfully', function(done) {
        //uncomment below and update the code to test workflowschemePost
        //instance.workflowschemePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
