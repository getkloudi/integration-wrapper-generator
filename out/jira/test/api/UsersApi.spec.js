/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Jira);
  }
}(this, function(expect, Jira) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Jira.UsersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UsersApi', function() {
    describe('userBulkGet', function() {
      it('should call userBulkGet successfully', function(done) {
        //uncomment below and update the code to test userBulkGet
        //instance.userBulkGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userBulkMigrationGet', function() {
      it('should call userBulkMigrationGet successfully', function(done) {
        //uncomment below and update the code to test userBulkMigrationGet
        //instance.userBulkMigrationGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userColumnsDelete', function() {
      it('should call userColumnsDelete successfully', function(done) {
        //uncomment below and update the code to test userColumnsDelete
        //instance.userColumnsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userColumnsGet', function() {
      it('should call userColumnsGet successfully', function(done) {
        //uncomment below and update the code to test userColumnsGet
        //instance.userColumnsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userColumnsPut', function() {
      it('should call userColumnsPut successfully', function(done) {
        //uncomment below and update the code to test userColumnsPut
        //instance.userColumnsPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userDelete', function() {
      it('should call userDelete successfully', function(done) {
        //uncomment below and update the code to test userDelete
        //instance.userDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userEmailBulkGet', function() {
      it('should call userEmailBulkGet successfully', function(done) {
        //uncomment below and update the code to test userEmailBulkGet
        //instance.userEmailBulkGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userEmailGet', function() {
      it('should call userEmailGet successfully', function(done) {
        //uncomment below and update the code to test userEmailGet
        //instance.userEmailGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGet', function() {
      it('should call userGet successfully', function(done) {
        //uncomment below and update the code to test userGet
        //instance.userGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGroupsGet', function() {
      it('should call userGroupsGet successfully', function(done) {
        //uncomment below and update the code to test userGroupsGet
        //instance.userGroupsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPost', function() {
      it('should call userPost successfully', function(done) {
        //uncomment below and update the code to test userPost
        //instance.userPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersGet', function() {
      it('should call usersGet successfully', function(done) {
        //uncomment below and update the code to test usersGet
        //instance.usersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersSearchGet', function() {
      it('should call usersSearchGet successfully', function(done) {
        //uncomment below and update the code to test usersSearchGet
        //instance.usersSearchGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
