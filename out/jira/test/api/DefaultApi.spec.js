/**
 * Jira
 * The Jira Cloud Platform REST API
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Jira);
  }
}(this, function(expect, Jira) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Jira.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('applicationPropertiesAdvancedSettingsGet', function() {
      it('should call applicationPropertiesAdvancedSettingsGet successfully', function(done) {
        //uncomment below and update the code to test applicationPropertiesAdvancedSettingsGet
        //instance.applicationPropertiesAdvancedSettingsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applicationPropertiesGet', function() {
      it('should call applicationPropertiesGet successfully', function(done) {
        //uncomment below and update the code to test applicationPropertiesGet
        //instance.applicationPropertiesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applicationPropertiesIdPut', function() {
      it('should call applicationPropertiesIdPut successfully', function(done) {
        //uncomment below and update the code to test applicationPropertiesIdPut
        //instance.applicationPropertiesIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applicationroleGet', function() {
      it('should call applicationroleGet successfully', function(done) {
        //uncomment below and update the code to test applicationroleGet
        //instance.applicationroleGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applicationroleKeyGet', function() {
      it('should call applicationroleKeyGet successfully', function(done) {
        //uncomment below and update the code to test applicationroleKeyGet
        //instance.applicationroleKeyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attachmentIdDelete', function() {
      it('should call attachmentIdDelete successfully', function(done) {
        //uncomment below and update the code to test attachmentIdDelete
        //instance.attachmentIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attachmentIdExpandHumanGet', function() {
      it('should call attachmentIdExpandHumanGet successfully', function(done) {
        //uncomment below and update the code to test attachmentIdExpandHumanGet
        //instance.attachmentIdExpandHumanGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attachmentIdExpandRawGet', function() {
      it('should call attachmentIdExpandRawGet successfully', function(done) {
        //uncomment below and update the code to test attachmentIdExpandRawGet
        //instance.attachmentIdExpandRawGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attachmentIdGet', function() {
      it('should call attachmentIdGet successfully', function(done) {
        //uncomment below and update the code to test attachmentIdGet
        //instance.attachmentIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attachmentMetaGet', function() {
      it('should call attachmentMetaGet successfully', function(done) {
        //uncomment below and update the code to test attachmentMetaGet
        //instance.attachmentMetaGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('auditingRecordGet', function() {
      it('should call auditingRecordGet successfully', function(done) {
        //uncomment below and update the code to test auditingRecordGet
        //instance.auditingRecordGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('avatarTypeSystemGet', function() {
      it('should call avatarTypeSystemGet successfully', function(done) {
        //uncomment below and update the code to test avatarTypeSystemGet
        //instance.avatarTypeSystemGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('commentCommentIdPropertiesGet', function() {
      it('should call commentCommentIdPropertiesGet successfully', function(done) {
        //uncomment below and update the code to test commentCommentIdPropertiesGet
        //instance.commentCommentIdPropertiesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('commentCommentIdPropertiesPropertyKeyDelete', function() {
      it('should call commentCommentIdPropertiesPropertyKeyDelete successfully', function(done) {
        //uncomment below and update the code to test commentCommentIdPropertiesPropertyKeyDelete
        //instance.commentCommentIdPropertiesPropertyKeyDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('commentCommentIdPropertiesPropertyKeyGet', function() {
      it('should call commentCommentIdPropertiesPropertyKeyGet successfully', function(done) {
        //uncomment below and update the code to test commentCommentIdPropertiesPropertyKeyGet
        //instance.commentCommentIdPropertiesPropertyKeyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('commentCommentIdPropertiesPropertyKeyPut', function() {
      it('should call commentCommentIdPropertiesPropertyKeyPut successfully', function(done) {
        //uncomment below and update the code to test commentCommentIdPropertiesPropertyKeyPut
        //instance.commentCommentIdPropertiesPropertyKeyPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('commentListPost', function() {
      it('should call commentListPost successfully', function(done) {
        //uncomment below and update the code to test commentListPost
        //instance.commentListPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('componentIdDelete', function() {
      it('should call componentIdDelete successfully', function(done) {
        //uncomment below and update the code to test componentIdDelete
        //instance.componentIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('componentIdGet', function() {
      it('should call componentIdGet successfully', function(done) {
        //uncomment below and update the code to test componentIdGet
        //instance.componentIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('componentIdPut', function() {
      it('should call componentIdPut successfully', function(done) {
        //uncomment below and update the code to test componentIdPut
        //instance.componentIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('componentIdRelatedIssueCountsGet', function() {
      it('should call componentIdRelatedIssueCountsGet successfully', function(done) {
        //uncomment below and update the code to test componentIdRelatedIssueCountsGet
        //instance.componentIdRelatedIssueCountsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('componentPost', function() {
      it('should call componentPost successfully', function(done) {
        //uncomment below and update the code to test componentPost
        //instance.componentPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('configurationGet', function() {
      it('should call configurationGet successfully', function(done) {
        //uncomment below and update the code to test configurationGet
        //instance.configurationGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('configurationTimetrackingDelete', function() {
      it('should call configurationTimetrackingDelete successfully', function(done) {
        //uncomment below and update the code to test configurationTimetrackingDelete
        //instance.configurationTimetrackingDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('configurationTimetrackingGet', function() {
      it('should call configurationTimetrackingGet successfully', function(done) {
        //uncomment below and update the code to test configurationTimetrackingGet
        //instance.configurationTimetrackingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('configurationTimetrackingListGet', function() {
      it('should call configurationTimetrackingListGet successfully', function(done) {
        //uncomment below and update the code to test configurationTimetrackingListGet
        //instance.configurationTimetrackingListGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('configurationTimetrackingOptionsGet', function() {
      it('should call configurationTimetrackingOptionsGet successfully', function(done) {
        //uncomment below and update the code to test configurationTimetrackingOptionsGet
        //instance.configurationTimetrackingOptionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('configurationTimetrackingOptionsPut', function() {
      it('should call configurationTimetrackingOptionsPut successfully', function(done) {
        //uncomment below and update the code to test configurationTimetrackingOptionsPut
        //instance.configurationTimetrackingOptionsPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('configurationTimetrackingPut', function() {
      it('should call configurationTimetrackingPut successfully', function(done) {
        //uncomment below and update the code to test configurationTimetrackingPut
        //instance.configurationTimetrackingPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customFieldOptionIdGet', function() {
      it('should call customFieldOptionIdGet successfully', function(done) {
        //uncomment below and update the code to test customFieldOptionIdGet
        //instance.customFieldOptionIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dashboardDashboardIdItemsItemIdPropertiesGet', function() {
      it('should call dashboardDashboardIdItemsItemIdPropertiesGet successfully', function(done) {
        //uncomment below and update the code to test dashboardDashboardIdItemsItemIdPropertiesGet
        //instance.dashboardDashboardIdItemsItemIdPropertiesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dashboardDashboardIdItemsItemIdPropertiesPropertyKeyDelete', function() {
      it('should call dashboardDashboardIdItemsItemIdPropertiesPropertyKeyDelete successfully', function(done) {
        //uncomment below and update the code to test dashboardDashboardIdItemsItemIdPropertiesPropertyKeyDelete
        //instance.dashboardDashboardIdItemsItemIdPropertiesPropertyKeyDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dashboardDashboardIdItemsItemIdPropertiesPropertyKeyGet', function() {
      it('should call dashboardDashboardIdItemsItemIdPropertiesPropertyKeyGet successfully', function(done) {
        //uncomment below and update the code to test dashboardDashboardIdItemsItemIdPropertiesPropertyKeyGet
        //instance.dashboardDashboardIdItemsItemIdPropertiesPropertyKeyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dashboardDashboardIdItemsItemIdPropertiesPropertyKeyPut', function() {
      it('should call dashboardDashboardIdItemsItemIdPropertiesPropertyKeyPut successfully', function(done) {
        //uncomment below and update the code to test dashboardDashboardIdItemsItemIdPropertiesPropertyKeyPut
        //instance.dashboardDashboardIdItemsItemIdPropertiesPropertyKeyPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dashboardGet', function() {
      it('should call dashboardGet successfully', function(done) {
        //uncomment below and update the code to test dashboardGet
        //instance.dashboardGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dashboardIdGet', function() {
      it('should call dashboardIdGet successfully', function(done) {
        //uncomment below and update the code to test dashboardIdGet
        //instance.dashboardIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('expressionEvalPost', function() {
      it('should call expressionEvalPost successfully', function(done) {
        //uncomment below and update the code to test expressionEvalPost
        //instance.expressionEvalPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fieldFieldKeyOptionGet', function() {
      it('should call fieldFieldKeyOptionGet successfully', function(done) {
        //uncomment below and update the code to test fieldFieldKeyOptionGet
        //instance.fieldFieldKeyOptionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fieldFieldKeyOptionOptionIdDelete', function() {
      it('should call fieldFieldKeyOptionOptionIdDelete successfully', function(done) {
        //uncomment below and update the code to test fieldFieldKeyOptionOptionIdDelete
        //instance.fieldFieldKeyOptionOptionIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fieldFieldKeyOptionOptionIdGet', function() {
      it('should call fieldFieldKeyOptionOptionIdGet successfully', function(done) {
        //uncomment below and update the code to test fieldFieldKeyOptionOptionIdGet
        //instance.fieldFieldKeyOptionOptionIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fieldFieldKeyOptionOptionIdIssueDelete', function() {
      it('should call fieldFieldKeyOptionOptionIdIssueDelete successfully', function(done) {
        //uncomment below and update the code to test fieldFieldKeyOptionOptionIdIssueDelete
        //instance.fieldFieldKeyOptionOptionIdIssueDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fieldFieldKeyOptionOptionIdPut', function() {
      it('should call fieldFieldKeyOptionOptionIdPut successfully', function(done) {
        //uncomment below and update the code to test fieldFieldKeyOptionOptionIdPut
        //instance.fieldFieldKeyOptionOptionIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fieldFieldKeyOptionPost', function() {
      it('should call fieldFieldKeyOptionPost successfully', function(done) {
        //uncomment below and update the code to test fieldFieldKeyOptionPost
        //instance.fieldFieldKeyOptionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fieldFieldKeyOptionSuggestionsEditGet', function() {
      it('should call fieldFieldKeyOptionSuggestionsEditGet successfully', function(done) {
        //uncomment below and update the code to test fieldFieldKeyOptionSuggestionsEditGet
        //instance.fieldFieldKeyOptionSuggestionsEditGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fieldFieldKeyOptionSuggestionsSearchGet', function() {
      it('should call fieldFieldKeyOptionSuggestionsSearchGet successfully', function(done) {
        //uncomment below and update the code to test fieldFieldKeyOptionSuggestionsSearchGet
        //instance.fieldFieldKeyOptionSuggestionsSearchGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fieldGet', function() {
      it('should call fieldGet successfully', function(done) {
        //uncomment below and update the code to test fieldGet
        //instance.fieldGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fieldPost', function() {
      it('should call fieldPost successfully', function(done) {
        //uncomment below and update the code to test fieldPost
        //instance.fieldPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterDefaultShareScopeGet', function() {
      it('should call filterDefaultShareScopeGet successfully', function(done) {
        //uncomment below and update the code to test filterDefaultShareScopeGet
        //instance.filterDefaultShareScopeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterDefaultShareScopePut', function() {
      it('should call filterDefaultShareScopePut successfully', function(done) {
        //uncomment below and update the code to test filterDefaultShareScopePut
        //instance.filterDefaultShareScopePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterFavouriteGet', function() {
      it('should call filterFavouriteGet successfully', function(done) {
        //uncomment below and update the code to test filterFavouriteGet
        //instance.filterFavouriteGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterGet', function() {
      it('should call filterGet successfully', function(done) {
        //uncomment below and update the code to test filterGet
        //instance.filterGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterIdColumnsDelete', function() {
      it('should call filterIdColumnsDelete successfully', function(done) {
        //uncomment below and update the code to test filterIdColumnsDelete
        //instance.filterIdColumnsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterIdColumnsGet', function() {
      it('should call filterIdColumnsGet successfully', function(done) {
        //uncomment below and update the code to test filterIdColumnsGet
        //instance.filterIdColumnsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterIdColumnsPut', function() {
      it('should call filterIdColumnsPut successfully', function(done) {
        //uncomment below and update the code to test filterIdColumnsPut
        //instance.filterIdColumnsPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterIdDelete', function() {
      it('should call filterIdDelete successfully', function(done) {
        //uncomment below and update the code to test filterIdDelete
        //instance.filterIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterIdFavouriteDelete', function() {
      it('should call filterIdFavouriteDelete successfully', function(done) {
        //uncomment below and update the code to test filterIdFavouriteDelete
        //instance.filterIdFavouriteDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterIdFavouritePut', function() {
      it('should call filterIdFavouritePut successfully', function(done) {
        //uncomment below and update the code to test filterIdFavouritePut
        //instance.filterIdFavouritePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterIdGet', function() {
      it('should call filterIdGet successfully', function(done) {
        //uncomment below and update the code to test filterIdGet
        //instance.filterIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterIdPermissionGet', function() {
      it('should call filterIdPermissionGet successfully', function(done) {
        //uncomment below and update the code to test filterIdPermissionGet
        //instance.filterIdPermissionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterIdPermissionPermissionIdDelete', function() {
      it('should call filterIdPermissionPermissionIdDelete successfully', function(done) {
        //uncomment below and update the code to test filterIdPermissionPermissionIdDelete
        //instance.filterIdPermissionPermissionIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterIdPermissionPermissionIdGet', function() {
      it('should call filterIdPermissionPermissionIdGet successfully', function(done) {
        //uncomment below and update the code to test filterIdPermissionPermissionIdGet
        //instance.filterIdPermissionPermissionIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterIdPermissionPost', function() {
      it('should call filterIdPermissionPost successfully', function(done) {
        //uncomment below and update the code to test filterIdPermissionPost
        //instance.filterIdPermissionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterIdPut', function() {
      it('should call filterIdPut successfully', function(done) {
        //uncomment below and update the code to test filterIdPut
        //instance.filterIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterMyGet', function() {
      it('should call filterMyGet successfully', function(done) {
        //uncomment below and update the code to test filterMyGet
        //instance.filterMyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterPost', function() {
      it('should call filterPost successfully', function(done) {
        //uncomment below and update the code to test filterPost
        //instance.filterPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterSearchGet', function() {
      it('should call filterSearchGet successfully', function(done) {
        //uncomment below and update the code to test filterSearchGet
        //instance.filterSearchGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupDelete', function() {
      it('should call groupDelete successfully', function(done) {
        //uncomment below and update the code to test groupDelete
        //instance.groupDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupGet', function() {
      it('should call groupGet successfully', function(done) {
        //uncomment below and update the code to test groupGet
        //instance.groupGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupMemberGet', function() {
      it('should call groupMemberGet successfully', function(done) {
        //uncomment below and update the code to test groupMemberGet
        //instance.groupMemberGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupPost', function() {
      it('should call groupPost successfully', function(done) {
        //uncomment below and update the code to test groupPost
        //instance.groupPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupUserDelete', function() {
      it('should call groupUserDelete successfully', function(done) {
        //uncomment below and update the code to test groupUserDelete
        //instance.groupUserDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupUserPost', function() {
      it('should call groupUserPost successfully', function(done) {
        //uncomment below and update the code to test groupUserPost
        //instance.groupUserPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupsPickerGet', function() {
      it('should call groupsPickerGet successfully', function(done) {
        //uncomment below and update the code to test groupsPickerGet
        //instance.groupsPickerGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupuserpickerGet', function() {
      it('should call groupuserpickerGet successfully', function(done) {
        //uncomment below and update the code to test groupuserpickerGet
        //instance.groupuserpickerGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueBulkPost', function() {
      it('should call issueBulkPost successfully', function(done) {
        //uncomment below and update the code to test issueBulkPost
        //instance.issueBulkPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueCreatemetaGet', function() {
      it('should call issueCreatemetaGet successfully', function(done) {
        //uncomment below and update the code to test issueCreatemetaGet
        //instance.issueCreatemetaGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyAssigneePut', function() {
      it('should call issueIssueIdOrKeyAssigneePut successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyAssigneePut
        //instance.issueIssueIdOrKeyAssigneePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyAttachmentsPost', function() {
      it('should call issueIssueIdOrKeyAttachmentsPost successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyAttachmentsPost
        //instance.issueIssueIdOrKeyAttachmentsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyChangelogGet', function() {
      it('should call issueIssueIdOrKeyChangelogGet successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyChangelogGet
        //instance.issueIssueIdOrKeyChangelogGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyCommentGet', function() {
      it('should call issueIssueIdOrKeyCommentGet successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyCommentGet
        //instance.issueIssueIdOrKeyCommentGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyCommentIdDelete', function() {
      it('should call issueIssueIdOrKeyCommentIdDelete successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyCommentIdDelete
        //instance.issueIssueIdOrKeyCommentIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyCommentIdGet', function() {
      it('should call issueIssueIdOrKeyCommentIdGet successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyCommentIdGet
        //instance.issueIssueIdOrKeyCommentIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyCommentIdPut', function() {
      it('should call issueIssueIdOrKeyCommentIdPut successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyCommentIdPut
        //instance.issueIssueIdOrKeyCommentIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyCommentPost', function() {
      it('should call issueIssueIdOrKeyCommentPost successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyCommentPost
        //instance.issueIssueIdOrKeyCommentPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyDelete', function() {
      it('should call issueIssueIdOrKeyDelete successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyDelete
        //instance.issueIssueIdOrKeyDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyEditmetaGet', function() {
      it('should call issueIssueIdOrKeyEditmetaGet successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyEditmetaGet
        //instance.issueIssueIdOrKeyEditmetaGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyGet', function() {
      it('should call issueIssueIdOrKeyGet successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyGet
        //instance.issueIssueIdOrKeyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyNotifyPost', function() {
      it('should call issueIssueIdOrKeyNotifyPost successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyNotifyPost
        //instance.issueIssueIdOrKeyNotifyPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyPropertiesGet', function() {
      it('should call issueIssueIdOrKeyPropertiesGet successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyPropertiesGet
        //instance.issueIssueIdOrKeyPropertiesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyPropertiesPropertyKeyDelete', function() {
      it('should call issueIssueIdOrKeyPropertiesPropertyKeyDelete successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyPropertiesPropertyKeyDelete
        //instance.issueIssueIdOrKeyPropertiesPropertyKeyDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyPropertiesPropertyKeyGet', function() {
      it('should call issueIssueIdOrKeyPropertiesPropertyKeyGet successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyPropertiesPropertyKeyGet
        //instance.issueIssueIdOrKeyPropertiesPropertyKeyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyPropertiesPropertyKeyPut', function() {
      it('should call issueIssueIdOrKeyPropertiesPropertyKeyPut successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyPropertiesPropertyKeyPut
        //instance.issueIssueIdOrKeyPropertiesPropertyKeyPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyPut', function() {
      it('should call issueIssueIdOrKeyPut successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyPut
        //instance.issueIssueIdOrKeyPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyRemotelinkDelete', function() {
      it('should call issueIssueIdOrKeyRemotelinkDelete successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyRemotelinkDelete
        //instance.issueIssueIdOrKeyRemotelinkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyRemotelinkGet', function() {
      it('should call issueIssueIdOrKeyRemotelinkGet successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyRemotelinkGet
        //instance.issueIssueIdOrKeyRemotelinkGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyRemotelinkLinkIdDelete', function() {
      it('should call issueIssueIdOrKeyRemotelinkLinkIdDelete successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyRemotelinkLinkIdDelete
        //instance.issueIssueIdOrKeyRemotelinkLinkIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyRemotelinkLinkIdGet', function() {
      it('should call issueIssueIdOrKeyRemotelinkLinkIdGet successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyRemotelinkLinkIdGet
        //instance.issueIssueIdOrKeyRemotelinkLinkIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyRemotelinkLinkIdPut', function() {
      it('should call issueIssueIdOrKeyRemotelinkLinkIdPut successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyRemotelinkLinkIdPut
        //instance.issueIssueIdOrKeyRemotelinkLinkIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyRemotelinkPost', function() {
      it('should call issueIssueIdOrKeyRemotelinkPost successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyRemotelinkPost
        //instance.issueIssueIdOrKeyRemotelinkPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyTransitionsGet', function() {
      it('should call issueIssueIdOrKeyTransitionsGet successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyTransitionsGet
        //instance.issueIssueIdOrKeyTransitionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyTransitionsPost', function() {
      it('should call issueIssueIdOrKeyTransitionsPost successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyTransitionsPost
        //instance.issueIssueIdOrKeyTransitionsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyVotesDelete', function() {
      it('should call issueIssueIdOrKeyVotesDelete successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyVotesDelete
        //instance.issueIssueIdOrKeyVotesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyVotesGet', function() {
      it('should call issueIssueIdOrKeyVotesGet successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyVotesGet
        //instance.issueIssueIdOrKeyVotesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyVotesPost', function() {
      it('should call issueIssueIdOrKeyVotesPost successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyVotesPost
        //instance.issueIssueIdOrKeyVotesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyWatchersDelete', function() {
      it('should call issueIssueIdOrKeyWatchersDelete successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyWatchersDelete
        //instance.issueIssueIdOrKeyWatchersDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyWatchersGet', function() {
      it('should call issueIssueIdOrKeyWatchersGet successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyWatchersGet
        //instance.issueIssueIdOrKeyWatchersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyWatchersPost', function() {
      it('should call issueIssueIdOrKeyWatchersPost successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyWatchersPost
        //instance.issueIssueIdOrKeyWatchersPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyWorklogGet', function() {
      it('should call issueIssueIdOrKeyWorklogGet successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyWorklogGet
        //instance.issueIssueIdOrKeyWorklogGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyWorklogIdDelete', function() {
      it('should call issueIssueIdOrKeyWorklogIdDelete successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyWorklogIdDelete
        //instance.issueIssueIdOrKeyWorklogIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyWorklogIdGet', function() {
      it('should call issueIssueIdOrKeyWorklogIdGet successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyWorklogIdGet
        //instance.issueIssueIdOrKeyWorklogIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyWorklogIdPut', function() {
      it('should call issueIssueIdOrKeyWorklogIdPut successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyWorklogIdPut
        //instance.issueIssueIdOrKeyWorklogIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyWorklogPost', function() {
      it('should call issueIssueIdOrKeyWorklogPost successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyWorklogPost
        //instance.issueIssueIdOrKeyWorklogPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyWorklogWorklogIdPropertiesGet', function() {
      it('should call issueIssueIdOrKeyWorklogWorklogIdPropertiesGet successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyWorklogWorklogIdPropertiesGet
        //instance.issueIssueIdOrKeyWorklogWorklogIdPropertiesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyWorklogWorklogIdPropertiesPropertyKeyDelete', function() {
      it('should call issueIssueIdOrKeyWorklogWorklogIdPropertiesPropertyKeyDelete successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyWorklogWorklogIdPropertiesPropertyKeyDelete
        //instance.issueIssueIdOrKeyWorklogWorklogIdPropertiesPropertyKeyDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyWorklogWorklogIdPropertiesPropertyKeyGet', function() {
      it('should call issueIssueIdOrKeyWorklogWorklogIdPropertiesPropertyKeyGet successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyWorklogWorklogIdPropertiesPropertyKeyGet
        //instance.issueIssueIdOrKeyWorklogWorklogIdPropertiesPropertyKeyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueIssueIdOrKeyWorklogWorklogIdPropertiesPropertyKeyPut', function() {
      it('should call issueIssueIdOrKeyWorklogWorklogIdPropertiesPropertyKeyPut successfully', function(done) {
        //uncomment below and update the code to test issueIssueIdOrKeyWorklogWorklogIdPropertiesPropertyKeyPut
        //instance.issueIssueIdOrKeyWorklogWorklogIdPropertiesPropertyKeyPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueLinkLinkIdDelete', function() {
      it('should call issueLinkLinkIdDelete successfully', function(done) {
        //uncomment below and update the code to test issueLinkLinkIdDelete
        //instance.issueLinkLinkIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueLinkLinkIdGet', function() {
      it('should call issueLinkLinkIdGet successfully', function(done) {
        //uncomment below and update the code to test issueLinkLinkIdGet
        //instance.issueLinkLinkIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueLinkPost', function() {
      it('should call issueLinkPost successfully', function(done) {
        //uncomment below and update the code to test issueLinkPost
        //instance.issueLinkPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueLinkTypeGet', function() {
      it('should call issueLinkTypeGet successfully', function(done) {
        //uncomment below and update the code to test issueLinkTypeGet
        //instance.issueLinkTypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueLinkTypeIssueLinkTypeIdDelete', function() {
      it('should call issueLinkTypeIssueLinkTypeIdDelete successfully', function(done) {
        //uncomment below and update the code to test issueLinkTypeIssueLinkTypeIdDelete
        //instance.issueLinkTypeIssueLinkTypeIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueLinkTypeIssueLinkTypeIdGet', function() {
      it('should call issueLinkTypeIssueLinkTypeIdGet successfully', function(done) {
        //uncomment below and update the code to test issueLinkTypeIssueLinkTypeIdGet
        //instance.issueLinkTypeIssueLinkTypeIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueLinkTypeIssueLinkTypeIdPut', function() {
      it('should call issueLinkTypeIssueLinkTypeIdPut successfully', function(done) {
        //uncomment below and update the code to test issueLinkTypeIssueLinkTypeIdPut
        //instance.issueLinkTypeIssueLinkTypeIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueLinkTypePost', function() {
      it('should call issueLinkTypePost successfully', function(done) {
        //uncomment below and update the code to test issueLinkTypePost
        //instance.issueLinkTypePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuePickerGet', function() {
      it('should call issuePickerGet successfully', function(done) {
        //uncomment below and update the code to test issuePickerGet
        //instance.issuePickerGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuePost', function() {
      it('should call issuePost successfully', function(done) {
        //uncomment below and update the code to test issuePost
        //instance.issuePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuePropertiesPropertyKeyDelete', function() {
      it('should call issuePropertiesPropertyKeyDelete successfully', function(done) {
        //uncomment below and update the code to test issuePropertiesPropertyKeyDelete
        //instance.issuePropertiesPropertyKeyDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuePropertiesPropertyKeyPut', function() {
      it('should call issuePropertiesPropertyKeyPut successfully', function(done) {
        //uncomment below and update the code to test issuePropertiesPropertyKeyPut
        //instance.issuePropertiesPropertyKeyPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesecurityschemesGet', function() {
      it('should call issuesecurityschemesGet successfully', function(done) {
        //uncomment below and update the code to test issuesecurityschemesGet
        //instance.issuesecurityschemesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesecurityschemesIdGet', function() {
      it('should call issuesecurityschemesIdGet successfully', function(done) {
        //uncomment below and update the code to test issuesecurityschemesIdGet
        //instance.issuesecurityschemesIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuetypeGet', function() {
      it('should call issuetypeGet successfully', function(done) {
        //uncomment below and update the code to test issuetypeGet
        //instance.issuetypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuetypeIdAlternativesGet', function() {
      it('should call issuetypeIdAlternativesGet successfully', function(done) {
        //uncomment below and update the code to test issuetypeIdAlternativesGet
        //instance.issuetypeIdAlternativesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuetypeIdAvatar2Post', function() {
      it('should call issuetypeIdAvatar2Post successfully', function(done) {
        //uncomment below and update the code to test issuetypeIdAvatar2Post
        //instance.issuetypeIdAvatar2Post(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuetypeIdDelete', function() {
      it('should call issuetypeIdDelete successfully', function(done) {
        //uncomment below and update the code to test issuetypeIdDelete
        //instance.issuetypeIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuetypeIdGet', function() {
      it('should call issuetypeIdGet successfully', function(done) {
        //uncomment below and update the code to test issuetypeIdGet
        //instance.issuetypeIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuetypeIdPut', function() {
      it('should call issuetypeIdPut successfully', function(done) {
        //uncomment below and update the code to test issuetypeIdPut
        //instance.issuetypeIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuetypeIssueTypeIdPropertiesGet', function() {
      it('should call issuetypeIssueTypeIdPropertiesGet successfully', function(done) {
        //uncomment below and update the code to test issuetypeIssueTypeIdPropertiesGet
        //instance.issuetypeIssueTypeIdPropertiesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuetypeIssueTypeIdPropertiesPropertyKeyDelete', function() {
      it('should call issuetypeIssueTypeIdPropertiesPropertyKeyDelete successfully', function(done) {
        //uncomment below and update the code to test issuetypeIssueTypeIdPropertiesPropertyKeyDelete
        //instance.issuetypeIssueTypeIdPropertiesPropertyKeyDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuetypeIssueTypeIdPropertiesPropertyKeyGet', function() {
      it('should call issuetypeIssueTypeIdPropertiesPropertyKeyGet successfully', function(done) {
        //uncomment below and update the code to test issuetypeIssueTypeIdPropertiesPropertyKeyGet
        //instance.issuetypeIssueTypeIdPropertiesPropertyKeyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuetypeIssueTypeIdPropertiesPropertyKeyPut', function() {
      it('should call issuetypeIssueTypeIdPropertiesPropertyKeyPut successfully', function(done) {
        //uncomment below and update the code to test issuetypeIssueTypeIdPropertiesPropertyKeyPut
        //instance.issuetypeIssueTypeIdPropertiesPropertyKeyPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuetypePost', function() {
      it('should call issuetypePost successfully', function(done) {
        //uncomment below and update the code to test issuetypePost
        //instance.issuetypePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('jqlAutocompletedataGet', function() {
      it('should call jqlAutocompletedataGet successfully', function(done) {
        //uncomment below and update the code to test jqlAutocompletedataGet
        //instance.jqlAutocompletedataGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('jqlAutocompletedataSuggestionsGet', function() {
      it('should call jqlAutocompletedataSuggestionsGet successfully', function(done) {
        //uncomment below and update the code to test jqlAutocompletedataSuggestionsGet
        //instance.jqlAutocompletedataSuggestionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('jqlPdcleanerPost', function() {
      it('should call jqlPdcleanerPost successfully', function(done) {
        //uncomment below and update the code to test jqlPdcleanerPost
        //instance.jqlPdcleanerPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mypermissionsGet', function() {
      it('should call mypermissionsGet successfully', function(done) {
        //uncomment below and update the code to test mypermissionsGet
        //instance.mypermissionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mypreferencesDelete', function() {
      it('should call mypreferencesDelete successfully', function(done) {
        //uncomment below and update the code to test mypreferencesDelete
        //instance.mypreferencesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mypreferencesGet', function() {
      it('should call mypreferencesGet successfully', function(done) {
        //uncomment below and update the code to test mypreferencesGet
        //instance.mypreferencesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mypreferencesLocaleDelete', function() {
      it('should call mypreferencesLocaleDelete successfully', function(done) {
        //uncomment below and update the code to test mypreferencesLocaleDelete
        //instance.mypreferencesLocaleDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mypreferencesLocaleGet', function() {
      it('should call mypreferencesLocaleGet successfully', function(done) {
        //uncomment below and update the code to test mypreferencesLocaleGet
        //instance.mypreferencesLocaleGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mypreferencesLocalePut', function() {
      it('should call mypreferencesLocalePut successfully', function(done) {
        //uncomment below and update the code to test mypreferencesLocalePut
        //instance.mypreferencesLocalePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mypreferencesPut', function() {
      it('should call mypreferencesPut successfully', function(done) {
        //uncomment below and update the code to test mypreferencesPut
        //instance.mypreferencesPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('myselfGet', function() {
      it('should call myselfGet successfully', function(done) {
        //uncomment below and update the code to test myselfGet
        //instance.myselfGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationschemeGet', function() {
      it('should call notificationschemeGet successfully', function(done) {
        //uncomment below and update the code to test notificationschemeGet
        //instance.notificationschemeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationschemeIdGet', function() {
      it('should call notificationschemeIdGet successfully', function(done) {
        //uncomment below and update the code to test notificationschemeIdGet
        //instance.notificationschemeIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('permissionsGet', function() {
      it('should call permissionsGet successfully', function(done) {
        //uncomment below and update the code to test permissionsGet
        //instance.permissionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('permissionsProjectPost', function() {
      it('should call permissionsProjectPost successfully', function(done) {
        //uncomment below and update the code to test permissionsProjectPost
        //instance.permissionsProjectPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('permissionschemeGet', function() {
      it('should call permissionschemeGet successfully', function(done) {
        //uncomment below and update the code to test permissionschemeGet
        //instance.permissionschemeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('permissionschemePost', function() {
      it('should call permissionschemePost successfully', function(done) {
        //uncomment below and update the code to test permissionschemePost
        //instance.permissionschemePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('permissionschemeSchemeIdDelete', function() {
      it('should call permissionschemeSchemeIdDelete successfully', function(done) {
        //uncomment below and update the code to test permissionschemeSchemeIdDelete
        //instance.permissionschemeSchemeIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('permissionschemeSchemeIdGet', function() {
      it('should call permissionschemeSchemeIdGet successfully', function(done) {
        //uncomment below and update the code to test permissionschemeSchemeIdGet
        //instance.permissionschemeSchemeIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('permissionschemeSchemeIdPermissionGet', function() {
      it('should call permissionschemeSchemeIdPermissionGet successfully', function(done) {
        //uncomment below and update the code to test permissionschemeSchemeIdPermissionGet
        //instance.permissionschemeSchemeIdPermissionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('permissionschemeSchemeIdPermissionPermissionIdDelete', function() {
      it('should call permissionschemeSchemeIdPermissionPermissionIdDelete successfully', function(done) {
        //uncomment below and update the code to test permissionschemeSchemeIdPermissionPermissionIdDelete
        //instance.permissionschemeSchemeIdPermissionPermissionIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('permissionschemeSchemeIdPermissionPermissionIdGet', function() {
      it('should call permissionschemeSchemeIdPermissionPermissionIdGet successfully', function(done) {
        //uncomment below and update the code to test permissionschemeSchemeIdPermissionPermissionIdGet
        //instance.permissionschemeSchemeIdPermissionPermissionIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('permissionschemeSchemeIdPermissionPost', function() {
      it('should call permissionschemeSchemeIdPermissionPost successfully', function(done) {
        //uncomment below and update the code to test permissionschemeSchemeIdPermissionPost
        //instance.permissionschemeSchemeIdPermissionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('permissionschemeSchemeIdPut', function() {
      it('should call permissionschemeSchemeIdPut successfully', function(done) {
        //uncomment below and update the code to test permissionschemeSchemeIdPut
        //instance.permissionschemeSchemeIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('priorityGet', function() {
      it('should call priorityGet successfully', function(done) {
        //uncomment below and update the code to test priorityGet
        //instance.priorityGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('priorityIdGet', function() {
      it('should call priorityIdGet successfully', function(done) {
        //uncomment below and update the code to test priorityIdGet
        //instance.priorityIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectCategoryGet', function() {
      it('should call projectCategoryGet successfully', function(done) {
        //uncomment below and update the code to test projectCategoryGet
        //instance.projectCategoryGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectCategoryIdDelete', function() {
      it('should call projectCategoryIdDelete successfully', function(done) {
        //uncomment below and update the code to test projectCategoryIdDelete
        //instance.projectCategoryIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectCategoryIdGet', function() {
      it('should call projectCategoryIdGet successfully', function(done) {
        //uncomment below and update the code to test projectCategoryIdGet
        //instance.projectCategoryIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectCategoryIdPut', function() {
      it('should call projectCategoryIdPut successfully', function(done) {
        //uncomment below and update the code to test projectCategoryIdPut
        //instance.projectCategoryIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectCategoryPost', function() {
      it('should call projectCategoryPost successfully', function(done) {
        //uncomment below and update the code to test projectCategoryPost
        //instance.projectCategoryPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectGet', function() {
      it('should call projectGet successfully', function(done) {
        //uncomment below and update the code to test projectGet
        //instance.projectGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectPost', function() {
      it('should call projectPost successfully', function(done) {
        //uncomment below and update the code to test projectPost
        //instance.projectPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyAvatar2Post', function() {
      it('should call projectProjectIdOrKeyAvatar2Post successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyAvatar2Post
        //instance.projectProjectIdOrKeyAvatar2Post(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyAvatarIdDelete', function() {
      it('should call projectProjectIdOrKeyAvatarIdDelete successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyAvatarIdDelete
        //instance.projectProjectIdOrKeyAvatarIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyAvatarPut', function() {
      it('should call projectProjectIdOrKeyAvatarPut successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyAvatarPut
        //instance.projectProjectIdOrKeyAvatarPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyAvatarsGet', function() {
      it('should call projectProjectIdOrKeyAvatarsGet successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyAvatarsGet
        //instance.projectProjectIdOrKeyAvatarsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyComponentGet', function() {
      it('should call projectProjectIdOrKeyComponentGet successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyComponentGet
        //instance.projectProjectIdOrKeyComponentGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyComponentsGet', function() {
      it('should call projectProjectIdOrKeyComponentsGet successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyComponentsGet
        //instance.projectProjectIdOrKeyComponentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyDelete', function() {
      it('should call projectProjectIdOrKeyDelete successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyDelete
        //instance.projectProjectIdOrKeyDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyGet', function() {
      it('should call projectProjectIdOrKeyGet successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyGet
        //instance.projectProjectIdOrKeyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyPropertiesGet', function() {
      it('should call projectProjectIdOrKeyPropertiesGet successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyPropertiesGet
        //instance.projectProjectIdOrKeyPropertiesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyPropertiesPropertyKeyDelete', function() {
      it('should call projectProjectIdOrKeyPropertiesPropertyKeyDelete successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyPropertiesPropertyKeyDelete
        //instance.projectProjectIdOrKeyPropertiesPropertyKeyDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyPropertiesPropertyKeyGet', function() {
      it('should call projectProjectIdOrKeyPropertiesPropertyKeyGet successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyPropertiesPropertyKeyGet
        //instance.projectProjectIdOrKeyPropertiesPropertyKeyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyPropertiesPropertyKeyPut', function() {
      it('should call projectProjectIdOrKeyPropertiesPropertyKeyPut successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyPropertiesPropertyKeyPut
        //instance.projectProjectIdOrKeyPropertiesPropertyKeyPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyPut', function() {
      it('should call projectProjectIdOrKeyPut successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyPut
        //instance.projectProjectIdOrKeyPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyRoleGet', function() {
      it('should call projectProjectIdOrKeyRoleGet successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyRoleGet
        //instance.projectProjectIdOrKeyRoleGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyRoleIdDelete', function() {
      it('should call projectProjectIdOrKeyRoleIdDelete successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyRoleIdDelete
        //instance.projectProjectIdOrKeyRoleIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyRoleIdGet', function() {
      it('should call projectProjectIdOrKeyRoleIdGet successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyRoleIdGet
        //instance.projectProjectIdOrKeyRoleIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyRoleIdPost', function() {
      it('should call projectProjectIdOrKeyRoleIdPost successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyRoleIdPost
        //instance.projectProjectIdOrKeyRoleIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyRoleIdPut', function() {
      it('should call projectProjectIdOrKeyRoleIdPut successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyRoleIdPut
        //instance.projectProjectIdOrKeyRoleIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyRoledetailsGet', function() {
      it('should call projectProjectIdOrKeyRoledetailsGet successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyRoledetailsGet
        //instance.projectProjectIdOrKeyRoledetailsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyStatusesGet', function() {
      it('should call projectProjectIdOrKeyStatusesGet successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyStatusesGet
        //instance.projectProjectIdOrKeyStatusesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyTypeNewProjectTypeKeyPut', function() {
      it('should call projectProjectIdOrKeyTypeNewProjectTypeKeyPut successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyTypeNewProjectTypeKeyPut
        //instance.projectProjectIdOrKeyTypeNewProjectTypeKeyPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyVersionGet', function() {
      it('should call projectProjectIdOrKeyVersionGet successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyVersionGet
        //instance.projectProjectIdOrKeyVersionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectIdOrKeyVersionsGet', function() {
      it('should call projectProjectIdOrKeyVersionsGet successfully', function(done) {
        //uncomment below and update the code to test projectProjectIdOrKeyVersionsGet
        //instance.projectProjectIdOrKeyVersionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectKeyOrIdIssuesecuritylevelschemeGet', function() {
      it('should call projectProjectKeyOrIdIssuesecuritylevelschemeGet successfully', function(done) {
        //uncomment below and update the code to test projectProjectKeyOrIdIssuesecuritylevelschemeGet
        //instance.projectProjectKeyOrIdIssuesecuritylevelschemeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectKeyOrIdNotificationschemeGet', function() {
      it('should call projectProjectKeyOrIdNotificationschemeGet successfully', function(done) {
        //uncomment below and update the code to test projectProjectKeyOrIdNotificationschemeGet
        //instance.projectProjectKeyOrIdNotificationschemeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectKeyOrIdPermissionschemeGet', function() {
      it('should call projectProjectKeyOrIdPermissionschemeGet successfully', function(done) {
        //uncomment below and update the code to test projectProjectKeyOrIdPermissionschemeGet
        //instance.projectProjectKeyOrIdPermissionschemeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectKeyOrIdPermissionschemePut', function() {
      it('should call projectProjectKeyOrIdPermissionschemePut successfully', function(done) {
        //uncomment below and update the code to test projectProjectKeyOrIdPermissionschemePut
        //instance.projectProjectKeyOrIdPermissionschemePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectProjectKeyOrIdSecuritylevelGet', function() {
      it('should call projectProjectKeyOrIdSecuritylevelGet successfully', function(done) {
        //uncomment below and update the code to test projectProjectKeyOrIdSecuritylevelGet
        //instance.projectProjectKeyOrIdSecuritylevelGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectSearchGet', function() {
      it('should call projectSearchGet successfully', function(done) {
        //uncomment below and update the code to test projectSearchGet
        //instance.projectSearchGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectTypeGet', function() {
      it('should call projectTypeGet successfully', function(done) {
        //uncomment below and update the code to test projectTypeGet
        //instance.projectTypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectTypeProjectTypeKeyAccessibleGet', function() {
      it('should call projectTypeProjectTypeKeyAccessibleGet successfully', function(done) {
        //uncomment below and update the code to test projectTypeProjectTypeKeyAccessibleGet
        //instance.projectTypeProjectTypeKeyAccessibleGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectTypeProjectTypeKeyGet', function() {
      it('should call projectTypeProjectTypeKeyGet successfully', function(done) {
        //uncomment below and update the code to test projectTypeProjectTypeKeyGet
        //instance.projectTypeProjectTypeKeyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectvalidateKeyGet', function() {
      it('should call projectvalidateKeyGet successfully', function(done) {
        //uncomment below and update the code to test projectvalidateKeyGet
        //instance.projectvalidateKeyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectvalidateValidProjectKeyGet', function() {
      it('should call projectvalidateValidProjectKeyGet successfully', function(done) {
        //uncomment below and update the code to test projectvalidateValidProjectKeyGet
        //instance.projectvalidateValidProjectKeyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectvalidateValidProjectNameGet', function() {
      it('should call projectvalidateValidProjectNameGet successfully', function(done) {
        //uncomment below and update the code to test projectvalidateValidProjectNameGet
        //instance.projectvalidateValidProjectNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resolutionGet', function() {
      it('should call resolutionGet successfully', function(done) {
        //uncomment below and update the code to test resolutionGet
        //instance.resolutionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resolutionIdGet', function() {
      it('should call resolutionIdGet successfully', function(done) {
        //uncomment below and update the code to test resolutionIdGet
        //instance.resolutionIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('roleGet', function() {
      it('should call roleGet successfully', function(done) {
        //uncomment below and update the code to test roleGet
        //instance.roleGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('roleIdActorsDelete', function() {
      it('should call roleIdActorsDelete successfully', function(done) {
        //uncomment below and update the code to test roleIdActorsDelete
        //instance.roleIdActorsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('roleIdActorsGet', function() {
      it('should call roleIdActorsGet successfully', function(done) {
        //uncomment below and update the code to test roleIdActorsGet
        //instance.roleIdActorsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('roleIdActorsPost', function() {
      it('should call roleIdActorsPost successfully', function(done) {
        //uncomment below and update the code to test roleIdActorsPost
        //instance.roleIdActorsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('roleIdDelete', function() {
      it('should call roleIdDelete successfully', function(done) {
        //uncomment below and update the code to test roleIdDelete
        //instance.roleIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('roleIdGet', function() {
      it('should call roleIdGet successfully', function(done) {
        //uncomment below and update the code to test roleIdGet
        //instance.roleIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('roleIdPost', function() {
      it('should call roleIdPost successfully', function(done) {
        //uncomment below and update the code to test roleIdPost
        //instance.roleIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('roleIdPut', function() {
      it('should call roleIdPut successfully', function(done) {
        //uncomment below and update the code to test roleIdPut
        //instance.roleIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rolePost', function() {
      it('should call rolePost successfully', function(done) {
        //uncomment below and update the code to test rolePost
        //instance.rolePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensAddToDefaultFieldIdPost', function() {
      it('should call screensAddToDefaultFieldIdPost successfully', function(done) {
        //uncomment below and update the code to test screensAddToDefaultFieldIdPost
        //instance.screensAddToDefaultFieldIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensGet', function() {
      it('should call screensGet successfully', function(done) {
        //uncomment below and update the code to test screensGet
        //instance.screensGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensScreenIdAvailableFieldsGet', function() {
      it('should call screensScreenIdAvailableFieldsGet successfully', function(done) {
        //uncomment below and update the code to test screensScreenIdAvailableFieldsGet
        //instance.screensScreenIdAvailableFieldsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensScreenIdTabsGet', function() {
      it('should call screensScreenIdTabsGet successfully', function(done) {
        //uncomment below and update the code to test screensScreenIdTabsGet
        //instance.screensScreenIdTabsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensScreenIdTabsPost', function() {
      it('should call screensScreenIdTabsPost successfully', function(done) {
        //uncomment below and update the code to test screensScreenIdTabsPost
        //instance.screensScreenIdTabsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensScreenIdTabsTabIdDelete', function() {
      it('should call screensScreenIdTabsTabIdDelete successfully', function(done) {
        //uncomment below and update the code to test screensScreenIdTabsTabIdDelete
        //instance.screensScreenIdTabsTabIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensScreenIdTabsTabIdFieldsGet', function() {
      it('should call screensScreenIdTabsTabIdFieldsGet successfully', function(done) {
        //uncomment below and update the code to test screensScreenIdTabsTabIdFieldsGet
        //instance.screensScreenIdTabsTabIdFieldsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensScreenIdTabsTabIdFieldsIdDelete', function() {
      it('should call screensScreenIdTabsTabIdFieldsIdDelete successfully', function(done) {
        //uncomment below and update the code to test screensScreenIdTabsTabIdFieldsIdDelete
        //instance.screensScreenIdTabsTabIdFieldsIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensScreenIdTabsTabIdFieldsIdMovePost', function() {
      it('should call screensScreenIdTabsTabIdFieldsIdMovePost successfully', function(done) {
        //uncomment below and update the code to test screensScreenIdTabsTabIdFieldsIdMovePost
        //instance.screensScreenIdTabsTabIdFieldsIdMovePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensScreenIdTabsTabIdFieldsPost', function() {
      it('should call screensScreenIdTabsTabIdFieldsPost successfully', function(done) {
        //uncomment below and update the code to test screensScreenIdTabsTabIdFieldsPost
        //instance.screensScreenIdTabsTabIdFieldsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensScreenIdTabsTabIdMovePosPost', function() {
      it('should call screensScreenIdTabsTabIdMovePosPost successfully', function(done) {
        //uncomment below and update the code to test screensScreenIdTabsTabIdMovePosPost
        //instance.screensScreenIdTabsTabIdMovePosPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('screensScreenIdTabsTabIdPut', function() {
      it('should call screensScreenIdTabsTabIdPut successfully', function(done) {
        //uncomment below and update the code to test screensScreenIdTabsTabIdPut
        //instance.screensScreenIdTabsTabIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchGet', function() {
      it('should call searchGet successfully', function(done) {
        //uncomment below and update the code to test searchGet
        //instance.searchGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchPost', function() {
      it('should call searchPost successfully', function(done) {
        //uncomment below and update the code to test searchPost
        //instance.searchPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securitylevelIdGet', function() {
      it('should call securitylevelIdGet successfully', function(done) {
        //uncomment below and update the code to test securitylevelIdGet
        //instance.securitylevelIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverInfoGet', function() {
      it('should call serverInfoGet successfully', function(done) {
        //uncomment below and update the code to test serverInfoGet
        //instance.serverInfoGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingsColumnsGet', function() {
      it('should call settingsColumnsGet successfully', function(done) {
        //uncomment below and update the code to test settingsColumnsGet
        //instance.settingsColumnsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingsColumnsPut', function() {
      it('should call settingsColumnsPut successfully', function(done) {
        //uncomment below and update the code to test settingsColumnsPut
        //instance.settingsColumnsPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('statusGet', function() {
      it('should call statusGet successfully', function(done) {
        //uncomment below and update the code to test statusGet
        //instance.statusGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('statusIdOrNameGet', function() {
      it('should call statusIdOrNameGet successfully', function(done) {
        //uncomment below and update the code to test statusIdOrNameGet
        //instance.statusIdOrNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('statuscategoryGet', function() {
      it('should call statuscategoryGet successfully', function(done) {
        //uncomment below and update the code to test statuscategoryGet
        //instance.statuscategoryGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('statuscategoryIdOrKeyGet', function() {
      it('should call statuscategoryIdOrKeyGet successfully', function(done) {
        //uncomment below and update the code to test statuscategoryIdOrKeyGet
        //instance.statuscategoryIdOrKeyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('taskTaskIdCancelPost', function() {
      it('should call taskTaskIdCancelPost successfully', function(done) {
        //uncomment below and update the code to test taskTaskIdCancelPost
        //instance.taskTaskIdCancelPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('taskTaskIdGet', function() {
      it('should call taskTaskIdGet successfully', function(done) {
        //uncomment below and update the code to test taskTaskIdGet
        //instance.taskTaskIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('universalAvatarTypeTypeOwnerEntityIdGet', function() {
      it('should call universalAvatarTypeTypeOwnerEntityIdGet successfully', function(done) {
        //uncomment below and update the code to test universalAvatarTypeTypeOwnerEntityIdGet
        //instance.universalAvatarTypeTypeOwnerEntityIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('universalAvatarTypeTypeOwnerEntityIdPost', function() {
      it('should call universalAvatarTypeTypeOwnerEntityIdPost successfully', function(done) {
        //uncomment below and update the code to test universalAvatarTypeTypeOwnerEntityIdPost
        //instance.universalAvatarTypeTypeOwnerEntityIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('universalAvatarTypeTypeOwnerOwningObjectIdAvatarIdDelete', function() {
      it('should call universalAvatarTypeTypeOwnerOwningObjectIdAvatarIdDelete successfully', function(done) {
        //uncomment below and update the code to test universalAvatarTypeTypeOwnerOwningObjectIdAvatarIdDelete
        //instance.universalAvatarTypeTypeOwnerOwningObjectIdAvatarIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userAssignableMultiProjectSearchGet', function() {
      it('should call userAssignableMultiProjectSearchGet successfully', function(done) {
        //uncomment below and update the code to test userAssignableMultiProjectSearchGet
        //instance.userAssignableMultiProjectSearchGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userAssignableSearchGet', function() {
      it('should call userAssignableSearchGet successfully', function(done) {
        //uncomment below and update the code to test userAssignableSearchGet
        //instance.userAssignableSearchGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userBulkGet', function() {
      it('should call userBulkGet successfully', function(done) {
        //uncomment below and update the code to test userBulkGet
        //instance.userBulkGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userColumnsDelete', function() {
      it('should call userColumnsDelete successfully', function(done) {
        //uncomment below and update the code to test userColumnsDelete
        //instance.userColumnsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userColumnsGet', function() {
      it('should call userColumnsGet successfully', function(done) {
        //uncomment below and update the code to test userColumnsGet
        //instance.userColumnsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userColumnsPut', function() {
      it('should call userColumnsPut successfully', function(done) {
        //uncomment below and update the code to test userColumnsPut
        //instance.userColumnsPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userDelete', function() {
      it('should call userDelete successfully', function(done) {
        //uncomment below and update the code to test userDelete
        //instance.userDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGet', function() {
      it('should call userGet successfully', function(done) {
        //uncomment below and update the code to test userGet
        //instance.userGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGroupsGet', function() {
      it('should call userGroupsGet successfully', function(done) {
        //uncomment below and update the code to test userGroupsGet
        //instance.userGroupsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPermissionSearchGet', function() {
      it('should call userPermissionSearchGet successfully', function(done) {
        //uncomment below and update the code to test userPermissionSearchGet
        //instance.userPermissionSearchGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPickerGet', function() {
      it('should call userPickerGet successfully', function(done) {
        //uncomment below and update the code to test userPickerGet
        //instance.userPickerGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPost', function() {
      it('should call userPost successfully', function(done) {
        //uncomment below and update the code to test userPost
        //instance.userPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPropertiesGet', function() {
      it('should call userPropertiesGet successfully', function(done) {
        //uncomment below and update the code to test userPropertiesGet
        //instance.userPropertiesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPropertiesPropertyKeyDelete', function() {
      it('should call userPropertiesPropertyKeyDelete successfully', function(done) {
        //uncomment below and update the code to test userPropertiesPropertyKeyDelete
        //instance.userPropertiesPropertyKeyDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPropertiesPropertyKeyGet', function() {
      it('should call userPropertiesPropertyKeyGet successfully', function(done) {
        //uncomment below and update the code to test userPropertiesPropertyKeyGet
        //instance.userPropertiesPropertyKeyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPropertiesPropertyKeyPut', function() {
      it('should call userPropertiesPropertyKeyPut successfully', function(done) {
        //uncomment below and update the code to test userPropertiesPropertyKeyPut
        //instance.userPropertiesPropertyKeyPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userSearchGet', function() {
      it('should call userSearchGet successfully', function(done) {
        //uncomment below and update the code to test userSearchGet
        //instance.userSearchGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userSearchQueryGet', function() {
      it('should call userSearchQueryGet successfully', function(done) {
        //uncomment below and update the code to test userSearchQueryGet
        //instance.userSearchQueryGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userSearchQueryKeyGet', function() {
      it('should call userSearchQueryKeyGet successfully', function(done) {
        //uncomment below and update the code to test userSearchQueryKeyGet
        //instance.userSearchQueryKeyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userViewissueSearchGet', function() {
      it('should call userViewissueSearchGet successfully', function(done) {
        //uncomment below and update the code to test userViewissueSearchGet
        //instance.userViewissueSearchGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('versionIdDelete', function() {
      it('should call versionIdDelete successfully', function(done) {
        //uncomment below and update the code to test versionIdDelete
        //instance.versionIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('versionIdGet', function() {
      it('should call versionIdGet successfully', function(done) {
        //uncomment below and update the code to test versionIdGet
        //instance.versionIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('versionIdMergetoMoveIssuesToPut', function() {
      it('should call versionIdMergetoMoveIssuesToPut successfully', function(done) {
        //uncomment below and update the code to test versionIdMergetoMoveIssuesToPut
        //instance.versionIdMergetoMoveIssuesToPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('versionIdMovePost', function() {
      it('should call versionIdMovePost successfully', function(done) {
        //uncomment below and update the code to test versionIdMovePost
        //instance.versionIdMovePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('versionIdPut', function() {
      it('should call versionIdPut successfully', function(done) {
        //uncomment below and update the code to test versionIdPut
        //instance.versionIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('versionIdRelatedIssueCountsGet', function() {
      it('should call versionIdRelatedIssueCountsGet successfully', function(done) {
        //uncomment below and update the code to test versionIdRelatedIssueCountsGet
        //instance.versionIdRelatedIssueCountsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('versionIdRemoveAndSwapPost', function() {
      it('should call versionIdRemoveAndSwapPost successfully', function(done) {
        //uncomment below and update the code to test versionIdRemoveAndSwapPost
        //instance.versionIdRemoveAndSwapPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('versionIdUnresolvedIssueCountGet', function() {
      it('should call versionIdUnresolvedIssueCountGet successfully', function(done) {
        //uncomment below and update the code to test versionIdUnresolvedIssueCountGet
        //instance.versionIdUnresolvedIssueCountGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('versionPost', function() {
      it('should call versionPost successfully', function(done) {
        //uncomment below and update the code to test versionPost
        //instance.versionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('versionRemotelinkGet', function() {
      it('should call versionRemotelinkGet successfully', function(done) {
        //uncomment below and update the code to test versionRemotelinkGet
        //instance.versionRemotelinkGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('versionVersionIdRemotelinkDelete', function() {
      it('should call versionVersionIdRemotelinkDelete successfully', function(done) {
        //uncomment below and update the code to test versionVersionIdRemotelinkDelete
        //instance.versionVersionIdRemotelinkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('versionVersionIdRemotelinkGet', function() {
      it('should call versionVersionIdRemotelinkGet successfully', function(done) {
        //uncomment below and update the code to test versionVersionIdRemotelinkGet
        //instance.versionVersionIdRemotelinkGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('versionVersionIdRemotelinkGlobalIdDelete', function() {
      it('should call versionVersionIdRemotelinkGlobalIdDelete successfully', function(done) {
        //uncomment below and update the code to test versionVersionIdRemotelinkGlobalIdDelete
        //instance.versionVersionIdRemotelinkGlobalIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('versionVersionIdRemotelinkGlobalIdGet', function() {
      it('should call versionVersionIdRemotelinkGlobalIdGet successfully', function(done) {
        //uncomment below and update the code to test versionVersionIdRemotelinkGlobalIdGet
        //instance.versionVersionIdRemotelinkGlobalIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('versionVersionIdRemotelinkGlobalIdPost', function() {
      it('should call versionVersionIdRemotelinkGlobalIdPost successfully', function(done) {
        //uncomment below and update the code to test versionVersionIdRemotelinkGlobalIdPost
        //instance.versionVersionIdRemotelinkGlobalIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('versionVersionIdRemotelinkPost', function() {
      it('should call versionVersionIdRemotelinkPost successfully', function(done) {
        //uncomment below and update the code to test versionVersionIdRemotelinkPost
        //instance.versionVersionIdRemotelinkPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowGet', function() {
      it('should call workflowGet successfully', function(done) {
        //uncomment below and update the code to test workflowGet
        //instance.workflowGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowTransitionsTransitionIdPropertiesDelete', function() {
      it('should call workflowTransitionsTransitionIdPropertiesDelete successfully', function(done) {
        //uncomment below and update the code to test workflowTransitionsTransitionIdPropertiesDelete
        //instance.workflowTransitionsTransitionIdPropertiesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowTransitionsTransitionIdPropertiesGet', function() {
      it('should call workflowTransitionsTransitionIdPropertiesGet successfully', function(done) {
        //uncomment below and update the code to test workflowTransitionsTransitionIdPropertiesGet
        //instance.workflowTransitionsTransitionIdPropertiesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowTransitionsTransitionIdPropertiesPost', function() {
      it('should call workflowTransitionsTransitionIdPropertiesPost successfully', function(done) {
        //uncomment below and update the code to test workflowTransitionsTransitionIdPropertiesPost
        //instance.workflowTransitionsTransitionIdPropertiesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowTransitionsTransitionIdPropertiesPut', function() {
      it('should call workflowTransitionsTransitionIdPropertiesPut successfully', function(done) {
        //uncomment below and update the code to test workflowTransitionsTransitionIdPropertiesPut
        //instance.workflowTransitionsTransitionIdPropertiesPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdCreatedraftPost', function() {
      it('should call workflowschemeIdCreatedraftPost successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdCreatedraftPost
        //instance.workflowschemeIdCreatedraftPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDefaultDelete', function() {
      it('should call workflowschemeIdDefaultDelete successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDefaultDelete
        //instance.workflowschemeIdDefaultDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDefaultGet', function() {
      it('should call workflowschemeIdDefaultGet successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDefaultGet
        //instance.workflowschemeIdDefaultGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDefaultPut', function() {
      it('should call workflowschemeIdDefaultPut successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDefaultPut
        //instance.workflowschemeIdDefaultPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDelete', function() {
      it('should call workflowschemeIdDelete successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDelete
        //instance.workflowschemeIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftDefaultDelete', function() {
      it('should call workflowschemeIdDraftDefaultDelete successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftDefaultDelete
        //instance.workflowschemeIdDraftDefaultDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftDefaultGet', function() {
      it('should call workflowschemeIdDraftDefaultGet successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftDefaultGet
        //instance.workflowschemeIdDraftDefaultGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftDefaultPut', function() {
      it('should call workflowschemeIdDraftDefaultPut successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftDefaultPut
        //instance.workflowschemeIdDraftDefaultPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftDelete', function() {
      it('should call workflowschemeIdDraftDelete successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftDelete
        //instance.workflowschemeIdDraftDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftGet', function() {
      it('should call workflowschemeIdDraftGet successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftGet
        //instance.workflowschemeIdDraftGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftIssuetypeIssueTypeDelete', function() {
      it('should call workflowschemeIdDraftIssuetypeIssueTypeDelete successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftIssuetypeIssueTypeDelete
        //instance.workflowschemeIdDraftIssuetypeIssueTypeDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftIssuetypeIssueTypeGet', function() {
      it('should call workflowschemeIdDraftIssuetypeIssueTypeGet successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftIssuetypeIssueTypeGet
        //instance.workflowschemeIdDraftIssuetypeIssueTypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftIssuetypeIssueTypePut', function() {
      it('should call workflowschemeIdDraftIssuetypeIssueTypePut successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftIssuetypeIssueTypePut
        //instance.workflowschemeIdDraftIssuetypeIssueTypePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftPut', function() {
      it('should call workflowschemeIdDraftPut successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftPut
        //instance.workflowschemeIdDraftPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftWorkflowDelete', function() {
      it('should call workflowschemeIdDraftWorkflowDelete successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftWorkflowDelete
        //instance.workflowschemeIdDraftWorkflowDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftWorkflowGet', function() {
      it('should call workflowschemeIdDraftWorkflowGet successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftWorkflowGet
        //instance.workflowschemeIdDraftWorkflowGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdDraftWorkflowPut', function() {
      it('should call workflowschemeIdDraftWorkflowPut successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdDraftWorkflowPut
        //instance.workflowschemeIdDraftWorkflowPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdGet', function() {
      it('should call workflowschemeIdGet successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdGet
        //instance.workflowschemeIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdIssuetypeIssueTypeDelete', function() {
      it('should call workflowschemeIdIssuetypeIssueTypeDelete successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdIssuetypeIssueTypeDelete
        //instance.workflowschemeIdIssuetypeIssueTypeDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdIssuetypeIssueTypeGet', function() {
      it('should call workflowschemeIdIssuetypeIssueTypeGet successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdIssuetypeIssueTypeGet
        //instance.workflowschemeIdIssuetypeIssueTypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdIssuetypeIssueTypePut', function() {
      it('should call workflowschemeIdIssuetypeIssueTypePut successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdIssuetypeIssueTypePut
        //instance.workflowschemeIdIssuetypeIssueTypePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdPut', function() {
      it('should call workflowschemeIdPut successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdPut
        //instance.workflowschemeIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdWorkflowDelete', function() {
      it('should call workflowschemeIdWorkflowDelete successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdWorkflowDelete
        //instance.workflowschemeIdWorkflowDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdWorkflowGet', function() {
      it('should call workflowschemeIdWorkflowGet successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdWorkflowGet
        //instance.workflowschemeIdWorkflowGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemeIdWorkflowPut', function() {
      it('should call workflowschemeIdWorkflowPut successfully', function(done) {
        //uncomment below and update the code to test workflowschemeIdWorkflowPut
        //instance.workflowschemeIdWorkflowPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workflowschemePost', function() {
      it('should call workflowschemePost successfully', function(done) {
        //uncomment below and update the code to test workflowschemePost
        //instance.workflowschemePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('worklogDeletedGet', function() {
      it('should call worklogDeletedGet successfully', function(done) {
        //uncomment below and update the code to test worklogDeletedGet
        //instance.worklogDeletedGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('worklogListPost', function() {
      it('should call worklogListPost successfully', function(done) {
        //uncomment below and update the code to test worklogListPost
        //instance.worklogListPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('worklogUpdatedGet', function() {
      it('should call worklogUpdatedGet successfully', function(done) {
        //uncomment below and update the code to test worklogUpdatedGet
        //instance.worklogUpdatedGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
