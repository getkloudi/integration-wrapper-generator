{
  "name": "Bugsnag Data Access API",
  "subdomain": "bugsnagapiv2",
  "rootSubdomain": "bugsnagapiv2",
  "lastUpdated": "2020-06-10T23:18:45.209Z",
  "apiDescriptionFormat": "apiblueprint",
  "owner": {
    "_id": "568bd58c727a400b009c0b89",
    "name": "bugsnag "
  },
  "user": {
    "trafficSecret": "efa616ba22",
    "isAnonymous": true
  },
  "urls": {
    "mock": "https://private-anon-efa616ba22-bugsnagapiv2.apiary-mock.com/",
    "production": "https://api.bugsnag.com/",
    "proxy": "https://private-anon-efa616ba22-bugsnagapiv2.apiary-proxy.com/"
  },
  "preferences": {
    "privateTraffic": true,
    "privateDocumentation": false,
    "defaultConsoleMode": "cloud",
    "documentation": {}
  },
  "permissions": {
    "editApi": false,
    "accessApiSettings": false,
    "inviteViewer": false,
    "inviteEditor": false,
    "viewTests": false,
    "viewApiBlueprint": false
  },
  "editors": [],
  "team": {
    "_id": "568bd58c727a400b009c0b88"
  },
  "authDefinitions": [],
  "dataStructures": [
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ActivityItem"
          },
          "content": [
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000001"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "action"
                },
                "value": {
                  "element": "enum",
                  "content": [
                    {
                      "element": "string",
                      "content": "fixed"
                    },
                    {
                      "element": "string",
                      "content": "unfixed"
                    },
                    {
                      "element": "string",
                      "content": "snoozed"
                    },
                    {
                      "element": "string",
                      "content": "unsnoozed"
                    },
                    {
                      "element": "string",
                      "content": "ignored"
                    },
                    {
                      "element": "string",
                      "content": "unignored"
                    },
                    {
                      "element": "string",
                      "content": "assigned"
                    },
                    {
                      "element": "string",
                      "content": "unassigned"
                    },
                    {
                      "element": "string",
                      "content": "issue_created"
                    },
                    {
                      "element": "string",
                      "content": "issue_linked"
                    },
                    {
                      "element": "string",
                      "content": "issue_unlinked"
                    },
                    {
                      "element": "string",
                      "content": "first_seen"
                    },
                    {
                      "element": "string"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Indicates the Collaborator who performed the action.  Actor\ncan also simply be the string `\"system\"`, which indicates that\nthe activity is attributed to Bugsnag rather than a\nCollaborator."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "actor"
                },
                "value": {
                  "element": "User"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the Collaborator to whom the Error has been assigned"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "assignee"
                },
                "value": {
                  "element": "User"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "created_at"
                },
                "value": {
                  "element": "string",
                  "content": "2017-03-06 23:34:00 UTC"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Will be present if the `action` is `snoozed` or `unsnoozed`."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "snoozed_conditions"
                },
                "value": {
                  "element": "ErrorUpdateReopenRules"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "If the ActivityItem has to do with an issue, this field will contain the issue tracker's name."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "issue_tracker"
                },
                "value": {
                  "element": "string",
                  "content": "jira"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "If the ActivityItem has to do with an issue, this field will contain the url of the issue."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "issue_url"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "If the ActivityItem has to do with an issue, this field will contain whether or not the url of the issue was verified."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "issue_url_verified"
                },
                "value": {
                  "element": "boolean"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Some ActivityItems will contain a reason field which will provide more context for why the `action` was taken."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "reason"
                },
                "value": {
                  "element": "string"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "CommentApiView"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000007"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The time the Comment was created."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "created_at"
                },
                "value": {
                  "element": "string",
                  "content": "2017-03-02T05:55:55.555Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the comment body itself"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "message"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "url"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the Collaborator who made the comment"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "collaborator"
                },
                "value": {
                  "element": "User"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ProjectSessionOverviewApiView"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "ID of the project"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000001"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Will be null if no release stage was returned"
              },
              "attributes": {
                "typeAttributes": [
                  "nullable"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "stability_score"
                },
                "value": {
                  "element": "object",
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "number of sessions started in last 30 days"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "sessions_started"
                        },
                        "value": {
                          "element": "number",
                          "content": 200
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "number of sessions with unhandled errors in last 30 days"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "sessions_with_unhandled"
                        },
                        "value": {
                          "element": "number",
                          "content": 40
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "ratio of unhandled sessions to total number started"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "unhandled_rate"
                        },
                        "value": {
                          "element": "string",
                          "content": "0.2"
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Will be null if no release stage was returned"
              },
              "attributes": {
                "typeAttributes": [
                  "nullable"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "session_timeline"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "ProjectStabilityTrendTimelinePoint"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ProjectOverviewApiView"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "ID of the project"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000001"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "for_review"
                },
                "value": {
                  "element": "object",
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "The number of errors for review one week ago, will be null if project is younger than a week"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "nullable"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "one_week_ago"
                        },
                        "value": {
                          "element": "number",
                          "content": 13
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "The number of errors for review at time of request"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "current"
                        },
                        "value": {
                          "element": "number",
                          "content": 4
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The primary release stage name, will be null if no primary release stage was returned"
              },
              "attributes": {
                "typeAttributes": [
                  "nullable"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "release_stage_name"
                },
                "value": {
                  "element": "string",
                  "content": "production"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Will be null if no release stage was returned"
              },
              "attributes": {
                "typeAttributes": [
                  "nullable"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "latest_release"
                },
                "value": {
                  "element": "object",
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID of the release group"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "release_group_id"
                        },
                        "value": {
                          "element": "string",
                          "content": "515fb9337c1074f6fd000001"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "The latest app version in the primary release stage"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "app_version"
                        },
                        "value": {
                          "element": "string",
                          "content": "1.3"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "The ISO-8601-encoded time the first release was recorded"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "first_release_time"
                        },
                        "value": {
                          "element": "string",
                          "content": "2020-04-07T21:48:30.046Z"
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ConfiguredIntegration"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "ID of the configured integration"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000007"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Key to identify the integration service."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "integration_key"
                },
                "value": {
                  "element": "string",
                  "content": "jira"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Project ID of the project the integration is configured for."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000001"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "A map of the configuration parameters required for the integration. The fields vary depending on the integration being configured. Example:"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "configuration"
                },
                "value": {
                  "element": "SampleIntegrationConfiguration"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The release stages that this notification should not be triggered for.\n\nExample:\n\n{\n \"disable_release_stages\": [\"development\", \"staging\"]\n}"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "disable_release_stages"
                },
                "value": {
                  "element": "array"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The severities that this notification should not be triggered for."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "disable_severities"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Error severity."
                      },
                      "content": "error"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Warning severity."
                      },
                      "content": "warning"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Info severity."
                      },
                      "content": "info"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The kinds of exceptions that this notification should not be triggered for."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "disable_unhandled_states"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "UnhandledOptions"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Automation settings (applicable for `issue-tracker` integrations only)."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "issue_automation"
                },
                "value": {
                  "element": "IssueAutomationSettings"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The error message from the most recent failure of the integration."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "last_failure_message"
                },
                "value": {
                  "element": "string",
                  "content": "'Integration not found'"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The total number of times the integration has failed due to a rate limit from the integration."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "total_rate_limits"
                },
                "value": {
                  "element": "number",
                  "content": 4
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The ISO8601 timestamp of the last time the integration was successfully used."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "last_successful_usage_at"
                },
                "value": {
                  "element": "string",
                  "content": "2017-03-02T05:55:55.555Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The status of the configured integration."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "status"
                },
                "value": {
                  "element": "enum",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "enabled"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "meta": {
                        "description": "The integration is enabled."
                      },
                      "content": "enabled"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "The integration is disabled. No notifications will be sent."
                      },
                      "content": "disabled"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "The integration is failing. If it continues to fail over a period of time it will become failed."
                      },
                      "content": "failing"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "The integration is failed. No notifications will be sent. An integration can be enabled again by performing a successful [/configured_integrations/test](/#reference/integrations/configured-integrations)."
                      },
                      "content": "failed"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "This will be set if an integration could not be fully configured automatically and requires additional setup by the user."
              },
              "attributes": {
                "typeAttributes": [
                  "optional",
                  "nullable"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "additional_setup_required"
                },
                "value": {
                  "element": "enum",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "webhook"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "meta": {
                        "description": "A two-way integration requires a webhook in the target system to be created manually. Currently only set for Jira."
                      },
                      "content": "webhook"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ConfiguredIntegrationSummary"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "ID of the base configured integration"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "notification_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000007"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Description of the configured integration"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "description"
                },
                "value": {
                  "element": "string",
                  "content": "Create and sync Jira ticket"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Key to identify the integration service"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "integration_key"
                },
                "value": {
                  "element": "string",
                  "content": "jira"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "tracker (string) - Category of configured integration"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "category"
                },
                "value": {
                  "element": "string",
                  "content": "issue"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Number of triggers enabled"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "enabled_trigger_count"
                },
                "value": {
                  "element": "number",
                  "content": 5
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "SampleIntegrationConfiguration"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "user_name"
                },
                "value": {
                  "element": "string",
                  "content": "a_user"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_id"
                },
                "value": {
                  "element": "string",
                  "content": "1234"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "password"
                },
                "value": {
                  "element": "string",
                  "content": "so_secure"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "enum",
          "meta": {
            "id": "AccountTrigger"
          },
          "attributes": {
            "samples": [
              [
                {
                  "element": "string",
                  "content": "accountSamplingStarted"
                }
              ]
            ]
          },
          "content": [
            {
              "element": "string",
              "content": "accountSamplingStarted"
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "enum",
          "meta": {
            "id": "ProjectTrigger"
          },
          "content": [
            {
              "element": "string",
              "content": "firstException"
            },
            {
              "element": "string",
              "content": "exception"
            },
            {
              "element": "string",
              "content": "exceptionUnfiltered"
            },
            {
              "element": "string",
              "content": "reopened"
            },
            {
              "element": "string",
              "content": "powerTen"
            },
            {
              "element": "string",
              "content": "comment"
            },
            {
              "element": "string",
              "content": "mention"
            },
            {
              "element": "string",
              "content": "dailySummaryEmail"
            },
            {
              "element": "string",
              "content": "weeklySummaryEmail"
            },
            {
              "element": "string",
              "content": "projectSpiking"
            },
            {
              "element": "string",
              "content": "errorStateManualChange"
            },
            {
              "element": "string",
              "content": "newRelease"
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "EmailNotification"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000007"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000008"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "triggers"
                },
                "value": {
                  "element": "enum",
                  "content": [
                    {
                      "element": "string",
                      "content": "comment"
                    },
                    {
                      "element": "string",
                      "content": "mention"
                    },
                    {
                      "element": "string",
                      "content": "projectSpiking"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "disable_severities"
                },
                "value": {
                  "element": "enum",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "info"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "info"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "disable_unhandled_states"
                },
                "value": {
                  "element": "UnhandledOptions",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "handled"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "handled"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "disable_release_stages"
                },
                "value": {
                  "element": "enum",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "staging"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "staging"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "status"
                },
                "value": {
                  "element": "string",
                  "content": "\"enabled\""
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "optional",
                  "nullable"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "last_failure_message"
                },
                "value": {
                  "element": "string"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "EmailNotificationSummary"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "notification_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000007"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000008"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the number of trigger types used by this email notification"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "enabled_trigger_count"
                },
                "value": {
                  "element": "number",
                  "content": 5
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "TriggerConfig"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "active"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "settings for the trigger"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "settings"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "NotificationSetting"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "NotificationSetting"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "must be from the same project as the notification"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "saved_search_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000007"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "basic_filter"
                },
                "value": {
                  "element": "BasicFilter"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "for `exception_config` and `project_spiking_config` are all states included, or just open"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "include_all_states"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the release stages to include (only for `new_release_config` trigger config)"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "release_stages"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "production"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "for 'error_event_frequency_config`, the threshold to alert above"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "threshold"
                },
                "value": {
                  "element": "number",
                  "content": 19
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "for 'error_event_frequency_config`, the period for which the threshold applies\n\nThe supported string format is a whole number followed by either:\n\n- \"m\" which represents minutes\n\n- \"h\" which represents hours\n\n- \"d\" which represents days\n\nE.g. \"2h\" is a period of 2 hours.\n\nThe minimum supported periods are:\n\n- \"1m\"\n\n- \"1h\"\n\n- \"1d\"\n\nThe maximum supported period is 7 days, or:\n\n- \"10080m\"\n\n- \"168h\"\n\n- \"7d\""
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "period"
                },
                "value": {
                  "element": "string",
                  "content": "1m"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "BasicFilter"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "the error statuses to include"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "error_statuses"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "open"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the release stages to include"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "release_stages"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "production"
                    },
                    {
                      "element": "string",
                      "content": "staging"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the severities to include"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "severities"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "SeverityOptions"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "unhandled states to include"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "unhandled_states"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "UnhandledOptions"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "EmailSettings"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "organization_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000007"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "share_email_settings"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "auto_subscribe_email_notifications"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "triggers to email on"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "triggers"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "ProjectTrigger"
                    },
                    {
                      "element": "AccountTrigger"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "disable_severities"
                },
                "value": {
                  "element": "enum",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "info"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "info"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "disable_unhandled_states"
                },
                "value": {
                  "element": "UnhandledOptions",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "handled"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "handled"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "disable_release_stages"
                },
                "value": {
                  "element": "enum",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "staging"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "staging"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "EmailSettingTriggerConfig"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "Is the trigger active? If active, notifications will be sent when events match the trigger"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "active"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "settings for the trigger"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "settings"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "EmailSettingsTriggerConfigSetting"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "EmailSettingsTriggerConfigSetting"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "basic_filter"
                },
                "value": {
                  "element": "BasicFilter"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "for `exception_config` (with data-forwarding integrations) and `project_spiking_config`, are all states included, or just open"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "include_all_states"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the release stages to include (only for `new_release_config` trigger config)"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "release_stages"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "production"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "for `error_event_frequency_config`, the threshold to alert above"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "threshold"
                },
                "value": {
                  "element": "number",
                  "content": 19
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "for `error_event_frequency_config`, the period for which the threshold applies\n\nThe supported string format is a whole number followed by either:\n\n- \"m\" which represents minutes\n\n- \"h\" which represents hours\n\n- \"d\" which represents days\n\nE.g. \"2h\" is a period of 2 hours.\n\nThe minimum supported periods are:\n\n- \"1m\"\n\n- \"1h\"\n\n- \"1d\"\n\nThe maximum supported period is 7 days, or:\n\n- \"10080m\"\n\n- \"168h\"\n\n- \"7d\""
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "period"
                },
                "value": {
                  "element": "string",
                  "content": "1m"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ErrorBase"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "The Error's severity."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "severity"
                },
                "value": {
                  "element": "SeverityOptions",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "error"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "error"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "ErrorBase",
          "meta": {
            "id": "ErrorUpdateRequest"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "The Collaborator to assign to the Error. Note that errors may be assigned only to users who have accepted their Bugsnag invitation and have access to the project."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "assigned_collaborator_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000002"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "If the Error has a `created_issue`, a request can specify an `issue_url`\nwhich will update the Bugsnag's link to the existing 3rd party issue."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "issue_url"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "If the Error has a `created_issue`, the `issue_title` request field can\nbe set to update the issue's title."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "issue_title"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "If the Error has a `created_issue`, a request can specify a `verify_issue_url`\nwhich will attempt to verify that the supplied link is valid in the configured issue tracker"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "verify_issue_url"
                },
                "value": {
                  "element": "boolean"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The type of update operation to perform. The can be used to change the Error's workflow state (e.g. marking the Error as `fixed`).\nIt must also be Must be one of the following:"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "operation"
                },
                "value": {
                  "element": "enum",
                  "content": [
                    {
                      "element": "string",
                      "meta": {
                        "description": "Set the Error's severity to the newly supplied `severity` parameter."
                      },
                      "content": "override_severity"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Using the `assign` operation will assign the Error to the Collaborator specified by the `assigned_collaborator_id` parameter. If the `assign` operation is used without setting the `assigned_collaborator_id`, the Error will become unassigned. The Error will also be unassigned if the Collaborator `assigned_collaborator_id` does not have access to the Error's Project or has not accepted their invitation."
                      },
                      "content": "assign"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Using the `create_issue` operation will create an issue for the Error. If the `issue_title` parameter is set, the new issue will be created with this title."
                      },
                      "content": "create_issue"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Using the `link_issue` operation will link the Error to an existing issue. The url should be provided in the `issue_url` parameter."
                      },
                      "content": "link_issue"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Remove the link between the Error and its current linked issue."
                      },
                      "content": "unlink_issue"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Set the Error's status to open."
                      },
                      "content": "open"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Snooze the error per the `reopen_rules` parameter."
                      },
                      "content": "snooze"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Set the Error's status to fixed."
                      },
                      "content": "fix"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Ignore the Error. Errors that are ignored and can only be reopened manually. Events are collected, but no notifications are sent."
                      },
                      "content": "ignore"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Delete the Error. The Error and all related Events will be removed from Bugsnag. If the error occurs again, it will appear as a new Error with status `Open`."
                      },
                      "content": "delete"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Discard the Error. The Error and all related Events will be removed from Bugsnag. Future occurrences of the Error will not be stored by Bugsnag or count toward Event usage limits."
                      },
                      "content": "discard"
                    },
                    {
                      "element": "string"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Snooze rules for automatically reopening the Error"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "reopen_rules"
                },
                "value": {
                  "element": "ErrorUpdateReopenRules"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The Error's new severity. This will be reflected in the Error's `overridden_severity` property. This is only applicable if the `override_severity` option is provided."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "severity"
                },
                "value": {
                  "element": "SeverityOptions"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "enum",
          "meta": {
            "id": "SeverityOptions"
          },
          "content": [
            {
              "element": "string",
              "meta": {
                "description": "can be used in manual Bugsnag.notify calls"
              },
              "content": "info"
            },
            {
              "element": "string",
              "meta": {
                "description": "the default severity when Bugsnag.notify is called manually"
              },
              "content": "warning"
            },
            {
              "element": "string",
              "meta": {
                "description": "the default severity for uncaught exceptions and crashes"
              },
              "content": "error"
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "enum",
          "meta": {
            "id": "UnhandledOptions"
          },
          "content": [
            {
              "element": "string",
              "meta": {
                "description": "Unhandled exceptions."
              },
              "content": "unhandled"
            },
            {
              "element": "string",
              "meta": {
                "description": "Handled exceptions."
              },
              "content": "handled"
            },
            {
              "element": "string"
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ErrorCreatedIssue"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "  The immutable issue id."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "1246284"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "  The issue key (if applicable). For example, in the case of a Jira story,\n  this will be the mutable key (e.g. ENG-10)"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "key"
                },
                "value": {
                  "element": "string",
                  "content": "ENG-10"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "  The issue number (if applicable). For example, in the case of a github issue\n  with the url `https://github.com/foo/bar/issues/123` this field will be\n  set to `123`."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "number"
                },
                "value": {
                  "element": "number",
                  "content": 123
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "  An identifier for the 3rd party service"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "type"
                },
                "value": {
                  "element": "string",
                  "content": "jira"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "  The url to the issue on the 3rd party service"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "url"
                },
                "value": {
                  "element": "string",
                  "content": "https://example.atlassian.net/browse/ENG-10"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "enum",
          "meta": {
            "id": "ErrorStatus"
          },
          "content": [
            {
              "element": "string",
              "content": "open"
            },
            {
              "element": "string",
              "content": "in progress"
            },
            {
              "element": "string",
              "content": "for_review"
            },
            {
              "element": "string",
              "content": "fixed"
            },
            {
              "element": "string",
              "content": "snoozed"
            },
            {
              "element": "string",
              "content": "ignored"
            },
            {
              "element": "string"
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "enum",
          "meta": {
            "id": "BasicFilterErrorStatus"
          },
          "content": [
            {
              "element": "string",
              "content": "open"
            },
            {
              "element": "string",
              "content": "fixed"
            },
            {
              "element": "string",
              "content": "snoozed"
            },
            {
              "element": "string",
              "content": "ignored"
            },
            {
              "element": "string"
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ErrorUpdateReopenRules"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "Must be one of the following:"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "reopen_if"
                },
                "value": {
                  "element": "enum",
                  "content": [
                    {
                      "element": "string",
                      "meta": {
                        "description": "Indicates that the error should be reopened if there are any occurrences after the specified time period. In this case, the `seconds` field must also be provided."
                      },
                      "content": "occurs_after"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Indicates that the Error should be reopened after n occurrences over some period of hours. In this case, the `occurrences` and `hours` fields will both be present."
                      },
                      "content": "n_occurrences_in_m_hours"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Indicates that the Error should be reopened after n more occurrences. In this case, the `additional_occurrences` field indicates the number of additional occurrences that were allowed before reopening."
                      },
                      "content": "n_additional_occurrences"
                    },
                    {
                      "element": "string"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "for `occurs_after` reopen rules, the number of seconds that the Error should be snoozed for."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "seconds"
                },
                "value": {
                  "element": "number"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "for `n_occurrences_in_m_hours` reopen rules, the number of occurrences to allow in the number of hours indicated by the `hours` field, before the Error is automatically reopened."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "occurrences"
                },
                "value": {
                  "element": "number"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "for `n_occurrences_in_m_hours` reopen rules, the number of hours."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "hours"
                },
                "value": {
                  "element": "number"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "for `n_additional_occurrences` reopen rules, the number of additional occurrences allowed before reopening."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "additional_occurrences"
                },
                "value": {
                  "element": "number"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ErrorReopenRules"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "Must be one of the following:"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "reopen_if"
                },
                "value": {
                  "element": "enum",
                  "content": [
                    {
                      "element": "string",
                      "meta": {
                        "description": "Indicates that the Error should be reopened after n more occurrences. In this case, the `occurrence_threshold` field indicates the number of total occurrences at which the Error should be reopened, and the `additional_occurrences` field indicates the number of additional occurrences that were allowed before reopening."
                      },
                      "content": "n_additional_occurrences"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Indicates that the Error should be reopened after n occurrences over some configurable number of hours. In this case, the `occurrences` and `hours` fields will both be present."
                      },
                      "content": "n_occurrences_in_m_hours"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Indicates that the error should be reopened if there are any occurrences after the specified time period. The `seconds` field contains the number of seconds that the Error has been snoozed for. In this case, the `seconds` and `reopen_after` fields will both be present."
                      },
                      "content": "occurs_after"
                    },
                    {
                      "element": "string"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "for `occurs_after` reopen rules, this field indicates the time after which the Error should be reopened if there is an additional occurrence."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "reopen_after"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "for `occurs_after` reopen rules, the number of seconds that the Error was set to snooze for."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "seconds"
                },
                "value": {
                  "element": "number"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "for `n_occurrences_in_m_hours` reopen rules, the number of occurrences to allow in the number of hours indicated by the `hours` field, before the Error is automatically reopened."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "occurrences"
                },
                "value": {
                  "element": "number"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "for `n_occurrences_in_m_hours` reopen rules, the number of hours."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "hours"
                },
                "value": {
                  "element": "number"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "for `n_additional_occurrences` reopen rules, the number of total occurrences at which the Error should be reopened."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "occurrence_threshold"
                },
                "value": {
                  "element": "number"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "for `n_additional_occurrences` reopen rules, the number of additional occurrences allowed before reopening."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "additional_occurrences"
                },
                "value": {
                  "element": "number"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "ErrorBase",
          "meta": {
            "id": "ErrorApiView"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "Identifies the collaborator, if any, who has been assigned to the Error."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "assigned_collaborator_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000002"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000001"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_id"
                },
                "value": {
                  "element": "string",
                  "content": "74f6fd000001515fb9337c10"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "url"
                },
                "value": {
                  "element": "string",
                  "content": "https://api.bugsnag.com/projects/74f6fd000001515fb9337c10/errors/515fb9337c1074f6fd000001"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_url"
                },
                "value": {
                  "element": "string",
                  "content": "https://api.bugsnag.com/projects/74f6fd000001515fb9337c10"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "error_class"
                },
                "value": {
                  "element": "string",
                  "content": "NoMethodError"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "message"
                },
                "value": {
                  "element": "string",
                  "content": "undefined method `foo` for nil:NilClass"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "context"
                },
                "value": {
                  "element": "string",
                  "content": "users#show"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The Error's original severity. Present if the Error's default severity has been modified."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "original_severity"
                },
                "value": {
                  "element": "SeverityOptions",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "error"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "error"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The Error's updated severity. Present if the Error's default severity has been modified."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "overridden_severity"
                },
                "value": {
                  "element": "SeverityOptions",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "error"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "error"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The number of occurrences of the Error. If the Error request includes filters, this will be a filtered count."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "events"
                },
                "value": {
                  "element": "number",
                  "content": 10
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The API URL for the Error's Events."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "events_url"
                },
                "value": {
                  "element": "string",
                  "content": "https://api.bugsnag.com/projects/74f6fd000001515fb9337c10/errors/515fb9337c1074f6fd000001/events"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The absolute count of all received Events for the Error."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "unthrottled_occurrence_count"
                },
                "value": {
                  "element": "number",
                  "content": 10
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The number of users affected by the Error. If the Error request includes filters, this will be a filtered count."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "users"
                },
                "value": {
                  "element": "number",
                  "content": 5
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The time of the first occurrence of the Error. This time will be within the\nbounds of any applied time Filters."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "first_seen"
                },
                "value": {
                  "element": "string",
                  "content": "2017-03-20T00:00:00Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The time of the last occurrence of the Error. This time will be within\nthe bounds of any applied time Filters."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "last_seen"
                },
                "value": {
                  "element": "string",
                  "content": "2017-03-27T00:00:00Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The time of the first occurrence of this Error. This is an absolute time which\nmay extend beyond the bounds of any applied time Filters."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "first_seen_unfiltered"
                },
                "value": {
                  "element": "string",
                  "content": "2017-03-19T08:41:13Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The time of the last occurrence of this Error. This is an absolute time which\nmay extend beyond the bounds of any applied time Filters."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "last_seen_unfiltered"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Snooze rules for automatically reopening the Error"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "reopen_rules"
                },
                "value": {
                  "element": "ErrorReopenRules"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The Error's work flow status. Must be one of:"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "status"
                },
                "value": {
                  "element": "ErrorStatus",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "open"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "open"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "created_issue"
                },
                "value": {
                  "element": "ErrorCreatedIssue"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The number of comments on the Error. This count does not consider time Filters."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "comment_count"
                },
                "value": {
                  "element": "number",
                  "content": 5
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of UUIDs for dSYMs that were not [uploaded](https://docs.bugsnag.com/platforms/ios/symbolication-guide/) but are required to\nsymbolicate the Error. Applies to iOS, macOS, and tvOS projects."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "missing_dsyms"
                },
                "value": {
                  "element": "array"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The release stages where this Error has occurred.\n\nExample:\n\n{\n\"release_stages\": [\"staging\", \"production\"]\n}"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "release_stages"
                },
                "value": {
                  "element": "array"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The reason that events were grouped into this error."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "grouping_reason"
                },
                "value": {
                  "element": "enum",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "frame-inner"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "meta": {
                        "description": "top in-project stackframe"
                      },
                      "content": "frame-inner"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "context"
                      },
                      "content": "context-inner"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "error class"
                      },
                      "content": "error_class-inner"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "custom grouping hash"
                      },
                      "content": "user_defined"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "surrounding code"
                      },
                      "content": "js-codebase"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "file and line number"
                      },
                      "content": "js-location"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "line number (web worker)"
                      },
                      "content": "js-blob"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "JavaScript script tag line"
                      },
                      "content": "js-tag"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "JavaScript script tag"
                      },
                      "content": "js-html"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "error class (`eval()`)"
                      },
                      "content": "js-eval"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "A map of the fields and their values that were used for the grouping of this error. Long field values may be truncated."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "grouping_fields"
                },
                "value": {
                  "element": "object",
                  "content": [
                    {
                      "element": "member",
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "line number"
                        },
                        "value": {
                          "element": "string",
                          "content": "5"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "error class"
                        },
                        "value": {
                          "element": "string",
                          "content": "ErrorClass"
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ElasticSearchEventApiView"
          },
          "content": [
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "595301a6ae48dd0018aedd61"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "is_full_report"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "url"
                },
                "value": {
                  "element": "string",
                  "content": "https://api.bugsnag.com/projects/74f6fd000001515fb9337c10/events/515fb9337c1074f6fd000001"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_url"
                },
                "value": {
                  "element": "string",
                  "content": "https://api.bugsnag.com/projects/74f6fd000001515fb9337c10"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The Error this Event is an occurrence of"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "error_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000001"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The time the Bugsnag [error reporting API](https://docs.bugsnag.com/api/error-reporting/) was notified of this Event"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "received_at"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-19T09:16:50.000Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of exceptions that occurred during this event. Most of the time there will only be one exception, but some languages support \"nested\" or \"caused by\" exceptions. The first exception raised will be first in this array."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "exceptions"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object"
                    },
                    {
                      "element": "string",
                      "content": "error_class: NoMethodError"
                    },
                    {
                      "element": "string",
                      "content": "message"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "severity"
                },
                "value": {
                  "element": "SeverityOptions",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "error"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "error"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether or not the event was from an unhandled exception"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "unhandled"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "This refers to the action that was happening\n\nwhen the event occurred."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "context"
                },
                "value": {
                  "element": "string",
                  "content": "users#show"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "app"
                },
                "value": {
                  "element": "object",
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "release stage where this Event occurred"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "releaseStage"
                        },
                        "value": {
                          "element": "string",
                          "content": "production"
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "_EventExceptionStacktrace"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "The line of the file that this frame of the stack was in."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "lineNumber"
                },
                "value": {
                  "element": "number",
                  "content": 1234
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The column of the file that this frame of the stack was in."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "columnNumber"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The file that this stack frame was executing"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "file"
                },
                "value": {
                  "element": "string",
                  "content": "controllers/users_controller.rb"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Indicates if this stack trace line is in the project's application code (true) or form a 3rd party library (false)."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "inProject"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "machoUUID"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The method that this particular stack frame is within."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "method"
                },
                "value": {
                  "element": "string",
                  "content": "set_user_id"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "A link to the affected line of code in source control."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "sourceControlLink"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The name of the source control service being used."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "sourceControlName"
                },
                "value": {
                  "element": "string",
                  "content": "github"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The code in the file surrounding this line, with up to three lines on either side of the line that crashed."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "code"
                },
                "value": {
                  "element": "object",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "member",
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "1231"
                            },
                            "value": {
                              "element": "string",
                              "content": "\"  def a\""
                            }
                          }
                        },
                        {
                          "element": "member",
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "1232"
                            },
                            "value": {
                              "element": "string",
                              "content": "\"\""
                            }
                          }
                        },
                        {
                          "element": "member",
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "1233"
                            },
                            "value": {
                              "element": "string",
                              "content": "\"    if problem?\""
                            }
                          }
                        },
                        {
                          "element": "member",
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "1234"
                            },
                            "value": {
                              "element": "string",
                              "content": "\"      raise 'something went wrong'\""
                            }
                          }
                        },
                        {
                          "element": "member",
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "1235"
                            },
                            "value": {
                              "element": "string",
                              "content": "\"    end\""
                            }
                          }
                        },
                        {
                          "element": "member",
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "1236"
                            },
                            "value": {
                              "element": "string",
                              "content": "\"\""
                            }
                          }
                        },
                        {
                          "element": "member",
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "1237"
                            },
                            "value": {
                              "element": "string",
                              "content": "\"  end\""
                            }
                          }
                        }
                      ]
                    ]
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "_CoreFrameFields"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "The line of the file that this frame of the stack was in."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "lineNumber"
                },
                "value": {
                  "element": "number",
                  "content": 1234
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The column of the file that this frame of the stack was in."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "columnNumber"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The file that this stack frame was executing"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "file"
                },
                "value": {
                  "element": "string",
                  "content": "controllers/users_controller.rb"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Indicates if this stack trace line is in the project's application code (true) or form a 3rd party library (false)."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "inProject"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The method that this particular stack frame is within."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "method"
                },
                "value": {
                  "element": "string",
                  "content": "set_user_id"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The code in the file surrounding this line, with up to three lines on either side of the line that crashed."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "code"
                },
                "value": {
                  "element": "object",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "member",
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "1231"
                            },
                            "value": {
                              "element": "string",
                              "content": "\"  def a\""
                            }
                          }
                        },
                        {
                          "element": "member",
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "1232"
                            },
                            "value": {
                              "element": "string",
                              "content": "\"\""
                            }
                          }
                        },
                        {
                          "element": "member",
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "1233"
                            },
                            "value": {
                              "element": "string",
                              "content": "\"    if problem?\""
                            }
                          }
                        },
                        {
                          "element": "member",
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "1234"
                            },
                            "value": {
                              "element": "string",
                              "content": "\"      raise 'something went wrong'\""
                            }
                          }
                        },
                        {
                          "element": "member",
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "1235"
                            },
                            "value": {
                              "element": "string",
                              "content": "\"    end\""
                            }
                          }
                        },
                        {
                          "element": "member",
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "1236"
                            },
                            "value": {
                              "element": "string",
                              "content": "\"\""
                            }
                          }
                        },
                        {
                          "element": "member",
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "1237"
                            },
                            "value": {
                              "element": "string",
                              "content": "\"  end\""
                            }
                          }
                        }
                      ]
                    ]
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "_EventException"
          },
          "content": [
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "errorClass"
                },
                "value": {
                  "element": "string",
                  "content": "NoMethodError"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "message"
                },
                "value": {
                  "element": "string",
                  "content": "undefined method `foo` for nil:NilClass"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of stack trace objects. Each object represents one line in the exception's stack trace. Bugsnag uses this information to help with error grouping, as well as displaying it to the user."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "stacktrace"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "_EventExceptionStacktrace"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "_EventThread"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "The id of the thread in the application."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "number",
                  "content": 1
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "A human readable name for the thread."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "name"
                },
                "value": {
                  "element": "string",
                  "content": "main"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of stack trace objects. Each object represents one line in the exception's stack trace. Bugsnag uses this information to help with error grouping, as well as displaying it to the user."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "stacktrace"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "_CoreFrameFields"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Indicates if this is the thread from which the error was reported."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "error_reporting_thread"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "_Breadcrumb"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "A short summary describing the event, such as the user action taken or a new application state."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "name"
                },
                "value": {
                  "element": "string",
                  "content": "Open menu"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "A category which describes the breadcrumb, from the list of allowed values."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "type"
                },
                "value": {
                  "element": "enum",
                  "content": [
                    {
                      "element": "string",
                      "meta": {
                        "description": "Changing screens or content being displayed, with a defined destination and optionally a previous location."
                      },
                      "content": "navigation"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Sending and receiving requests and responses."
                      },
                      "content": "request"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Performing an intensive task or query."
                      },
                      "content": "process"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Messages and severity sent to a logging platform."
                      },
                      "content": "log"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Actions performed by the user, like text input, button presses, or confirming/cancelling an alert dialog."
                      },
                      "content": "user"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "Changing the overall state of an app, such as closing, pausing, or being moved to the background, as well as device state changes like memory or battery warnings and network connectivity changes."
                      },
                      "content": "state"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "An error which was reported to Bugsnag encountered in the same session."
                      },
                      "content": "error"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "User-defined, manually added breadcrumbs."
                      },
                      "content": "manual"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The time at which the event occurred, in [ISO 8601\nformat](https://tools.ietf.org/html/rfc3339#section-5.8)."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "timestamp"
                },
                "value": {
                  "element": "string",
                  "content": "2016-07-19T12:17:27.000Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An object containing extra information about a breadcrumb"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "metaData"
                },
                "value": {
                  "element": "object"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "ElasticSearchEventApiView",
          "meta": {
            "id": "EventApiView"
          },
          "content": [
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "is_full_report"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of exceptions that occurred during this event. Most of the time there will only be one exception, but some languages support \"nested\" or \"caused by\" exceptions. The first exception raised will be first in this array."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "exceptions"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "_EventException"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of threads running on the when this event was reported."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "threads"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "_EventThread"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Custom metadata passed by customers or by the notifier library. Note that the API preserves the original casing and key format as received, so both snake_case and camelCase keys are valid."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "metaData"
                },
                "value": {
                  "element": "object"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of user- and system-initiated events which led up to an error, providing additional context. This list is sequential and ordered newest to oldest."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "breadcrumbs"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "_Breadcrumb"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "EventSourceMapFailureApiView"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "reason for failure; see https://bugsnag.atlassian.net/wiki/x/sgDaHw"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "reason"
                },
                "value": {
                  "element": "enum",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "missing-js"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "missing-js"
                    },
                    {
                      "element": "string",
                      "content": "missing-uploaded-js"
                    },
                    {
                      "element": "string",
                      "content": "missing-source-map-link"
                    },
                    {
                      "element": "string",
                      "content": "missing-source-map"
                    },
                    {
                      "element": "string",
                      "content": "incorrect-source-map"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "whether the project has any source maps uploaded at the time the event was processed"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "has_uploaded_source_maps_for_project"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "whether there were any source maps uploaded for the event's version at the time"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "has_uploaded_source_maps_for_version"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "whether the minified URL has been detected as local"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "is_local_minified_url"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "source map URL for invalid stackframe"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "source_map_url"
                },
                "value": {
                  "element": "string",
                  "content": "http://example.com/app.min.js.map"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "file/URL associated with the stackframe that had a source map failure"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "file_url"
                },
                "value": {
                  "element": "string",
                  "content": "http://example.com/app.min.js"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether the source map relates to an ios or android build (React Native projects only)."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "platform"
                },
                "value": {
                  "element": "enum",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "android"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "ios"
                    },
                    {
                      "element": "string",
                      "content": "android"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The release variant for the missing source map (React Native projects only)."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "release_variant"
                },
                "value": {
                  "element": "enum",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "dev"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "dev"
                    },
                    {
                      "element": "string",
                      "content": "release"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "Integration"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "The key to uniquely identify the integration service."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "key"
                },
                "value": {
                  "element": "string",
                  "content": "jira"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The name of the integration service."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "name"
                },
                "value": {
                  "element": "string",
                  "content": "Jira"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The URL of the integration service."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "url"
                },
                "value": {
                  "element": "string",
                  "content": "https://www.atlassian.com/software/jira"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The type of the integration service."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "type"
                },
                "value": {
                  "element": "enum",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "issue-tracker"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "meta": {
                        "description": "An issue tracker integration. Used for creating and linking issues to Bugsnag errors."
                      },
                      "content": "issue-tracker"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "A team communication tool integration. Used for alerting engineering teams when errors are reported to Bugsnag."
                      },
                      "content": "team-notification"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "An on call integration. Used for alerting ops teams when errors are reported to Bugsnag."
                      },
                      "content": "on-call"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "A data forwarding integration. Used for forwarding detailed error data when errors are reported to Bugsnag."
                      },
                      "content": "data-forwarding"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether the integration supports two-way sync."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "two_way_sync"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "A brief explanation of what the integration does."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "description"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The fields required to configure the integration."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "fields"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "IntegrationField"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "A URL containing an icon representing the service."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "icon_url"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "A noun representing the entity that this integration can create (for issue-tracker type integrations only)."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "created_entity_name"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Automation settings (for `issue-tracker` integrations only)."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "issue_automation_options"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "IntegrationAutomation"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "IntegrationAutomation"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "The style of this automation. Most integrations have a single 'default' style but some can have multiple."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "automation_style"
                },
                "value": {
                  "element": "IntegrationAutomationStyle"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Options for automations when a new error is received by Bugsnag."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "error_new"
                },
                "value": {
                  "element": "IntegrationAutomationItem"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Options for automations when an error is marked as fixed in Bugsnag."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "error_fixed"
                },
                "value": {
                  "element": "IntegrationAutomationItem"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Options for automations when an error is reopened in Bugsnag."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "error_reopened"
                },
                "value": {
                  "element": "IntegrationAutomationItem"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Options for automations when an issue is resolved in a configured issue tracker."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "issue_resolved"
                },
                "value": {
                  "element": "IntegrationAutomationItem"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Options for automations when an issue is unresolved in a configured issue tracker."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "issue_unresolved"
                },
                "value": {
                  "element": "IntegrationAutomationItem"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "IntegrationAutomationItem"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "True if this automation has configuration options."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "configurable"
                },
                "value": {
                  "element": "boolean"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Possible values for the state that may be selected."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "options"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Default state for the item (only applicable if `multiple_states` is false)"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "default_option"
                },
                "value": {
                  "element": "boolean"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Default set of states for the item (only applicable if `multiple_states` is true)"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "default_options"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "True if multiple states can be selected for this automation."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "multiple_states"
                },
                "value": {
                  "element": "boolean"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "IntegrationAutomationStyle"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "A type of the integration automation (unique within an integration)."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "type"
                },
                "value": {
                  "element": "string",
                  "content": "default"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "A description of the automation style."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "description"
                },
                "value": {
                  "element": "string"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "IntegrationField"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "The unique name of the field."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "name"
                },
                "value": {
                  "element": "string",
                  "content": "password"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The human readable name of the field."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "label"
                },
                "value": {
                  "element": "string",
                  "content": "JIRA Password"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The human readable description of the field."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "description"
                },
                "value": {
                  "element": "string",
                  "content": "Your JIRA password"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "A URL that helps with finding the value associated with the field."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "link"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "True if the field is optional for an integration (defaults to false)."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "optional"
                },
                "value": {
                  "element": "boolean"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The default value of the field if the field is optional."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "default_value"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of values that are permitted for the field (required when the `type` is `select` only)."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "allowed_values"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The input type of the field (defaults to text input if not provided)."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "type"
                },
                "value": {
                  "element": "enum",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "password"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "meta": {
                        "description": "A string value but a dummy value will be returned after it is initially saved. Intended for sensitive information."
                      },
                      "content": "password"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "An option to select one of the `allowed_values`."
                      },
                      "content": "select"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "A boolean value either 'true' or 'false'."
                      },
                      "content": "boolean"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The value of the field (not present when retrieving general information about fields for an integration)."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "value"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The regular expression pattern which values are required to match if supplied."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "pattern"
                },
                "value": {
                  "element": "string"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "IssueAutomationSettings"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "The identifier for the style type of the automation settings. For most integrations there is only one called 'default'."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "automation_style_type"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Automation settings for when an error is marked as fixed in Bugsnag."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "error_fixed"
                },
                "value": {
                  "element": "IssueAutomationSetting"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Automation settings for when an error is reopened in Bugsnag."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "error_reopened"
                },
                "value": {
                  "element": "IssueAutomationSetting"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Automation settings for when an issue is transitioned to resolved in the issue tracker."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "issue_resolved"
                },
                "value": {
                  "element": "IssueAutomationSetting"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Automation settings for when an issue is transitioned to unresolved in the issue tracker."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "issue_unresolved"
                },
                "value": {
                  "element": "IssueAutomationSetting"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "IssueAutomationSetting"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "True if this automation is active (enabled)."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "active"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The state that the issue should be transitioned to when the automation is triggered (required for `error_fixed` and `error_reopened`)."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "state"
                },
                "value": {
                  "element": "string",
                  "content": "fixed"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The states that when an issue is transitioned to should cause the Bugsnag issue to change status correspondingly (required for `issue_resolved` and `issue_unresolved`)."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "states"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "PivotApiView"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "the ID of the Event Field that this Pivot describes"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "event_field_display_id"
                },
                "value": {
                  "element": "string",
                  "content": "app.release_stage"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "name"
                },
                "value": {
                  "element": "string",
                  "content": "Release Stages"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "how many unique values of the given Event Field are present in the Events matching the provided Filters. For example, in the case of the `app.release_stage` Pivot, if the Events matching the provided Filters occurred only in production and staging, then the cardinality would be 2.  Applicable to some Event Fields."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "cardinality"
                },
                "value": {
                  "element": "number",
                  "content": 2
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "A summary of the top values for this Pivot. Applicable to some Event Fields."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "summary"
                },
                "value": {
                  "element": "object",
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "A list of the values of the Event Field which have had the most occurrences. The data in this list along with the `no_value` and `other` properties will account for all of the occurrences of the Event that match the Filters."
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "list"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "object",
                              "content": [
                                {
                                  "element": "member",
                                  "meta": {
                                    "description": "A particular value for the given Event Field"
                                  },
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "value"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "production"
                                    }
                                  }
                                },
                                {
                                  "element": "member",
                                  "meta": {
                                    "description": "The number of Events that matched the provided Filters that had this value for the given Event Field"
                                  },
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "events"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "34"
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "The number of Events that matched the provided Filters that had no value for the given Event Field"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "no_value"
                        },
                        "value": {
                          "element": "number",
                          "content": 0
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "The number of Events that matched the provided Filters that had a value for the given Event Field other than those described in `list`"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "other"
                        },
                        "value": {
                          "element": "number",
                          "content": 0
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The average value for the given Event Field. Applicable to some Event Fields."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "average"
                },
                "value": {
                  "element": "number",
                  "content": 1000
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "PivotValueApiView"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "(string, required) — One of the values for this event field. For example, for the release stage event field, the values will be the stage names; for versions they will be the version number; for users they will be the user IDs, and so on."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "event_field_value"
                },
                "value": {
                  "element": "string",
                  "content": "production"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The number of Events matching the given Filters that affected this particular value of the pivot. For example, how many events occurred in the production release stage."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "events"
                },
                "value": {
                  "element": "number",
                  "content": 23
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the proportion of the total Events matching the Filters represented by this value."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "proportion"
                },
                "value": {
                  "element": "number",
                  "content": 0.9981631153563556
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the first Event occurrence with this particular value and matching the Filters (including time filters)"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "first_seen"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-14T03:04:49+00:00"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the last Event occurrence with this particular value and matching the Filters (including time filters)"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "last_seen"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-21T02:50:35+00:00"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "some pivot values will include additional event field values. for example, in the case of a pivot value describing how many events affected a particular user, fields will contain the values of the `user.name` and `user.email` event fields, to provide more details about the user."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "fields"
                },
                "value": {
                  "element": "array",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "object",
                          "content": [
                            {
                              "element": "member",
                              "content": {
                                "key": {
                                  "element": "string",
                                  "content": "id"
                                },
                                "value": {
                                  "element": "string",
                                  "content": "user.name"
                                }
                              }
                            },
                            {
                              "element": "member",
                              "content": {
                                "key": {
                                  "element": "string",
                                  "content": "name"
                                },
                                "value": {
                                  "element": "string",
                                  "content": "User Name"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    ]
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "OrganizationBase"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "name"
                },
                "value": {
                  "element": "string",
                  "content": "Acme Co."
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "billing_emails"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "emily@example.com"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "whether we should upgrade your plan in response to the organization reaching its plan limit of events. If this value is `false` your events will be throttled when you reach your plan limit."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "auto_upgrade"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "OrganizationBase",
          "meta": {
            "id": "OrganizationApiView"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000007"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "slug"
                },
                "value": {
                  "element": "string",
                  "content": "acme-co"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "creator"
                },
                "value": {
                  "element": "object",
                  "content": [
                    {
                      "element": "member",
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "email"
                        },
                        "value": {
                          "element": "string",
                          "content": "emily@example.com"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "id"
                        },
                        "value": {
                          "element": "string",
                          "content": "58c9b9b09ef17217f1fb8b30"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "name"
                        },
                        "value": {
                          "element": "string",
                          "content": "James Smith"
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "API URL for the Organization's Collaborators."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "collaborators_url"
                },
                "value": {
                  "element": "string",
                  "content": "https://api.bugsnag.com/organizations/515fb9337c1074f6fd000007/collaborators"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "API URL for the Organization's Projects."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "projects_url"
                },
                "value": {
                  "element": "string",
                  "content": "https://api.bugsnag.com/organizations/515fb9337c1074f6fd000007/projects"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "created_at"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-24T22:17:13.000Z"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "updated_at"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-24T22:17:13.000Z"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "upgrade_url"
                },
                "value": {
                  "element": "string",
                  "content": "http://app.bugsnag.com/settings/acme-co/plans-billing/select-plan"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "OrganizationBase",
          "meta": {
            "id": "OrganizationUpdateRequest"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "Additional information to print on your invoice"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "invoice_address"
                },
                "value": {
                  "element": "string",
                  "content": "Vendor ID number 4567"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Deprecated field. Use `invoice_address`"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "invoice_info"
                },
                "value": {
                  "element": "string",
                  "content": "Vendor ID number 4567"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "PlanApiView"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "The unique identifier for this plan"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "type"
                },
                "value": {
                  "element": "string",
                  "content": "team_one"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The group type for this plan"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "group"
                },
                "value": {
                  "element": "string",
                  "content": "team"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether this plan is a Trial plan"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "trial"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The name of this plan"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "name"
                },
                "value": {
                  "element": "string",
                  "content": "Team Plan Two"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The billing interval for this plan"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "interval"
                },
                "value": {
                  "element": "string",
                  "content": "month"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The cost of the plan in cents per billing interval"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "amount_in_cents"
                },
                "value": {
                  "element": "number",
                  "content": 24900
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether the cost of the plan is a fixed amount. A `false` value means that the `amount_in_cents` will be multiplied by some other number, e.g. seat count, to determine the monthly cost."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "fixed_amount"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "A `false` value means we charge for this plan via a credit card on file. A `true` value means the plan is billed via an invoice, the plan is free, or it is charged by an upstream billing provider."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "offline_billing"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The maximum number of collaborators allowed on this plan"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "seat_limit"
                },
                "value": {
                  "element": "number",
                  "content": 30
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The data retention period for this plan, in seconds."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "event_storage_seconds"
                },
                "value": {
                  "element": "number",
                  "content": 3888000
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The limit of events that will be processed by Bugsnag for an organization on this plan."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "events"
                },
                "value": {
                  "element": "number",
                  "content": 15000
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The period type over which the plan limit of events applies."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "event_interval"
                },
                "value": {
                  "element": "string",
                  "content": "day"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The number of event intervals over which the plan limit of events applies."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "event_interval_count"
                },
                "value": {
                  "element": "string",
                  "content": "1"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether there is another related plan that an organization on this plan can be moved to if it reaches its event limit. Note that this is different from an organization's auto-upgrade preference — an organization can still opt not to auto-upgrade even if the plan is auto-upgradeable."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "auto_upgradeable"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "InvoiceApiView"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "the ID of the invoice"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000007"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the date when the invoice was issued"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "date"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-04T22:43:49Z"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "organization_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000003"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Any text you have provided in the \"Additional invoice text\" field in Bugsnag settings. We will print this text on your billing invoices. It is not used by Bugsnag as a mailing address."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "address"
                },
                "value": {
                  "element": "string",
                  "content": "100 Zeroth St., San Francisco CA 94107"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The status of the invoice.  Must be one of the following:"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "status"
                },
                "value": {
                  "element": "enum",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "paid"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "meta": {
                        "description": "the invoice has been paid"
                      },
                      "content": "paid"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "the invoice is closed but it was not paid"
                      },
                      "content": "waived"
                    },
                    {
                      "element": "string",
                      "meta": {
                        "description": "the invoice has not yet been paid and payment is still due"
                      },
                      "content": "unpaid"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The last four digits of the credit card used to pay this invoice"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "charged_card_last_4"
                },
                "value": {
                  "element": "string",
                  "content": "1234"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Additional information to print on your invoice"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "additional_info"
                },
                "value": {
                  "element": "string",
                  "content": "Vendor ID number 4567"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "discount"
                },
                "value": {
                  "element": "object",
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "The name of the coupon"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "coupon"
                        },
                        "value": {
                          "element": "string",
                          "content": "PROMO10"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Discount in cents (USD). Null if percentage coupon."
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "amount_off"
                        },
                        "value": {
                          "element": "number",
                          "content": 1000
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Discount in percent. Null if amount coupon."
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "percent_off"
                        },
                        "value": {
                          "element": "number",
                          "content": 0
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "line_items"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "LineItem"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "prorated_line_items"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "ProratedLineItem"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Invoice subtotal in integer cents (before discounts)"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "sub_total"
                },
                "value": {
                  "element": "number",
                  "content": 24900
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Invoice total in integer cents (amount charged)"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "total"
                },
                "value": {
                  "element": "number",
                  "content": 23900
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Currency type used for invoice."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "currency"
                },
                "value": {
                  "element": "string",
                  "content": "usd"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "LineItemBase"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "period_start"
                },
                "value": {
                  "element": "string",
                  "content": "2017-03-01T00:00:00Z"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "period_end"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-01T00:00:00Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The price of this line item in integer cents per unit"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "unit_price"
                },
                "value": {
                  "element": "number",
                  "content": 24900
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The price of this line item in integer cents per unit"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "total_price"
                },
                "value": {
                  "element": "number",
                  "content": 24900
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether the line item is a fixed price (not paid per-seat or per-event)"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "fixed_amount"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "LineItemBase",
          "meta": {
            "id": "LineItem"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "the name of the organization's Bugsnag plan"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "plan"
                },
                "value": {
                  "element": "string",
                  "content": "Pro Plan"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The number of seats or events used, if the organization is on a per-seat- or per-event-billed plan. If on a fixed-amount plan, this number will be `1`."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "quantity"
                },
                "value": {
                  "element": "number",
                  "content": 1
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "LineItemBase",
          "meta": {
            "id": "ProratedLineItem"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "The plan the organization was originally on"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "plan_from"
                },
                "value": {
                  "element": "string",
                  "content": "Team Plan"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The plan the organization changed to"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "plan_to"
                },
                "value": {
                  "element": "string",
                  "content": "Pro Plan"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The number of seats used before (per-seat plans)"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "quantity_from"
                },
                "value": {
                  "element": "number",
                  "content": 1
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The new number of seats used (per-seat plans)"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "quantity_to"
                },
                "value": {
                  "element": "number",
                  "content": 1
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ProjectBase"
          },
          "content": [
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "name"
                },
                "value": {
                  "element": "string",
                  "content": "Example Project"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "A list of error classes. Events with these classes will be grouped by their\nclass, regardless of the location that they occur in the Project's source\ncode. Altering a Project's `global_grouping` will not cause existing errors\nto be regrouped.\n\nNote: In the UI this is referred to as grouping by error class.\n\nExample:\n\n```\n[\"foo\", \"bar\"]\n```"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "global_grouping"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "attributes": {
                        "samples": [
                          "Redis::CannotConnectError"
                        ]
                      }
                    },
                    {
                      "element": "string",
                      "attributes": {
                        "samples": [
                          "Mongo::Error:SocketError"
                        ]
                      }
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "A list of error classes. Events with these classes will be grouped by their\n`context`. Altering a Project's `location_grouping` will not cause existing errors\nto be regrouped.\n\nNote: In the UI this is referred to as grouping by error context."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "location_grouping"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "attributes": {
                        "samples": [
                          "Timeout::Error"
                        ]
                      }
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "A list of app versions whose events will be [discarded](https://docs.bugsnag.com/product/event-usage/#discard-by-app-version) if received for the Project. Supports [regular expressions](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/RegExp#Special_characters_meaning_in_regular_expressions) and [semver ranges](https://github.com/npm/node-semver#ranges). Errors matching these versions won't be processed by Bugsnag, and you won't receive notifications about them."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "discarded_app_versions"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "attributes": {
                        "samples": [
                          "alpha"
                        ]
                      }
                    },
                    {
                      "element": "string",
                      "attributes": {
                        "samples": [
                          "\u003c 2.2.2"
                        ]
                      }
                    },
                    {
                      "element": "string",
                      "attributes": {
                        "samples": [
                          "3.0.0"
                        ]
                      }
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "A list of Error classes whose events will be [discarded](https://docs.bugsnag.com/product/event-usage/#discard-by-error-class) if received for the Project. Errors with these classes won't be processed by Bugsnag, and you won't receive notifications about them."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "discarded_errors"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "attributes": {
                        "samples": [
                          "Example::Error"
                        ]
                      }
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "If configured, only errors from matching domains will be processed by Bugsnag. Provide a list of newline separated domain names. To match `example.com` and its subdomains specify `*.example.com`\n\nRelevant to JavaScript Projects only."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "url_whitelist"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "attributes": {
                        "samples": [
                          "example.com"
                        ]
                      }
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether the Events in the Project will be ignored if they originate from\nold web browsers.\n\nRelevant to JavaScript Projects only."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "ignore_old_browsers"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Relevant to JavaScript Projects only.\n\nA mapping a of browser name to browser version. If set, Events in the\nProject will be ignored if they originate from a browser specified here\nwhose version is earlier than the given version.\n\nKeys must be one of the following strings: chrome, ie, firefox, safari, android, uc, opera, opera_mini, samsung, blackberry, sogou, other.\n\nValues must be a number indicating which which version to ignore up to (but not including), or one of the strings: `ignore_all`, `ignore_none`\n\nExample:\n\n```\n{\n    \"chrome\": \"ignore_none\",\n    \"safari\": 6,\n    \"other\": \"ignore_all\"\n}\n```"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "ignored_browser_versions"
                },
                "value": {
                  "element": "object"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "If true, every error in the Project will be marked as 'fixed' after using the Deploy Tracking API to notify Bugsnag of a new production deploy.\n\nApplies to non-JavaScript Projects only."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "resolve_on_deploy"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ProjectCreateRequest"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "The new Project's name"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "name"
                },
                "value": {
                  "element": "string",
                  "content": "Example Project"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The new Project's framework type. Must be one of the following:"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "type"
                },
                "value": {
                  "element": "ProjectType",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "react-native"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "react-native"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "For javascript projects this will filter errors from older browsers"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "ignore_old_browsers"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "enum",
          "meta": {
            "id": "ProjectType"
          },
          "content": [
            {
              "element": "string",
              "content": "android"
            },
            {
              "element": "string",
              "content": "angular"
            },
            {
              "element": "string",
              "content": "backbone"
            },
            {
              "element": "string",
              "content": "bottle"
            },
            {
              "element": "string",
              "content": "django"
            },
            {
              "element": "string",
              "content": "dotnet"
            },
            {
              "element": "string",
              "content": "ember"
            },
            {
              "element": "string",
              "content": "eventmachine"
            },
            {
              "element": "string",
              "content": "express"
            },
            {
              "element": "string",
              "content": "flask"
            },
            {
              "element": "string",
              "content": "go"
            },
            {
              "element": "string",
              "content": "heroku"
            },
            {
              "element": "string",
              "content": "ios"
            },
            {
              "element": "string",
              "content": "java"
            },
            {
              "element": "string",
              "content": "js"
            },
            {
              "element": "string",
              "content": "laravel"
            },
            {
              "element": "string",
              "content": "node"
            },
            {
              "element": "string",
              "content": "osx"
            },
            {
              "element": "string",
              "content": "php"
            },
            {
              "element": "string",
              "content": "rails"
            },
            {
              "element": "string",
              "content": "react"
            },
            {
              "element": "string",
              "content": "reactnative"
            },
            {
              "element": "string",
              "content": "restify"
            },
            {
              "element": "string",
              "content": "silex"
            },
            {
              "element": "string",
              "content": "sinatra"
            },
            {
              "element": "string",
              "content": "symfony"
            },
            {
              "element": "string",
              "content": "tornado"
            },
            {
              "element": "string",
              "content": "unity"
            },
            {
              "element": "string",
              "content": "vue"
            },
            {
              "element": "string",
              "content": "wordpress"
            },
            {
              "element": "string",
              "meta": {
                "description": "used for Projects that use a framework other than those listed above"
              },
              "content": "other"
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "ProjectBase",
          "meta": {
            "id": "ProjectUpdateRequest"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "If provided in the request, the Project will be updated so that its set of Collaborators will reflect those indicated by this list of ids. Existing Collaborators whose ids do not appear in the list will be removed from the Project."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "collaborator_ids"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "attributes": {
                        "samples": [
                          "515fb9337c1074f6fd000001"
                        ]
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "StabilityTarget"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "The target value of the proportion of unhandled_sessions/total_sessions."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "value"
                },
                "value": {
                  "element": "number",
                  "content": 0.99
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "(Updated automatically) The time the target was last updated."
              },
              "attributes": {
                "typeAttributes": [
                  "nullable"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "updated_at"
                },
                "value": {
                  "element": "string",
                  "content": "2017-03-02T05:55:55.555Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "(Updated automatically) The id of the collaborator that last updated the value."
              },
              "attributes": {
                "typeAttributes": [
                  "nullable"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "updated_by_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000001"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ProjectStabilityTrendTimelinePoint"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "The timestamp marking the beginning of the range for the timeline point."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "bucket_start"
                },
                "value": {
                  "element": "string",
                  "content": "2019-03-02T00:00:00.000Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The timestamp marking the end of the range for the timeline point."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "bucket_end"
                },
                "value": {
                  "element": "string",
                  "content": "2019-03-03T00:00:00.000Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The total number of sessions that occurred within the time range."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "total_sessions_count"
                },
                "value": {
                  "element": "number",
                  "content": 10000
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The number of unhandled sessions seen in the time range."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "unhandled_sessions_count"
                },
                "value": {
                  "element": "number",
                  "content": 20
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The proportion of unhandled sessions to total sessions seen in the time range."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "unhandled_rate"
                },
                "value": {
                  "element": "number",
                  "content": 0.002
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ProjectStabilityTrendApiView"
          },
          "content": [
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000001"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The name of the primary release stage for the given project."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "release_stage_name"
                },
                "value": {
                  "element": "string",
                  "content": "production"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Unhandled session information for each UTC day in the last 30 days."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "timeline_points"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "ProjectStabilityTrendTimelinePoint"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "ProjectBase",
          "meta": {
            "id": "ProjectApiView"
          },
          "content": [
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000003"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "unique, human-readable identifier that can be used in place of `id` in URLs"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "slug"
                },
                "value": {
                  "element": "string",
                  "content": "example-project"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the notifier API key used to configure the [notifier\nlibrary](https://docs.bugsnag.com/platforms/) being used to report errors in\nthe project"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "api_key"
                },
                "value": {
                  "element": "string",
                  "content": "deadbeef1234deadbeef1234deadbeef"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Always true for this endpoint. Used to differentiate between terse and complete project\nrepresentations."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "is_full_view"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The release stages for which this project has received events.\n\nThis will be an array of strings whose values will depend on your Project."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "release_stages"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "attributes": {
                        "samples": [
                          "staging"
                        ]
                      }
                    },
                    {
                      "element": "string",
                      "attributes": {
                        "samples": [
                          "production"
                        ]
                      }
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The Project's programming language as derived from the framework represented in the `type` field"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "language"
                },
                "value": {
                  "element": "string",
                  "content": "ruby"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The time of the Project's creation."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "created_at"
                },
                "value": {
                  "element": "string",
                  "content": "2017-03-02T05:55:55.555Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The time the Project was last modified."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "updated_at"
                },
                "value": {
                  "element": "string",
                  "content": "2017-03-03T05:55:55.555Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The API URL for the Project."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "url"
                },
                "value": {
                  "element": "string",
                  "content": "https://api.bugsnag.com/projects/515fb9337c1074f6fd000003"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The dashboard URL for the project."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "html_url"
                },
                "value": {
                  "element": "string",
                  "content": "https://app.bugsnag.com/example-account/example-project"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The API URL for the Project's Errors."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "errors_url"
                },
                "value": {
                  "element": "string",
                  "content": "https://api.bugsnag.com/projects/515fb9337c1074f6fd000003/errors"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The API URL for the Project's Events."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "events_url"
                },
                "value": {
                  "element": "string",
                  "content": "https://api.bugsnag.com/projects/515fb9337c1074f6fd000003/events"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The number of open errors the Project has. Considers all events currently stored\nfor the Project."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "open_error_count"
                },
                "value": {
                  "element": "number",
                  "content": 10
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The number of errors for review the Project has. Considers all events currently stored\nfor the Project."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "for_review_error_count"
                },
                "value": {
                  "element": "number",
                  "content": 5
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The number of collaborators with access to the Project."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "collaborators_count"
                },
                "value": {
                  "element": "number",
                  "content": 15
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The count of how many [Custom Filters](https://docs.bugsnag.com/product/custom-filters/) have been created for the Project."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "custom_event_fields_used"
                },
                "value": {
                  "element": "number",
                  "content": 5
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "array",
          "meta": {
            "id": "ProjectOverviews"
          },
          "content": [
            {
              "element": "ProjectOverview"
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ProjectOverview"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project"
                },
                "value": {
                  "element": "object",
                  "content": [
                    {
                      "element": "member",
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "id"
                        },
                        "value": {
                          "element": "string",
                          "content": "515fb9337c1074f6fd000001"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "name"
                        },
                        "value": {
                          "element": "string",
                          "content": "Some Project"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "slug"
                        },
                        "value": {
                          "element": "string",
                          "content": "some-project"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "type"
                        },
                        "value": {
                          "element": "string",
                          "content": "java"
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "events"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "array",
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": [
                        {
                          "element": "string",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": "2017-03-28T00:00:00.000Z"
                        },
                        {
                          "element": "number",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": 5
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "errors"
                },
                "value": {
                  "element": "object",
                  "content": [
                    {
                      "element": "member",
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "new"
                        },
                        "value": {
                          "element": "object",
                          "content": [
                            {
                              "element": "member",
                              "attributes": {
                                "typeAttributes": [
                                  "required"
                                ]
                              },
                              "content": {
                                "key": {
                                  "element": "string",
                                  "content": "current"
                                },
                                "value": {
                                  "element": "number",
                                  "content": 5
                                }
                              }
                            },
                            {
                              "element": "member",
                              "attributes": {
                                "typeAttributes": [
                                  "required"
                                ]
                              },
                              "content": {
                                "key": {
                                  "element": "string",
                                  "content": "previous"
                                },
                                "value": {
                                  "element": "number",
                                  "content": 0
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "open"
                        },
                        "value": {
                          "element": "object",
                          "content": [
                            {
                              "element": "member",
                              "attributes": {
                                "typeAttributes": [
                                  "required"
                                ]
                              },
                              "content": {
                                "key": {
                                  "element": "string",
                                  "content": "current"
                                },
                                "value": {
                                  "element": "number",
                                  "content": 15
                                }
                              }
                            },
                            {
                              "element": "member",
                              "attributes": {
                                "typeAttributes": [
                                  "required"
                                ]
                              },
                              "content": {
                                "key": {
                                  "element": "string",
                                  "content": "previous"
                                },
                                "value": {
                                  "element": "number",
                                  "content": 14
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ProjectUploads"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "uploaded_source_maps"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "uploaded_code_bundle_source_map"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "uploaded_version_code_source_map"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "uploaded_dsyms"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "uploaded_so_mapping_files"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "uploaded_proguard_files"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "enum",
          "meta": {
            "id": "BrowserName"
          },
          "content": [
            {
              "element": "string",
              "content": "chrome"
            },
            {
              "element": "string",
              "content": "firefox"
            },
            {
              "element": "string"
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "Trend1"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "from"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-03T22:43:49Z"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "to"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-04T10:43:49Z"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "events_count"
                },
                "value": {
                  "element": "number",
                  "content": 0
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "Trend2"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "from"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-04T10:43:49Z"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "to"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-04T22:43:49Z"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "events_count"
                },
                "value": {
                  "element": "number",
                  "content": 1
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "TrendA"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "2016-12-07T12:00:00Z"
                },
                "value": {
                  "element": "number",
                  "content": 412
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "2016-12-08T00:00:00Z"
                },
                "value": {
                  "element": "number",
                  "content": 931
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "User"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000007"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "name"
                },
                "value": {
                  "element": "string",
                  "content": "James Smith"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "email"
                },
                "value": {
                  "element": "string",
                  "content": "james@example.com"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "two_factor_enabled"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "two_factor_enabled_on"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-04T22:43:49Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The number of two factor recovery codes the User has left."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "recovery_codes_remaining"
                },
                "value": {
                  "element": "number",
                  "content": 2
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The time the User's password was last changed."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "password_updated_on"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-04T22:43:49Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether the user has opted to have times displayed in UTC instead of local time."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "show_time_in_utc"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "heroku"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "when the user was created"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "created_at"
                },
                "value": {
                  "element": "string",
                  "content": "2018-02-01T22:31:26.696Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "list of IDs of the User's favorite projects"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "favorite_project_ids"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "5e3bf879d1befa00093b8638"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "CollaboratorApiView"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000007"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "name"
                },
                "value": {
                  "element": "string",
                  "content": "James Smith"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "email"
                },
                "value": {
                  "element": "string",
                  "content": "james@example.com"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "two_factor_enabled"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "two_factor_enabled_on"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-04T22:43:49Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The number of two factor recovery codes the User has left."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "recovery_codes_remaining"
                },
                "value": {
                  "element": "number",
                  "content": 2
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The time the User's password was last changed."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "password_updated_on"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-04T22:43:49Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether the user has opted to have times displayed in UTC instead of local time."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "show_time_in_utc"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "heroku"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "when the user was created"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "created_at"
                },
                "value": {
                  "element": "string",
                  "content": "2018-02-01T22:31:26.696Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether the collaborator has admin permissions for the current organization"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "is_admin"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": " True if the user has not yet accepted their Bugsnag invitation."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "pending_invitation"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The last time the user interacted with the Bugsnag dashboard or related APIs. Null if the user has not interacted with the dashboard before."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "last_request_at"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-04T22:43:49Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The ids of all projects the user has access to within the current organization."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_ids"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "515fb9337c1074f6fd000001"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether the user has Bugsnag dashboard access under the organization's current plan. If this is false for a collaborator, they will see a \"locked out\" message when they attempt to log in to the Bugsnag dashboard. An admin for your organization can resolve this by upgrading the organization's Bugsnag plan."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "paid_for"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ProguardFile"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000007"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The Android applicationId for this application."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "app_id"
                },
                "value": {
                  "element": "string",
                  "content": "com.example.app"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The Android versionCode for this application release."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "version_code"
                },
                "value": {
                  "element": "string",
                  "content": "1234"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The Android versionName for this application release."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "version_name"
                },
                "value": {
                  "element": "string",
                  "content": "1.0.0"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "ce51-41c1-af38-abe7995b5156 (string, optional) - A UUID to identify this builds. This is required if you build multiple different apps with the same appId and versionCode. If you use this, you’ll also need to use setBuildUUID() in your app."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "build_uuid"
                },
                "value": {
                  "element": "string",
                  "content": "e6ead014"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "When the proguard file was created."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "created_at"
                },
                "value": {
                  "element": "string",
                  "content": "2017-03-06T23:34:00.000Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "ID of project this proguard file belongs to."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000001"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The current status of the uploaded file. Can be completed, in-progress or failed."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "upload_status"
                },
                "value": {
                  "element": "string",
                  "content": "completed"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "When the proguard file was finished processing."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "processed_at"
                },
                "value": {
                  "element": "string",
                  "content": "2017-03-06T23:34:00.000Z"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "SoMappingFile"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000007"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The Android applicationId for this application."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "app_id"
                },
                "value": {
                  "element": "string",
                  "content": "com.example.app"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The Android versionCode for this application release."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "version_code"
                },
                "value": {
                  "element": "string",
                  "content": "1234"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The Android versionName for this application release."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "version_name"
                },
                "value": {
                  "element": "string",
                  "content": "1.0.0"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "ce51-41c1-af38-abe7995b5156 (string, optional) - A UUID to identify this build. This is required if you build multiple different apps with the same appId and versionCode. If you use this, you’ll also need to use setBuildUUID() in your app."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "build_uuid"
                },
                "value": {
                  "element": "string",
                  "content": "e6ead014"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The architecture of the shared object that the symbols are for."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "arch"
                },
                "value": {
                  "element": "string",
                  "content": "armeabi"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The name of the shared object that the symbols are for."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "shared_object_name"
                },
                "value": {
                  "element": "string",
                  "content": "app.so"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "When the so mapping file was created."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "created_at"
                },
                "value": {
                  "element": "string",
                  "content": "2017-03-06T23:34:00.000Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "ID of project this so mapping file belongs to."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000001"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The current status of the uploaded file. Can be completed, in-progress or failed."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "upload_status"
                },
                "value": {
                  "element": "string",
                  "content": "completed"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "When the file was finished processing."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "processed_at"
                },
                "value": {
                  "element": "string",
                  "content": "2017-03-06T23:34:00.000Z"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "Dsym"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "008F2E70-F4F1-11E9-A0D3-4B05B34D3CD3"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The current status of the uploaded file. Can be completed, in-progress or failed."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "upload_status"
                },
                "value": {
                  "element": "string",
                  "content": "completed"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "When the DSYM was first uploaded."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "first_uploaded_at"
                },
                "value": {
                  "element": "string",
                  "content": "2017-03-06T23:34:00.000Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "When the file was finished processing."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "processed_at"
                },
                "value": {
                  "element": "string",
                  "content": "2017-03-06T23:35:00.000Z"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "SourceMap"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000007"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The version of the app that the source map applies to."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "app_version"
                },
                "value": {
                  "element": "string",
                  "content": "v1.2.3"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The version code (Android) or the bundle version (iOS) that the source map applies to."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "app_version_code"
                },
                "value": {
                  "element": "string",
                  "content": "1234"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "A user-defined unique identifier for a JavaScript code deployment."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "code_bundle_id"
                },
                "value": {
                  "element": "string",
                  "content": "1.0.0-b12"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The url of the minified JavaScript file that the source map relates to."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "minified_url"
                },
                "value": {
                  "element": "string",
                  "content": "app.js"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "files"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "SourceMapFile"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether the source map relates to an ios or android build (React Native projects only)."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "platform"
                },
                "value": {
                  "element": "enum",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "ios"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "ios"
                    },
                    {
                      "element": "string",
                      "content": "android"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether the stack trace is for a dev build or not (React Native projects only)."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "dev"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "When the source map was created."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "created_at"
                },
                "value": {
                  "element": "string",
                  "content": "2017-03-06T23:34:00.000Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "ID of project this source map belongs to."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000001"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "_FilterValue"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "The identifier to use when filtering by this value"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "new"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "A human readable represenation of this value"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "name"
                },
                "value": {
                  "element": "string",
                  "content": "New"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "enum",
          "meta": {
            "id": "EventFieldFieldType"
          },
          "content": [
            {
              "element": "string",
              "content": "string"
            },
            {
              "element": "string",
              "content": "array"
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "EventField"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "Whether the field is a custom event field created by your organization"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "custom"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Identifier which is the key to use for filtering by this field"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "display_id"
                },
                "value": {
                  "element": "string",
                  "content": "user.id"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Details of how this field is used in filtering"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "filter_options"
                },
                "value": {
                  "element": "object",
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "Human readable display name for the filter"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "name"
                        },
                        "value": {
                          "element": "string",
                          "content": "User ID"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Description of what the filter is"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "description"
                        },
                        "value": {
                          "element": "string",
                          "content": "user impacted by an event"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Other possible names that match this field when filtering"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "aliases"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "string"
                            },
                            {
                              "element": "string",
                              "content": "user"
                            },
                            {
                              "element": "string",
                              "content": "uid"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Hint text to clarify the use of the field for filtering"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "hint_text"
                        },
                        "value": {
                          "element": "string",
                          "content": "Exact match only"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Link to Bugsnag documentation about this filter"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "hint_url"
                        },
                        "value": {
                          "element": "string",
                          "content": "http://docs.bugsnag.com/product/filtering-dashboard#user-id"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Possible values for this filter, only if this filter has a finite set of values"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "values"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "_FilterValue"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "The valid match types when filtering by this field"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "match_types"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "string"
                            },
                            {
                              "element": "string",
                              "meta": {
                                "description": "Results must equal the value"
                              },
                              "content": "eq"
                            },
                            {
                              "element": "string",
                              "meta": {
                                "description": "Results must not equal the value"
                              },
                              "content": "ne"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Details of how this field is used in Pivots"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "pivot_options"
                },
                "value": {
                  "element": "PivotOptions"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether a reindex of this field is currently in progress (applicable to custom fields only)"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "reindex_in_progress"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The percentage complete of the reindexing of this field (applicable to custom fields only)"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "reindex_percentage"
                },
                "value": {
                  "element": "number",
                  "content": 100
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "EventFieldCreateRequest"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "[Path](https://docs.bugsnag.com/product/custom-filters/advanced-custom-filters/#custom-filter-path) to locate the relevant data inside an Event data structure"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "path"
                },
                "value": {
                  "element": "string",
                  "content": "metaData.plan.tier"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether to reindex historical events for this field"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "reindex"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Configuration for how this field will appear in the Filter Bar"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "filter_options"
                },
                "value": {
                  "element": "object",
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "Human readable name for the filter"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "name"
                        },
                        "value": {
                          "element": "string",
                          "content": "plan tier"
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Configuration for how this field will appear in pivots and on the Error page"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "pivot_options"
                },
                "value": {
                  "element": "PivotOptions"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "PivotOptions"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "Human readable display name of the pivot."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "name"
                },
                "value": {
                  "element": "string",
                  "content": "Errors"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Additional fields that are displayed in the pivot tab, for example the users pivot displays user name and email in addition to ID."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "fields"
                },
                "value": {
                  "element": "_FilterValue"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether this field is displayed in the error summary section of the dashboard"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "summary"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether this field is displayed as a pivot tab in the dashboard"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "values"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether the unique values of this field are calculated"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "cardinality"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether an average value of this field is calculated"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "average"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "SourceMapFile"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "url"
                },
                "value": {
                  "element": "string",
                  "content": "app.js.map"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "cached file name"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "file"
                },
                "value": {
                  "element": "string",
                  "content": "AbcDeF.map"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "TwoFactorAuthentication"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "two_factor_code"
                },
                "value": {
                  "element": "string",
                  "content": "123456"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "password"
                },
                "value": {
                  "element": "string",
                  "content": "123456"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "SamlConfigurationBase"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "this must be an HTTPS URI, with a hostname that resolves to an IP that is not private or local"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "metadata_endpoint"
                },
                "value": {
                  "element": "string",
                  "content": "https://example-corp.okta.com/app/abc123/sso/saml/metadata"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "enabled"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "allow_username_password_login"
                },
                "value": {
                  "element": "boolean"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "auto_provision"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "SamlConfigurationBase",
          "meta": {
            "id": "SamlConfigurationResponse"
          },
          "content": [
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000001"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "acs_consumer_url"
                },
                "value": {
                  "element": "string",
                  "content": "https://example.com"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "SavedSearchCreateRequest"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "ID of project this saved search is for"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000003"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "name of the saved search"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "name"
                },
                "value": {
                  "element": "string",
                  "content": "most events"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The filters used to determine which Errors will be returned by the\nsearch. See [Filtering](/#introduction/filtering) for details."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "filters"
                },
                "value": {
                  "element": "Filters"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the `error` property to sort results by"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "sort"
                },
                "value": {
                  "element": "SearchSort",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "events"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "events"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "whether this saved search is shared among collaborators"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "shared"
                },
                "value": {
                  "element": "boolean",
                  "attributes": {
                    "default": false
                  },
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "whether this saved search is the project default for the current user"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_default"
                },
                "value": {
                  "element": "boolean",
                  "attributes": {
                    "default": false
                  },
                  "content": false
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "SavedSearchUpdateRequest"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "name of the saved search"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "name"
                },
                "value": {
                  "element": "string",
                  "content": "most events"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The filters used to determine which Errors will be returned by the\nsearch. See [Filtering](/#introduction/filtering) for details."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "filters"
                },
                "value": {
                  "element": "Filters"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the `error` property to sort results by"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "sort"
                },
                "value": {
                  "element": "SearchSort",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "events"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "events"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "whether this saved search is shared among collaborators"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "shared"
                },
                "value": {
                  "element": "boolean",
                  "attributes": {
                    "default": false
                  },
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "whether this saved search is the project default for the current user"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_default"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "SavedSearch"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000001"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "ID of user who created the saved search"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "user_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000002"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "ID of project this saved search is for"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000003"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "name of the saved search"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "name"
                },
                "value": {
                  "element": "string",
                  "content": "most events"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The filters used to determine which Errors will be returned by the\nsearch. See [Filtering](/#introduction/filtering) for details."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "filters"
                },
                "value": {
                  "element": "Filters"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the `error` property to sort results by"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "sort"
                },
                "value": {
                  "element": "SearchSort",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "events"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "events"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "whether this saved search is shared among collaborators"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "shared"
                },
                "value": {
                  "element": "boolean"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "whether this saved search is the project default for the current user"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_default"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "ID of user who last updated this saved search"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "updated_by_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000010"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "time this saved search was created"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "created_at"
                },
                "value": {
                  "element": "string",
                  "content": "2018-06-11T10:43:55Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "time this saved search was last updated"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "updated_at"
                },
                "value": {
                  "element": "string",
                  "content": "2018-06-12T11:50:00Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "indicates if the saved search has a filter with `assigned_to` set to `me`"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "has_assigned_to_me"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "indicates if the saved search has a filter with `assigned_to` set to anything other than `me`"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "has_assigned_to"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "indicates if the saved search has a filter with any criteria related to created issues"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "has_created_issue_filter"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "indicates if the saved search contains an explicit error status filter"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "has_status_filter"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "indicates if the saved search may include errors less than 24hrs old"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "new_error_inclusion"
                },
                "value": {
                  "element": "ErrorStatusType",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "all"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "all"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "indicates if the saved search may include open errors"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "open_error_inclusion"
                },
                "value": {
                  "element": "ErrorStatusType",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "all"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "all"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "indicates if the saved search may include open errors that are unassigned and have no linked issue"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "for_review_error_inclusion"
                },
                "value": {
                  "element": "ErrorStatusType",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "all"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "all"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "indicates if the saved search may include errors that are snoozed"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "snoozed_error_inclusion"
                },
                "value": {
                  "element": "ErrorStatusType",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "all"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "all"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "indicates if the saved search may include errors that are fixed"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "fixed_error_inclusion"
                },
                "value": {
                  "element": "ErrorStatusType",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "all"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "all"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "indicates if the saved search may include errors that are ignored"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "ignored_error_inclusion"
                },
                "value": {
                  "element": "ErrorStatusType",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "all"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "all"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "enum",
          "meta": {
            "id": "ErrorStatusType"
          },
          "content": [
            {
              "element": "string",
              "content": "all"
            },
            {
              "element": "string",
              "content": "some"
            },
            {
              "element": "string",
              "content": "none"
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "SavedSearchUsageSummary"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "the number of project notifications using this saved search"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_notifications_count"
                },
                "value": {
                  "element": "number"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "whether the current user is using this saved search for email notifications"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "current_user_using_for_email_notification"
                },
                "value": {
                  "element": "boolean"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the number of other users using this saved search for email notifications"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "collaborator_email_notifications_count"
                },
                "value": {
                  "element": "number"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "enum",
          "meta": {
            "id": "SearchSort"
          },
          "content": [
            {
              "element": "string",
              "content": "first_seen"
            },
            {
              "element": "string",
              "content": "users"
            },
            {
              "element": "string",
              "content": "events"
            },
            {
              "element": "string",
              "content": "last_seen"
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "enum",
          "meta": {
            "id": "FilterMatchType"
          },
          "content": [
            {
              "element": "string",
              "meta": {
                "description": "Filter for items that \"match\" (exact match or substring match depending on the field) the value"
              },
              "content": "eq"
            },
            {
              "element": "string",
              "meta": {
                "description": "Filter for items that don't match the value"
              },
              "content": "ne"
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "Filters"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "An array of user ids. Matches Errors affecting any of these users. This\nrefers to user ids in the context of your application. Exact match only."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "user.id"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "515fb9337c1074f6fd000002"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of email addresses. Matches Errors that have affected users with email addresses matching any of the provided emails. Supports substring matches."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "user.email"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "john.doe@example.com"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of user names. Matches Errors that have affected users with\nnames matching any of the provided names. Supports substring matches."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "user.name"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "John Doe"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of error statuses. Matches Errors that have any of the given\nstatuses. Exact match only."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "error.status"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "ErrorStatus",
                              "attributes": {
                                "samples": [
                                  [
                                    {
                                      "element": "string",
                                      "content": "open"
                                    }
                                  ]
                                ]
                              },
                              "content": [
                                {
                                  "element": "string",
                                  "content": "open"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of collaborator identifiers. Matches Errors that have been assigned\nto any of the given collaborators. Exact match only.\n\nValues can be `me` (for errors assigned to the current user), `anyone` (for\nerrors assigned to anyone), a collaborator ID, or an email address."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "error.assigned_to"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "515fb9337c1074f6fd000002"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "If set to true, matches Errors that have had an issue created for them.\nIf set to false, matches Errors that have not had an issue created for them."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "error.has_issue"
                },
                "value": {
                  "element": "boolean"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of release stages. Matches Errors that have occurred in any of the\ngiven release stages. Exact match only."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "app.release_stage"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "production"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of application contexts. This refers to the action that was\nhappening when the event occurred. Matches Errors that occurred in any of the\ngiven contexts. Supports substring matches."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "app.context"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "users#show"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of application types. Matches Errors that occurred in any of the\ngiven application types. Exact match only."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "app.type"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "sidekiq"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of application versions. Matches Errors that occurred for the first time in any of the\ngiven versions. Supports the `?` and `*` wildcards."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "version.introduced_in"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "1.?.1"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of application versions. Matches Errors that occurred in any of the\ngiven versions. Supports the `?` and `*` wildcards."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "version.seen_in"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "2.*"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of version codes. Matches Errors that occurred for the first time in\na version of the application identified by any of the given versions codes.\nThe value of an Error's versionCode depends on the corresponding Project's\ntype. In Android apps this will match the versionCode setting.  In iOS apps,\nversionCode is taken from the Build Number setting. Exact match only."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "version_code.introduced_in"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "123"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of version codes. Matches Errors that occurred in a version of the\napplication identified by any of the given versions codes. The value of an\nError's versionCode depends on the corresponding Project's type. In Android\napps this will match the versionCode setting. In iOS apps, versionCode is\ntaken from the Build Number setting. Exact match only."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "version_code.seen_in"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "123"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of Release `build_label`s, `app_version`s, `app_version_code`s, or\n`app_bundle_version`s. Matches Errors that occurred for the first time in any\nof the given Releases. Supports the `?` and `*` wildcards."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "release.introduced_in"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "123"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of Release `build_label`s, `app_version`s, `app_version_code`s, or\n`app_bundle_version`s. Matches Errors that occurred in any of the given\nReleases. Supports the `?` and `*` wildcards."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "release.seen_in"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "123"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of classes. Matches Errors with any of the given classes. Supports\nsubstring matches."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "event.class"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "NoMethodError"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of messages. Matches Errors with any of the given messages. Supports\nsubstring matches."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "event.message"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "redis"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of file paths. Matches Errors with any of the given files in their stack traces'.\nSupports substring matches."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "event.file"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "app/controllers/users_controller.rb"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of method names. Matches Errors with any of the given methods in their stack traces'.\nSupports substring matches."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "event.method"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "process_payment"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of severities. Matches Errors with any of the given severities.\nExact match only."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "event.severity"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "SeverityOptions"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array containing a single timestamp. Matches Errors with events occurring\nafter the given time. Exact match only."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "event.since"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "2017-04-18T22:12:00.000Z"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array containing a single timestamp. Matches Errors with events occurring\nbefore the given time. Exact match only."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "event.before"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "2017-04-18T22:12:00.000Z"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array containing web browser names. Matches Errors with events originating\nfrom any of the given web browsers. Exact match only."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "browser.name"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "enum",
                              "content": [
                                {
                                  "element": "string",
                                  "content": "Chrome"
                                },
                                {
                                  "element": "string",
                                  "content": "Firefox"
                                },
                                {
                                  "element": "string",
                                  "content": "Safari"
                                },
                                {
                                  "element": "string",
                                  "content": "Opera"
                                },
                                {
                                  "element": "string"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array containing web browser versions. Matches Errors with events originating\nfrom any browser with the given version. Exact match only."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "browser.version"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "70.0"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array containing operating system names. Matches Errors with events\noriginating from devices running any of the given operating systems. Exact\nmatch only."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "os.name"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "Android"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array containing operating system versions. Matches Errors with events\noriginating from devices running any of the given operating system versions.\nSupports the `?` and `*` wildcards."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "os.version"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "1.2.3"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array containing hostnames. Matches Errors with events occurring on any\nhosts with one of the given hostnames. Exact match only."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "device.hostname"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "staging1"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array containing device manufacturer names. Matches Errors with events\noccurring on any devices made by the given manufacturers. Exact match only."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "device.manufacturer"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "Google"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array containing device model names. Matches Errors with events\noccurring on any of the given device models. Exact match only."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "device.model"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "Pixel 3"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of URLs. Matches Errors with events associated with requests to any\nof the given URLs. Supports substring matches."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "request.url"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "https://api.example.com/users"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array of IP addresses. Matches Errors with events affecting any of the\ngiven IPs. Exact match only."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "request.ip"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "192.168.5.6"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array containing a boolean. If `true`, matches Errors with events occurring\non jailbroken devices."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "device.jailbroken"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "true"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "An array containing a boolean. If `true`, matches Errors with events occurring\nwhen the application was in the foreground."
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "app.in_foreground"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "object",
                      "content": [
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "type"
                            },
                            "value": {
                              "element": "FilterMatchType"
                            }
                          }
                        },
                        {
                          "element": "member",
                          "attributes": {
                            "typeAttributes": [
                              "required"
                            ]
                          },
                          "content": {
                            "key": {
                              "element": "string",
                              "content": "value"
                            },
                            "value": {
                              "element": "string",
                              "content": "true"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ReleaseStage"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "ID of the release stage"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "5bc7dbc5d1befa0bb25021be"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "ID of project this release stage belongs to"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_id"
                },
                "value": {
                  "element": "string",
                  "content": "5b918c28d1befa000bfa31b0"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "name of this release stage"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "name"
                },
                "value": {
                  "element": "string",
                  "content": "production"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "when this release stage was last seen (via an event or session)"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "last_seen_at"
                },
                "value": {
                  "element": "string",
                  "content": "2018-10-23T17:17:10.940Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "whether this is the primary release stage for its project"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "primary"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "whether this release stage is visible"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "visible"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ReleaseStageSummary"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "ID of project the summary is for"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000003"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "name of release stage the summary is for"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "release_stage_name"
                },
                "value": {
                  "element": "string",
                  "content": "production"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "number of sessions started in the last 24 hours for the release stage"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "sessions_count_in_last_24h"
                },
                "value": {
                  "element": "number",
                  "content": 123
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "enum",
          "meta": {
            "id": "ReleaseRequestSource"
          },
          "content": [
            {
              "element": "string",
              "meta": {
                "description": "source is unknown"
              },
              "content": "unknown_source"
            },
            {
              "element": "string",
              "meta": {
                "description": "originated from an event"
              },
              "content": "event"
            },
            {
              "element": "string",
              "meta": {
                "description": "originated from a session"
              },
              "content": "session"
            },
            {
              "element": "string",
              "meta": {
                "description": "obtained from an API request"
              },
              "content": "api"
            },
            {
              "element": "string",
              "meta": {
                "description": "obtained from a deploy request"
              },
              "content": "deploy"
            },
            {
              "element": "string",
              "meta": {
                "description": "obtained from an error (with complete information)"
              },
              "content": "error"
            },
            {
              "element": "string",
              "meta": {
                "description": "obtained from an error (but the build information is incomplete)"
              },
              "content": "error_incomplete_build"
            },
            {
              "element": "string"
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ReleaseGroupSourceControl"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "the source control provider/service"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "service"
                },
                "value": {
                  "element": "string",
                  "content": "github"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "URL to the revision/commit corresponding to the release"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "commit_url"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "identifier for the revision of the release"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "revision"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "URL to view the changes from the previous release"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "diff_url_to_previous"
                },
                "value": {
                  "element": "string"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "ReleaseGroupSourceControl",
          "meta": {
            "id": "ReleaseSourceControl"
          }
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ReleaseApiView"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "ID of the release"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "5a8f7294d1befa07f361fcde"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "ID of project this release belongs to"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_id"
                },
                "value": {
                  "element": "string",
                  "content": "5a907f72d1befa043987dedf"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "when the release happened (in ISO 8601 format)"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "release_time"
                },
                "value": {
                  "element": "string",
                  "content": "2018-02-21T21:30:16+00:00"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "what was responsible for creating the release"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "release_source"
                },
                "value": {
                  "element": "ReleaseRequestSource"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "version name/number"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "app_version"
                },
                "value": {
                  "element": "string",
                  "content": "1.2.3"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "version code of release (applicable to Android)"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "app_version_code"
                },
                "value": {
                  "element": "string",
                  "content": "1234"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "bundle version/build number of release (applicable to iOS/macOS/tvOS)"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "app_bundle_version"
                },
                "value": {
                  "element": "string",
                  "content": "1.2.3"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "auto-generated descriptive label describing the build"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "build_label"
                },
                "value": {
                  "element": "string",
                  "content": "1.2.3"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "name of person or system that triggered the release/build"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "builder_name"
                },
                "value": {
                  "element": "string",
                  "content": "Daniel Deployer"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "tool used to report this release"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "build_tool"
                },
                "value": {
                  "element": "string",
                  "content": "webpack-bugsnag-plugins"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "number of errors introduced in this release"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "errors_introduced_count"
                },
                "value": {
                  "element": "number",
                  "content": 2
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "number of errors that happened in this release"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "errors_seen_count"
                },
                "value": {
                  "element": "number",
                  "content": 10
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "number of sessions started for this release in the last 24 hours"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "sessions_count_in_last_24h"
                },
                "value": {
                  "element": "number",
                  "content": 6500
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "number of sessions that started in this release"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "total_sessions_count"
                },
                "value": {
                  "element": "number",
                  "content": 3000
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "number of sessions in this release that have seen at least one unhandled event"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "unhandled_sessions_count"
                },
                "value": {
                  "element": "number",
                  "content": 60
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "metadata about the release"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "metadata"
                },
                "value": {
                  "element": "object"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "information about this release's release stage"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "release_stage"
                },
                "value": {
                  "element": "object",
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "name of the release stage"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "name"
                        },
                        "value": {
                          "element": "string",
                          "content": "production"
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "source control related information about the release"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "source_control"
                },
                "value": {
                  "element": "ReleaseSourceControl"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ReleaseGroup"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "ID of release group"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "5cf9a562d1befa0021e6a600"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "ID of project that this release group belongs to"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000003"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "name of the release stage for this release group"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "release_stage_name"
                },
                "value": {
                  "element": "string",
                  "content": "production"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "version string for this release group"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "app_version"
                },
                "value": {
                  "element": "string",
                  "content": "1.2.3"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "when the first release of this release group was released"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "first_released_at"
                },
                "value": {
                  "element": "string",
                  "content": "2019-06-06T15:30:00.000Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "ID of first release of this release group"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "first_release_id"
                },
                "value": {
                  "element": "string",
                  "content": "5a8f7294d1befa07f361fcde"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Number of releases that belong to this release group. This will be 1 for\nreleases that don't use secondary versions."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "releases_count"
                },
                "value": {
                  "element": "number",
                  "content": 1
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Whether the releases in this release group use secondary versions (version\ncode or bundle version). This is usually true for mobile projects and false\nfor non-mobile projects."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "has_secondary_versions"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "tool used to report the first release of this release group"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "build_tool"
                },
                "value": {
                  "element": "string",
                  "content": "webpack-bugsnag-plugins"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "name of person or system that triggered the first release/build of this release group"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "builder_name"
                },
                "value": {
                  "element": "string",
                  "content": "Daniel Deployer"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "source control related information about the first release of this release group"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "source_control"
                },
                "value": {
                  "element": "ReleaseGroupSourceControl"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "total number of sessions seen for this release group"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "total_sessions_count"
                },
                "value": {
                  "element": "number",
                  "content": 3409
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "number of sessions in this release group that had at least one unhandled event"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "unhandled_sessions_count"
                },
                "value": {
                  "element": "number",
                  "content": 6
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "number of sessions seen in the last 24 hours for this release group"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "sessions_count_in_last_24h"
                },
                "value": {
                  "element": "number",
                  "content": 498
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "TopReleasesSessionTrendsTopReleaseGroup"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "release_group_id"
                },
                "value": {
                  "element": "string",
                  "content": "5c8815c75a0c1b12d0f6fb13"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "app_version"
                },
                "value": {
                  "element": "string",
                  "content": "1.0"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "release_time"
                },
                "value": {
                  "element": "string",
                  "content": "2020-06-01T23:33:22Z"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "timeline_points"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "ProjectStabilityTrendTimelinePoint"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "TopReleasesSessionTrends"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "release_stage"
                },
                "value": {
                  "element": "object",
                  "content": [
                    {
                      "element": "member",
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "project_id"
                        },
                        "value": {
                          "element": "string",
                          "content": "5c7815c75a0c1b12d0f6fc01"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "release_stage_name"
                        },
                        "value": {
                          "element": "string",
                          "content": "production"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "timeline_points"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "ProjectStabilityTrendTimelinePoint"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "top_release_groups"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "TopReleasesSessionTrendsTopReleaseGroup"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "SeenFeature"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "organization_id"
                },
                "value": {
                  "element": "string",
                  "content": "515fb9337c1074f6fd000003"
                }
              }
            },
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "key"
                },
                "value": {
                  "element": "string",
                  "content": "welcome_slideshow"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "UserAuthToken"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "ID of the auth token"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "592e047b1f7314b637b2b6ed"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "User supplied description of the token"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "label"
                },
                "value": {
                  "element": "string",
                  "content": "My magic token"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "ID of the user that created this token"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "user_id"
                },
                "value": {
                  "element": "string",
                  "content": "5915b7e01f7314fa00c22b80"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The time this token was created"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "created_at"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-04T22:43:49Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The token parameter used for authenticated API requests"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "token"
                },
                "value": {
                  "element": "string",
                  "content": "0050dcb25dbdabd67ff0cdf454279f8a"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The last time this token was used in an API request"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "last_used_at"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-04T22:43:49Z"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "LegalAgreementApiView"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "type of legal document/policy agreed to"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "agreement_type"
                },
                "value": {
                  "element": "string",
                  "content": "dpa"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "email address of user who agreed"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "accepted_by"
                },
                "value": {
                  "element": "string",
                  "content": "joe@example.com"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "when the agreement happened"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "accepted_at"
                },
                "value": {
                  "element": "string",
                  "content": "2018-03-26T18:23:33.190Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "whether this agreement is for the latest version of the document"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "has_accepted_latest_version"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "PrivacyRepresentativeApiView"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "type of privacy/legal representative"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "representative_type"
                },
                "value": {
                  "element": "string",
                  "content": "dpo"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "name of representative"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "name"
                },
                "value": {
                  "element": "string",
                  "content": "John Doe"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "address of representative"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "address"
                },
                "value": {
                  "element": "string",
                  "content": "123 Main St., San Francisco, CA"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "phone number of representative"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "phone_number"
                },
                "value": {
                  "element": "string",
                  "content": "(415)-555-5555"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "email address of representative"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "email"
                },
                "value": {
                  "element": "string",
                  "content": "john@example.com"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "Subscription"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "This key will be absent if the organization is not currently on a trial."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "trial"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "This key will be absent if the organization is not currently on a trial."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "trial_end"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-29T23:00:01.000Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "This key will be absent if the organization is not currently on a trial."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "trial_expired"
                },
                "value": {
                  "element": "boolean",
                  "content": false
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "This key will be absent if the organization is not currently on a trial."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "trial_days_left"
                },
                "value": {
                  "element": "number",
                  "content": 4
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The plan type you have selected to move to when your trial ends. This key will be absent if the organization is not currently on a trial."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "next_plan"
                },
                "value": {
                  "element": "string",
                  "content": "team_one"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "next_payment_amount_in_cents"
                },
                "value": {
                  "element": "number",
                  "content": 3500
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "next_payment_due_at"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-29T23:00:01.000Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The number of additional times we will attempt to charge your credit card"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "payment_remaining_attempts"
                },
                "value": {
                  "element": "number",
                  "content": 0
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "payment_information"
                },
                "value": {
                  "element": "object",
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "The last four digits of your credit card on file"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "last4"
                        },
                        "value": {
                          "element": "string",
                          "content": "1234"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "expiry_month"
                        },
                        "value": {
                          "element": "number",
                          "content": 0
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "The expiration year of your credit card on file"
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "expiry_year"
                        },
                        "value": {
                          "element": "number",
                          "content": 2018
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "past_due"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "plan"
                },
                "value": {
                  "element": "PlanApiView"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Date when this project will stop processing new events if account is locked and lockout is not resolved"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "stop_processing_events_on"
                },
                "value": {
                  "element": "string",
                  "content": "2017-04-24T22:17:13.000Z"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "InternalAuditEntry"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "ID of the entry"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "5b200a2212d5c900178da00d"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "when the auditable event happened"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "created_at"
                },
                "value": {
                  "element": "string",
                  "content": "2018-06-08T18:25:26.924Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the audit message"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "message"
                },
                "value": {
                  "element": "string",
                  "content": "custom filter deleted"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "entity that acted on the auditable event"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "actor"
                },
                "value": {
                  "element": "object",
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "type of the actor"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "type"
                        },
                        "value": {
                          "element": "enum",
                          "content": [
                            {
                              "element": "string",
                              "content": "UNKNOWN"
                            },
                            {
                              "element": "string",
                              "content": "BUGSNAG"
                            },
                            {
                              "element": "string",
                              "content": "ACCOUNT"
                            },
                            {
                              "element": "string",
                              "content": "USER"
                            },
                            {
                              "element": "string"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "ID of the actor"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "optional"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "id"
                        },
                        "value": {
                          "element": "string",
                          "content": "5b1aca16d1befa0009842255"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "name of the actor"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "optional"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "name"
                        },
                        "value": {
                          "element": "string",
                          "content": "Will Smith"
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "entities associated with the audit entry"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "associated_entities"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "InternalAuditEntryAssociatedEntity"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "InternalAuditEntryAssociatedEntity"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "type of the entity"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "type"
                },
                "value": {
                  "element": "string",
                  "content": "Project"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "ID of the entity"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "5b18305ed1befa000bd05052"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "name of the entity"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "name"
                },
                "value": {
                  "element": "string",
                  "content": "Some App"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "FeatureAccess"
          },
          "content": [
            {
              "element": "member",
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "*feature_type*"
                },
                "value": {
                  "element": "object",
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "description": "Whether or not the organization has access to this feature"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "enabled"
                        },
                        "value": {
                          "element": "boolean"
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "List of plan types that include this feature"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "optional"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "plan_required"
                        },
                        "value": {
                          "element": "array",
                          "content": [
                            {
                              "element": "string"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "description": "Whether or not this feature is enabled"
                      },
                      "attributes": {
                        "typeAttributes": [
                          "required"
                        ]
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "type"
                        },
                        "value": {
                          "element": "enum",
                          "content": [
                            {
                              "element": "string",
                              "content": "email-notification"
                            },
                            {
                              "element": "string",
                              "content": "issue-tracker"
                            },
                            {
                              "element": "string",
                              "content": "team-notification"
                            },
                            {
                              "element": "string",
                              "content": "on-call"
                            },
                            {
                              "element": "string",
                              "content": "data-forwarding"
                            },
                            {
                              "element": "string",
                              "content": "web-feature"
                            },
                            {
                              "element": "string",
                              "content": "authentication"
                            },
                            {
                              "element": "string",
                              "content": "custom-filters"
                            },
                            {
                              "element": "string"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "DiagnosticsReportsRequest"
          },
          "content": [
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "version"
                },
                "value": {
                  "element": "string",
                  "content": "3.1703.0"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "ID of the Bugsnag enterprise that is included in the license file."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "enterprise_id"
                },
                "value": {
                  "element": "string",
                  "content": "1b6c7bc2ad89a6b17519657d48dbdd33"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "Internal Replicated ID of the individual installation."
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "instance_id"
                },
                "value": {
                  "element": "string",
                  "content": "2091a0f48c2e94a7d9a7bf4ff420f74d"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "sso_enabled"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "notifiers"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "DiagnosticsReportsRequestNotifier"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "projects"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "DiagnosticsReportsRequestProject"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "users"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "DiagnosticsReportsRequestUser"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "event_stats"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "DiagnosticsReportsRequestEventStat"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "DiagnosticsReportsRequestNotifier"
          },
          "content": [
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "name"
                },
                "value": {
                  "element": "string",
                  "content": "Ruby Bugsnag Notifier"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "version"
                },
                "value": {
                  "element": "string",
                  "content": "1.0.0"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "last_seen_at"
                },
                "value": {
                  "element": "string",
                  "content": "2018-04-04T11:42:55Z"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "DiagnosticsReportsRequestProject"
          },
          "content": [
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "1b6c7bc2ad89a6b17519657d48dbdd33"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "type"
                },
                "value": {
                  "element": "ProjectType"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "created_at"
                },
                "value": {
                  "element": "string",
                  "content": "2018-04-04T11:42:55Z"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "saved_error_count"
                },
                "value": {
                  "element": "number",
                  "content": 1000
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "integrations"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "jira"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "comments_used"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "workflow_used"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "notifiers"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "DiagnosticsReportsRequestNotifier"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "custom_filters_used"
                },
                "value": {
                  "element": "number",
                  "content": 1
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "sessions_used"
                },
                "value": {
                  "element": "boolean",
                  "content": true
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "session_stats"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "DiagnosticsReportsRequestSessionStat"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "DiagnosticsReportsRequestUser"
          },
          "content": [
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "1b6c7bc2ad89a6b17519657d48dbdd33"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "created_at"
                },
                "value": {
                  "element": "string",
                  "content": "2018-04-04T11:42:55Z"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "last_active_at"
                },
                "value": {
                  "element": "string",
                  "content": "2018-04-04T11:42:55Z"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "DiagnosticsReportsRequestEventStat"
          },
          "content": [
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "from"
                },
                "value": {
                  "element": "string",
                  "content": "2018-03-04T11:42:55Z"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "to"
                },
                "value": {
                  "element": "string",
                  "content": "2018-04-04T11:42:55Z"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "saved"
                },
                "value": {
                  "element": "number",
                  "content": 100000
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "received"
                },
                "value": {
                  "element": "number",
                  "content": 200000
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "legacy_throttled"
                },
                "value": {
                  "element": "number",
                  "content": 1000
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "safeguard_sampled"
                },
                "value": {
                  "element": "number",
                  "content": 100
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "sampled"
                },
                "value": {
                  "element": "number",
                  "content": 6000
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "rejected"
                },
                "value": {
                  "element": "number",
                  "content": 5
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "discarded"
                },
                "value": {
                  "element": "number",
                  "content": 400
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "DiagnosticsReportsRequestSessionStat"
          },
          "content": [
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "from"
                },
                "value": {
                  "element": "string",
                  "content": "2018-03-04T11:42:55Z"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "to"
                },
                "value": {
                  "element": "string",
                  "content": "2018-04-04T11:42:55Z"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "sessions"
                },
                "value": {
                  "element": "number",
                  "content": 100000
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "sessions_with_unhandled"
                },
                "value": {
                  "element": "number",
                  "content": 1000
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "AccountEventUsageApiView"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "the lower bound for this period usage data"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "date"
                },
                "value": {
                  "element": "string",
                  "content": "2018-07-24"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "number of events received in the time period"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "received"
                },
                "value": {
                  "element": "number"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "number of events saved in the time period"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "saved"
                },
                "value": {
                  "element": "number"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "number of events discarded in the time period"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "discarded"
                },
                "value": {
                  "element": "number"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "number of events throttled in the time period"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "throttled"
                },
                "value": {
                  "element": "number"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "ProjectEventUsageApiView"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "the lower bound for this period usage data"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "date"
                },
                "value": {
                  "element": "string",
                  "content": "2018-07-24"
                }
              }
            },
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "project_id"
                },
                "value": {
                  "element": "string",
                  "content": "1b6c7bc2ad89a6b17519657d48dbdd33"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "number of events received in the time period"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "received"
                },
                "value": {
                  "element": "number"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "number of events saved in the time period"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "saved"
                },
                "value": {
                  "element": "number"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "number of events discarded in the time period"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "discarded"
                },
                "value": {
                  "element": "number"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "number of events throttled in the time period"
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "throttled"
                },
                "value": {
                  "element": "number"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "enum",
          "meta": {
            "id": "EventDataRequestStatus"
          },
          "content": [
            {
              "element": "string",
              "content": "PREPARING"
            },
            {
              "element": "string",
              "content": "AWAITING_CONFIRMATION"
            },
            {
              "element": "string",
              "content": "ACCEPTED"
            },
            {
              "element": "string",
              "content": "IN_PROGRESS"
            },
            {
              "element": "string",
              "content": "COMPLETED"
            },
            {
              "element": "string",
              "content": "EXPIRED"
            },
            {
              "element": "string"
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "enum",
          "meta": {
            "id": "EventDataRequestReportType"
          },
          "attributes": {
            "samples": [
              [
                {
                  "element": "string",
                  "content": "gdpr"
                }
              ]
            ]
          },
          "content": [
            {
              "element": "string",
              "meta": {
                "description": "only include event fields that pertain to the user such as event.user, event.device, and event.request; you may need to remove/redact some fields before giving this data to your users that request it"
              },
              "content": "gdpr"
            },
            {
              "element": "string"
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "EventDataRequestApiView"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "ID of the event data request"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "5bf49d97468ce913212ae486"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "URL for downloading the report of the requested event data. This may be a\nsigned URL that is accessible for short amount of time. This field is not\npresent for on-premise installations. For on-premise installations, check\nthe configured directory (it defaults to /data/event-data) on the server\nfor a file having a name in the format \"[event data request ID].json\""
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "url"
                },
                "value": {
                  "element": "string"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "status of the request"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "status"
                },
                "value": {
                  "element": "EventDataRequestStatus",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "ACCEPTED"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "ACCEPTED"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the total number of events that are expected to be returned; this field\nwill be null if the status is `PREPARING`"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "total"
                },
                "value": {
                  "element": "number",
                  "content": 10
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the type of report to return; this is blank if all event fields were requested"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "report_type"
                },
                "value": {
                  "element": "EventDataRequestReportType"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The filters used to determine which events will be included in the report.\nSee [Filtering](/#introduction/filtering) for details."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "filters"
                },
                "value": {
                  "element": "Filters"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "when the request was created"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "created_at"
                },
                "value": {
                  "element": "string",
                  "content": "2018-11-21T01:31:25.000Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "when the request was completed"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "completed_at"
                },
                "value": {
                  "element": "string",
                  "content": "2018-11-21T01:35:00.000Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "when the request expires (and any stored data is removed)"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "expires_at"
                },
                "value": {
                  "element": "string",
                  "content": "2018-11-28T01:35:00.000Z"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "element": "dataStructure",
      "content": [
        {
          "element": "object",
          "meta": {
            "id": "EventDataDeletionApiView"
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "description": "ID of the event deletion request"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "id"
                },
                "value": {
                  "element": "string",
                  "content": "5bf4b8aed1befa02a523f526"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "status of the request"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "status"
                },
                "value": {
                  "element": "EventDataRequestStatus",
                  "attributes": {
                    "samples": [
                      [
                        {
                          "element": "string",
                          "content": "IN_PROGRESS"
                        }
                      ]
                    ]
                  },
                  "content": [
                    {
                      "element": "string",
                      "content": "IN_PROGRESS"
                    }
                  ]
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "the total number of events that are expected to be deleted; this field will\nbe null if the status is `PREPARING`"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "total"
                },
                "value": {
                  "element": "number",
                  "content": 12
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "The filters used to determine which events to delete.\nSee [Filtering](/#introduction/filtering) for details."
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "filters"
                },
                "value": {
                  "element": "Filters"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "when the request was created"
              },
              "attributes": {
                "typeAttributes": [
                  "required"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "created_at"
                },
                "value": {
                  "element": "string",
                  "content": "2018-11-21T01:31:25.000Z"
                }
              }
            },
            {
              "element": "member",
              "meta": {
                "description": "when the request was completed"
              },
              "attributes": {
                "typeAttributes": [
                  "optional"
                ]
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "completed_at"
                },
                "value": {
                  "element": "string",
                  "content": "2018-11-21T01:35:00.000Z"
                }
              }
            }
          ]
        }
      ]
    }
  ],
  "blueprint": "",
  "description": "\u003cp>The Bugsnag Data Access API allows you to access information about your organization, projects, errors, and more to build custom integrations using your Bugsnag data.\u003c/p>\n\u003cp>If you need any help or have any comments about the API please contact \u003ca href=\"mailto:support@bugsnag.com\">support@bugsnag.com\u003c/a>.\u003c/p>\n\u003ch2>Schema\u003c/h2>\n\u003cp>API access is over HTTPS using the endpoint \u003ca href=\"https://api.bugsnag.com\">https://api.bugsnag.com\u003c/a>, and all data is sent and received as \u003ca href=\"https://en.wikipedia.org/wiki/JSON\">JSON\u003c/a>.\u003c/p>\n\u003cp>Unless explicitly specified, time series data are returned sorted oldest to newest, and timestamps are returned in \u003ca href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601\u003c/a> format:\u003c/p>\n\u003cpre>\u003ccode>YYYY-MM-DDTHH:MM:SSZ\n\u003c/code>\u003c/pre>\n\u003ch2>Versioning\u003c/h2>\n\u003cp>This document describes version 2 of the Bugsnag Data Access API.\u003c/p>\n\u003cp>You must explicitly request this version using the \u003ccode>X-Version\u003c/code> header:\u003c/p>\n\u003cpre>\u003ccode>curl -H &quot;X-Version: 2&quot; https://api.bugsnag.com\n\u003c/code>\u003c/pre>\n\u003cp>Alternatively, you can use use the \u003ccode>Accept\u003c/code> header:\u003c/p>\n\u003cpre>\u003ccode>curl -H &quot;Accept: application/json; version=2&quot; https://api.bugsnag.com\n\u003c/code>\u003c/pre>\n\u003ch2>Authentication\u003c/h2>\n\u003cp>All API requests require authentication.\u003c/p>\n\u003cp>There are two ways to authenticate with the API, either using a personal auth token or your user credentials.\u003c/p>\n\u003ch3>Personal Auth Tokens (Recommended)\u003c/h3>\n\u003cp>\u003cem>Personal Auth Tokens\u003c/em> can be generated in the \u003cem>My Account\u003c/em> section of \u003ca href=\"https://app.bugsnag.com/settings/my-account\">Bugsnag settings\u003c/a>.\u003c/p>\n\u003cp>There are two ways to send this auth token with requests. You can send the token\nin the \u003ccode>Authorization\u003c/code> header:\u003c/p>\n\u003cpre>\u003ccode>curl -H &quot;Authorization: token YOUR-AUTH-TOKEN-HERE&quot; https://api.bugsnag.com\n\u003c/code>\u003c/pre>\n\u003cp>Alternatively, you can use the \u003ccode>auth_token\u003c/code> parameter:\u003c/p>\n\u003cpre>\u003ccode>curl https://api.bugsnag.com/?auth_token=YOUR-AUTH-TOKEN-HERE\n\u003c/code>\u003c/pre>\n\u003ch3>User credentials\u003c/h3>\n\u003cp>Alternatively you can authenticate by using your Bugsnag user credentials via \u003ca href=\"http://en.wikipedia.org/wiki/Basic_access_authentication\">Basic Authentication\u003c/a>. Simply send the email address and password associated with the user:\u003c/p>\n\u003cpre>\u003ccode>curl -u user@example.com:password https://api.bugsnag.com\n\u003c/code>\u003c/pre>\n\u003ch2>Rate Limiting\u003c/h2>\n\u003cp>The time window for rate limits is 1 minute.\u003c/p>\n\u003cp>Requests that have not been denied due to rate limiting will have the following response headers:\u003c/p>\n\u003cul>\n\u003cli>\n\u003cp>\u003ccode>X-RateLimit-Limit\u003c/code>: number of requests allowed per time window\u003c/p>\n\u003c/li>\n\u003cli>\n\u003cp>\u003ccode>X-RateLimit-Remaining\u003c/code>: number of requests remaining in the current time window\u003c/p>\n\u003c/li>\n\u003c/ul>\n\u003cp>Requests that have been rate limited will return a \u003ccode>429\u003c/code> response code and have a \u003ccode>Retry-After\u003c/code> response header to indicate how long you should wait (in seconds) before trying again.\u003c/p>\n\u003ch2>Pagination\u003c/h2>\n\u003cp>Pagination information is included in the \u003ccode>Link\u003c/code> header. It is important to follow these Link header values instead of constructing your own URLs since the pagination method can differ between resources.\u003c/p>\n\u003cp>The URL for pagination is shown inside angled brackets, and the type of pagination link is described in the rel field:\u003c/p>\n\u003cpre>\u003ccode>Link: `&lt;https://api.bugsnag.com/example?offset=590bce131f7314d98eac23ba&amp;per_page=5&gt;; rel=&quot;next&quot;`\n\u003c/code>\u003c/pre>\n\u003ch3>Results per page\u003c/h3>\n\u003cp>Requests that return multiple items will be paginated to 30 items by default. For some resources, you can also set a custom page size up to 100 with the \u003ccode>per_page\u003c/code> parameter:\u003c/p>\n\u003cpre>\u003ccode>curl https://api.bugsnag.com/example?per_page=5\n\u003c/code>\u003c/pre>\n\u003cp>The \u003ccode>per_page\u003c/code> maximum for certain resources is lower. This will be specified in the API reference for the endpoint. If a \u003ccode>per_page\u003c/code> value greater than a given endpoint's maximum value is supplied, only results up to the maximum will be returned.\u003c/p>\n\u003ch3>Total count of results\u003c/h3>\n\u003cp>Most requests that return multiple items will also include an \u003ccode>X-Total-Count\u003c/code> header with the count of all results:\u003c/p>\n\u003cpre>\u003ccode>X-Total-Count: 1335\n\u003c/code>\u003c/pre>\n\u003ch2>Parameters\u003c/h2>\n\u003cp>Many API methods take optional parameters. For GET requests, any parameters not specified as a segment in the path can be passed as an HTTP query string parameter.\u003c/p>\n\u003cp>For \u003ccode>POST\u003c/code>, \u003ccode>PATCH\u003c/code>, and \u003ccode>DELETE\u003c/code> requests, parameters not included in the URL should be encoded as JSON with a \u003ccode>Content-Type\u003c/code> of \u003ccode>application/json\u003c/code>.\u003c/p>\n\u003ch2>Response Codes\u003c/h2>\n\u003ch3>HTTP Status Codes\u003c/h3>\n\u003cp>The API attempts to return appropriate \u003ca href=\"http://en.wikipedia.org/wiki/List_of_HTTP_status_codes\">HTTP status codes\u003c/a> for every request, which are documented with each endpoint below.\u003c/p>\n\u003cp>Trying to access resources which you do not have access to will result in a \u003ccode>404 Not Found\u003c/code> response, in order to avoid disclosing the existence of user data.\u003c/p>\n\u003ch3>Error Messages\u003c/h3>\n\u003cp>When the Bugsnag API returns error messages, describing a problem with a Bugsnag\nAPI request, it does so using the following format:\u003c/p>\n\u003cpre>\u003ccode>{\n  &quot;errors&quot;: [&quot;invalid password&quot;]\n}\n\u003c/code>\u003c/pre>\n\u003ch3>API Error Codes\u003c/h3>\n\u003cp>In some cases, to help identify particular categories of API errors, the API will return a code number in addition to an error message:\u003c/p>\n\u003cpre>\u003ccode>{\n  &quot;errors&quot;: [&quot;Unable to return complete results&quot;]\n  &quot;code&quot;: 60000\n}\n\u003c/code>\u003c/pre>\n\u003cp>The API error codes currently in use include:\u003c/p>\n\u003ctable>\n\u003cthead>\n\u003ctr>\n\u003cth>Code\u003c/th>\n\u003cth>Description\u003c/th>\n\u003cth>Remedy\u003c/th>\n\u003c/tr>\n\u003c/thead>\n\u003ctbody>\n\u003ctr>\n\u003ctd>30000\u003c/td>\n\u003ctd>API access restricted due to lapsed payment\u003c/td>\n\u003ctd>Update your \u003ca href=\"https://app.bugsnag.com/settings/\">billing information\u003c/a>\u003c/td>\n\u003c/tr>\n\u003ctr>\n\u003ctd>31000\u003c/td>\n\u003ctd>API access restricted due to expired trial or invalid subscription\u003c/td>\n\u003ctd>\u003ca href=\"https://app.bugsnag.com/settings/\">Select a plan\u003c/a>\u003c/td>\n\u003c/tr>\n\u003ctr>\n\u003ctd>32000\u003c/td>\n\u003ctd>API access restricted for this user due to lack of available seats\u003c/td>\n\u003ctd>\u003ca href=\"https://app.bugsnag.com/settings/\">Select a plan\u003c/a> with more seats\u003c/td>\n\u003c/tr>\n\u003ctr>\n\u003ctd>60000\u003c/td>\n\u003ctd>Results limited due to unusually high number of Errors\u003c/td>\n\u003ctd>Set the \u003ccode>sort\u003c/code> parameter to \u003ccode>unsorted\u003c/code> on this request to obtain complete results\u003c/td>\n\u003c/tr>\n\u003c/tbody>\n\u003c/table>\n\u003ch2>Filtering\u003c/h2>\n\u003cp>Many endpoints that return information about errors and events support a \u003ccode>filters\u003c/code> parameter which can be used to restrict the data returned.\u003c/p>\n\u003ch3>Filter object\u003c/h3>\n\u003cp>The filter object is a hash of Event Field keys containing an array of filter values. Each filter value has a type and a value to filter on. The type determines the type of comparison that will be performed.\u003c/p>\n\u003cpre>\u003ccode>{\n  &quot;event.field&quot;: [{ &quot;type&quot;: &quot;eq&quot;, &quot;value&quot;: &quot;filter value 1&quot; },\n                  { &quot;type&quot;: &quot;eq&quot;, &quot;value&quot;: &quot;filter value 2&quot; }]\n}\n\u003c/code>\u003c/pre>\n\u003cp>Any number of Event Fields can be supplied and results must match each event \u003cem>field\u003c/em> (logical AND). Different filter \u003cem>values\u003c/em> for an event field will combined logically as shown:\u003c/p>\n\u003ctable>\n\u003cthead>\n\u003ctr>\n\u003cth>Type\u003c/th>\n\u003cth>Description\u003c/th>\n\u003cth>Multiple value combination logic\u003c/th>\n\u003c/tr>\n\u003c/thead>\n\u003ctbody>\n\u003ctr>\n\u003ctd>eq\u003c/td>\n\u003ctd>Filter for items that 'match' the value. Some fields require an exact match and some support substring matching.\u003c/td>\n\u003ctd>OR\u003c/td>\n\u003c/tr>\n\u003ctr>\n\u003ctd>ne\u003c/td>\n\u003ctd>Filter for items that don't match the value.\u003c/td>\n\u003ctd>AND\u003c/td>\n\u003c/tr>\n\u003c/tbody>\n\u003c/table>\n\u003cp>Note that the \u003ccode>ne\u003c/code> type is not supported for the time based filters \u003ccode>event.since\u003c/code> and \u003ccode>event.before\u003c/code>.\u003c/p>\n\u003ch3>Encoding in URL parameters\u003c/h3>\n\u003cp>The filters are generally sent as URL parameters. The object should be encoded as follows:\u003c/p>\n\u003cpre>\u003ccode>filters[event.field][][type]=eq\nfilters[event.field][][value]=filter value 1\nfilters[event.field][][type]=eq\nfilters[event.field][][value]=filter value 2\n\u003c/code>\u003c/pre>\n\u003ch3>Event fields\u003c/h3>\n\u003cp>Each project has a set of default Event Fields that are available to filter by plus any \u003ca href=\"#reference/projects/event-fields/create-a-custom-event-field\">custom event fields\u003c/a> that have been created via the API or any \u003ca href=\"https://docs.bugsnag.com/product/custom-filters/\">custom filters\u003c/a> that have been added via the Bugsnag dashboard.\u003c/p>\n\u003cp>To find the available Event Fields on a project use \u003ca href=\"#reference/projects/event-fields/list-the-event-fields-for-a-project\">List the Event Fields for a Project\u003c/a>.\u003c/p>\n\u003cp>Time filters can either be supplied in ISO 8601 format or as relative times in the format \u003ccode>&lt;number&gt;&lt;period&gt;\u003c/code>. If using ISO 8601, times must use the extended format and be in UTC (e.g. \u003ccode>2018-05-20T00:00:00Z\u003c/code>). For relative times, the past seven days could be requested as \u003ccode>7d\u003c/code>. Valid values for \u003ccode>&lt;period&gt;\u003c/code> are:\u003c/p>\n\u003ctable>\n\u003cthead>\n\u003ctr>\n\u003cth>Period\u003c/th>\n\u003cth>Description\u003c/th>\n\u003c/tr>\n\u003c/thead>\n\u003ctbody>\n\u003ctr>\n\u003ctd>h\u003c/td>\n\u003ctd>Hours\u003c/td>\n\u003c/tr>\n\u003ctr>\n\u003ctd>d\u003c/td>\n\u003ctd>Days\u003c/td>\n\u003c/tr>\n\u003c/tbody>\n\u003c/table>\n\u003ch3>Filtering errors vs. filtering events\u003c/h3>\n\u003cp>While any of a project's Event Fields can be passed as a filter to any endpoint\nthat supports filtering, some fields are more applicable to Errors and others\nare more applicable to Events.\u003c/p>\n\u003cp>For example, an Event Field like \u003ccode>error.status\u003c/code>\nor \u003ccode>error.assigned_to\u003c/code> would make more sense when filtering at the Error level,\nsince all Events grouped within a particular error would share the same status\nand assignee. Conversely, a filter like \u003ccode>user.email\u003c/code> or \u003ccode>app.release_stage\u003c/code>\nis applied at the Event level, since different Events within a particular\nError may happen to different users or in different release stages.\u003c/p>\n\u003cp>If an endpoint that returns Errors is passed an Event-level filter, it will return\nErrors that include at least one Event that matches the filter. Event-level\ninformation within the Error, like the count of relevant Events, will reflect\nthe filters applied.\u003c/p>\n\u003ch3>Examples\u003c/h3>\n\u003ch4>Open errors with events in the last day\u003c/h4>\n\u003cp>This example will filter for events of errors that have a status of open that occurred in the last day:\u003c/p>\n\u003cpre>\u003ccode>{\n  &quot;event.since&quot;: [{ &quot;type&quot;: &quot;eq&quot;, &quot;value&quot;: &quot;1d&quot; }],\n  &quot;error.status&quot;: [{ &quot;type&quot;: &quot;eq&quot;, &quot;value&quot;: &quot;open&quot; }]\n}\n\u003c/code>\u003c/pre>\n\u003cp>or as URL parameters:\u003c/p>\n\u003cpre>\u003ccode>filters[event.since][][type]=eq\nfilters[event.since][][value]=1d\nfilters[error.status][][type]=eq\nfilters[error.status][][value]=open\n\u003c/code>\u003c/pre>\n\u003ch4>Events affecting two specific users on a specific day\u003c/h4>\n\u003cp>This example will filter for events that occurred for either user1@example.com or user2@example.com on January 1st, 2017:\u003c/p>\n\u003cpre>\u003ccode>{\n  &quot;event.before&quot;: [{ &quot;type&quot;: &quot;eq&quot;, &quot;value&quot;: &quot;2017-01-02T00:00:00Z&quot; }],\n  &quot;event.since&quot;: [{ &quot;type&quot;: &quot;eq&quot;, &quot;value&quot;: &quot;2017-01-01T00:00:00Z&quot; }],\n  &quot;user.email&quot;: [{ &quot;type&quot;: &quot;eq&quot;, &quot;value&quot;: &quot;user1@example.com&quot; },\n                 { &quot;type&quot;: &quot;eq&quot;, &quot;value&quot;: &quot;user2@example.com&quot; }]\n}\n\u003c/code>\u003c/pre>\n\u003cp>or as URL parameters:\u003c/p>\n\u003cpre>\u003ccode>filters[event.before][][type]=eq\nfilters[event.before][][value]=2017-01-02T00:00:00Z\nfilters[event.since][][type]=eq\nfilters[event.since][][value]=2017-01-01T00:00:00Z\nfilters[user.email][][type]=eq\nfilters[user.email][][value]=user1@example.com\nfilters[user.email][][type]=eq\nfilters[user.email][][value]=user2@example.com\n\u003c/code>\u003c/pre>\n\u003ch4>Errors that are new and aren't assigned to anyone\u003c/h4>\n\u003cp>This example will filter for errors that have a status of new but are not assigned to a particular user.\u003c/p>\n\u003cpre>\u003ccode>{\n  &quot;error.status&quot;: [{ &quot;type&quot;: &quot;eq&quot;, &quot;value&quot;: &quot;new&quot; }]\n  &quot;error.assigned_to&quot;: [{ &quot;type&quot;: &quot;ne&quot;, &quot;value&quot;: &quot;12345&quot; }]\n}\n\u003c/code>\u003c/pre>\n\u003cp>or as URL parameters:\u003c/p>\n\u003cpre>\u003ccode>filters[error.status][][type]=eq\nfilters[error.status][][value]=new\nfilters[user.email][][type]=ne\nfilters[user.email][][value]=12345\n\u003c/code>\u003c/pre>\n\u003ch2>Using the interactive console\u003c/h2>\n\u003cp>These API docs include an interactive console that can be used to make requests\nto the production Bugsnag API. For general information about using the console,\nsee the \u003ca href=\"https://help.apiary.io/tools/interactive-documentation/#console\">Console documentation\u003c/a>.\u003c/p>\n\u003cp>To use the console to test the Bugsnag API, click the API endpoint you would\nlike to test. Then click the &quot;Switch to Console&quot; button in the upper right\ncorner. To make a valid request, you'll need to substitute in your own parameter\nvalues for the sample parameters and set the relevant headers:\u003c/p>\n\u003cpre>\u003ccode>Content-Type: application/json\nX-Version: 2\nAuthorization: token YOUR-AUTH-TOKEN-HERE\n\u003c/code>\u003c/pre>\n\u003cp>\u003cstrong>Caution:\u003c/strong> requests to the Bugsnag API from the console are real API\nrequests and have the ability to modify your production data!\u003c/p>",
  "toc": {
    "introduction": {
      "items": [
        {
          "level": 2,
          "name": "Schema",
          "subitems": []
        },
        {
          "level": 2,
          "name": "Versioning",
          "subitems": []
        },
        {
          "level": 2,
          "name": "Authentication",
          "subitems": [
            {
              "level": 3,
              "name": "Personal Auth Tokens (Recommended)"
            },
            {
              "level": 3,
              "name": "User credentials"
            }
          ]
        },
        {
          "level": 2,
          "name": "Rate Limiting",
          "subitems": []
        },
        {
          "level": 2,
          "name": "Pagination",
          "subitems": [
            {
              "level": 3,
              "name": "Results per page"
            },
            {
              "level": 3,
              "name": "Total count of results"
            }
          ]
        },
        {
          "level": 2,
          "name": "Parameters",
          "subitems": []
        },
        {
          "level": 2,
          "name": "Response Codes",
          "subitems": [
            {
              "level": 3,
              "name": "HTTP Status Codes"
            },
            {
              "level": 3,
              "name": "Error Messages"
            },
            {
              "level": 3,
              "name": "API Error Codes"
            }
          ]
        },
        {
          "level": 2,
          "name": "Filtering",
          "subitems": [
            {
              "level": 3,
              "name": "Filter object"
            },
            {
              "level": 3,
              "name": "Encoding in URL parameters"
            },
            {
              "level": 3,
              "name": "Event fields"
            },
            {
              "level": 3,
              "name": "Filtering errors vs. filtering events"
            },
            {
              "level": 3,
              "name": "Examples"
            }
          ]
        },
        {
          "level": 2,
          "name": "Using the interactive console",
          "subitems": []
        }
      ],
      "lowestLevel": 2,
      "secondLowestLevel": 3
    }
  },
  "resourceGroups": [
    {
      "name": "Current User",
      "description": "\u003cp>These endpoints are designed to act on the settings of the currently authenticated user. This User will be referred to as the Current User throughout this documentation.\u003c/p>",
      "resources": [
        {
          "name": "Organizations",
          "model": {},
          "headers": {},
          "parameters": [],
          "uriTemplate": "/user/organizations{?admin,per_page}",
          "actions": [
            {
              "name": "List the Current User's Organizations",
              "relation": "",
              "uriTemplate": "",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>\u003ccode>true\u003c/code> if only Organizations the Current User is an admin of should be returned\u003c/p>\n",
                  "type": "boolean",
                  "required": false,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "admin"
                },
                {
                  "description": "",
                  "type": "number",
                  "required": false,
                  "default": "30",
                  "example": "10",
                  "values": [],
                  "key": "per_page"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"name\": \"Acme Co.\",\n    \"billing_emails\": [\n      \"emily@example.com\"\n    ],\n    \"auto_upgrade\": true,\n    \"id\": \"515fb9337c1074f6fd000007\",\n    \"slug\": \"acme-co\",\n    \"creator\": {\n      \"email\": \"emily@example.com\",\n      \"id\": \"58c9b9b09ef17217f1fb8b30\",\n      \"name\": \"James Smith\"\n    },\n    \"collaborators_url\": \"https://api.bugsnag.com/organizations/515fb9337c1074f6fd000007/collaborators\",\n    \"projects_url\": \"https://api.bugsnag.com/organizations/515fb9337c1074f6fd000007/projects\",\n    \"created_at\": \"2017-04-24T22:17:13.000Z\",\n    \"updated_at\": \"2017-04-24T22:17:13.000Z\",\n    \"upgrade_url\": \"http://app.bugsnag.com/settings/acme-co/plans-billing/select-plan\"\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json",
                        "Link": "`\u003chttps://api.bugsnag.com/user/organizations?direction=desc&offset=590bce131f7314d98eac23ba&per_page=30&sort=created_at>; rel=\"next\"`",
                        "X-Total-Count": "34"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "name": "Link",
                          "value": "`\u003chttps://api.bugsnag.com/user/organizations?direction=desc&offset=590bce131f7314d98eac23ba&per_page=30&sort=created_at>; rel=\"next\"`"
                        },
                        {
                          "name": "X-Total-Count",
                          "value": "34"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "OrganizationApiView"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"User not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Request was made without User authorization. All requests about a User should be authorized as that User.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "List an Organization's Projects",
              "relation": "",
              "uriTemplate": "/organizations/{organization_id}/projects{?q,sort,direction,per_page}",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>the ID of the organization\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "organization_id"
                },
                {
                  "description": "\u003cp>Search projects with names matching parameter\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "",
                  "example": "MyProject",
                  "values": [],
                  "key": "q"
                },
                {
                  "description": "\u003cp>Which field to sort the results by\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "created_at",
                  "example": "",
                  "values": [
                    "created_at",
                    "name",
                    "favorite"
                  ],
                  "key": "sort"
                },
                {
                  "description": "\u003cp>Which direction to sort the results by. Defaults to \u003ccode>desc\u003c/code> for all sorts except \u003ccode>favorite\u003c/code>. Defaults to \u003ccode>asc\u003c/code> if sorting by \u003ccode>favorite\u003c/code> (cannot sort \u003ccode>favorite\u003c/code>s \u003ccode>desc\u003c/code>).\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "desc",
                  "example": "",
                  "values": [
                    "asc",
                    "desc"
                  ],
                  "key": "direction"
                },
                {
                  "description": "\u003cp>How many results to return per page\u003c/p>\n",
                  "type": "number",
                  "required": false,
                  "default": "30",
                  "example": "",
                  "values": [],
                  "key": "per_page"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"name\": \"Example Project\",\n    \"global_grouping\": [\n      \"Redis::CannotConnectError\",\n      \"Mongo::Error:SocketError\"\n    ],\n    \"location_grouping\": [\n      \"Timeout::Error\"\n    ],\n    \"discarded_app_versions\": [\n      \"alpha\",\n      \"\u003c 2.2.2\",\n      \"3.0.0\"\n    ],\n    \"discarded_errors\": [\n      \"Example::Error\"\n    ],\n    \"url_whitelist\": [\n      \"example.com\"\n    ],\n    \"ignore_old_browsers\": true,\n    \"ignored_browser_versions\": {},\n    \"resolve_on_deploy\": true,\n    \"id\": \"515fb9337c1074f6fd000003\",\n    \"slug\": \"example-project\",\n    \"api_key\": \"deadbeef1234deadbeef1234deadbeef\",\n    \"is_full_view\": true,\n    \"release_stages\": [\n      \"staging\",\n      \"production\"\n    ],\n    \"language\": \"ruby\",\n    \"created_at\": \"2017-03-02T05:55:55.555Z\",\n    \"updated_at\": \"2017-03-03T05:55:55.555Z\",\n    \"url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003\",\n    \"html_url\": \"https://app.bugsnag.com/example-account/example-project\",\n    \"errors_url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003/errors\",\n    \"events_url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003/events\",\n    \"open_error_count\": 10,\n    \"for_review_error_count\": 5,\n    \"collaborators_count\": 15,\n    \"custom_event_fields_used\": 5\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json",
                        "Link": "\u003chttps://api.bugsnag.com/organizations/515fb9337c1074f6fd000001/projects?offset=517c41f07c1074aee9000002>; rel=\"next\"",
                        "X-Total-Count": "123"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "name": "Link",
                          "value": "\u003chttps://api.bugsnag.com/organizations/515fb9337c1074f6fd000001/projects?offset=517c41f07c1074aee9000002>; rel=\"next\""
                        },
                        {
                          "name": "X-Total-Count",
                          "value": "123"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "ProjectApiView"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Organization not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>An organization with the ID you provided could not be found.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    },
                    {
                      "body": "{\n\"errors\": [\"favorites cannot be sorted descending\"]\n}\n\n",
                      "schema": "",
                      "description": "\u003cp>Favorites only support ascending sort.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            }
          ],
          "description": ""
        }
      ]
    },
    {
      "name": "Errors",
      "description": "",
      "resources": [
        {
          "name": "Errors",
          "model": {},
          "headers": {},
          "parameters": [],
          "uriTemplate": "/errors",
          "actions": [
            {
              "name": "List the Errors on a Project",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/errors{?sort,direction,per_page,filters,base}",
              "description": "\u003cp>Get a list of the errors on a project. If you require a feed of all new errors as they are\nreported consider setting up a\n\u003ca href=\"https://docs.bugsnag.com/product/integrations/webhook/\">webhook integration\u003c/a> instead.\u003c/p>",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the Project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000003",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "\u003cp>Default: current time\nOnly Error Events occurring before this time will be considered.\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "",
                  "example": "2017-04-12T22:50:04Z",
                  "values": [],
                  "key": "base"
                },
                {
                  "description": "\u003cp>Which field to sort the results by\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "last_seen",
                  "example": "",
                  "values": [
                    "last_seen",
                    "first_seen",
                    "users",
                    "events",
                    "unsorted"
                  ],
                  "key": "sort"
                },
                {
                  "description": "\u003cp>Which direction to sort the results by\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "desc",
                  "example": "",
                  "values": [
                    "asc",
                    "desc"
                  ],
                  "key": "direction"
                },
                {
                  "description": "\u003cp>How many results to return per page\u003c/p>\n",
                  "type": "number",
                  "required": false,
                  "default": "30",
                  "example": "",
                  "values": [],
                  "key": "per_page"
                },
                {
                  "description": "\u003cp>The request may optionally provide a \u003ccode>filters\u003c/code> object. Only Errors\nmatching \u003ccode>filters\u003c/code> will be returned in the response. See \u003ca href=\"/#introduction/filtering\">Filtering\u003c/a>\nfor details.\u003c/p>\n",
                  "type": "Filters",
                  "required": false,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "filters"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"severity\": \"error\",\n    \"assigned_collaborator_id\": \"515fb9337c1074f6fd000002\",\n    \"id\": \"515fb9337c1074f6fd000001\",\n    \"project_id\": \"74f6fd000001515fb9337c10\",\n    \"url\": \"https://api.bugsnag.com/projects/74f6fd000001515fb9337c10/errors/515fb9337c1074f6fd000001\",\n    \"project_url\": \"https://api.bugsnag.com/projects/74f6fd000001515fb9337c10\",\n    \"error_class\": \"NoMethodError\",\n    \"message\": \"undefined method `foo` for nil:NilClass\",\n    \"context\": \"users#show\",\n    \"original_severity\": \"error\",\n    \"overridden_severity\": \"error\",\n    \"events\": 10,\n    \"events_url\": \"https://api.bugsnag.com/projects/74f6fd000001515fb9337c10/errors/515fb9337c1074f6fd000001/events\",\n    \"unthrottled_occurrence_count\": 10,\n    \"users\": 5,\n    \"first_seen\": \"2017-03-20T00:00:00Z\",\n    \"last_seen\": \"2017-03-27T00:00:00Z\",\n    \"first_seen_unfiltered\": \"2017-03-19T08:41:13Z\",\n    \"reopen_rules\": {\n      \"reopen_if\": \"n_additional_occurrences\",\n      \"reopen_after\": \"\",\n      \"seconds\": 0,\n      \"occurrences\": 0,\n      \"hours\": 0,\n      \"occurrence_threshold\": 0,\n      \"additional_occurrences\": 0\n    },\n    \"status\": \"open\",\n    \"created_issue\": {\n      \"id\": \"1246284\",\n      \"key\": \"ENG-10\",\n      \"number\": 123,\n      \"type\": \"jira\",\n      \"url\": \"https://example.atlassian.net/browse/ENG-10\"\n    },\n    \"comment_count\": 5,\n    \"missing_dsyms\": [],\n    \"release_stages\": [],\n    \"grouping_reason\": \"frame-inner\",\n    \"grouping_fields\": {\n      \"line number\": \"5\",\n      \"error class\": \"ErrorClass\"\n    }\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json",
                        "Link": "`\u003chttps://api.bugsnag.com/projects/515fb9337c1074f6fd000003/errors?offset=590bce131f7314d98eac23ba&sort=last_seen>; rel=\"next\"`",
                        "X-Total-Count": "123"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "name": "Link",
                          "value": "`\u003chttps://api.bugsnag.com/projects/515fb9337c1074f6fd000003/errors?offset=590bce131f7314d98eac23ba&sort=last_seen>; rel=\"next\"`"
                        },
                        {
                          "name": "X-Total-Count",
                          "value": "123"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "ErrorApiView"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Project not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Project could not be found. Check the supplied \u003ccode>project_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    },
                    {
                      "body": "{\n\"errors\": [\"Unable to return complete results\"],\n\"code\": 60000\n}",
                      "schema": "",
                      "description": "\u003cp>Projects that have an unusually high number of Errors may be limited in the\nnumber of results that can be obtained from this endpoint. If you receive this\nerror, you may still obtain complete results by setting the &quot;sort&quot; parameter\nto &quot;unsorted&quot;.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "422"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "View an Error",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/errors/{error_id}",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the Error\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "error_id"
                },
                {
                  "description": "\u003cp>ID of the Project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "337515fb9c1074f6fd000001",
                  "values": [],
                  "key": "project_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"severity\": \"error\",\n  \"assigned_collaborator_id\": \"515fb9337c1074f6fd000002\",\n  \"id\": \"515fb9337c1074f6fd000001\",\n  \"project_id\": \"74f6fd000001515fb9337c10\",\n  \"url\": \"https://api.bugsnag.com/projects/74f6fd000001515fb9337c10/errors/515fb9337c1074f6fd000001\",\n  \"project_url\": \"https://api.bugsnag.com/projects/74f6fd000001515fb9337c10\",\n  \"error_class\": \"NoMethodError\",\n  \"message\": \"undefined method `foo` for nil:NilClass\",\n  \"context\": \"users#show\",\n  \"original_severity\": \"error\",\n  \"overridden_severity\": \"error\",\n  \"events\": 10,\n  \"events_url\": \"https://api.bugsnag.com/projects/74f6fd000001515fb9337c10/errors/515fb9337c1074f6fd000001/events\",\n  \"unthrottled_occurrence_count\": 10,\n  \"users\": 5,\n  \"first_seen\": \"2017-03-20T00:00:00Z\",\n  \"last_seen\": \"2017-03-27T00:00:00Z\",\n  \"first_seen_unfiltered\": \"2017-03-19T08:41:13Z\",\n  \"reopen_rules\": {\n    \"reopen_if\": \"n_additional_occurrences\",\n    \"reopen_after\": \"\",\n    \"seconds\": 0,\n    \"occurrences\": 0,\n    \"hours\": 0,\n    \"occurrence_threshold\": 0,\n    \"additional_occurrences\": 0\n  },\n  \"status\": \"open\",\n  \"created_issue\": {\n    \"id\": \"1246284\",\n    \"key\": \"ENG-10\",\n    \"number\": 123,\n    \"type\": \"jira\",\n    \"url\": \"https://example.atlassian.net/browse/ENG-10\"\n  },\n  \"comment_count\": 5,\n  \"missing_dsyms\": [],\n  \"release_stages\": [],\n  \"grouping_reason\": \"frame-inner\",\n  \"grouping_fields\": {\n    \"line number\": \"5\",\n    \"error class\": \"ErrorClass\"\n  }\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"severity\": {\n      \"enum\": [\n        \"info\",\n        \"warning\",\n        \"error\"\n      ]\n    },\n    \"assigned_collaborator_id\": {\n      \"type\": \"string\"\n    },\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"project_id\": {\n      \"type\": \"string\"\n    },\n    \"url\": {\n      \"type\": \"string\"\n    },\n    \"project_url\": {\n      \"type\": \"string\"\n    },\n    \"error_class\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    },\n    \"context\": {\n      \"type\": \"string\"\n    },\n    \"original_severity\": {\n      \"enum\": [\n        \"info\",\n        \"warning\",\n        \"error\"\n      ]\n    },\n    \"overridden_severity\": {\n      \"enum\": [\n        \"info\",\n        \"warning\",\n        \"error\"\n      ]\n    },\n    \"events\": {\n      \"type\": \"number\"\n    },\n    \"events_url\": {\n      \"type\": \"string\"\n    },\n    \"unthrottled_occurrence_count\": {\n      \"type\": \"number\"\n    },\n    \"users\": {\n      \"type\": \"number\"\n    },\n    \"first_seen\": {\n      \"type\": \"string\"\n    },\n    \"last_seen\": {\n      \"type\": \"string\"\n    },\n    \"first_seen_unfiltered\": {\n      \"type\": \"string\"\n    },\n    \"last_seen_unfiltered\": {\n      \"type\": \"string\"\n    },\n    \"reopen_rules\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"reopen_if\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"enum\": [\n                \"n_additional_occurrences\",\n                \"n_occurrences_in_m_hours\",\n                \"occurs_after\"\n              ]\n            }\n          ]\n        },\n        \"reopen_after\": {\n          \"type\": \"string\"\n        },\n        \"seconds\": {\n          \"type\": \"number\"\n        },\n        \"occurrences\": {\n          \"type\": \"number\"\n        },\n        \"hours\": {\n          \"type\": \"number\"\n        },\n        \"occurrence_threshold\": {\n          \"type\": \"number\"\n        },\n        \"additional_occurrences\": {\n          \"type\": \"number\"\n        }\n      },\n      \"required\": [\n        \"reopen_if\"\n      ]\n    },\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"enum\": [\n            \"open\",\n            \"in progress\",\n            \"for_review\",\n            \"fixed\",\n            \"snoozed\",\n            \"ignored\"\n          ]\n        }\n      ]\n    },\n    \"created_issue\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"key\": {\n          \"type\": \"string\"\n        },\n        \"number\": {\n          \"type\": \"number\"\n        },\n        \"type\": {\n          \"type\": \"string\"\n        },\n        \"url\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"comment_count\": {\n      \"type\": \"number\"\n    },\n    \"missing_dsyms\": {\n      \"type\": \"array\"\n    },\n    \"release_stages\": {\n      \"type\": \"array\"\n    },\n    \"grouping_reason\": {\n      \"enum\": [\n        \"frame-inner\",\n        \"context-inner\",\n        \"error_class-inner\",\n        \"user_defined\",\n        \"js-codebase\",\n        \"js-location\",\n        \"js-blob\",\n        \"js-tag\",\n        \"js-html\",\n        \"js-eval\"\n      ]\n    },\n    \"grouping_fields\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"line number\": {\n          \"type\": \"string\"\n        },\n        \"error class\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "ErrorApiView"
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Error not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Error could not be found. Check the supplied \u003ccode>error_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Update an Error",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/errors/{error_id}",
              "description": "",
              "method": "PATCH",
              "parameters": [
                {
                  "description": "\u003cp>ID of the Error\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "error_id"
                },
                {
                  "description": "\u003cp>ID of the Project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "337515fb9c1074f6fd000001",
                  "values": [],
                  "key": "project_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "ErrorUpdateRequest"
                          }
                        ]
                      },
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"severity\": \"error\",\n  \"assigned_collaborator_id\": \"515fb9337c1074f6fd000002\",\n  \"id\": \"515fb9337c1074f6fd000001\",\n  \"project_id\": \"74f6fd000001515fb9337c10\",\n  \"url\": \"https://api.bugsnag.com/projects/74f6fd000001515fb9337c10/errors/515fb9337c1074f6fd000001\",\n  \"project_url\": \"https://api.bugsnag.com/projects/74f6fd000001515fb9337c10\",\n  \"error_class\": \"NoMethodError\",\n  \"message\": \"undefined method `foo` for nil:NilClass\",\n  \"context\": \"users#show\",\n  \"original_severity\": \"error\",\n  \"overridden_severity\": \"error\",\n  \"events\": 10,\n  \"events_url\": \"https://api.bugsnag.com/projects/74f6fd000001515fb9337c10/errors/515fb9337c1074f6fd000001/events\",\n  \"unthrottled_occurrence_count\": 10,\n  \"users\": 5,\n  \"first_seen\": \"2017-03-20T00:00:00Z\",\n  \"last_seen\": \"2017-03-27T00:00:00Z\",\n  \"first_seen_unfiltered\": \"2017-03-19T08:41:13Z\",\n  \"reopen_rules\": {\n    \"reopen_if\": \"n_additional_occurrences\",\n    \"reopen_after\": \"\",\n    \"seconds\": 0,\n    \"occurrences\": 0,\n    \"hours\": 0,\n    \"occurrence_threshold\": 0,\n    \"additional_occurrences\": 0\n  },\n  \"status\": \"open\",\n  \"created_issue\": {\n    \"id\": \"1246284\",\n    \"key\": \"ENG-10\",\n    \"number\": 123,\n    \"type\": \"jira\",\n    \"url\": \"https://example.atlassian.net/browse/ENG-10\"\n  },\n  \"comment_count\": 5,\n  \"missing_dsyms\": [],\n  \"release_stages\": [],\n  \"grouping_reason\": \"frame-inner\",\n  \"grouping_fields\": {\n    \"line number\": \"5\",\n    \"error class\": \"ErrorClass\"\n  }\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"severity\": {\n      \"enum\": [\n        \"info\",\n        \"warning\",\n        \"error\"\n      ]\n    },\n    \"assigned_collaborator_id\": {\n      \"type\": \"string\"\n    },\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"project_id\": {\n      \"type\": \"string\"\n    },\n    \"url\": {\n      \"type\": \"string\"\n    },\n    \"project_url\": {\n      \"type\": \"string\"\n    },\n    \"error_class\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    },\n    \"context\": {\n      \"type\": \"string\"\n    },\n    \"original_severity\": {\n      \"enum\": [\n        \"info\",\n        \"warning\",\n        \"error\"\n      ]\n    },\n    \"overridden_severity\": {\n      \"enum\": [\n        \"info\",\n        \"warning\",\n        \"error\"\n      ]\n    },\n    \"events\": {\n      \"type\": \"number\"\n    },\n    \"events_url\": {\n      \"type\": \"string\"\n    },\n    \"unthrottled_occurrence_count\": {\n      \"type\": \"number\"\n    },\n    \"users\": {\n      \"type\": \"number\"\n    },\n    \"first_seen\": {\n      \"type\": \"string\"\n    },\n    \"last_seen\": {\n      \"type\": \"string\"\n    },\n    \"first_seen_unfiltered\": {\n      \"type\": \"string\"\n    },\n    \"last_seen_unfiltered\": {\n      \"type\": \"string\"\n    },\n    \"reopen_rules\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"reopen_if\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"enum\": [\n                \"n_additional_occurrences\",\n                \"n_occurrences_in_m_hours\",\n                \"occurs_after\"\n              ]\n            }\n          ]\n        },\n        \"reopen_after\": {\n          \"type\": \"string\"\n        },\n        \"seconds\": {\n          \"type\": \"number\"\n        },\n        \"occurrences\": {\n          \"type\": \"number\"\n        },\n        \"hours\": {\n          \"type\": \"number\"\n        },\n        \"occurrence_threshold\": {\n          \"type\": \"number\"\n        },\n        \"additional_occurrences\": {\n          \"type\": \"number\"\n        }\n      },\n      \"required\": [\n        \"reopen_if\"\n      ]\n    },\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"enum\": [\n            \"open\",\n            \"in progress\",\n            \"for_review\",\n            \"fixed\",\n            \"snoozed\",\n            \"ignored\"\n          ]\n        }\n      ]\n    },\n    \"created_issue\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"key\": {\n          \"type\": \"string\"\n        },\n        \"number\": {\n          \"type\": \"number\"\n        },\n        \"type\": {\n          \"type\": \"string\"\n        },\n        \"url\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"comment_count\": {\n      \"type\": \"number\"\n    },\n    \"missing_dsyms\": {\n      \"type\": \"array\"\n    },\n    \"release_stages\": {\n      \"type\": \"array\"\n    },\n    \"grouping_reason\": {\n      \"enum\": [\n        \"frame-inner\",\n        \"context-inner\",\n        \"error_class-inner\",\n        \"user_defined\",\n        \"js-codebase\",\n        \"js-location\",\n        \"js-blob\",\n        \"js-tag\",\n        \"js-html\",\n        \"js-eval\"\n      ]\n    },\n    \"grouping_fields\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"line number\": {\n          \"type\": \"string\"\n        },\n        \"error class\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "ErrorApiView"
                          }
                        ]
                      }
                    },
                    {
                      "body": "",
                      "schema": "",
                      "description": "\u003cp>Returned upon a successful \u003ccode>discard\u003c/code> or \u003ccode>delete\u003c/code> \u003ccode>operation\u003c/code>.\u003c/p>",
                      "headers": {},
                      "headers1A": [],
                      "status": "204"
                    },
                    {
                      "body": "{\n\"errors\": [\"base must be iso8601 format\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Request validation error. See \u003ccode>errors\u003c/code> for specific details.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    },
                    {
                      "body": "{\n\"errors\": [\"Error not found\", \"User not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Error could not be found or User could not be found (when attempting to assign\nan error). Check the supplied \u003ccode>error_id\u003c/code> or the  supplied\n\u003ccode>assigned_collaborator_id\u003c/code>. It may be that the user does not have access to\nthe project that contains the error.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Bulk Update Errors",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/errors{?error_ids}",
              "description": "",
              "method": "PATCH",
              "parameters": [
                {
                  "description": "",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000003",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "\u003cp>IDs of the Errors to update\u003c/p>\n",
                  "type": "array[string]",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "error_ids"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "ErrorUpdateRequest"
                          }
                        ]
                      },
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"operation\": \"overriden_severity\",\n  \"515fb9337c1074f6fd000001\": {\n    \"assigned_collaborator_id\": \"515fb9337c1074f6fd000002\",\n    \"created_issue\": {\n      \"id\": \"1246284\",\n      \"key\": \"ENG-10\",\n      \"number\": 123,\n      \"type\": \"jira\",\n      \"url\": \"https://example.atlassian.net/browse/ENG-10\"\n    },\n    \"reopen_rules\": {\n      \"reopen_if\": \"n_additional_occurrences\",\n      \"reopen_after\": \"\",\n      \"seconds\": 0,\n      \"occurrences\": 0,\n      \"hours\": 0,\n      \"occurrence_threshold\": 0,\n      \"additional_occurrences\": 0\n    },\n    \"status\": \"open\"\n  }\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"operation\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"enum\": [\n            \"overriden_severity\",\n            \"assign\",\n            \"create_issue\",\n            \"link_issue\",\n            \"unlink_issue\",\n            \"open\",\n            \"snooze\",\n            \"fix\",\n            \"ignore\",\n            \"delete\",\n            \"discard\"\n          ]\n        }\n      ]\n    }\n  },\n  \"patternProperties\": {\n    \"(?:)\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"assigned_collaborator_id\": {\n          \"type\": \"string\"\n        },\n        \"created_issue\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\"\n            },\n            \"key\": {\n              \"type\": \"string\"\n            },\n            \"number\": {\n              \"type\": \"number\"\n            },\n            \"type\": {\n              \"type\": \"string\"\n            },\n            \"url\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"reopen_rules\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"reopen_if\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"enum\": [\n                    \"n_additional_occurrences\",\n                    \"n_occurrences_in_m_hours\",\n                    \"occurs_after\"\n                  ]\n                }\n              ]\n            },\n            \"reopen_after\": {\n              \"type\": \"string\"\n            },\n            \"seconds\": {\n              \"type\": \"number\"\n            },\n            \"occurrences\": {\n              \"type\": \"number\"\n            },\n            \"hours\": {\n              \"type\": \"number\"\n            },\n            \"occurrence_threshold\": {\n              \"type\": \"number\"\n            },\n            \"additional_occurrences\": {\n              \"type\": \"number\"\n            }\n          },\n          \"required\": [\n            \"reopen_if\"\n          ]\n        },\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"enum\": [\n                \"open\",\n                \"in progress\",\n                \"for_review\",\n                \"fixed\",\n                \"snoozed\",\n                \"ignored\"\n              ]\n            }\n          ]\n        }\n      }\n    }\n  },\n  \"required\": [\n    \"operation\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "object",
                            "content": [
                              {
                                "element": "member",
                                "meta": {
                                  "description": "The type of bulk operation that was applied to the set of Errors"
                                },
                                "attributes": {
                                  "typeAttributes": [
                                    "required"
                                  ]
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "content": "operation"
                                  },
                                  "value": {
                                    "element": "enum",
                                    "content": [
                                      {
                                        "element": "string",
                                        "meta": {
                                          "description": "indicates that the Errors were set to the supplied `severity`."
                                        },
                                        "content": "overriden_severity"
                                      },
                                      {
                                        "element": "string",
                                        "meta": {
                                          "description": "indicates that the Errors were assigned to the Collaborator specified by the `assigned_collaborator_id` parameter. If the request did not specify an `assigned_collaborator_id`, this operation means that the given Errors were unassigned. Note that errors may be assigned only to users who have accepted their Bugsnag invitation and have access to the project."
                                        },
                                        "content": "assign"
                                      },
                                      {
                                        "element": "string",
                                        "meta": {
                                          "description": "indicates that a new issue was created for each Error."
                                        },
                                        "content": "create_issue"
                                      },
                                      {
                                        "element": "string",
                                        "meta": {
                                          "description": "indicates that the Errors were linked to the issue specified by the the `issue_url` parameter."
                                        },
                                        "content": "link_issue"
                                      },
                                      {
                                        "element": "string",
                                        "meta": {
                                          "description": "indicates that any of the Errors that had linked issues have been unlinked"
                                        },
                                        "content": "unlink_issue"
                                      },
                                      {
                                        "element": "string",
                                        "meta": {
                                          "description": "indicates that all of the Errors were set to open."
                                        },
                                        "content": "open"
                                      },
                                      {
                                        "element": "string",
                                        "meta": {
                                          "description": "indicates that all of the Errors were set to snoozed."
                                        },
                                        "content": "snooze"
                                      },
                                      {
                                        "element": "string",
                                        "meta": {
                                          "description": "indicates that all of the Errors were set to fixed."
                                        },
                                        "content": "fix"
                                      },
                                      {
                                        "element": "string",
                                        "meta": {
                                          "description": "indicates that all of the Errors were ignored."
                                        },
                                        "content": "ignore"
                                      },
                                      {
                                        "element": "string",
                                        "meta": {
                                          "description": "indicates that all of the Errors were deleted."
                                        },
                                        "content": "delete"
                                      },
                                      {
                                        "element": "string",
                                        "meta": {
                                          "description": "indicates that all of the Errors were discarded."
                                        },
                                        "content": "discard"
                                      },
                                      {
                                        "element": "string"
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "element": "member",
                                "meta": {
                                  "description": "The response will contain an entry with the following fields for each of the `error_ids` specified in the request. These fields show the state of each of the Errors bulk modifiable fields after the updates have been applied."
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "attributes": {
                                      "variable": true
                                    },
                                    "content": "515fb9337c1074f6fd000001"
                                  },
                                  "value": {
                                    "element": "object",
                                    "content": [
                                      {
                                        "element": "member",
                                        "meta": {
                                          "description": "The Error's assigned user."
                                        },
                                        "attributes": {
                                          "typeAttributes": [
                                            "optional"
                                          ]
                                        },
                                        "content": {
                                          "key": {
                                            "element": "string",
                                            "content": "assigned_collaborator_id"
                                          },
                                          "value": {
                                            "element": "string",
                                            "content": "515fb9337c1074f6fd000002"
                                          }
                                        }
                                      },
                                      {
                                        "element": "member",
                                        "attributes": {
                                          "typeAttributes": [
                                            "optional"
                                          ]
                                        },
                                        "content": {
                                          "key": {
                                            "element": "string",
                                            "content": "created_issue"
                                          },
                                          "value": {
                                            "element": "ErrorCreatedIssue"
                                          }
                                        }
                                      },
                                      {
                                        "element": "member",
                                        "meta": {
                                          "description": "Snooze rules for automatically reopening the Error"
                                        },
                                        "attributes": {
                                          "typeAttributes": [
                                            "optional"
                                          ]
                                        },
                                        "content": {
                                          "key": {
                                            "element": "string",
                                            "content": "reopen_rules"
                                          },
                                          "value": {
                                            "element": "ErrorReopenRules"
                                          }
                                        }
                                      },
                                      {
                                        "element": "member",
                                        "meta": {
                                          "description": "The Error's work flow status. Must be one of:"
                                        },
                                        "content": {
                                          "key": {
                                            "element": "string",
                                            "content": "status"
                                          },
                                          "value": {
                                            "element": "ErrorStatus"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Project not found\", \"User not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Project could not be found or User could not be found (when attempting to assign\nan error). Check the supplied \u003ccode>error_id\u003c/code> or the  supplied\n\u003ccode>assigned_collaborator_id\u003c/code>. It may be that the user does not have access to\nthe project that contains the error.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Delete an Error",
              "relation": "",
              "uriTemplate": "/errors/{id}",
              "description": "",
              "method": "DELETE",
              "parameters": [
                {
                  "description": "",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000003",
                  "values": [],
                  "key": "id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "204"
                    },
                    {
                      "body": "{\n\"errors\": [\"Error not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Error could not be found. Check the supplied \u003ccode>error_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Delete all Errors in a Project",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/errors",
              "description": "\u003cp>Deletes all Error and Event data in a project. Use with caution. This action cannot be reversed.\u003c/p>",
              "method": "DELETE",
              "parameters": [
                {
                  "description": "\u003cp>ID of the Project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000003",
                  "values": [],
                  "key": "project_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "204"
                    },
                    {
                      "body": "{\n\"errors\": [\"Project not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Project could not be found. Check the supplied \u003ccode>project_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            }
          ],
          "description": "\u003cp>An \u003ca href=\"https://docs.bugsnag.com/product/error-grouping/\">Error\u003c/a> is a grouping of events of the same\ncrash/exception reported to Bugsnag.\u003c/p>"
        },
        {
          "name": "Events",
          "model": {},
          "headers": {},
          "parameters": [],
          "uriTemplate": "/events",
          "actions": [
            {
              "name": "View an Event",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/events/{event_id}",
              "description": "\u003cp>Note that event objects can include custom metadata and diagnostic fields\nconfigured directly in your app or added by the notifier library. The API\npreserves the original casing and key format as received, so any casing,\nincluding both snake_case and camelCase, may be valid for some fields.\u003c/p>",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the Event\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000009",
                  "values": [],
                  "key": "event_id"
                },
                {
                  "description": "\u003cp>ID of the Project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "337515fb9c1074f6fd000001",
                  "values": [],
                  "key": "project_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"id\": \"595301a6ae48dd0018aedd61\",\n  \"is_full_report\": true,\n  \"url\": \"https://api.bugsnag.com/projects/74f6fd000001515fb9337c10/events/515fb9337c1074f6fd000001\",\n  \"project_url\": \"https://api.bugsnag.com/projects/74f6fd000001515fb9337c10\",\n  \"error_id\": \"515fb9337c1074f6fd000001\",\n  \"received_at\": \"2017-04-19T09:16:50.000Z\",\n  \"exceptions\": [\n    {\n      \"errorClass\": \"NoMethodError\",\n      \"message\": \"undefined method `foo` for nil:NilClass\",\n      \"stacktrace\": [\n        {\n          \"lineNumber\": 1234,\n          \"file\": \"controllers/users_controller.rb\",\n          \"inProject\": true,\n          \"method\": \"set_user_id\",\n          \"sourceControlName\": \"github\",\n          \"code\": {\n            \"1231\": \"\\\"  def a\\\"\",\n            \"1232\": \"\\\"\\\"\",\n            \"1233\": \"\\\"    if problem?\\\"\",\n            \"1234\": \"\\\"      raise 'something went wrong'\\\"\",\n            \"1235\": \"\\\"    end\\\"\",\n            \"1236\": \"\\\"\\\"\",\n            \"1237\": \"\\\"  end\\\"\"\n          }\n        }\n      ]\n    }\n  ],\n  \"severity\": \"error\",\n  \"unhandled\": true,\n  \"context\": \"users#show\",\n  \"app\": {\n    \"releaseStage\": \"production\"\n  },\n  \"threads\": [\n    {\n      \"id\": 1,\n      \"name\": \"main\",\n      \"stacktrace\": [\n        {\n          \"lineNumber\": 1234,\n          \"file\": \"controllers/users_controller.rb\",\n          \"inProject\": true,\n          \"method\": \"set_user_id\",\n          \"code\": {\n            \"1231\": \"\\\"  def a\\\"\",\n            \"1232\": \"\\\"\\\"\",\n            \"1233\": \"\\\"    if problem?\\\"\",\n            \"1234\": \"\\\"      raise 'something went wrong'\\\"\",\n            \"1235\": \"\\\"    end\\\"\",\n            \"1236\": \"\\\"\\\"\",\n            \"1237\": \"\\\"  end\\\"\"\n          }\n        }\n      ],\n      \"error_reporting_thread\": true\n    }\n  ],\n  \"metaData\": {},\n  \"breadcrumbs\": [\n    {\n      \"name\": \"Open menu\",\n      \"type\": \"navigation\",\n      \"timestamp\": \"2016-07-19T12:17:27.000Z\",\n      \"metaData\": {}\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"is_full_report\": {\n      \"type\": \"boolean\"\n    },\n    \"url\": {\n      \"type\": \"string\"\n    },\n    \"project_url\": {\n      \"type\": \"string\"\n    },\n    \"error_id\": {\n      \"type\": \"string\"\n    },\n    \"received_at\": {\n      \"type\": \"string\"\n    },\n    \"exceptions\": {\n      \"type\": \"array\"\n    },\n    \"severity\": {\n      \"enum\": [\n        \"info\",\n        \"warning\",\n        \"error\"\n      ]\n    },\n    \"unhandled\": {\n      \"type\": \"boolean\"\n    },\n    \"context\": {\n      \"type\": \"string\"\n    },\n    \"app\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"releaseStage\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"threads\": {\n      \"type\": \"array\"\n    },\n    \"metaData\": {\n      \"type\": \"object\"\n    },\n    \"breadcrumbs\": {\n      \"type\": \"array\"\n    }\n  }\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "EventApiView"
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Event not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Event could not be found. Check the supplied \u003ccode>event_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Delete an Event",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/events/{event_id}",
              "description": "",
              "method": "DELETE",
              "parameters": [
                {
                  "description": "",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000009",
                  "values": [],
                  "key": "event_id"
                },
                {
                  "description": "\u003cp>ID of the Project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "337515fb9c1074f6fd000001",
                  "values": [],
                  "key": "project_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "204"
                    },
                    {
                      "body": "{\n\"errors\": [\"Event not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Event could not be found. Check the supplied \u003ccode>event_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "List the Events on an Error",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/errors/{error_id}/events{?sort,direction,filters,base,full_reports}",
              "description": "\u003cp>Get a list of the events of an error. If you require a feed of all new events as they are\nreported consider setting up a\n\u003ca href=\"https://docs.bugsnag.com/product/integrations/webhook/\">webhook integration\u003c/a> instead.\u003c/p>",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the Error\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "error_id"
                },
                {
                  "description": "\u003cp>ID of the Project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "337515fb9c1074f6fd000001",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "\u003cp>Default: current time\nOnly Error Events occuring before this time will be considered.\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "",
                  "example": "2017-04-12T22:50:04Z",
                  "values": [],
                  "key": "base"
                },
                {
                  "description": "\u003cp>Which field to sort the results by\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "timestamp",
                  "example": "",
                  "values": [
                    "timestamp"
                  ],
                  "key": "sort"
                },
                {
                  "description": "\u003cp>Which direction to sort the results by\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "desc",
                  "example": "",
                  "values": [
                    "asc",
                    "desc"
                  ],
                  "key": "direction"
                },
                {
                  "description": "\u003cp>How many results to return per page, up to a maximum of \u003ccode>30\u003c/code>.\u003c/p>\n",
                  "type": "number",
                  "required": false,
                  "default": "30",
                  "example": "",
                  "values": [],
                  "key": "per_page"
                },
                {
                  "description": "\u003cp>The request may optionally provide a \u003ccode>filters\u003c/code> object. Only Errors\nmatching \u003ccode>filters\u003c/code> will be returned in the response. See \u003ca href=\"/#introduction/filtering\">Filtering\u003c/a>\nfor details.\u003c/p>\n",
                  "type": "Filters",
                  "required": false,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "filters"
                },
                {
                  "description": "\u003cp>whether to request full reports (so the response has items that match the response format of the &quot;View an Event&quot; endpoint)\u003c/p>\n",
                  "type": "boolean",
                  "required": false,
                  "default": "false",
                  "example": "",
                  "values": [],
                  "key": "full_reports"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"id\": \"595301a6ae48dd0018aedd61\",\n    \"is_full_report\": false,\n    \"url\": \"https://api.bugsnag.com/projects/74f6fd000001515fb9337c10/events/515fb9337c1074f6fd000001\",\n    \"project_url\": \"https://api.bugsnag.com/projects/74f6fd000001515fb9337c10\",\n    \"error_id\": \"515fb9337c1074f6fd000001\",\n    \"received_at\": \"2017-04-19T09:16:50.000Z\",\n    \"exceptions\": [\n      {},\n      \"error_class: NoMethodError\",\n      \"message\"\n    ],\n    \"severity\": \"error\",\n    \"unhandled\": true,\n    \"context\": \"users#show\",\n    \"app\": {\n      \"releaseStage\": \"production\"\n    }\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json",
                        "Link": "`\u003chttps://api.bugsnag.com/project/515fb9337c1074f6fd000003/errors/515fb9337c1074f6fd000001/events?offset=590bce131f7314d98eac23ba&sort=timestamp>; rel=\"next\"`",
                        "X-Total-Count": "123"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "name": "Link",
                          "value": "`\u003chttps://api.bugsnag.com/project/515fb9337c1074f6fd000003/errors/515fb9337c1074f6fd000001/events?offset=590bce131f7314d98eac23ba&sort=timestamp>; rel=\"next\"`"
                        },
                        {
                          "name": "X-Total-Count",
                          "value": "123"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "ElasticSearchEventApiView"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Error not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Error could not be found. Check the supplied \u003ccode>error_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "View the latest Event on an Error",
              "relation": "",
              "uriTemplate": "/errors/{error_id}/latest_event",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the Error\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "error_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"id\": \"595301a6ae48dd0018aedd61\",\n  \"is_full_report\": true,\n  \"url\": \"https://api.bugsnag.com/projects/74f6fd000001515fb9337c10/events/515fb9337c1074f6fd000001\",\n  \"project_url\": \"https://api.bugsnag.com/projects/74f6fd000001515fb9337c10\",\n  \"error_id\": \"515fb9337c1074f6fd000001\",\n  \"received_at\": \"2017-04-19T09:16:50.000Z\",\n  \"exceptions\": [\n    {\n      \"errorClass\": \"NoMethodError\",\n      \"message\": \"undefined method `foo` for nil:NilClass\",\n      \"stacktrace\": [\n        {\n          \"lineNumber\": 1234,\n          \"file\": \"controllers/users_controller.rb\",\n          \"inProject\": true,\n          \"method\": \"set_user_id\",\n          \"sourceControlName\": \"github\",\n          \"code\": {\n            \"1231\": \"\\\"  def a\\\"\",\n            \"1232\": \"\\\"\\\"\",\n            \"1233\": \"\\\"    if problem?\\\"\",\n            \"1234\": \"\\\"      raise 'something went wrong'\\\"\",\n            \"1235\": \"\\\"    end\\\"\",\n            \"1236\": \"\\\"\\\"\",\n            \"1237\": \"\\\"  end\\\"\"\n          }\n        }\n      ]\n    }\n  ],\n  \"severity\": \"error\",\n  \"unhandled\": true,\n  \"context\": \"users#show\",\n  \"app\": {\n    \"releaseStage\": \"production\"\n  },\n  \"threads\": [\n    {\n      \"id\": 1,\n      \"name\": \"main\",\n      \"stacktrace\": [\n        {\n          \"lineNumber\": 1234,\n          \"file\": \"controllers/users_controller.rb\",\n          \"inProject\": true,\n          \"method\": \"set_user_id\",\n          \"code\": {\n            \"1231\": \"\\\"  def a\\\"\",\n            \"1232\": \"\\\"\\\"\",\n            \"1233\": \"\\\"    if problem?\\\"\",\n            \"1234\": \"\\\"      raise 'something went wrong'\\\"\",\n            \"1235\": \"\\\"    end\\\"\",\n            \"1236\": \"\\\"\\\"\",\n            \"1237\": \"\\\"  end\\\"\"\n          }\n        }\n      ],\n      \"error_reporting_thread\": true\n    }\n  ],\n  \"metaData\": {},\n  \"breadcrumbs\": [\n    {\n      \"name\": \"Open menu\",\n      \"type\": \"navigation\",\n      \"timestamp\": \"2016-07-19T12:17:27.000Z\",\n      \"metaData\": {}\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"is_full_report\": {\n      \"type\": \"boolean\"\n    },\n    \"url\": {\n      \"type\": \"string\"\n    },\n    \"project_url\": {\n      \"type\": \"string\"\n    },\n    \"error_id\": {\n      \"type\": \"string\"\n    },\n    \"received_at\": {\n      \"type\": \"string\"\n    },\n    \"exceptions\": {\n      \"type\": \"array\"\n    },\n    \"severity\": {\n      \"enum\": [\n        \"info\",\n        \"warning\",\n        \"error\"\n      ]\n    },\n    \"unhandled\": {\n      \"type\": \"boolean\"\n    },\n    \"context\": {\n      \"type\": \"string\"\n    },\n    \"app\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"releaseStage\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"threads\": {\n      \"type\": \"array\"\n    },\n    \"metaData\": {\n      \"type\": \"object\"\n    },\n    \"breadcrumbs\": {\n      \"type\": \"array\"\n    }\n  }\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "EventApiView"
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Error not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Error could not be found. Check the supplied \u003ccode>error_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "List the Events on a Project",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/events{?sort,direction,filters,base,full_reports}",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000003",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "\u003cp>Default: current time\nOnly Error Events occurring before this time will be considered.\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "",
                  "example": "2017-04-12T22:50:04Z",
                  "values": [],
                  "key": "base"
                },
                {
                  "description": "\u003cp>Which field to sort the results by\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "timestamp",
                  "example": "",
                  "values": [
                    "timestamp"
                  ],
                  "key": "sort"
                },
                {
                  "description": "\u003cp>Which direction to sort the results by\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "desc",
                  "example": "",
                  "values": [
                    "asc",
                    "desc"
                  ],
                  "key": "direction"
                },
                {
                  "description": "\u003cp>How many results to return per page, up to a maximum of \u003ccode>30\u003c/code>.\u003c/p>\n",
                  "type": "number",
                  "required": false,
                  "default": "30",
                  "example": "",
                  "values": [],
                  "key": "per_page"
                },
                {
                  "description": "\u003cp>The request may optionally provide a \u003ccode>filters\u003c/code> object. Only Errors\nmatching \u003ccode>filters\u003c/code> will be returned in the response. See \u003ca href=\"/#introduction/filtering\">Filtering\u003c/a>\nfor details.\u003c/p>\n",
                  "type": "Filters",
                  "required": false,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "filters"
                },
                {
                  "description": "\u003cp>whether to request full reports (so the response has items that match the response format of the &quot;View an Event&quot; endpoint)\u003c/p>\n",
                  "type": "boolean",
                  "required": false,
                  "default": "false",
                  "example": "",
                  "values": [],
                  "key": "full_reports"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"id\": \"595301a6ae48dd0018aedd61\",\n    \"is_full_report\": false,\n    \"url\": \"https://api.bugsnag.com/projects/74f6fd000001515fb9337c10/events/515fb9337c1074f6fd000001\",\n    \"project_url\": \"https://api.bugsnag.com/projects/74f6fd000001515fb9337c10\",\n    \"error_id\": \"515fb9337c1074f6fd000001\",\n    \"received_at\": \"2017-04-19T09:16:50.000Z\",\n    \"exceptions\": [\n      {},\n      \"error_class: NoMethodError\",\n      \"message\"\n    ],\n    \"severity\": \"error\",\n    \"unhandled\": true,\n    \"context\": \"users#show\",\n    \"app\": {\n      \"releaseStage\": \"production\"\n    }\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json",
                        "Link": "`\u003chttps://api.bugsnag.com/projects/515fb9337c1074f6fd000003/events?offset=590bce131f7314d98eac23ba&sort=timestamp>; rel=\"next\"`",
                        "X-Total-Count": "123"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "name": "Link",
                          "value": "`\u003chttps://api.bugsnag.com/projects/515fb9337c1074f6fd000003/events?offset=590bce131f7314d98eac23ba&sort=timestamp>; rel=\"next\"`"
                        },
                        {
                          "name": "X-Total-Count",
                          "value": "123"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "ElasticSearchEventApiView"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Error not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Error could not be found. Check the supplied \u003ccode>error_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            }
          ],
          "description": "\u003cp>An Event represents a single occurrence of an \u003ca href=\"https://docs.bugsnag.com/product/error-grouping/\">Error\u003c/a>.\u003c/p>"
        },
        {
          "name": "Pivots",
          "model": {},
          "headers": {},
          "parameters": [],
          "uriTemplate": "/pivots",
          "actions": [
            {
              "name": "List Pivots on an Error",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/errors/{error_id}/pivots{?filters,pivots,summary_size,per_page}",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the Error\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "error_id"
                },
                {
                  "description": "\u003cp>ID of the Project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "337515fb9c1074f6fd000001",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "\u003cp>The cardinalities for each returned Pivot will only reflect Events that match the provided Filters.\u003c/p>\n",
                  "type": "Filters",
                  "required": false,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "filters"
                },
                {
                  "description": "\u003cp>The number of elements to include in the returned \u003ccode>summary.list\u003c/code>. The lower the value of this parameter, the greater the value of each Pivot's returned \u003ccode>other\u003c/code> count.\u003c/p>\n",
                  "type": "number",
                  "required": false,
                  "default": "",
                  "example": "10",
                  "values": [],
                  "key": "summary_size"
                },
                {
                  "description": "\u003cp>An array of EventField \u003ccode>display_id\u003c/code>s which identify Pivots, this will return results about only these Pivots.\u003c/p>\n",
                  "type": "array",
                  "required": false,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "pivots"
                },
                {
                  "description": "",
                  "type": "number",
                  "required": false,
                  "default": "30",
                  "example": "30",
                  "values": [],
                  "key": "per_page"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"event_field_display_id\": \"app.release_stage\",\n    \"name\": \"Release Stages\",\n    \"cardinality\": 2,\n    \"summary\": {\n      \"list\": [\n        {\n          \"value\": \"production\",\n          \"events\": \"34\"\n        }\n      ],\n      \"no_value\": 0,\n      \"other\": 0\n    },\n    \"average\": 1000\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json",
                        "Link": "`\u003chttps://api.bugsnag.com/projects/337515fb9c1074f6fd000001/errors/515fb9337c1074f6fd000001/pivots/?offset=2017-04-12T22:50:04Z>; rel=\"next\"`",
                        "X-Total-Count": "123"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "name": "Link",
                          "value": "`\u003chttps://api.bugsnag.com/projects/337515fb9c1074f6fd000001/errors/515fb9337c1074f6fd000001/pivots/?offset=2017-04-12T22:50:04Z>; rel=\"next\"`"
                        },
                        {
                          "name": "X-Total-Count",
                          "value": "123"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "PivotApiView"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"summary_size must be a number\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Request validation error. See \u003ccode>errors\u003c/code> for specific details.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    },
                    {
                      "body": "{\n\"errors\": [\"Error not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Error could not be found. Check the supplied \u003ccode>error_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "List values of a Pivot on an Error",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/errors/{error_id}/pivots/{event_field_display_id}/values{?filters,base,sort}",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the Error\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "error_id"
                },
                {
                  "description": "\u003cp>ID of the Project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "337515fb9c1074f6fd000001",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "\u003cp>The display ID of the EventField for which Pivot values should be returned.\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "app.release_stage",
                  "values": [],
                  "key": "event_field_display_id"
                },
                {
                  "description": "\u003cp>The values returned will only reflect Events that match the provided Filters.\u003c/p>\n",
                  "type": "Filters",
                  "required": false,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "filters"
                },
                {
                  "description": "",
                  "type": "string",
                  "required": false,
                  "default": "",
                  "example": "unsorted",
                  "values": [],
                  "key": "sort"
                },
                {
                  "description": "\u003cp>Only Events occurring before this time will be considered.\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "",
                  "example": "2017-04-12T22:50:04Z",
                  "values": [],
                  "key": "base"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"event_field_value\": \"production\",\n    \"events\": 23,\n    \"proportion\": 0.9981631153563556,\n    \"first_seen\": \"2017-04-14T03:04:49+00:00\",\n    \"last_seen\": \"2017-04-21T02:50:35+00:00\",\n    \"fields\": [\n      {\n        \"id\": \"user.name\",\n        \"name\": \"User Name\"\n      }\n    ]\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json",
                        "Link": "`\u003chttps://api.bugsnag.com/projects/337515fb9c1074f6fd000001/errors/515fb9337c1074f6fd000001/pivots/release.stage/values?offset=2017-04-12T22:50:04Z>; rel=\"next\"`",
                        "X-Total-Count": "123"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "name": "Link",
                          "value": "`\u003chttps://api.bugsnag.com/projects/337515fb9c1074f6fd000001/errors/515fb9337c1074f6fd000001/pivots/release.stage/values?offset=2017-04-12T22:50:04Z>; rel=\"next\"`"
                        },
                        {
                          "name": "X-Total-Count",
                          "value": "123"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "PivotValueApiView"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Error not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Error could not be found. Check the supplied \u003ccode>error_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    },
                    {
                      "body": "{\n\"errors\": [\"Unable to return complete results\"],\n\"code\": 60000\n}",
                      "schema": "",
                      "description": "\u003cp>Projects that have an unusually high number of Errors may be limited in the\nnumber of results that can be obtained from this endpoint. If you receive this\nerror, you may still obtain complete results by setting the &quot;sort&quot; parameter\nto &quot;unsorted&quot;.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "422"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "List Pivots on a Project",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/pivots{?filters,pivots,summary_size}",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "\u003cp>The cardinality and summary returned for each returned Pivot will only reflect Events that match the provided Filters.\u003c/p>\n",
                  "type": "Filters",
                  "required": false,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "filters"
                },
                {
                  "description": "\u003cp>The number of Pivots to return information about. 10 by default.\u003c/p>\n",
                  "type": "number",
                  "required": false,
                  "default": "",
                  "example": "10",
                  "values": [],
                  "key": "summary_size"
                },
                {
                  "description": "\u003cp>An array of Pivot ids, this will return results about only these Pivots.\u003c/p>\n",
                  "type": "array",
                  "required": false,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "pivots"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"event_field_display_id\": \"app.release_stage\",\n    \"name\": \"Release Stages\",\n    \"cardinality\": 2,\n    \"summary\": {\n      \"list\": [\n        {\n          \"value\": \"production\",\n          \"events\": \"34\"\n        }\n      ],\n      \"no_value\": 0,\n      \"other\": 0\n    },\n    \"average\": 1000\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "PivotApiView"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"summary_size must be a number\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Request validation error. See \u003ccode>errors\u003c/code> for specific details.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    },
                    {
                      "body": "{\n\"errors\": [\"Project not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Project could not be found. Check the supplied \u003ccode>project_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "List values of a Pivot on a Project",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/pivots/{event_field_display_id}/values{?filters,base,sort}",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the Project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "\u003cp>The display ID of the EventField for which Pivot values should be returned.\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "app.release_stage",
                  "values": [],
                  "key": "event_field_display_id"
                },
                {
                  "description": "\u003cp>The values returned will only reflect Events that match the provided Filters.\u003c/p>\n",
                  "type": "Filters",
                  "required": false,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "filters"
                },
                {
                  "description": "",
                  "type": "string",
                  "required": false,
                  "default": "",
                  "example": "unsorted",
                  "values": [],
                  "key": "sort"
                },
                {
                  "description": "\u003cp>Only Events occurring before this time will be considered.\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "",
                  "example": "2017-04-12T22:50:04Z",
                  "values": [],
                  "key": "base"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"event_field_value\": \"production\",\n    \"events\": 23,\n    \"proportion\": 0.9981631153563556,\n    \"first_seen\": \"2017-04-14T03:04:49+00:00\",\n    \"last_seen\": \"2017-04-21T02:50:35+00:00\",\n    \"fields\": [\n      {\n        \"id\": \"user.name\",\n        \"name\": \"User Name\"\n      }\n    ]\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json",
                        "Link": "`\u003chttps://api.bugsnag.com/projects/515fb9337c1074f6fd000001/pivots/release.stage/values?offset=2017-04-12T22:50:04>; rel=\"next\"`",
                        "X-Total-Count": "123"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "name": "Link",
                          "value": "`\u003chttps://api.bugsnag.com/projects/515fb9337c1074f6fd000001/pivots/release.stage/values?offset=2017-04-12T22:50:04>; rel=\"next\"`"
                        },
                        {
                          "name": "X-Total-Count",
                          "value": "123"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "PivotValueApiView"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Project not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Project could not be found. Check the supplied \u003ccode>project_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    },
                    {
                      "body": "{\n\"errors\": [\"Unable to return complete results\"],\n\"code\": 60000\n}",
                      "schema": "",
                      "description": "\u003cp>Projects that have an unusually high number of Errors may be limited in the\nnumber of results that can be obtained from this endpoint. If you receive this\nerror, you may still obtain complete results by setting the &quot;sort&quot; parameter\nto &quot;unsorted&quot;.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "422"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            }
          ],
          "description": "\u003cp>Pivots represent the dimensions along which groups of Projects and Errors can be\nsummarized. The values of a Pivot describe the distribution of Events across one\nof these dimensions. Pivot values can be used to answer questions like, which users\nwere most affected a particular error, or, what was the distribution of Events across\nall of a Project's Releases?\u003c/p>"
        },
        {
          "name": "Trends",
          "model": {},
          "headers": {},
          "parameters": [],
          "uriTemplate": "/trends",
          "actions": [
            {
              "name": "List the Trends for an Error (buckets)",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/errors/{error_id}/trend{?filters,buckets_count}",
              "description": "\u003cp>Counts for an Error in a given time range, suitable for drawing histograms. Will return a maximum of 50 buckets.\u003c/p>",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the error\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "error_id"
                },
                {
                  "description": "\u003cp>ID of the Project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "\u003cp>Search filters to restrict the events reported in the trend\u003c/p>\n",
                  "type": "Filters",
                  "required": false,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "filters"
                },
                {
                  "description": "\u003cp>Number of buckets to group trend data into\u003c/p>\n",
                  "type": "number",
                  "required": true,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "buckets_count"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"from\": \"2017-04-03T22:43:49Z\",\n    \"to\": \"2017-04-04T10:43:49Z\",\n    \"events_count\": 0\n  },\n  {\n    \"from\": \"2017-04-04T10:43:49Z\",\n    \"to\": \"2017-04-04T22:43:49Z\",\n    \"events_count\": 1\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "Trend1"
                              },
                              {
                                "element": "Trend2"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Buckets count must be between 1 and 50\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Returned when the number of data points required to respond to the request would exceed the maximum.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "List the Trends for an Error (resolution)",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/errors/{error_id}/trend{?filters,resolution}",
              "description": "\u003cp>Counts for an Error in a given time range, suitable for drawing histograms. Will return a maximum of 2000 data points.\u003c/p>",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the error\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "error_id"
                },
                {
                  "description": "\u003cp>ID of the Project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "\u003cp>Search filters to restrict the events reported in the trend\u003c/p>\n",
                  "type": "Filters",
                  "required": false,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "filters"
                },
                {
                  "description": "\u003cp>The trend data will be grouped so that each bucket spans the given time period\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "",
                  "values": [
                    "1m",
                    "5m",
                    "30m",
                    "2h",
                    "12h"
                  ],
                  "key": "resolution"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"from\": \"2017-04-03T22:43:49Z\",\n    \"to\": \"2017-04-04T10:43:49Z\",\n    \"events_count\": 0\n  },\n  {\n    \"from\": \"2017-04-04T10:43:49Z\",\n    \"to\": \"2017-04-04T22:43:49Z\",\n    \"events_count\": 1\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "\u003cp>When called with \u003ccode>resolution\u003c/code> param:\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "Trend1"
                              },
                              {
                                "element": "Trend2"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Too many data points requested. Please use a narrower time range or lower resolution.\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Returned when the number of data points required to respond to the request would exceed the maximum.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "List the Trends for a Project (buckets)",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/trend{?filters,buckets_count}",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "\u003cp>Search filters to restrict the events reported in the trend\u003c/p>\n",
                  "type": "Filters",
                  "required": false,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "filters"
                },
                {
                  "description": "\u003cp>Number of buckets to group trend data into\u003c/p>\n",
                  "type": "number",
                  "required": true,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "buckets_count"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"from\": \"2017-04-03T22:43:49Z\",\n    \"to\": \"2017-04-04T10:43:49Z\",\n    \"events_count\": 0\n  },\n  {\n    \"from\": \"2017-04-04T10:43:49Z\",\n    \"to\": \"2017-04-04T22:43:49Z\",\n    \"events_count\": 1\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "Trend1"
                              },
                              {
                                "element": "Trend2"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Buckets count must be between 1 and 50\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Returned when the number of data points required to respond to the request would exceed the maximum.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "List the Trends for a Project (resolution)",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/trend{?filters,buckets_count,resolution}",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "\u003cp>Search filters to restrict the events reported in the trend\u003c/p>\n",
                  "type": "Filters",
                  "required": false,
                  "default": "",
                  "example": "",
                  "values": [],
                  "key": "filters"
                },
                {
                  "description": "\u003cp>The trend data will be grouped so that each bucket spans the given time period\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "",
                  "values": [
                    "1m",
                    "5m",
                    "30m",
                    "2h",
                    "12h"
                  ],
                  "key": "resolution"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"from\": \"2017-04-03T22:43:49Z\",\n    \"to\": \"2017-04-04T10:43:49Z\",\n    \"events_count\": 0\n  },\n  {\n    \"from\": \"2017-04-04T10:43:49Z\",\n    \"to\": \"2017-04-04T22:43:49Z\",\n    \"events_count\": 1\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "Trend1"
                              },
                              {
                                "element": "Trend2"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Too many data points requested. Please use a narrower time range or lower resolution.\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Returned when the number of data points required to respond to the request would exceed the maximum.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            }
          ],
          "description": "\u003cp>A Trend shows instances of events over time, by error or project.\u003c/p>"
        }
      ]
    },
    {
      "name": "Organizations",
      "description": "",
      "resources": [
        {
          "name": "Organizations",
          "model": {},
          "headers": {},
          "parameters": [],
          "uriTemplate": "/organizations",
          "actions": [
            {
              "name": "Create an Organization",
              "relation": "",
              "uriTemplate": "/organizations",
              "description": "\u003cp>Creates a new Bugsnag organization and adds the current user to it as an admin. Requires user authentication as the initial user of the organization.\u003c/p>",
              "method": "POST",
              "parameters": [],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "object",
                            "content": [
                              {
                                "element": "member",
                                "meta": {
                                  "description": "Name of the company or organization to create"
                                },
                                "attributes": {
                                  "typeAttributes": [
                                    "required"
                                  ]
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "content": "name"
                                  },
                                  "value": {
                                    "element": "string",
                                    "content": "Acme Co."
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"name\": \"Acme Co.\",\n  \"billing_emails\": [\n    \"emily@example.com\"\n  ],\n  \"auto_upgrade\": true,\n  \"id\": \"515fb9337c1074f6fd000007\",\n  \"slug\": \"acme-co\",\n  \"creator\": {\n    \"email\": \"emily@example.com\",\n    \"id\": \"58c9b9b09ef17217f1fb8b30\",\n    \"name\": \"James Smith\"\n  },\n  \"collaborators_url\": \"https://api.bugsnag.com/organizations/515fb9337c1074f6fd000007/collaborators\",\n  \"projects_url\": \"https://api.bugsnag.com/organizations/515fb9337c1074f6fd000007/projects\",\n  \"created_at\": \"2017-04-24T22:17:13.000Z\",\n  \"updated_at\": \"2017-04-24T22:17:13.000Z\",\n  \"upgrade_url\": \"http://app.bugsnag.com/settings/acme-co/plans-billing/select-plan\"\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"billing_emails\": {\n      \"type\": \"array\"\n    },\n    \"auto_upgrade\": {\n      \"type\": \"boolean\"\n    },\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"slug\": {\n      \"type\": \"string\"\n    },\n    \"creator\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"email\": {\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"collaborators_url\": {\n      \"type\": \"string\"\n    },\n    \"projects_url\": {\n      \"type\": \"string\"\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"updated_at\": {\n      \"type\": \"string\"\n    },\n    \"upgrade_url\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"auto_upgrade\",\n    \"id\",\n    \"slug\",\n    \"created_at\",\n    \"updated_at\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "OrganizationApiView"
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Cannot create upstream billing organization\", \"SAML users cannot create organization\"]\n}",
                      "schema": "",
                      "description": "\u003cp>The request was bad. Check the errors supplied in the response.\nExamples: Heroku users and saml-authenticated users cannot create an organization\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "View an Organization",
              "relation": "",
              "uriTemplate": "/organizations/{id}",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>the ID of the organization\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"name\": \"Acme Co.\",\n  \"billing_emails\": [\n    \"emily@example.com\"\n  ],\n  \"auto_upgrade\": true,\n  \"id\": \"515fb9337c1074f6fd000007\",\n  \"slug\": \"acme-co\",\n  \"creator\": {\n    \"email\": \"emily@example.com\",\n    \"id\": \"58c9b9b09ef17217f1fb8b30\",\n    \"name\": \"James Smith\"\n  },\n  \"collaborators_url\": \"https://api.bugsnag.com/organizations/515fb9337c1074f6fd000007/collaborators\",\n  \"projects_url\": \"https://api.bugsnag.com/organizations/515fb9337c1074f6fd000007/projects\",\n  \"created_at\": \"2017-04-24T22:17:13.000Z\",\n  \"updated_at\": \"2017-04-24T22:17:13.000Z\",\n  \"upgrade_url\": \"http://app.bugsnag.com/settings/acme-co/plans-billing/select-plan\"\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"billing_emails\": {\n      \"type\": \"array\"\n    },\n    \"auto_upgrade\": {\n      \"type\": \"boolean\"\n    },\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"slug\": {\n      \"type\": \"string\"\n    },\n    \"creator\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"email\": {\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"collaborators_url\": {\n      \"type\": \"string\"\n    },\n    \"projects_url\": {\n      \"type\": \"string\"\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"updated_at\": {\n      \"type\": \"string\"\n    },\n    \"upgrade_url\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"auto_upgrade\",\n    \"id\",\n    \"slug\",\n    \"created_at\",\n    \"updated_at\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "OrganizationApiView"
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Organization not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>An organization with the ID you provided could not be found.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Update an Organization",
              "relation": "",
              "uriTemplate": "/organizations/{id}",
              "description": "",
              "method": "PATCH",
              "parameters": [
                {
                  "description": "\u003cp>the ID of the organization\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "OrganizationUpdateRequest"
                          }
                        ]
                      },
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"name\": \"Acme Co.\",\n  \"billing_emails\": [\n    \"emily@example.com\"\n  ],\n  \"auto_upgrade\": true,\n  \"id\": \"515fb9337c1074f6fd000007\",\n  \"slug\": \"acme-co\",\n  \"creator\": {\n    \"email\": \"emily@example.com\",\n    \"id\": \"58c9b9b09ef17217f1fb8b30\",\n    \"name\": \"James Smith\"\n  },\n  \"collaborators_url\": \"https://api.bugsnag.com/organizations/515fb9337c1074f6fd000007/collaborators\",\n  \"projects_url\": \"https://api.bugsnag.com/organizations/515fb9337c1074f6fd000007/projects\",\n  \"created_at\": \"2017-04-24T22:17:13.000Z\",\n  \"updated_at\": \"2017-04-24T22:17:13.000Z\",\n  \"upgrade_url\": \"http://app.bugsnag.com/settings/acme-co/plans-billing/select-plan\"\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"billing_emails\": {\n      \"type\": \"array\"\n    },\n    \"auto_upgrade\": {\n      \"type\": \"boolean\"\n    },\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"slug\": {\n      \"type\": \"string\"\n    },\n    \"creator\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"email\": {\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"collaborators_url\": {\n      \"type\": \"string\"\n    },\n    \"projects_url\": {\n      \"type\": \"string\"\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"updated_at\": {\n      \"type\": \"string\"\n    },\n    \"upgrade_url\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"auto_upgrade\",\n    \"id\",\n    \"slug\",\n    \"created_at\",\n    \"updated_at\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "OrganizationApiView"
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"cannot update upstream billing organization\"]\n}",
                      "schema": "",
                      "description": "\u003cp>This Organization type cannot be updated via the API. Example: Heroku organizations.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    },
                    {
                      "body": "{\n\"errors\": [\"Requires organization admin\"]\n}",
                      "schema": "",
                      "description": "\u003cp>You do not have permission to update the organization.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "403"
                    },
                    {
                      "body": "{\n\"errors\": [\"Organization not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>An organization with the ID you provided could not be found.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Delete an Organization",
              "relation": "",
              "uriTemplate": "/organizations/{id}",
              "description": "",
              "method": "DELETE",
              "parameters": [
                {
                  "description": "\u003cp>ID of the organization\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "204"
                    },
                    {
                      "body": "{\n\"errors\": [\"cannot delete upstream billing organization\"]\n}",
                      "schema": "",
                      "description": "\u003cp>This Organization cannot be deleted via the API. (e.g. Heroku organizations)\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    },
                    {
                      "body": "{\n\"errors\": [\"Requires organization admin\"]\n}",
                      "schema": "",
                      "description": "\u003cp>You do not have permission to delete this Organization. You need to be an admin.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "403"
                    },
                    {
                      "body": "{\n\"errors\": [\"Organization not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>An organization with the ID you provided could not be found.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Get an overview of the Projects on an Organization",
              "relation": "",
              "uriTemplate": "/organizations{id}/project_overviews{?project_ids}",
              "description": "\u003cp>Gets an overview of specific projects on the organization.\u003c/p>",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the organization\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "id"
                },
                {
                  "description": "\u003cp>IDs of the projects to get overviews for, up to a maximum of 50.\u003c/p>\n",
                  "type": "array[string]",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "project_ids"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"project_id\": \"515fb9337c1074f6fd000001\",\n    \"for_review\": {\n      \"one_week_ago\": 13,\n      \"current\": 4\n    },\n    \"release_stage_name\": \"production\",\n    \"latest_release\": {\n      \"release_group_id\": \"515fb9337c1074f6fd000001\",\n      \"app_version\": \"1.3\",\n      \"first_release_time\": \"2020-04-07T21:48:30.046Z\"\n    }\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "ProjectOverviewApiView"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Project not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Project not found\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    },
                    {
                      "body": "{\n\"errors\": [\"project_ids must be an array\"]\n}",
                      "schema": "",
                      "description": "\u003cp>project_ids parameter supplied incorrectly\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    },
                    {
                      "body": "{\n\"errors\": [\"Project ids is limited to 50 projects\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Too many project_ids supplied\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Get an overview of session data for Projects on an Organization",
              "relation": "",
              "uriTemplate": "/organizations{id}/project_session_overviews{?project_ids}",
              "description": "\u003cp>Gets an overview of session timeline data for projects on the organization.\u003c/p>",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the organization\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "id"
                },
                {
                  "description": "\u003cp>IDs of the projects to get overviews for, up to a maximum of 50.\u003c/p>\n",
                  "type": "array[string]",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "project_ids"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"project_id\": \"515fb9337c1074f6fd000001\",\n    \"stability_score\": {\n      \"sessions_started\": 200,\n      \"sessions_with_unhandled\": 40,\n      \"unhandled_rate\": \"0.2\"\n    },\n    \"session_timeline\": [\n      {\n        \"bucket_start\": \"2019-03-02T00:00:00.000Z\",\n        \"bucket_end\": \"2019-03-03T00:00:00.000Z\",\n        \"total_sessions_count\": 10000,\n        \"unhandled_sessions_count\": 20,\n        \"unhandled_rate\": 0.002\n      }\n    ]\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "ProjectSessionOverviewApiView"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Account requires session-tracking feature\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Organization does not have session tracking enabled\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "403"
                    },
                    {
                      "body": "{\n\"errors\": [\"Project not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Project not found\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    },
                    {
                      "body": "{\n\"errors\": [\"project_ids must be an array\"]\n}",
                      "schema": "",
                      "description": "\u003cp>project_ids parameter supplied incorrectly\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    },
                    {
                      "body": "{\n\"errors\": [\"Project ids is limited to 50 projects\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Too many project_ids supplied\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Regenerate an Organization's auth token",
              "relation": "",
              "uriTemplate": "/organizations/{id}/auth_token",
              "description": "\u003cp>Deprecated. Use \u003ca href=\"/#introduction/authentication\">user-level authentication tokens\u003c/a> instead.\nGenerate a new data access API auth token for the organization. This token\nallows you to read data from and write data to Bugsnag relating to your\nOrganization, Projects, Errors, etc. After regenerating the auth token, the\nprior data access API auth token will no longer be supported. Note that this\nkey is different from the project-level notifier API key that you use to\nidentify a project to Bugsnag when you report errors.\u003c/p>",
              "method": "DELETE",
              "parameters": [
                {
                  "description": "\u003cp>ID of the organization\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"name\": \"Acme Co.\",\n  \"billing_emails\": [\n    \"emily@example.com\"\n  ],\n  \"auto_upgrade\": true,\n  \"id\": \"515fb9337c1074f6fd000007\",\n  \"slug\": \"acme-co\",\n  \"creator\": {\n    \"email\": \"emily@example.com\",\n    \"id\": \"58c9b9b09ef17217f1fb8b30\",\n    \"name\": \"James Smith\"\n  },\n  \"collaborators_url\": \"https://api.bugsnag.com/organizations/515fb9337c1074f6fd000007/collaborators\",\n  \"projects_url\": \"https://api.bugsnag.com/organizations/515fb9337c1074f6fd000007/projects\",\n  \"created_at\": \"2017-04-24T22:17:13.000Z\",\n  \"updated_at\": \"2017-04-24T22:17:13.000Z\",\n  \"upgrade_url\": \"http://app.bugsnag.com/settings/acme-co/plans-billing/select-plan\"\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"billing_emails\": {\n      \"type\": \"array\"\n    },\n    \"auto_upgrade\": {\n      \"type\": \"boolean\"\n    },\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"slug\": {\n      \"type\": \"string\"\n    },\n    \"creator\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"email\": {\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"collaborators_url\": {\n      \"type\": \"string\"\n    },\n    \"projects_url\": {\n      \"type\": \"string\"\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"updated_at\": {\n      \"type\": \"string\"\n    },\n    \"upgrade_url\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"auto_upgrade\",\n    \"id\",\n    \"slug\",\n    \"created_at\",\n    \"updated_at\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "OrganizationApiView"
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Requires organization admin\"]\n}",
                      "schema": "",
                      "description": "\u003cp>You do not have permission to regenerate the token. You need to be an admin.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "403"
                    },
                    {
                      "body": "{\n\"errors\": [\"Organization not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>An organization with the ID you provided could not be found.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            }
          ],
          "description": "\u003cp>An Organization is a collection of Bugsnag projects owned by a company, group, or individual.\u003c/p>"
        },
        {
          "name": "Collaborators",
          "model": {},
          "headers": {},
          "parameters": [],
          "uriTemplate": "/collaborators",
          "actions": [
            {
              "name": "Show a Collaborator on an Organization",
              "relation": "",
              "uriTemplate": "/organizations/{organization_id}/collaborators/{id}",
              "description": "\u003cp>Show a collaborator within an organization. Requires requesting user to be an organization admin.\u003c/p>",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the organization\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "organization_id"
                },
                {
                  "description": "\u003cp>the ID of the collaborator\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"id\": \"515fb9337c1074f6fd000007\",\n  \"name\": \"James Smith\",\n  \"email\": \"james@example.com\",\n  \"two_factor_enabled\": true,\n  \"two_factor_enabled_on\": \"2017-04-04T22:43:49Z\",\n  \"recovery_codes_remaining\": 2,\n  \"password_updated_on\": \"2017-04-04T22:43:49Z\",\n  \"show_time_in_utc\": true,\n  \"heroku\": false,\n  \"created_at\": \"2018-02-01T22:31:26.696Z\",\n  \"is_admin\": true,\n  \"pending_invitation\": true,\n  \"last_request_at\": \"2017-04-04T22:43:49Z\",\n  \"project_ids\": [\n    \"515fb9337c1074f6fd000001\"\n  ],\n  \"paid_for\": true\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"email\": {\n      \"type\": \"string\"\n    },\n    \"two_factor_enabled\": {\n      \"type\": \"boolean\"\n    },\n    \"two_factor_enabled_on\": {\n      \"type\": \"string\"\n    },\n    \"recovery_codes_remaining\": {\n      \"type\": \"number\"\n    },\n    \"password_updated_on\": {\n      \"type\": \"string\"\n    },\n    \"show_time_in_utc\": {\n      \"type\": \"boolean\"\n    },\n    \"heroku\": {\n      \"type\": \"boolean\"\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"is_admin\": {\n      \"type\": \"boolean\"\n    },\n    \"pending_invitation\": {\n      \"type\": \"boolean\"\n    },\n    \"last_request_at\": {\n      \"type\": \"string\"\n    },\n    \"project_ids\": {\n      \"type\": \"array\"\n    },\n    \"paid_for\": {\n      \"type\": \"boolean\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"email\",\n    \"two_factor_enabled\",\n    \"show_time_in_utc\",\n    \"heroku\",\n    \"created_at\",\n    \"is_admin\",\n    \"pending_invitation\",\n    \"project_ids\",\n    \"paid_for\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "CollaboratorApiView"
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Requires organization admin\"]\n}",
                      "schema": "",
                      "description": "\u003cp>You do not have permission to view this data. You must be an admin of the Organization.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "403"
                    },
                    {
                      "body": "{\n\"errors\": [\"Organization not found\", \"User not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>An organization with the ID you provided or a user with the ID you provided could not be found\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Show Collaborator on a Project",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/collaborators/{id}",
              "description": "\u003cp>Show a collaborator in a project. Requires requesting user to have access to the given project.\u003c/p>",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>the ID of the project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "\u003cp>the ID of the collaborator\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"id\": \"515fb9337c1074f6fd000007\",\n  \"name\": \"James Smith\",\n  \"email\": \"james@example.com\",\n  \"two_factor_enabled\": true,\n  \"two_factor_enabled_on\": \"2017-04-04T22:43:49Z\",\n  \"recovery_codes_remaining\": 2,\n  \"password_updated_on\": \"2017-04-04T22:43:49Z\",\n  \"show_time_in_utc\": true,\n  \"heroku\": false,\n  \"created_at\": \"2018-02-01T22:31:26.696Z\",\n  \"is_admin\": true,\n  \"pending_invitation\": true,\n  \"last_request_at\": \"2017-04-04T22:43:49Z\",\n  \"project_ids\": [\n    \"515fb9337c1074f6fd000001\"\n  ],\n  \"paid_for\": true\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"email\": {\n      \"type\": \"string\"\n    },\n    \"two_factor_enabled\": {\n      \"type\": \"boolean\"\n    },\n    \"two_factor_enabled_on\": {\n      \"type\": \"string\"\n    },\n    \"recovery_codes_remaining\": {\n      \"type\": \"number\"\n    },\n    \"password_updated_on\": {\n      \"type\": \"string\"\n    },\n    \"show_time_in_utc\": {\n      \"type\": \"boolean\"\n    },\n    \"heroku\": {\n      \"type\": \"boolean\"\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"is_admin\": {\n      \"type\": \"boolean\"\n    },\n    \"pending_invitation\": {\n      \"type\": \"boolean\"\n    },\n    \"last_request_at\": {\n      \"type\": \"string\"\n    },\n    \"project_ids\": {\n      \"type\": \"array\"\n    },\n    \"paid_for\": {\n      \"type\": \"boolean\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"email\",\n    \"two_factor_enabled\",\n    \"show_time_in_utc\",\n    \"heroku\",\n    \"created_at\",\n    \"is_admin\",\n    \"pending_invitation\",\n    \"project_ids\",\n    \"paid_for\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "CollaboratorApiView"
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Project not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>A project with the ID you provided could not be found, or you do not have access\nto the project.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    },
                    {
                      "body": "{\n\"errors\": [\"User not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>A collaborator with the ID you provided could not be found, or they do not have access to the project.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "List Collaborators",
              "relation": "",
              "uriTemplate": "/organizations/{organization_id}/collaborators{?per_page}",
              "description": "\u003cp>List all collaborators that are members of your organization.\u003c/p>",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>the ID of your organization\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "organization_id"
                },
                {
                  "description": "",
                  "type": "number",
                  "required": false,
                  "default": "30",
                  "example": "10",
                  "values": [],
                  "key": "per_page"
                },
                {
                  "description": "\u003cp>Search collaborators with names or emails matching parameter\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "",
                  "example": "Marco",
                  "values": [],
                  "key": "q"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"id\": \"515fb9337c1074f6fd000007\",\n    \"name\": \"James Smith\",\n    \"email\": \"james@example.com\",\n    \"two_factor_enabled\": true,\n    \"two_factor_enabled_on\": \"2017-04-04T22:43:49Z\",\n    \"recovery_codes_remaining\": 2,\n    \"password_updated_on\": \"2017-04-04T22:43:49Z\",\n    \"show_time_in_utc\": true,\n    \"heroku\": false,\n    \"created_at\": \"2018-02-01T22:31:26.696Z\",\n    \"is_admin\": true,\n    \"pending_invitation\": true,\n    \"last_request_at\": \"2017-04-04T22:43:49Z\",\n    \"project_ids\": [\n      \"515fb9337c1074f6fd000001\"\n    ],\n    \"paid_for\": true\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json",
                        "Link": "`\u003chttps://api.bugsnag.com/organizations/515fb9337c1074f6fd000001/collaborators?offset=517c41f07c1074aee9000002>; rel=\"next\"`",
                        "X-Total-Count": "34"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "name": "Link",
                          "value": "`\u003chttps://api.bugsnag.com/organizations/515fb9337c1074f6fd000001/collaborators?offset=517c41f07c1074aee9000002>; rel=\"next\"`"
                        },
                        {
                          "name": "X-Total-Count",
                          "value": "34"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "CollaboratorApiView"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Requires organization admin\"]\n}",
                      "schema": "",
                      "description": "\u003cp>You do not have permission to view this data. You must be an admin of the Organization.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "403"
                    },
                    {
                      "body": "{\n\"errors\": [\"Organization not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>An organization with the ID you provided could not be found\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Create a Collaborator",
              "relation": "",
              "uriTemplate": "/organizations/{organization_id}/collaborators",
              "description": "\u003cp>This endpoint is used to invite a collaborator to your Bugsnag organization. If\nthe user has already been invited, this endpoint can be used to resend their\ninvitation.\u003c/p>",
              "method": "POST",
              "parameters": [
                {
                  "description": "\u003cp>the ID of your organization\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "organization_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "object",
                            "content": [
                              {
                                "element": "member",
                                "meta": {
                                  "description": "The email of the person to invite"
                                },
                                "attributes": {
                                  "typeAttributes": [
                                    "required"
                                  ]
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "content": "email"
                                  },
                                  "value": {
                                    "element": "string",
                                    "content": "jane@example.com"
                                  }
                                }
                              },
                              {
                                "element": "member",
                                "meta": {
                                  "description": "A name for the invited user"
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "content": "name"
                                  },
                                  "value": {
                                    "element": "string",
                                    "content": "Jane Smith"
                                  }
                                }
                              },
                              {
                                "element": "member",
                                "meta": {
                                  "description": "A password for the invited user"
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "content": "password"
                                  },
                                  "value": {
                                    "element": "string",
                                    "content": "v3rys3curep4ssw0rd"
                                  }
                                }
                              },
                              {
                                "element": "member",
                                "meta": {
                                  "description": "The ids of projects in the current organization that the invited user should have access to. Leave blank if the `admin` field is set to true. Admins have access to all projects."
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "content": "project_ids"
                                  },
                                  "value": {
                                    "element": "array",
                                    "content": [
                                      {
                                        "element": "string",
                                        "content": "590270d39ef172ad693e05b1"
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "element": "member",
                                "meta": {
                                  "description": "Whether to give admin permissions to the invited user."
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "content": "admin"
                                  },
                                  "value": {
                                    "element": "boolean",
                                    "content": false
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"id\": \"515fb9337c1074f6fd000007\",\n  \"name\": \"James Smith\",\n  \"email\": \"james@example.com\",\n  \"two_factor_enabled\": true,\n  \"two_factor_enabled_on\": \"2017-04-04T22:43:49Z\",\n  \"recovery_codes_remaining\": 2,\n  \"password_updated_on\": \"2017-04-04T22:43:49Z\",\n  \"show_time_in_utc\": true,\n  \"heroku\": false,\n  \"created_at\": \"2018-02-01T22:31:26.696Z\",\n  \"is_admin\": true,\n  \"pending_invitation\": true,\n  \"last_request_at\": \"2017-04-04T22:43:49Z\",\n  \"project_ids\": [\n    \"515fb9337c1074f6fd000001\"\n  ],\n  \"paid_for\": true\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"email\": {\n      \"type\": \"string\"\n    },\n    \"two_factor_enabled\": {\n      \"type\": \"boolean\"\n    },\n    \"two_factor_enabled_on\": {\n      \"type\": \"string\"\n    },\n    \"recovery_codes_remaining\": {\n      \"type\": \"number\"\n    },\n    \"password_updated_on\": {\n      \"type\": \"string\"\n    },\n    \"show_time_in_utc\": {\n      \"type\": \"boolean\"\n    },\n    \"heroku\": {\n      \"type\": \"boolean\"\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"is_admin\": {\n      \"type\": \"boolean\"\n    },\n    \"pending_invitation\": {\n      \"type\": \"boolean\"\n    },\n    \"last_request_at\": {\n      \"type\": \"string\"\n    },\n    \"project_ids\": {\n      \"type\": \"array\"\n    },\n    \"paid_for\": {\n      \"type\": \"boolean\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"email\",\n    \"two_factor_enabled\",\n    \"show_time_in_utc\",\n    \"heroku\",\n    \"created_at\",\n    \"is_admin\",\n    \"pending_invitation\",\n    \"project_ids\",\n    \"paid_for\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "CollaboratorApiView"
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Password parameter is not permitted if only SAML logins are allowed\"]\n}",
                      "schema": "",
                      "description": "\u003cp>The request was invalid. This may be because your organization's configuration\nprevents adding additional collaborators via email/password, e.g. for\norganizations that only allow login via SAML.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    },
                    {
                      "body": "{\n\"errors\": [\"You have reached your plan's collaborator limit of 30\", \"Requires organization admin\"]\n}",
                      "schema": "",
                      "description": "\u003cp>You do not have permission to invite additional collaborators. It may be\nbecause your plan is at its seat limit and you need to upgrade your plan to\nadd more collaborators, or you are not an admin on the Organization.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "403"
                    },
                    {
                      "body": "{\n\"errors\": [\"Organization not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>An organization with the ID you provided could not be found\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Bulk invite Collaborators",
              "relation": "",
              "uriTemplate": "/organizations/{organization_id}/collaborators/bulk_invite",
              "description": "\u003cp>This endpoint is used to invite multiple collaborator to your Bugsnag\norganization at once. If a collaborator has already been invited but has not\naccepted, this action will resend their invitation.\u003c/p>",
              "method": "POST",
              "parameters": [
                {
                  "description": "\u003cp>the ID of your organization\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "organization_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "object",
                            "content": [
                              {
                                "element": "member",
                                "meta": {
                                  "description": "A list of emails to invite"
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "content": "emails"
                                  },
                                  "value": {
                                    "element": "array",
                                    "content": [
                                      {
                                        "element": "string",
                                        "content": "jane@example.com"
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "element": "member",
                                "meta": {
                                  "description": "The ids of projects in the current organization that the invited users should have access to. Leave blank if the `admin` field is set to true. Admins have access to all projects."
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "content": "project_ids"
                                  },
                                  "value": {
                                    "element": "array",
                                    "content": [
                                      {
                                        "element": "string",
                                        "content": "590270d39ef172ad693e05b1"
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "element": "member",
                                "meta": {
                                  "description": "Whether to give admin permissions to the invited user(s)."
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "content": "admin"
                                  },
                                  "value": {
                                    "element": "boolean",
                                    "content": false
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"id\": \"515fb9337c1074f6fd000007\",\n    \"name\": \"James Smith\",\n    \"email\": \"james@example.com\",\n    \"two_factor_enabled\": true,\n    \"two_factor_enabled_on\": \"2017-04-04T22:43:49Z\",\n    \"recovery_codes_remaining\": 2,\n    \"password_updated_on\": \"2017-04-04T22:43:49Z\",\n    \"show_time_in_utc\": true,\n    \"heroku\": false,\n    \"created_at\": \"2018-02-01T22:31:26.696Z\",\n    \"is_admin\": true,\n    \"pending_invitation\": true,\n    \"last_request_at\": \"2017-04-04T22:43:49Z\",\n    \"project_ids\": [\n      \"515fb9337c1074f6fd000001\"\n    ],\n    \"paid_for\": true\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "CollaboratorApiView"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Cannot add collaborators to SAML organization\", \"Bulk operation does not support 'name' parameter\"]\n}",
                      "schema": "",
                      "description": "\u003cp>The request was invalid. This may be because your organization's configuration\nprevents adding additional collaborators via email/password, e.g. for\norganizations that only allow login via SAML. Or you may have provided a field\nthat is not valid when combined with other fields in your request. For example,\nyou may not send the \u003ccode>name\u003c/code> or \u003ccode>password\u003c/code> fields when bulk inviting.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    },
                    {
                      "body": "{\n\"errors\": [\"You have reached your plan's collaborator limit of 30\", \"Requires organization admin\"]\n}",
                      "schema": "",
                      "description": "\u003cp>You do not have permission to invite additional collaborators. It may be\nbecause your plan is at its seat limit and you need to upgrade your plan to\nadd more collaborators, or you are not an admin on the Organization.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "403"
                    },
                    {
                      "body": "{\n\"errors\": [\"Organization not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>An organization with the ID you provided could not be found\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Update a Collaborator's permissions",
              "relation": "",
              "uriTemplate": "/organizations/{organization_id}/collaborators/{id}",
              "description": "",
              "method": "PATCH",
              "parameters": [
                {
                  "description": "\u003cp>the ID of your organization\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "organization_id"
                },
                {
                  "description": "\u003cp>the ID of the collaborator to update\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "590270d39ef172ad693e05b1",
                  "values": [],
                  "key": "id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "object",
                            "content": [
                              {
                                "element": "member",
                                "meta": {
                                  "description": "The ids of projects in the current organization that this user should have access to. Leave blank if the `admin` field is set to true. Admins have access to all projects."
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "content": "project_ids"
                                  },
                                  "value": {
                                    "element": "array",
                                    "content": [
                                      {
                                        "element": "string",
                                        "content": "590270d39ef172ad693e05b1"
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "element": "member",
                                "meta": {
                                  "description": "Whether to give admin permissions to the user."
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "content": "admin"
                                  },
                                  "value": {
                                    "element": "boolean",
                                    "content": false
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"id\": \"515fb9337c1074f6fd000007\",\n  \"name\": \"James Smith\",\n  \"email\": \"james@example.com\",\n  \"two_factor_enabled\": true,\n  \"two_factor_enabled_on\": \"2017-04-04T22:43:49Z\",\n  \"recovery_codes_remaining\": 2,\n  \"password_updated_on\": \"2017-04-04T22:43:49Z\",\n  \"show_time_in_utc\": true,\n  \"heroku\": false,\n  \"created_at\": \"2018-02-01T22:31:26.696Z\",\n  \"is_admin\": true,\n  \"pending_invitation\": true,\n  \"last_request_at\": \"2017-04-04T22:43:49Z\",\n  \"project_ids\": [\n    \"515fb9337c1074f6fd000001\"\n  ],\n  \"paid_for\": true\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"email\": {\n      \"type\": \"string\"\n    },\n    \"two_factor_enabled\": {\n      \"type\": \"boolean\"\n    },\n    \"two_factor_enabled_on\": {\n      \"type\": \"string\"\n    },\n    \"recovery_codes_remaining\": {\n      \"type\": \"number\"\n    },\n    \"password_updated_on\": {\n      \"type\": \"string\"\n    },\n    \"show_time_in_utc\": {\n      \"type\": \"boolean\"\n    },\n    \"heroku\": {\n      \"type\": \"boolean\"\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"is_admin\": {\n      \"type\": \"boolean\"\n    },\n    \"pending_invitation\": {\n      \"type\": \"boolean\"\n    },\n    \"last_request_at\": {\n      \"type\": \"string\"\n    },\n    \"project_ids\": {\n      \"type\": \"array\"\n    },\n    \"paid_for\": {\n      \"type\": \"boolean\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"email\",\n    \"two_factor_enabled\",\n    \"show_time_in_utc\",\n    \"heroku\",\n    \"created_at\",\n    \"is_admin\",\n    \"pending_invitation\",\n    \"project_ids\",\n    \"paid_for\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "CollaboratorApiView"
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Cannot update upstream billing collaborator\"]\n}",
                      "schema": "",
                      "description": "\u003cp>The request was invalid. This may be because the fields provided are not valid\nfor that user, or because the particular type of user cannot be updated via\nthe API. For example, Heroku SSO users cannot be changed via the API.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    },
                    {
                      "body": "{\n\"errors\": [\"Requires organization admin\"]\n}",
                      "schema": "",
                      "description": "\u003cp>You do not have permission to update collaborators. You need to be an admin on the Organization.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "403"
                    },
                    {
                      "body": "{\n\"errors\": [\"Organization not found\", \"User not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>An organization with the ID you provided or a user with the ID you provided could not be found\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Delete a Collaborator",
              "relation": "",
              "uriTemplate": "/organizations/{organization_id}/collaborators/{id}",
              "description": "",
              "method": "DELETE",
              "parameters": [
                {
                  "description": "\u003cp>the ID of your organization\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "organization_id"
                },
                {
                  "description": "\u003cp>the ID of the collaborator to update\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "590270d39ef172ad693e05b1",
                  "values": [],
                  "key": "id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "204"
                    },
                    {
                      "body": "{\n\"errors\": [\"Cannot remove last admin\"]\n}",
                      "schema": "",
                      "description": "\u003cp>The request was invalid. This may be because the particular type of user\ncannot be destroyed via the API. For example, Heroku SSO users cannot be\nchanged via the API. It is also not possible to remove the last admin from\nan organization. You must promote another user to admin first or delete\nthe organization entirely.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    },
                    {
                      "body": "{\n\"errors\": [\"Requires organization admin\"]\n}",
                      "schema": "",
                      "description": "\u003cp>You do not have permission to update collaborators. You need to be an admin on the Organization.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "403"
                    },
                    {
                      "body": "{\n\"errors\": [\"Organization not found\", \"User not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>An organization with the ID you provided or a user with the ID you provided could not be found\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "List Collaborators on a Project",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/collaborators{?per_page}",
              "description": "\u003cp>List all collaborators that have access to a project.\u003c/p>",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>the ID of the project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "",
                  "type": "number",
                  "required": false,
                  "default": "30",
                  "example": "10",
                  "values": [],
                  "key": "per_page"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"id\": \"515fb9337c1074f6fd000007\",\n    \"name\": \"James Smith\",\n    \"email\": \"james@example.com\",\n    \"two_factor_enabled\": true,\n    \"two_factor_enabled_on\": \"2017-04-04T22:43:49Z\",\n    \"recovery_codes_remaining\": 2,\n    \"password_updated_on\": \"2017-04-04T22:43:49Z\",\n    \"show_time_in_utc\": true,\n    \"heroku\": false,\n    \"created_at\": \"2018-02-01T22:31:26.696Z\",\n    \"is_admin\": true,\n    \"pending_invitation\": true,\n    \"last_request_at\": \"2017-04-04T22:43:49Z\",\n    \"project_ids\": [\n      \"515fb9337c1074f6fd000001\"\n    ],\n    \"paid_for\": true\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json",
                        "Link": "`\u003chttps://api.bugsnag.com/projects/515fb9337c1074f6fd000001/collaborators?offset=517c41f07c1074aee9000002>; rel=\"next\"`",
                        "X-Total-Count": "34"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "name": "Link",
                          "value": "`\u003chttps://api.bugsnag.com/projects/515fb9337c1074f6fd000001/collaborators?offset=517c41f07c1074aee9000002>; rel=\"next\"`"
                        },
                        {
                          "name": "X-Total-Count",
                          "value": "34"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "CollaboratorApiView"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Project not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>A project with the ID you provided could not be found, or you do not have access\nto the project.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "View Projects a Collaborator has access to",
              "relation": "",
              "uriTemplate": "/organizations/{organization_id}/collaborators/{collaborator_id}/projects{?sort,direction,per_page}",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>the ID of the organization\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "organization_id"
                },
                {
                  "description": "\u003cp>the ID of the user\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "590270d39ef172ad693e05b1",
                  "values": [],
                  "key": "collaborator_id"
                },
                {
                  "description": "\u003cp>Search projects with names matching parameter\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "",
                  "example": "MyProject",
                  "values": [],
                  "key": "q"
                },
                {
                  "description": "\u003cp>Which field to sort the results by\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "created_at",
                  "example": "",
                  "values": [
                    "created_at"
                  ],
                  "key": "sort"
                },
                {
                  "description": "\u003cp>Which direction to sort the results by\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "desc",
                  "example": "",
                  "values": [
                    "asc",
                    "desc"
                  ],
                  "key": "direction"
                },
                {
                  "description": "\u003cp>How many results to return per page\u003c/p>\n",
                  "type": "number",
                  "required": false,
                  "default": "30",
                  "example": "",
                  "values": [],
                  "key": "per_page"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"name\": \"Example Project\",\n    \"global_grouping\": [\n      \"Redis::CannotConnectError\",\n      \"Mongo::Error:SocketError\"\n    ],\n    \"location_grouping\": [\n      \"Timeout::Error\"\n    ],\n    \"discarded_app_versions\": [\n      \"alpha\",\n      \"\u003c 2.2.2\",\n      \"3.0.0\"\n    ],\n    \"discarded_errors\": [\n      \"Example::Error\"\n    ],\n    \"url_whitelist\": [\n      \"example.com\"\n    ],\n    \"ignore_old_browsers\": true,\n    \"ignored_browser_versions\": {},\n    \"resolve_on_deploy\": true,\n    \"id\": \"515fb9337c1074f6fd000003\",\n    \"slug\": \"example-project\",\n    \"api_key\": \"deadbeef1234deadbeef1234deadbeef\",\n    \"is_full_view\": true,\n    \"release_stages\": [\n      \"staging\",\n      \"production\"\n    ],\n    \"language\": \"ruby\",\n    \"created_at\": \"2017-03-02T05:55:55.555Z\",\n    \"updated_at\": \"2017-03-03T05:55:55.555Z\",\n    \"url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003\",\n    \"html_url\": \"https://app.bugsnag.com/example-account/example-project\",\n    \"errors_url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003/errors\",\n    \"events_url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003/events\",\n    \"open_error_count\": 10,\n    \"for_review_error_count\": 5,\n    \"collaborators_count\": 15,\n    \"custom_event_fields_used\": 5\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json",
                        "Link": "\u003chttps://api.bugsnag.com/organizations/515fb9337c1074f6fd000001/collaborators/515fb9337c74f6fd00000100/projects?offset=517c41f07c1074aee9000002>; rel=\"next\"",
                        "X-Total-Count": "123"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "name": "Link",
                          "value": "\u003chttps://api.bugsnag.com/organizations/515fb9337c1074f6fd000001/collaborators/515fb9337c74f6fd00000100/projects?offset=517c41f07c1074aee9000002>; rel=\"next\""
                        },
                        {
                          "name": "X-Total-Count",
                          "value": "123"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "ProjectApiView"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Requires organization admin\"]\n}",
                      "schema": "",
                      "description": "\u003cp>You do not have permission to view a collaborator's project access. You need\nto be an admin on the Organization.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "403"
                    },
                    {
                      "body": "{\n\"errors\": [\"Organization not found\", \"User not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>An organization with the ID you provided or a user with the ID you provided could not be found.\nto the project.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            }
          ],
          "description": "\u003cp>Collaborators are other users in your Bugsnag organization who collaborate on fixing errors\nthat have been reported.\u003c/p>"
        },
        {
          "name": "Event data requests",
          "model": {},
          "headers": {},
          "parameters": [],
          "uriTemplate": "/organizations/{organization_id}/event_data_requests",
          "actions": [
            {
              "name": "Create an event data request",
              "relation": "",
              "uriTemplate": "/organizations/{organization_id}/event_data_requests",
              "description": "",
              "method": "POST",
              "parameters": [
                {
                  "description": "\u003cp>ID of the organization to request events for\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "5bf5b201468ce95aa753a35f",
                  "values": [],
                  "key": "organization_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "{\n  \"report_type\": \"gdpr\",\n  \"filters\": {\n    \"user.id\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"user.email\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"john.doe@example.com\"\n      }\n    ],\n    \"user.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"John Doe\"\n      }\n    ],\n    \"error.status\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"open\"\n      }\n    ],\n    \"error.assigned_to\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"app.release_stage\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"production\"\n      }\n    ],\n    \"app.context\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"users#show\"\n      }\n    ],\n    \"app.type\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"sidekiq\"\n      }\n    ],\n    \"version.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.?.1\"\n      }\n    ],\n    \"version.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2.*\"\n      }\n    ],\n    \"version_code.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"version_code.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"event.class\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"NoMethodError\"\n      }\n    ],\n    \"event.message\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"redis\"\n      }\n    ],\n    \"event.file\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"app/controllers/users_controller.rb\"\n      }\n    ],\n    \"event.method\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"process_payment\"\n      }\n    ],\n    \"event.severity\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"info\"\n      }\n    ],\n    \"event.since\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"event.before\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"browser.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Chrome\"\n      }\n    ],\n    \"browser.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"70.0\"\n      }\n    ],\n    \"os.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Android\"\n      }\n    ],\n    \"os.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.2.3\"\n      }\n    ],\n    \"device.hostname\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"staging1\"\n      }\n    ],\n    \"device.manufacturer\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Google\"\n      }\n    ],\n    \"device.model\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Pixel 3\"\n      }\n    ],\n    \"request.url\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"https://api.example.com/users\"\n      }\n    ],\n    \"request.ip\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"192.168.5.6\"\n      }\n    ],\n    \"device.jailbroken\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ],\n    \"app.in_foreground\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ]\n  }\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"report_type\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"const\": \"gdpr\"\n        }\n      ]\n    },\n    \"filters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user.id\": {\n          \"type\": \"array\"\n        },\n        \"user.email\": {\n          \"type\": \"array\"\n        },\n        \"user.name\": {\n          \"type\": \"array\"\n        },\n        \"error.status\": {\n          \"type\": \"array\"\n        },\n        \"error.assigned_to\": {\n          \"type\": \"array\"\n        },\n        \"error.has_issue\": {\n          \"type\": \"boolean\"\n        },\n        \"app.release_stage\": {\n          \"type\": \"array\"\n        },\n        \"app.context\": {\n          \"type\": \"array\"\n        },\n        \"app.type\": {\n          \"type\": \"array\"\n        },\n        \"version.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"release.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"release.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"event.class\": {\n          \"type\": \"array\"\n        },\n        \"event.message\": {\n          \"type\": \"array\"\n        },\n        \"event.file\": {\n          \"type\": \"array\"\n        },\n        \"event.method\": {\n          \"type\": \"array\"\n        },\n        \"event.severity\": {\n          \"type\": \"array\"\n        },\n        \"event.since\": {\n          \"type\": \"array\"\n        },\n        \"event.before\": {\n          \"type\": \"array\"\n        },\n        \"browser.name\": {\n          \"type\": \"array\"\n        },\n        \"browser.version\": {\n          \"type\": \"array\"\n        },\n        \"os.name\": {\n          \"type\": \"array\"\n        },\n        \"os.version\": {\n          \"type\": \"array\"\n        },\n        \"device.hostname\": {\n          \"type\": \"array\"\n        },\n        \"device.manufacturer\": {\n          \"type\": \"array\"\n        },\n        \"device.model\": {\n          \"type\": \"array\"\n        },\n        \"request.url\": {\n          \"type\": \"array\"\n        },\n        \"request.ip\": {\n          \"type\": \"array\"\n        },\n        \"device.jailbroken\": {\n          \"type\": \"array\"\n        },\n        \"app.in_foreground\": {\n          \"type\": \"array\"\n        }\n      }\n    }\n  },\n  \"required\": [\n    \"filters\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "name": "",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "object",
                            "content": [
                              {
                                "element": "member",
                                "meta": {
                                  "description": "the type of report to request; omit this if you want all event fields"
                                },
                                "attributes": {
                                  "typeAttributes": [
                                    "optional"
                                  ]
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "content": "report_type"
                                  },
                                  "value": {
                                    "element": "EventDataRequestReportType"
                                  }
                                }
                              },
                              {
                                "element": "member",
                                "meta": {
                                  "description": "The filters used to determine which events will be included in the report.\nSee [Filtering](/#introduction/filtering) for details."
                                },
                                "attributes": {
                                  "typeAttributes": [
                                    "required"
                                  ]
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "content": "filters"
                                  },
                                  "value": {
                                    "element": "Filters"
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"id\": \"5bf49d97468ce913212ae486\",\n  \"status\": \"ACCEPTED\",\n  \"total\": 10,\n  \"report_type\": \"gdpr\",\n  \"filters\": {\n    \"user.id\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"user.email\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"john.doe@example.com\"\n      }\n    ],\n    \"user.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"John Doe\"\n      }\n    ],\n    \"error.status\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"open\"\n      }\n    ],\n    \"error.assigned_to\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"app.release_stage\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"production\"\n      }\n    ],\n    \"app.context\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"users#show\"\n      }\n    ],\n    \"app.type\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"sidekiq\"\n      }\n    ],\n    \"version.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.?.1\"\n      }\n    ],\n    \"version.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2.*\"\n      }\n    ],\n    \"version_code.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"version_code.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"event.class\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"NoMethodError\"\n      }\n    ],\n    \"event.message\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"redis\"\n      }\n    ],\n    \"event.file\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"app/controllers/users_controller.rb\"\n      }\n    ],\n    \"event.method\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"process_payment\"\n      }\n    ],\n    \"event.severity\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"info\"\n      }\n    ],\n    \"event.since\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"event.before\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"browser.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Chrome\"\n      }\n    ],\n    \"browser.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"70.0\"\n      }\n    ],\n    \"os.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Android\"\n      }\n    ],\n    \"os.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.2.3\"\n      }\n    ],\n    \"device.hostname\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"staging1\"\n      }\n    ],\n    \"device.manufacturer\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Google\"\n      }\n    ],\n    \"device.model\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Pixel 3\"\n      }\n    ],\n    \"request.url\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"https://api.example.com/users\"\n      }\n    ],\n    \"request.ip\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"192.168.5.6\"\n      }\n    ],\n    \"device.jailbroken\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ],\n    \"app.in_foreground\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ]\n  },\n  \"created_at\": \"2018-11-21T01:31:25.000Z\",\n  \"completed_at\": \"2018-11-21T01:35:00.000Z\",\n  \"expires_at\": \"2018-11-28T01:35:00.000Z\"\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"url\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"enum\": [\n            \"PREPARING\",\n            \"AWAITING_CONFIRMATION\",\n            \"ACCEPTED\",\n            \"IN_PROGRESS\",\n            \"COMPLETED\",\n            \"EXPIRED\"\n          ]\n        }\n      ]\n    },\n    \"total\": {\n      \"type\": \"number\"\n    },\n    \"report_type\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"const\": \"gdpr\"\n        }\n      ]\n    },\n    \"filters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user.id\": {\n          \"type\": \"array\"\n        },\n        \"user.email\": {\n          \"type\": \"array\"\n        },\n        \"user.name\": {\n          \"type\": \"array\"\n        },\n        \"error.status\": {\n          \"type\": \"array\"\n        },\n        \"error.assigned_to\": {\n          \"type\": \"array\"\n        },\n        \"error.has_issue\": {\n          \"type\": \"boolean\"\n        },\n        \"app.release_stage\": {\n          \"type\": \"array\"\n        },\n        \"app.context\": {\n          \"type\": \"array\"\n        },\n        \"app.type\": {\n          \"type\": \"array\"\n        },\n        \"version.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"release.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"release.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"event.class\": {\n          \"type\": \"array\"\n        },\n        \"event.message\": {\n          \"type\": \"array\"\n        },\n        \"event.file\": {\n          \"type\": \"array\"\n        },\n        \"event.method\": {\n          \"type\": \"array\"\n        },\n        \"event.severity\": {\n          \"type\": \"array\"\n        },\n        \"event.since\": {\n          \"type\": \"array\"\n        },\n        \"event.before\": {\n          \"type\": \"array\"\n        },\n        \"browser.name\": {\n          \"type\": \"array\"\n        },\n        \"browser.version\": {\n          \"type\": \"array\"\n        },\n        \"os.name\": {\n          \"type\": \"array\"\n        },\n        \"os.version\": {\n          \"type\": \"array\"\n        },\n        \"device.hostname\": {\n          \"type\": \"array\"\n        },\n        \"device.manufacturer\": {\n          \"type\": \"array\"\n        },\n        \"device.model\": {\n          \"type\": \"array\"\n        },\n        \"request.url\": {\n          \"type\": \"array\"\n        },\n        \"request.ip\": {\n          \"type\": \"array\"\n        },\n        \"device.jailbroken\": {\n          \"type\": \"array\"\n        },\n        \"app.in_foreground\": {\n          \"type\": \"array\"\n        }\n      }\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"completed_at\": {\n      \"type\": \"string\"\n    },\n    \"expires_at\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"status\",\n    \"filters\",\n    \"created_at\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "201",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "EventDataRequestApiView"
                          }
                        ]
                      }
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Check the status of an event data request",
              "relation": "",
              "uriTemplate": "/organizations/{organization_id}/event_data_requests/{id}",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the organization of the event data request\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "5bf5b201468ce95aa753a35f",
                  "values": [],
                  "key": "organization_id"
                },
                {
                  "description": "\u003cp>ID of the event data request\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "5bf5bde1468ce95b0a6724e8",
                  "values": [],
                  "key": "id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"id\": \"5bf49d97468ce913212ae486\",\n  \"status\": \"ACCEPTED\",\n  \"total\": 10,\n  \"report_type\": \"gdpr\",\n  \"filters\": {\n    \"user.id\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"user.email\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"john.doe@example.com\"\n      }\n    ],\n    \"user.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"John Doe\"\n      }\n    ],\n    \"error.status\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"open\"\n      }\n    ],\n    \"error.assigned_to\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"app.release_stage\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"production\"\n      }\n    ],\n    \"app.context\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"users#show\"\n      }\n    ],\n    \"app.type\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"sidekiq\"\n      }\n    ],\n    \"version.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.?.1\"\n      }\n    ],\n    \"version.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2.*\"\n      }\n    ],\n    \"version_code.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"version_code.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"event.class\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"NoMethodError\"\n      }\n    ],\n    \"event.message\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"redis\"\n      }\n    ],\n    \"event.file\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"app/controllers/users_controller.rb\"\n      }\n    ],\n    \"event.method\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"process_payment\"\n      }\n    ],\n    \"event.severity\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"info\"\n      }\n    ],\n    \"event.since\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"event.before\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"browser.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Chrome\"\n      }\n    ],\n    \"browser.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"70.0\"\n      }\n    ],\n    \"os.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Android\"\n      }\n    ],\n    \"os.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.2.3\"\n      }\n    ],\n    \"device.hostname\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"staging1\"\n      }\n    ],\n    \"device.manufacturer\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Google\"\n      }\n    ],\n    \"device.model\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Pixel 3\"\n      }\n    ],\n    \"request.url\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"https://api.example.com/users\"\n      }\n    ],\n    \"request.ip\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"192.168.5.6\"\n      }\n    ],\n    \"device.jailbroken\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ],\n    \"app.in_foreground\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ]\n  },\n  \"created_at\": \"2018-11-21T01:31:25.000Z\",\n  \"completed_at\": \"2018-11-21T01:35:00.000Z\",\n  \"expires_at\": \"2018-11-28T01:35:00.000Z\"\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"url\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"enum\": [\n            \"PREPARING\",\n            \"AWAITING_CONFIRMATION\",\n            \"ACCEPTED\",\n            \"IN_PROGRESS\",\n            \"COMPLETED\",\n            \"EXPIRED\"\n          ]\n        }\n      ]\n    },\n    \"total\": {\n      \"type\": \"number\"\n    },\n    \"report_type\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"const\": \"gdpr\"\n        }\n      ]\n    },\n    \"filters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user.id\": {\n          \"type\": \"array\"\n        },\n        \"user.email\": {\n          \"type\": \"array\"\n        },\n        \"user.name\": {\n          \"type\": \"array\"\n        },\n        \"error.status\": {\n          \"type\": \"array\"\n        },\n        \"error.assigned_to\": {\n          \"type\": \"array\"\n        },\n        \"error.has_issue\": {\n          \"type\": \"boolean\"\n        },\n        \"app.release_stage\": {\n          \"type\": \"array\"\n        },\n        \"app.context\": {\n          \"type\": \"array\"\n        },\n        \"app.type\": {\n          \"type\": \"array\"\n        },\n        \"version.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"release.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"release.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"event.class\": {\n          \"type\": \"array\"\n        },\n        \"event.message\": {\n          \"type\": \"array\"\n        },\n        \"event.file\": {\n          \"type\": \"array\"\n        },\n        \"event.method\": {\n          \"type\": \"array\"\n        },\n        \"event.severity\": {\n          \"type\": \"array\"\n        },\n        \"event.since\": {\n          \"type\": \"array\"\n        },\n        \"event.before\": {\n          \"type\": \"array\"\n        },\n        \"browser.name\": {\n          \"type\": \"array\"\n        },\n        \"browser.version\": {\n          \"type\": \"array\"\n        },\n        \"os.name\": {\n          \"type\": \"array\"\n        },\n        \"os.version\": {\n          \"type\": \"array\"\n        },\n        \"device.hostname\": {\n          \"type\": \"array\"\n        },\n        \"device.manufacturer\": {\n          \"type\": \"array\"\n        },\n        \"device.model\": {\n          \"type\": \"array\"\n        },\n        \"request.url\": {\n          \"type\": \"array\"\n        },\n        \"request.ip\": {\n          \"type\": \"array\"\n        },\n        \"device.jailbroken\": {\n          \"type\": \"array\"\n        },\n        \"app.in_foreground\": {\n          \"type\": \"array\"\n        }\n      }\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"completed_at\": {\n      \"type\": \"string\"\n    },\n    \"expires_at\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"status\",\n    \"filters\",\n    \"created_at\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "EventDataRequestApiView"
                          }
                        ]
                      }
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            }
          ],
          "description": "\u003cp>Request event data for the given organization. This request will start an asynchronous job to collate all event data present at the time of the request and return a URL where you can download the data when the job is complete. These endpoints are intended for bulk download of events. If you want to query events, use the \u003ca href=\"/#reference/errors/events\">Events APIs\u003c/a> instead.\u003c/p>"
        },
        {
          "name": "Event data deletions",
          "model": {},
          "headers": {},
          "parameters": [],
          "uriTemplate": "/organizations/{organization_id}/event_data_deletions",
          "actions": [
            {
              "name": "Create an event deletion request",
              "relation": "",
              "uriTemplate": "/organizations/{organization_id}/event_data_deletions",
              "description": "\u003cp>Creates a request to asynchronously delete events for the organization.\nNote that filters such as \u003ccode>user.email\u003c/code> and \u003ccode>user.name\u003c/code> use substring matching,\nso using the \u003ccode>user.id\u003c/code> filter will be more appropriate for deleting events for\n1 specific user.\u003c/p>",
              "method": "POST",
              "parameters": [
                {
                  "description": "\u003cp>ID of the organization to delete events from\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "5bf5c369468ce95b0a6734c9",
                  "values": [],
                  "key": "organization_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "{\n  \"skip_confirmation\": false,\n  \"filters\": {\n    \"user.id\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"user.email\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"john.doe@example.com\"\n      }\n    ],\n    \"user.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"John Doe\"\n      }\n    ],\n    \"error.status\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"open\"\n      }\n    ],\n    \"error.assigned_to\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"app.release_stage\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"production\"\n      }\n    ],\n    \"app.context\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"users#show\"\n      }\n    ],\n    \"app.type\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"sidekiq\"\n      }\n    ],\n    \"version.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.?.1\"\n      }\n    ],\n    \"version.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2.*\"\n      }\n    ],\n    \"version_code.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"version_code.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"event.class\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"NoMethodError\"\n      }\n    ],\n    \"event.message\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"redis\"\n      }\n    ],\n    \"event.file\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"app/controllers/users_controller.rb\"\n      }\n    ],\n    \"event.method\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"process_payment\"\n      }\n    ],\n    \"event.severity\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"info\"\n      }\n    ],\n    \"event.since\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"event.before\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"browser.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Chrome\"\n      }\n    ],\n    \"browser.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"70.0\"\n      }\n    ],\n    \"os.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Android\"\n      }\n    ],\n    \"os.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.2.3\"\n      }\n    ],\n    \"device.hostname\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"staging1\"\n      }\n    ],\n    \"device.manufacturer\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Google\"\n      }\n    ],\n    \"device.model\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Pixel 3\"\n      }\n    ],\n    \"request.url\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"https://api.example.com/users\"\n      }\n    ],\n    \"request.ip\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"192.168.5.6\"\n      }\n    ],\n    \"device.jailbroken\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ],\n    \"app.in_foreground\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ]\n  }\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"skip_confirmation\": {\n      \"type\": \"boolean\"\n    },\n    \"filters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user.id\": {\n          \"type\": \"array\"\n        },\n        \"user.email\": {\n          \"type\": \"array\"\n        },\n        \"user.name\": {\n          \"type\": \"array\"\n        },\n        \"error.status\": {\n          \"type\": \"array\"\n        },\n        \"error.assigned_to\": {\n          \"type\": \"array\"\n        },\n        \"error.has_issue\": {\n          \"type\": \"boolean\"\n        },\n        \"app.release_stage\": {\n          \"type\": \"array\"\n        },\n        \"app.context\": {\n          \"type\": \"array\"\n        },\n        \"app.type\": {\n          \"type\": \"array\"\n        },\n        \"version.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"release.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"release.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"event.class\": {\n          \"type\": \"array\"\n        },\n        \"event.message\": {\n          \"type\": \"array\"\n        },\n        \"event.file\": {\n          \"type\": \"array\"\n        },\n        \"event.method\": {\n          \"type\": \"array\"\n        },\n        \"event.severity\": {\n          \"type\": \"array\"\n        },\n        \"event.since\": {\n          \"type\": \"array\"\n        },\n        \"event.before\": {\n          \"type\": \"array\"\n        },\n        \"browser.name\": {\n          \"type\": \"array\"\n        },\n        \"browser.version\": {\n          \"type\": \"array\"\n        },\n        \"os.name\": {\n          \"type\": \"array\"\n        },\n        \"os.version\": {\n          \"type\": \"array\"\n        },\n        \"device.hostname\": {\n          \"type\": \"array\"\n        },\n        \"device.manufacturer\": {\n          \"type\": \"array\"\n        },\n        \"device.model\": {\n          \"type\": \"array\"\n        },\n        \"request.url\": {\n          \"type\": \"array\"\n        },\n        \"request.ip\": {\n          \"type\": \"array\"\n        },\n        \"device.jailbroken\": {\n          \"type\": \"array\"\n        },\n        \"app.in_foreground\": {\n          \"type\": \"array\"\n        }\n      }\n    }\n  },\n  \"required\": [\n    \"filters\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "name": "",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "object",
                            "content": [
                              {
                                "element": "member",
                                "meta": {
                                  "description": "whether to skip requiring another request to confirm the deletion"
                                },
                                "attributes": {
                                  "typeAttributes": [
                                    "optional"
                                  ]
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "content": "skip_confirmation"
                                  },
                                  "value": {
                                    "element": "boolean",
                                    "attributes": {
                                      "default": false
                                    },
                                    "content": false
                                  }
                                }
                              },
                              {
                                "element": "member",
                                "meta": {
                                  "description": "The filters used to determine which events will be deleted.\nSee [Filtering](/#introduction/filtering) for details.\nNote that filters with an empty string value and filters that don't\napply to a project (e.g. using a custom filter from one project on\nanother project that doesn't have that custom filter) will be skipped.\nBefore proceeding with an event data deletion request, it's recommended to verify the\n[project's event fields](/#reference/projects/event-fields/list-the-event-fields-for-a-project)\nand test your filters using the\n[List the Events on an Error](/#reference/errors/events/list-the-events-on-a-project)\nor\n[Create an event data request](/#reference/organizations/event-data-requests/create-an-event-data-request)\nAPI."
                                },
                                "attributes": {
                                  "typeAttributes": [
                                    "required"
                                  ]
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "content": "filters"
                                  },
                                  "value": {
                                    "element": "Filters"
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"id\": \"5bf4b8aed1befa02a523f526\",\n  \"status\": \"IN_PROGRESS\",\n  \"total\": 12,\n  \"filters\": {\n    \"user.id\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"user.email\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"john.doe@example.com\"\n      }\n    ],\n    \"user.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"John Doe\"\n      }\n    ],\n    \"error.status\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"open\"\n      }\n    ],\n    \"error.assigned_to\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"app.release_stage\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"production\"\n      }\n    ],\n    \"app.context\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"users#show\"\n      }\n    ],\n    \"app.type\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"sidekiq\"\n      }\n    ],\n    \"version.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.?.1\"\n      }\n    ],\n    \"version.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2.*\"\n      }\n    ],\n    \"version_code.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"version_code.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"event.class\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"NoMethodError\"\n      }\n    ],\n    \"event.message\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"redis\"\n      }\n    ],\n    \"event.file\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"app/controllers/users_controller.rb\"\n      }\n    ],\n    \"event.method\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"process_payment\"\n      }\n    ],\n    \"event.severity\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"info\"\n      }\n    ],\n    \"event.since\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"event.before\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"browser.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Chrome\"\n      }\n    ],\n    \"browser.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"70.0\"\n      }\n    ],\n    \"os.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Android\"\n      }\n    ],\n    \"os.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.2.3\"\n      }\n    ],\n    \"device.hostname\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"staging1\"\n      }\n    ],\n    \"device.manufacturer\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Google\"\n      }\n    ],\n    \"device.model\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Pixel 3\"\n      }\n    ],\n    \"request.url\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"https://api.example.com/users\"\n      }\n    ],\n    \"request.ip\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"192.168.5.6\"\n      }\n    ],\n    \"device.jailbroken\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ],\n    \"app.in_foreground\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ]\n  },\n  \"created_at\": \"2018-11-21T01:31:25.000Z\",\n  \"completed_at\": \"2018-11-21T01:35:00.000Z\"\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"enum\": [\n            \"PREPARING\",\n            \"AWAITING_CONFIRMATION\",\n            \"ACCEPTED\",\n            \"IN_PROGRESS\",\n            \"COMPLETED\",\n            \"EXPIRED\"\n          ]\n        }\n      ]\n    },\n    \"total\": {\n      \"type\": \"number\"\n    },\n    \"filters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user.id\": {\n          \"type\": \"array\"\n        },\n        \"user.email\": {\n          \"type\": \"array\"\n        },\n        \"user.name\": {\n          \"type\": \"array\"\n        },\n        \"error.status\": {\n          \"type\": \"array\"\n        },\n        \"error.assigned_to\": {\n          \"type\": \"array\"\n        },\n        \"error.has_issue\": {\n          \"type\": \"boolean\"\n        },\n        \"app.release_stage\": {\n          \"type\": \"array\"\n        },\n        \"app.context\": {\n          \"type\": \"array\"\n        },\n        \"app.type\": {\n          \"type\": \"array\"\n        },\n        \"version.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"release.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"release.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"event.class\": {\n          \"type\": \"array\"\n        },\n        \"event.message\": {\n          \"type\": \"array\"\n        },\n        \"event.file\": {\n          \"type\": \"array\"\n        },\n        \"event.method\": {\n          \"type\": \"array\"\n        },\n        \"event.severity\": {\n          \"type\": \"array\"\n        },\n        \"event.since\": {\n          \"type\": \"array\"\n        },\n        \"event.before\": {\n          \"type\": \"array\"\n        },\n        \"browser.name\": {\n          \"type\": \"array\"\n        },\n        \"browser.version\": {\n          \"type\": \"array\"\n        },\n        \"os.name\": {\n          \"type\": \"array\"\n        },\n        \"os.version\": {\n          \"type\": \"array\"\n        },\n        \"device.hostname\": {\n          \"type\": \"array\"\n        },\n        \"device.manufacturer\": {\n          \"type\": \"array\"\n        },\n        \"device.model\": {\n          \"type\": \"array\"\n        },\n        \"request.url\": {\n          \"type\": \"array\"\n        },\n        \"request.ip\": {\n          \"type\": \"array\"\n        },\n        \"device.jailbroken\": {\n          \"type\": \"array\"\n        },\n        \"app.in_foreground\": {\n          \"type\": \"array\"\n        }\n      }\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"completed_at\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"status\",\n    \"filters\",\n    \"created_at\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "201",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "EventDataDeletionApiView"
                          }
                        ]
                      }
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Confirm an event deletion request",
              "relation": "",
              "uriTemplate": "/organizations/{organization_id}/event_data_deletions/{id}/confirm",
              "description": "",
              "method": "POST",
              "parameters": [
                {
                  "description": "\u003cp>ID of the organization of the deletion request\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "5bf5c369468ce95b0a6734c9",
                  "values": [],
                  "key": "organization_id"
                },
                {
                  "description": "\u003cp>ID of the deletion request\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "5bf5c5ee468ce95db8170d15",
                  "values": [],
                  "key": "id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"id\": \"5bf4b8aed1befa02a523f526\",\n  \"status\": \"IN_PROGRESS\",\n  \"total\": 12,\n  \"filters\": {\n    \"user.id\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"user.email\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"john.doe@example.com\"\n      }\n    ],\n    \"user.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"John Doe\"\n      }\n    ],\n    \"error.status\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"open\"\n      }\n    ],\n    \"error.assigned_to\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"app.release_stage\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"production\"\n      }\n    ],\n    \"app.context\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"users#show\"\n      }\n    ],\n    \"app.type\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"sidekiq\"\n      }\n    ],\n    \"version.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.?.1\"\n      }\n    ],\n    \"version.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2.*\"\n      }\n    ],\n    \"version_code.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"version_code.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"event.class\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"NoMethodError\"\n      }\n    ],\n    \"event.message\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"redis\"\n      }\n    ],\n    \"event.file\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"app/controllers/users_controller.rb\"\n      }\n    ],\n    \"event.method\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"process_payment\"\n      }\n    ],\n    \"event.severity\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"info\"\n      }\n    ],\n    \"event.since\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"event.before\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"browser.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Chrome\"\n      }\n    ],\n    \"browser.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"70.0\"\n      }\n    ],\n    \"os.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Android\"\n      }\n    ],\n    \"os.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.2.3\"\n      }\n    ],\n    \"device.hostname\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"staging1\"\n      }\n    ],\n    \"device.manufacturer\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Google\"\n      }\n    ],\n    \"device.model\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Pixel 3\"\n      }\n    ],\n    \"request.url\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"https://api.example.com/users\"\n      }\n    ],\n    \"request.ip\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"192.168.5.6\"\n      }\n    ],\n    \"device.jailbroken\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ],\n    \"app.in_foreground\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ]\n  },\n  \"created_at\": \"2018-11-21T01:31:25.000Z\",\n  \"completed_at\": \"2018-11-21T01:35:00.000Z\"\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"enum\": [\n            \"PREPARING\",\n            \"AWAITING_CONFIRMATION\",\n            \"ACCEPTED\",\n            \"IN_PROGRESS\",\n            \"COMPLETED\",\n            \"EXPIRED\"\n          ]\n        }\n      ]\n    },\n    \"total\": {\n      \"type\": \"number\"\n    },\n    \"filters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user.id\": {\n          \"type\": \"array\"\n        },\n        \"user.email\": {\n          \"type\": \"array\"\n        },\n        \"user.name\": {\n          \"type\": \"array\"\n        },\n        \"error.status\": {\n          \"type\": \"array\"\n        },\n        \"error.assigned_to\": {\n          \"type\": \"array\"\n        },\n        \"error.has_issue\": {\n          \"type\": \"boolean\"\n        },\n        \"app.release_stage\": {\n          \"type\": \"array\"\n        },\n        \"app.context\": {\n          \"type\": \"array\"\n        },\n        \"app.type\": {\n          \"type\": \"array\"\n        },\n        \"version.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"release.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"release.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"event.class\": {\n          \"type\": \"array\"\n        },\n        \"event.message\": {\n          \"type\": \"array\"\n        },\n        \"event.file\": {\n          \"type\": \"array\"\n        },\n        \"event.method\": {\n          \"type\": \"array\"\n        },\n        \"event.severity\": {\n          \"type\": \"array\"\n        },\n        \"event.since\": {\n          \"type\": \"array\"\n        },\n        \"event.before\": {\n          \"type\": \"array\"\n        },\n        \"browser.name\": {\n          \"type\": \"array\"\n        },\n        \"browser.version\": {\n          \"type\": \"array\"\n        },\n        \"os.name\": {\n          \"type\": \"array\"\n        },\n        \"os.version\": {\n          \"type\": \"array\"\n        },\n        \"device.hostname\": {\n          \"type\": \"array\"\n        },\n        \"device.manufacturer\": {\n          \"type\": \"array\"\n        },\n        \"device.model\": {\n          \"type\": \"array\"\n        },\n        \"request.url\": {\n          \"type\": \"array\"\n        },\n        \"request.ip\": {\n          \"type\": \"array\"\n        },\n        \"device.jailbroken\": {\n          \"type\": \"array\"\n        },\n        \"app.in_foreground\": {\n          \"type\": \"array\"\n        }\n      }\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"completed_at\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"status\",\n    \"filters\",\n    \"created_at\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "EventDataDeletionApiView"
                          }
                        ]
                      }
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Check the status of an event deletion request",
              "relation": "",
              "uriTemplate": "/organizations/{organization_id}/event_data_deletions/{id}",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the organization of the deletion request\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "5bf5c369468ce95b0a6734c9",
                  "values": [],
                  "key": "organization_id"
                },
                {
                  "description": "\u003cp>ID of the deletion request\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "5bf5c5ee468ce95db8170d15",
                  "values": [],
                  "key": "id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"id\": \"5bf4b8aed1befa02a523f526\",\n  \"status\": \"IN_PROGRESS\",\n  \"total\": 12,\n  \"filters\": {\n    \"user.id\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"user.email\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"john.doe@example.com\"\n      }\n    ],\n    \"user.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"John Doe\"\n      }\n    ],\n    \"error.status\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"open\"\n      }\n    ],\n    \"error.assigned_to\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"app.release_stage\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"production\"\n      }\n    ],\n    \"app.context\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"users#show\"\n      }\n    ],\n    \"app.type\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"sidekiq\"\n      }\n    ],\n    \"version.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.?.1\"\n      }\n    ],\n    \"version.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2.*\"\n      }\n    ],\n    \"version_code.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"version_code.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"event.class\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"NoMethodError\"\n      }\n    ],\n    \"event.message\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"redis\"\n      }\n    ],\n    \"event.file\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"app/controllers/users_controller.rb\"\n      }\n    ],\n    \"event.method\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"process_payment\"\n      }\n    ],\n    \"event.severity\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"info\"\n      }\n    ],\n    \"event.since\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"event.before\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"browser.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Chrome\"\n      }\n    ],\n    \"browser.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"70.0\"\n      }\n    ],\n    \"os.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Android\"\n      }\n    ],\n    \"os.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.2.3\"\n      }\n    ],\n    \"device.hostname\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"staging1\"\n      }\n    ],\n    \"device.manufacturer\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Google\"\n      }\n    ],\n    \"device.model\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Pixel 3\"\n      }\n    ],\n    \"request.url\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"https://api.example.com/users\"\n      }\n    ],\n    \"request.ip\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"192.168.5.6\"\n      }\n    ],\n    \"device.jailbroken\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ],\n    \"app.in_foreground\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ]\n  },\n  \"created_at\": \"2018-11-21T01:31:25.000Z\",\n  \"completed_at\": \"2018-11-21T01:35:00.000Z\"\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"enum\": [\n            \"PREPARING\",\n            \"AWAITING_CONFIRMATION\",\n            \"ACCEPTED\",\n            \"IN_PROGRESS\",\n            \"COMPLETED\",\n            \"EXPIRED\"\n          ]\n        }\n      ]\n    },\n    \"total\": {\n      \"type\": \"number\"\n    },\n    \"filters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user.id\": {\n          \"type\": \"array\"\n        },\n        \"user.email\": {\n          \"type\": \"array\"\n        },\n        \"user.name\": {\n          \"type\": \"array\"\n        },\n        \"error.status\": {\n          \"type\": \"array\"\n        },\n        \"error.assigned_to\": {\n          \"type\": \"array\"\n        },\n        \"error.has_issue\": {\n          \"type\": \"boolean\"\n        },\n        \"app.release_stage\": {\n          \"type\": \"array\"\n        },\n        \"app.context\": {\n          \"type\": \"array\"\n        },\n        \"app.type\": {\n          \"type\": \"array\"\n        },\n        \"version.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"release.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"release.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"event.class\": {\n          \"type\": \"array\"\n        },\n        \"event.message\": {\n          \"type\": \"array\"\n        },\n        \"event.file\": {\n          \"type\": \"array\"\n        },\n        \"event.method\": {\n          \"type\": \"array\"\n        },\n        \"event.severity\": {\n          \"type\": \"array\"\n        },\n        \"event.since\": {\n          \"type\": \"array\"\n        },\n        \"event.before\": {\n          \"type\": \"array\"\n        },\n        \"browser.name\": {\n          \"type\": \"array\"\n        },\n        \"browser.version\": {\n          \"type\": \"array\"\n        },\n        \"os.name\": {\n          \"type\": \"array\"\n        },\n        \"os.version\": {\n          \"type\": \"array\"\n        },\n        \"device.hostname\": {\n          \"type\": \"array\"\n        },\n        \"device.manufacturer\": {\n          \"type\": \"array\"\n        },\n        \"device.model\": {\n          \"type\": \"array\"\n        },\n        \"request.url\": {\n          \"type\": \"array\"\n        },\n        \"request.ip\": {\n          \"type\": \"array\"\n        },\n        \"device.jailbroken\": {\n          \"type\": \"array\"\n        },\n        \"app.in_foreground\": {\n          \"type\": \"array\"\n        }\n      }\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"completed_at\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"status\",\n    \"filters\",\n    \"created_at\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "EventDataDeletionApiView"
                          }
                        ]
                      }
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            }
          ],
          "description": "\u003cp>Request events of the given organization to be deleted. This request will start an asynchronous job to delete events present at the time of the request. If you want to delete a single event, use \u003ca href=\"/#reference/errors/events/delete-an-event\">this endpoint\u003c/a> instead.\u003c/p>"
        }
      ]
    },
    {
      "name": "Projects",
      "description": "",
      "resources": [
        {
          "name": "Projects",
          "model": {},
          "headers": {},
          "parameters": [],
          "uriTemplate": "/projects",
          "actions": [
            {
              "name": "Create a Project in an Organization",
              "relation": "",
              "uriTemplate": "/organizations/{organization_id}/projects",
              "description": "",
              "method": "POST",
              "parameters": [
                {
                  "description": "\u003cp>ID of the organization\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000007",
                  "values": [],
                  "key": "organization_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "ProjectCreateRequest"
                          }
                        ]
                      },
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"name\": \"Example Project\",\n  \"global_grouping\": [\n    \"Redis::CannotConnectError\",\n    \"Mongo::Error:SocketError\"\n  ],\n  \"location_grouping\": [\n    \"Timeout::Error\"\n  ],\n  \"discarded_app_versions\": [\n    \"alpha\",\n    \"\u003c 2.2.2\",\n    \"3.0.0\"\n  ],\n  \"discarded_errors\": [\n    \"Example::Error\"\n  ],\n  \"url_whitelist\": [\n    \"example.com\"\n  ],\n  \"ignore_old_browsers\": true,\n  \"ignored_browser_versions\": {},\n  \"resolve_on_deploy\": true,\n  \"id\": \"515fb9337c1074f6fd000003\",\n  \"slug\": \"example-project\",\n  \"api_key\": \"deadbeef1234deadbeef1234deadbeef\",\n  \"is_full_view\": true,\n  \"release_stages\": [\n    \"staging\",\n    \"production\"\n  ],\n  \"language\": \"ruby\",\n  \"created_at\": \"2017-03-02T05:55:55.555Z\",\n  \"updated_at\": \"2017-03-03T05:55:55.555Z\",\n  \"url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003\",\n  \"html_url\": \"https://app.bugsnag.com/example-account/example-project\",\n  \"errors_url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003/errors\",\n  \"events_url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003/events\",\n  \"open_error_count\": 10,\n  \"for_review_error_count\": 5,\n  \"collaborators_count\": 15,\n  \"custom_event_fields_used\": 5\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"global_grouping\": {\n      \"type\": \"array\"\n    },\n    \"location_grouping\": {\n      \"type\": \"array\"\n    },\n    \"discarded_app_versions\": {\n      \"type\": \"array\"\n    },\n    \"discarded_errors\": {\n      \"type\": \"array\"\n    },\n    \"url_whitelist\": {\n      \"type\": \"array\"\n    },\n    \"ignore_old_browsers\": {\n      \"type\": \"boolean\"\n    },\n    \"ignored_browser_versions\": {\n      \"type\": \"object\"\n    },\n    \"resolve_on_deploy\": {\n      \"type\": \"boolean\"\n    },\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"slug\": {\n      \"type\": \"string\"\n    },\n    \"api_key\": {\n      \"type\": \"string\"\n    },\n    \"is_full_view\": {\n      \"type\": \"boolean\"\n    },\n    \"release_stages\": {\n      \"type\": \"array\"\n    },\n    \"language\": {\n      \"type\": \"string\"\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"updated_at\": {\n      \"type\": \"string\"\n    },\n    \"url\": {\n      \"type\": \"string\"\n    },\n    \"html_url\": {\n      \"type\": \"string\"\n    },\n    \"errors_url\": {\n      \"type\": \"string\"\n    },\n    \"events_url\": {\n      \"type\": \"string\"\n    },\n    \"open_error_count\": {\n      \"type\": \"number\"\n    },\n    \"for_review_error_count\": {\n      \"type\": \"number\"\n    },\n    \"collaborators_count\": {\n      \"type\": \"number\"\n    },\n    \"custom_event_fields_used\": {\n      \"type\": \"number\"\n    }\n  }\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "ProjectApiView"
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Authentication required\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Request validation error. See \u003ccode>errors\u003c/code> for specific details.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    },
                    {
                      "body": "{\n\"errors\": [\"Organization not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Organization could not be found. Check the supplied \u003ccode>organization_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "List an Organization's Projects",
              "relation": "",
              "uriTemplate": "/organizations/{organization_id}/projects{?q,sort,direction,per_page}",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>the ID of the organization\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "organization_id"
                },
                {
                  "description": "\u003cp>Search projects with names matching parameter\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "",
                  "example": "MyProject",
                  "values": [],
                  "key": "q"
                },
                {
                  "description": "\u003cp>Which field to sort the results by\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "created_at",
                  "example": "",
                  "values": [
                    "created_at",
                    "name",
                    "favorite"
                  ],
                  "key": "sort"
                },
                {
                  "description": "\u003cp>Which direction to sort the results by. Defaults to \u003ccode>desc\u003c/code> for all sorts except \u003ccode>favorite\u003c/code>. Defaults to \u003ccode>asc\u003c/code> if sorting by \u003ccode>favorite\u003c/code> (cannot sort \u003ccode>favorite\u003c/code>s \u003ccode>desc\u003c/code>).\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "desc",
                  "example": "",
                  "values": [
                    "asc",
                    "desc"
                  ],
                  "key": "direction"
                },
                {
                  "description": "\u003cp>How many results to return per page\u003c/p>\n",
                  "type": "number",
                  "required": false,
                  "default": "30",
                  "example": "",
                  "values": [],
                  "key": "per_page"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"name\": \"Example Project\",\n    \"global_grouping\": [\n      \"Redis::CannotConnectError\",\n      \"Mongo::Error:SocketError\"\n    ],\n    \"location_grouping\": [\n      \"Timeout::Error\"\n    ],\n    \"discarded_app_versions\": [\n      \"alpha\",\n      \"\u003c 2.2.2\",\n      \"3.0.0\"\n    ],\n    \"discarded_errors\": [\n      \"Example::Error\"\n    ],\n    \"url_whitelist\": [\n      \"example.com\"\n    ],\n    \"ignore_old_browsers\": true,\n    \"ignored_browser_versions\": {},\n    \"resolve_on_deploy\": true,\n    \"id\": \"515fb9337c1074f6fd000003\",\n    \"slug\": \"example-project\",\n    \"api_key\": \"deadbeef1234deadbeef1234deadbeef\",\n    \"is_full_view\": true,\n    \"release_stages\": [\n      \"staging\",\n      \"production\"\n    ],\n    \"language\": \"ruby\",\n    \"created_at\": \"2017-03-02T05:55:55.555Z\",\n    \"updated_at\": \"2017-03-03T05:55:55.555Z\",\n    \"url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003\",\n    \"html_url\": \"https://app.bugsnag.com/example-account/example-project\",\n    \"errors_url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003/errors\",\n    \"events_url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003/events\",\n    \"open_error_count\": 10,\n    \"for_review_error_count\": 5,\n    \"collaborators_count\": 15,\n    \"custom_event_fields_used\": 5\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json",
                        "Link": "\u003chttps://api.bugsnag.com/organizations/515fb9337c1074f6fd000001/projects?offset=517c41f07c1074aee9000002>; rel=\"next\"",
                        "X-Total-Count": "123"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "name": "Link",
                          "value": "\u003chttps://api.bugsnag.com/organizations/515fb9337c1074f6fd000001/projects?offset=517c41f07c1074aee9000002>; rel=\"next\""
                        },
                        {
                          "name": "X-Total-Count",
                          "value": "123"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "ProjectApiView"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Organization not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>An organization with the ID you provided could not be found.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    },
                    {
                      "body": "{\n\"errors\": [\"favorites cannot be sorted descending\"]\n}\n\n",
                      "schema": "",
                      "description": "\u003cp>Favorites only support ascending sort.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "View a Project",
              "relation": "",
              "uriTemplate": "/projects/{project_id}",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "project_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"name\": \"Example Project\",\n  \"global_grouping\": [\n    \"Redis::CannotConnectError\",\n    \"Mongo::Error:SocketError\"\n  ],\n  \"location_grouping\": [\n    \"Timeout::Error\"\n  ],\n  \"discarded_app_versions\": [\n    \"alpha\",\n    \"\u003c 2.2.2\",\n    \"3.0.0\"\n  ],\n  \"discarded_errors\": [\n    \"Example::Error\"\n  ],\n  \"url_whitelist\": [\n    \"example.com\"\n  ],\n  \"ignore_old_browsers\": true,\n  \"ignored_browser_versions\": {},\n  \"resolve_on_deploy\": true,\n  \"id\": \"515fb9337c1074f6fd000003\",\n  \"slug\": \"example-project\",\n  \"api_key\": \"deadbeef1234deadbeef1234deadbeef\",\n  \"is_full_view\": true,\n  \"release_stages\": [\n    \"staging\",\n    \"production\"\n  ],\n  \"language\": \"ruby\",\n  \"created_at\": \"2017-03-02T05:55:55.555Z\",\n  \"updated_at\": \"2017-03-03T05:55:55.555Z\",\n  \"url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003\",\n  \"html_url\": \"https://app.bugsnag.com/example-account/example-project\",\n  \"errors_url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003/errors\",\n  \"events_url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003/events\",\n  \"open_error_count\": 10,\n  \"for_review_error_count\": 5,\n  \"collaborators_count\": 15,\n  \"custom_event_fields_used\": 5\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"global_grouping\": {\n      \"type\": \"array\"\n    },\n    \"location_grouping\": {\n      \"type\": \"array\"\n    },\n    \"discarded_app_versions\": {\n      \"type\": \"array\"\n    },\n    \"discarded_errors\": {\n      \"type\": \"array\"\n    },\n    \"url_whitelist\": {\n      \"type\": \"array\"\n    },\n    \"ignore_old_browsers\": {\n      \"type\": \"boolean\"\n    },\n    \"ignored_browser_versions\": {\n      \"type\": \"object\"\n    },\n    \"resolve_on_deploy\": {\n      \"type\": \"boolean\"\n    },\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"slug\": {\n      \"type\": \"string\"\n    },\n    \"api_key\": {\n      \"type\": \"string\"\n    },\n    \"is_full_view\": {\n      \"type\": \"boolean\"\n    },\n    \"release_stages\": {\n      \"type\": \"array\"\n    },\n    \"language\": {\n      \"type\": \"string\"\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"updated_at\": {\n      \"type\": \"string\"\n    },\n    \"url\": {\n      \"type\": \"string\"\n    },\n    \"html_url\": {\n      \"type\": \"string\"\n    },\n    \"errors_url\": {\n      \"type\": \"string\"\n    },\n    \"events_url\": {\n      \"type\": \"string\"\n    },\n    \"open_error_count\": {\n      \"type\": \"number\"\n    },\n    \"for_review_error_count\": {\n      \"type\": \"number\"\n    },\n    \"collaborators_count\": {\n      \"type\": \"number\"\n    },\n    \"custom_event_fields_used\": {\n      \"type\": \"number\"\n    }\n  }\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "ProjectApiView"
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Project not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Project could not be found, or you do not have access. Check the supplied \u003ccode>project_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Update a Project",
              "relation": "",
              "uriTemplate": "/projects/{project_id}",
              "description": "",
              "method": "PATCH",
              "parameters": [
                {
                  "description": "\u003cp>ID of the project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "project_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "ProjectUpdateRequest"
                          }
                        ]
                      },
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"name\": \"Example Project\",\n  \"global_grouping\": [\n    \"Redis::CannotConnectError\",\n    \"Mongo::Error:SocketError\"\n  ],\n  \"location_grouping\": [\n    \"Timeout::Error\"\n  ],\n  \"discarded_app_versions\": [\n    \"alpha\",\n    \"\u003c 2.2.2\",\n    \"3.0.0\"\n  ],\n  \"discarded_errors\": [\n    \"Example::Error\"\n  ],\n  \"url_whitelist\": [\n    \"example.com\"\n  ],\n  \"ignore_old_browsers\": true,\n  \"ignored_browser_versions\": {},\n  \"resolve_on_deploy\": true,\n  \"id\": \"515fb9337c1074f6fd000003\",\n  \"slug\": \"example-project\",\n  \"api_key\": \"deadbeef1234deadbeef1234deadbeef\",\n  \"is_full_view\": true,\n  \"release_stages\": [\n    \"staging\",\n    \"production\"\n  ],\n  \"language\": \"ruby\",\n  \"created_at\": \"2017-03-02T05:55:55.555Z\",\n  \"updated_at\": \"2017-03-03T05:55:55.555Z\",\n  \"url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003\",\n  \"html_url\": \"https://app.bugsnag.com/example-account/example-project\",\n  \"errors_url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003/errors\",\n  \"events_url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003/events\",\n  \"open_error_count\": 10,\n  \"for_review_error_count\": 5,\n  \"collaborators_count\": 15,\n  \"custom_event_fields_used\": 5\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"global_grouping\": {\n      \"type\": \"array\"\n    },\n    \"location_grouping\": {\n      \"type\": \"array\"\n    },\n    \"discarded_app_versions\": {\n      \"type\": \"array\"\n    },\n    \"discarded_errors\": {\n      \"type\": \"array\"\n    },\n    \"url_whitelist\": {\n      \"type\": \"array\"\n    },\n    \"ignore_old_browsers\": {\n      \"type\": \"boolean\"\n    },\n    \"ignored_browser_versions\": {\n      \"type\": \"object\"\n    },\n    \"resolve_on_deploy\": {\n      \"type\": \"boolean\"\n    },\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"slug\": {\n      \"type\": \"string\"\n    },\n    \"api_key\": {\n      \"type\": \"string\"\n    },\n    \"is_full_view\": {\n      \"type\": \"boolean\"\n    },\n    \"release_stages\": {\n      \"type\": \"array\"\n    },\n    \"language\": {\n      \"type\": \"string\"\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"updated_at\": {\n      \"type\": \"string\"\n    },\n    \"url\": {\n      \"type\": \"string\"\n    },\n    \"html_url\": {\n      \"type\": \"string\"\n    },\n    \"errors_url\": {\n      \"type\": \"string\"\n    },\n    \"events_url\": {\n      \"type\": \"string\"\n    },\n    \"open_error_count\": {\n      \"type\": \"number\"\n    },\n    \"for_review_error_count\": {\n      \"type\": \"number\"\n    },\n    \"collaborators_count\": {\n      \"type\": \"number\"\n    },\n    \"custom_event_fields_used\": {\n      \"type\": \"number\"\n    }\n  }\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "ProjectApiView"
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Project not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Project could not be found, or you do not have access. Check the supplied \u003ccode>project_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Regenerate a Project's notifier API key",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/api_key",
              "description": "\u003cp>Generate a new notifier API key for a project. This API key is used to\nconfigure the \u003ca href=\"https://docs.bugsnag.com/platforms/\">notifier library\u003c/a> being\nused to report errors in the project. After regenerating a Project's notifier\nAPI key, your platform-specific notifier will need its configuration updated to\nuse the new key. The previous key will not be supported. Note that a Project's\nnotifier API key is different from both the Organization-level and User-level\nData Access API auth tokens.\u003c/p>",
              "method": "DELETE",
              "parameters": [
                {
                  "description": "\u003cp>ID of the project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "project_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"name\": \"Example Project\",\n  \"global_grouping\": [\n    \"Redis::CannotConnectError\",\n    \"Mongo::Error:SocketError\"\n  ],\n  \"location_grouping\": [\n    \"Timeout::Error\"\n  ],\n  \"discarded_app_versions\": [\n    \"alpha\",\n    \"\u003c 2.2.2\",\n    \"3.0.0\"\n  ],\n  \"discarded_errors\": [\n    \"Example::Error\"\n  ],\n  \"url_whitelist\": [\n    \"example.com\"\n  ],\n  \"ignore_old_browsers\": true,\n  \"ignored_browser_versions\": {},\n  \"resolve_on_deploy\": true,\n  \"id\": \"515fb9337c1074f6fd000003\",\n  \"slug\": \"example-project\",\n  \"api_key\": \"deadbeef1234deadbeef1234deadbeef\",\n  \"is_full_view\": true,\n  \"release_stages\": [\n    \"staging\",\n    \"production\"\n  ],\n  \"language\": \"ruby\",\n  \"created_at\": \"2017-03-02T05:55:55.555Z\",\n  \"updated_at\": \"2017-03-03T05:55:55.555Z\",\n  \"url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003\",\n  \"html_url\": \"https://app.bugsnag.com/example-account/example-project\",\n  \"errors_url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003/errors\",\n  \"events_url\": \"https://api.bugsnag.com/projects/515fb9337c1074f6fd000003/events\",\n  \"open_error_count\": 10,\n  \"for_review_error_count\": 5,\n  \"collaborators_count\": 15,\n  \"custom_event_fields_used\": 5\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"global_grouping\": {\n      \"type\": \"array\"\n    },\n    \"location_grouping\": {\n      \"type\": \"array\"\n    },\n    \"discarded_app_versions\": {\n      \"type\": \"array\"\n    },\n    \"discarded_errors\": {\n      \"type\": \"array\"\n    },\n    \"url_whitelist\": {\n      \"type\": \"array\"\n    },\n    \"ignore_old_browsers\": {\n      \"type\": \"boolean\"\n    },\n    \"ignored_browser_versions\": {\n      \"type\": \"object\"\n    },\n    \"resolve_on_deploy\": {\n      \"type\": \"boolean\"\n    },\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"slug\": {\n      \"type\": \"string\"\n    },\n    \"api_key\": {\n      \"type\": \"string\"\n    },\n    \"is_full_view\": {\n      \"type\": \"boolean\"\n    },\n    \"release_stages\": {\n      \"type\": \"array\"\n    },\n    \"language\": {\n      \"type\": \"string\"\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"updated_at\": {\n      \"type\": \"string\"\n    },\n    \"url\": {\n      \"type\": \"string\"\n    },\n    \"html_url\": {\n      \"type\": \"string\"\n    },\n    \"errors_url\": {\n      \"type\": \"string\"\n    },\n    \"events_url\": {\n      \"type\": \"string\"\n    },\n    \"open_error_count\": {\n      \"type\": \"number\"\n    },\n    \"for_review_error_count\": {\n      \"type\": \"number\"\n    },\n    \"collaborators_count\": {\n      \"type\": \"number\"\n    },\n    \"custom_event_fields_used\": {\n      \"type\": \"number\"\n    }\n  }\n}",
                      "description": "\u003cp>The projects notifier API key was successfully regenerated.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "ProjectApiView"
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Project not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Project could not be found. Check the supplied \u003ccode>project_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Delete a Project",
              "relation": "",
              "uriTemplate": "/projects/{project_id}",
              "description": "",
              "method": "DELETE",
              "parameters": [
                {
                  "description": "\u003cp>ID of the project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "project_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "\u003cp>The project was successfully deleted.\u003c/p>",
                      "headers": {},
                      "headers1A": [],
                      "status": "204"
                    },
                    {
                      "body": "{\n\"errors\": [\"cannot delete upstream billing project\"]\n}",
                      "schema": "",
                      "description": "\u003cp>This Project cannot be deleted. This can happen for Projects maintained by a third party add-on (e.g. Heroku).\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    },
                    {
                      "body": "{\n\"errors\": [\"Must be an account admin to delete projects\"]\n}",
                      "schema": "",
                      "description": "\u003cp>You do not have permission to delete this Project. You need to be an admin on the Organization.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "403"
                    },
                    {
                      "body": "{\n\"errors\": [\"Project not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Project could not be found. Check the supplied \u003ccode>project_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            }
          ],
          "description": "\u003cp>A Project is used to record errors from an individual application that are reported using the same\nAPI key.\u003c/p>"
        },
        {
          "name": "Event Fields",
          "model": {},
          "headers": {},
          "parameters": [],
          "uriTemplate": "/event_fields",
          "actions": [
            {
              "name": "List the Event Fields for a Project",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/event_fields{?per_page}",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the Project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "project_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"custom\": false,\n    \"display_id\": \"user.id\",\n    \"filter_options\": {\n      \"name\": \"User ID\",\n      \"description\": \"user impacted by an event\",\n      \"aliases\": [\n        \"user\",\n        \"uid\"\n      ],\n      \"hint_text\": \"Exact match only\",\n      \"hint_url\": \"http://docs.bugsnag.com/product/filtering-dashboard#user-id\",\n      \"values\": [\n        {\n          \"id\": \"new\",\n          \"name\": \"New\"\n        }\n      ],\n      \"match_types\": [\n        \"eq\",\n        \"ne\"\n      ]\n    },\n    \"pivot_options\": {\n      \"name\": \"Errors\",\n      \"fields\": {\n        \"id\": \"new\",\n        \"name\": \"New\"\n      },\n      \"summary\": false,\n      \"values\": true,\n      \"cardinality\": true,\n      \"average\": false\n    },\n    \"reindex_in_progress\": true,\n    \"reindex_percentage\": 100\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "EventField"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Project not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Project could not be found. Check the supplied \u003ccode>project_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Create a custom Event Field",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/event_fields",
              "description": "",
              "method": "POST",
              "parameters": [
                {
                  "description": "\u003cp>ID of the Project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "project_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "EventFieldCreateRequest"
                          }
                        ]
                      },
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"custom\": false,\n  \"display_id\": \"user.id\",\n  \"filter_options\": {\n    \"name\": \"User ID\",\n    \"description\": \"user impacted by an event\",\n    \"aliases\": [\n      \"user\",\n      \"uid\"\n    ],\n    \"hint_text\": \"Exact match only\",\n    \"hint_url\": \"http://docs.bugsnag.com/product/filtering-dashboard#user-id\",\n    \"values\": [\n      {\n        \"id\": \"new\",\n        \"name\": \"New\"\n      }\n    ],\n    \"match_types\": [\n      \"eq\",\n      \"ne\"\n    ]\n  },\n  \"pivot_options\": {\n    \"name\": \"Errors\",\n    \"fields\": {\n      \"id\": \"new\",\n      \"name\": \"New\"\n    },\n    \"summary\": false,\n    \"values\": true,\n    \"cardinality\": true,\n    \"average\": false\n  },\n  \"reindex_in_progress\": true,\n  \"reindex_percentage\": 100\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"custom\": {\n      \"type\": \"boolean\"\n    },\n    \"display_id\": {\n      \"type\": \"string\"\n    },\n    \"filter_options\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"aliases\": {\n          \"type\": \"array\"\n        },\n        \"hint_text\": {\n          \"type\": \"string\"\n        },\n        \"hint_url\": {\n          \"type\": \"string\"\n        },\n        \"values\": {\n          \"type\": \"array\"\n        },\n        \"match_types\": {\n          \"type\": \"array\"\n        }\n      }\n    },\n    \"pivot_options\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"fields\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\"\n            },\n            \"name\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"summary\": {\n          \"type\": \"boolean\"\n        },\n        \"values\": {\n          \"type\": \"boolean\"\n        },\n        \"cardinality\": {\n          \"type\": \"boolean\"\n        },\n        \"average\": {\n          \"type\": \"boolean\"\n        }\n      }\n    },\n    \"reindex_in_progress\": {\n      \"type\": \"boolean\"\n    },\n    \"reindex_percentage\": {\n      \"type\": \"number\"\n    }\n  },\n  \"required\": [\n    \"filter_options\",\n    \"pivot_options\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "201",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "EventField"
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"At custom event field limit\"]\n}",
                      "schema": "",
                      "description": "\u003cp>The request was bad. Check the errors supplied in the response.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "400"
                    },
                    {
                      "body": "{\n\"errors\": [\"Project not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Project could not be found. Check the supplied \u003ccode>project_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Update a custom Event Field",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/event_fields/{display_id}",
              "description": "",
              "method": "PATCH",
              "parameters": [
                {
                  "description": "\u003cp>ID of the Project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "\u003cp>human friendly ID for the EventField\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "user.id",
                  "values": [],
                  "key": "display_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "EventFieldCreateRequest"
                          }
                        ]
                      },
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"custom\": false,\n  \"display_id\": \"user.id\",\n  \"filter_options\": {\n    \"name\": \"User ID\",\n    \"description\": \"user impacted by an event\",\n    \"aliases\": [\n      \"user\",\n      \"uid\"\n    ],\n    \"hint_text\": \"Exact match only\",\n    \"hint_url\": \"http://docs.bugsnag.com/product/filtering-dashboard#user-id\",\n    \"values\": [\n      {\n        \"id\": \"new\",\n        \"name\": \"New\"\n      }\n    ],\n    \"match_types\": [\n      \"eq\",\n      \"ne\"\n    ]\n  },\n  \"pivot_options\": {\n    \"name\": \"Errors\",\n    \"fields\": {\n      \"id\": \"new\",\n      \"name\": \"New\"\n    },\n    \"summary\": false,\n    \"values\": true,\n    \"cardinality\": true,\n    \"average\": false\n  },\n  \"reindex_in_progress\": true,\n  \"reindex_percentage\": 100\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"custom\": {\n      \"type\": \"boolean\"\n    },\n    \"display_id\": {\n      \"type\": \"string\"\n    },\n    \"filter_options\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"aliases\": {\n          \"type\": \"array\"\n        },\n        \"hint_text\": {\n          \"type\": \"string\"\n        },\n        \"hint_url\": {\n          \"type\": \"string\"\n        },\n        \"values\": {\n          \"type\": \"array\"\n        },\n        \"match_types\": {\n          \"type\": \"array\"\n        }\n      }\n    },\n    \"pivot_options\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"fields\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\"\n            },\n            \"name\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"summary\": {\n          \"type\": \"boolean\"\n        },\n        \"values\": {\n          \"type\": \"boolean\"\n        },\n        \"cardinality\": {\n          \"type\": \"boolean\"\n        },\n        \"average\": {\n          \"type\": \"boolean\"\n        }\n      }\n    },\n    \"reindex_in_progress\": {\n      \"type\": \"boolean\"\n    },\n    \"reindex_percentage\": {\n      \"type\": \"number\"\n    }\n  },\n  \"required\": [\n    \"filter_options\",\n    \"pivot_options\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "201",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "EventField"
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Project not found\", \"Event field not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Unsupported or unrecognized event field id, or project could not be found. Check the supplied \u003ccode>project_id\u003c/code> and supplied \u003ccode>display_id\u003c/code>.\u003c/p>",
                      "headers": {},
                      "headers1A": [],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Delete a custom Event Field",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/event_fields/{display_id}",
              "description": "",
              "method": "DELETE",
              "parameters": [
                {
                  "description": "\u003cp>ID of the Project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000001",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "\u003cp>human friendly ID for the EventField\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "user.id",
                  "values": [],
                  "key": "display_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "\u003cp>The event field was successfully deleted.\u003c/p>",
                      "headers": {},
                      "headers1A": [],
                      "status": "204"
                    },
                    {
                      "body": "{\n\"errors\": [\"Project not found\", \"Event field not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Unsupported or unrecognized event field id, or project could not be found. Check the supplied \u003ccode>project_id\u003c/code> and supplied \u003ccode>display_id\u003c/code>.\u003c/p>",
                      "headers": {},
                      "headers1A": [],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            }
          ],
          "description": "\u003cp>Event fields are the fields on event resources that can be used for filtering. This includes built-in fields and any custom filters. The event fields supported vary by project type.\u003c/p>"
        },
        {
          "name": "Releases",
          "model": {},
          "headers": {},
          "parameters": [],
          "uriTemplate": "/projects/{project_id}/releases",
          "actions": [
            {
              "name": "List Releases on a Project",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/releases{?release_stage,base,sort,offset,per_page}",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the Project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000003",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "\u003cp>release stage to filter by\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "",
                  "example": "production",
                  "values": [],
                  "key": "release_stage"
                },
                {
                  "description": "\u003cp>date and time (in ISO 8601 format) to search for releases before\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "",
                  "example": "2018-02-22T12:00:00Z",
                  "values": [],
                  "key": "base"
                },
                {
                  "description": "\u003cp>How to sort the results\u003c/p>\n",
                  "type": "string",
                  "required": false,
                  "default": "timestamp",
                  "example": "",
                  "values": [
                    "timestamp",
                    "percent_of_sessions"
                  ],
                  "key": "sort"
                },
                {
                  "description": "\u003cp>The pagination offset\u003c/p>\n",
                  "type": "number",
                  "required": false,
                  "default": "0",
                  "example": "0",
                  "values": [],
                  "key": "offset"
                },
                {
                  "description": "\u003cp>How many results (between 1 and 10) to return per page\u003c/p>\n",
                  "type": "number",
                  "required": false,
                  "default": "5",
                  "example": "5",
                  "values": [],
                  "key": "per_page"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "[\n  {\n    \"id\": \"5a8f7294d1befa07f361fcde\",\n    \"project_id\": \"5a907f72d1befa043987dedf\",\n    \"release_time\": \"2018-02-21T21:30:16+00:00\",\n    \"release_source\": \"unknown_source\",\n    \"app_version\": \"1.2.3\",\n    \"app_version_code\": \"1234\",\n    \"app_bundle_version\": \"1.2.3\",\n    \"build_label\": \"1.2.3\",\n    \"builder_name\": \"Daniel Deployer\",\n    \"build_tool\": \"webpack-bugsnag-plugins\",\n    \"errors_introduced_count\": 2,\n    \"errors_seen_count\": 10,\n    \"sessions_count_in_last_24h\": 6500,\n    \"total_sessions_count\": 3000,\n    \"unhandled_sessions_count\": 60,\n    \"metadata\": {},\n    \"release_stage\": {\n      \"name\": \"production\"\n    },\n    \"source_control\": {\n      \"service\": \"github\",\n      \"commit_url\": \"\",\n      \"revision\": \"\",\n      \"diff_url_to_previous\": \"\"\n    }\n  }\n]",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\"\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "array",
                            "content": [
                              {
                                "element": "ReleaseApiView"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Project not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Project could not be found. Check the supplied \u003ccode>project_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "View a Release",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/releases/{release_id}",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the Project\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "515fb9337c1074f6fd000003",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "\u003cp>ID of release to view\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "5a8f71f6d1befa04f3610cde",
                  "values": [],
                  "key": "release_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"id\": \"5a8f7294d1befa07f361fcde\",\n  \"project_id\": \"5a907f72d1befa043987dedf\",\n  \"release_time\": \"2018-02-21T21:30:16+00:00\",\n  \"release_source\": \"unknown_source\",\n  \"app_version\": \"1.2.3\",\n  \"app_version_code\": \"1234\",\n  \"app_bundle_version\": \"1.2.3\",\n  \"build_label\": \"1.2.3\",\n  \"builder_name\": \"Daniel Deployer\",\n  \"build_tool\": \"webpack-bugsnag-plugins\",\n  \"errors_introduced_count\": 2,\n  \"errors_seen_count\": 10,\n  \"sessions_count_in_last_24h\": 6500,\n  \"total_sessions_count\": 3000,\n  \"unhandled_sessions_count\": 60,\n  \"metadata\": {},\n  \"release_stage\": {\n    \"name\": \"production\"\n  },\n  \"source_control\": {\n    \"service\": \"github\",\n    \"commit_url\": \"\",\n    \"revision\": \"\",\n    \"diff_url_to_previous\": \"\"\n  }\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"project_id\": {\n      \"type\": \"string\"\n    },\n    \"release_time\": {\n      \"type\": \"string\"\n    },\n    \"release_source\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"enum\": [\n            \"unknown_source\",\n            \"event\",\n            \"session\",\n            \"api\",\n            \"deploy\",\n            \"error\",\n            \"error_incomplete_build\"\n          ]\n        }\n      ]\n    },\n    \"app_version\": {\n      \"type\": \"string\"\n    },\n    \"app_version_code\": {\n      \"type\": \"string\"\n    },\n    \"app_bundle_version\": {\n      \"type\": \"string\"\n    },\n    \"build_label\": {\n      \"type\": \"string\"\n    },\n    \"builder_name\": {\n      \"type\": \"string\"\n    },\n    \"build_tool\": {\n      \"type\": \"string\"\n    },\n    \"errors_introduced_count\": {\n      \"type\": \"number\"\n    },\n    \"errors_seen_count\": {\n      \"type\": \"number\"\n    },\n    \"sessions_count_in_last_24h\": {\n      \"type\": \"number\"\n    },\n    \"total_sessions_count\": {\n      \"type\": \"number\"\n    },\n    \"unhandled_sessions_count\": {\n      \"type\": \"number\"\n    },\n    \"metadata\": {\n      \"type\": \"object\"\n    },\n    \"release_stage\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"source_control\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"service\": {\n          \"type\": \"string\"\n        },\n        \"commit_url\": {\n          \"type\": \"string\"\n        },\n        \"revision\": {\n          \"type\": \"string\"\n        },\n        \"diff_url_to_previous\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "ReleaseApiView"
                          }
                        ]
                      }
                    },
                    {
                      "body": "{\n\"errors\": [\"Release not found\"]\n}",
                      "schema": "",
                      "description": "\u003cp>Release could not be found. Check the supplied \u003ccode>release_id\u003c/code>.\u003c/p>",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "404"
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            }
          ],
          "description": ""
        },
        {
          "name": "Event data requests",
          "model": {},
          "headers": {},
          "parameters": [],
          "uriTemplate": "/projects/{project_id}/event_data_requests",
          "actions": [
            {
              "name": "Create an event data request",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/event_data_requests",
              "description": "",
              "method": "POST",
              "parameters": [
                {
                  "description": "\u003cp>ID of the project to request events for\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "5bf5b201468ce95aa753a35f",
                  "values": [],
                  "key": "project_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "{\n  \"report_type\": \"gdpr\",\n  \"filters\": {\n    \"user.id\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"user.email\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"john.doe@example.com\"\n      }\n    ],\n    \"user.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"John Doe\"\n      }\n    ],\n    \"error.status\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"open\"\n      }\n    ],\n    \"error.assigned_to\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"app.release_stage\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"production\"\n      }\n    ],\n    \"app.context\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"users#show\"\n      }\n    ],\n    \"app.type\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"sidekiq\"\n      }\n    ],\n    \"version.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.?.1\"\n      }\n    ],\n    \"version.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2.*\"\n      }\n    ],\n    \"version_code.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"version_code.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"event.class\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"NoMethodError\"\n      }\n    ],\n    \"event.message\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"redis\"\n      }\n    ],\n    \"event.file\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"app/controllers/users_controller.rb\"\n      }\n    ],\n    \"event.method\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"process_payment\"\n      }\n    ],\n    \"event.severity\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"info\"\n      }\n    ],\n    \"event.since\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"event.before\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"browser.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Chrome\"\n      }\n    ],\n    \"browser.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"70.0\"\n      }\n    ],\n    \"os.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Android\"\n      }\n    ],\n    \"os.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.2.3\"\n      }\n    ],\n    \"device.hostname\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"staging1\"\n      }\n    ],\n    \"device.manufacturer\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Google\"\n      }\n    ],\n    \"device.model\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Pixel 3\"\n      }\n    ],\n    \"request.url\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"https://api.example.com/users\"\n      }\n    ],\n    \"request.ip\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"192.168.5.6\"\n      }\n    ],\n    \"device.jailbroken\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ],\n    \"app.in_foreground\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ]\n  }\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"report_type\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"const\": \"gdpr\"\n        }\n      ]\n    },\n    \"filters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user.id\": {\n          \"type\": \"array\"\n        },\n        \"user.email\": {\n          \"type\": \"array\"\n        },\n        \"user.name\": {\n          \"type\": \"array\"\n        },\n        \"error.status\": {\n          \"type\": \"array\"\n        },\n        \"error.assigned_to\": {\n          \"type\": \"array\"\n        },\n        \"error.has_issue\": {\n          \"type\": \"boolean\"\n        },\n        \"app.release_stage\": {\n          \"type\": \"array\"\n        },\n        \"app.context\": {\n          \"type\": \"array\"\n        },\n        \"app.type\": {\n          \"type\": \"array\"\n        },\n        \"version.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"release.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"release.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"event.class\": {\n          \"type\": \"array\"\n        },\n        \"event.message\": {\n          \"type\": \"array\"\n        },\n        \"event.file\": {\n          \"type\": \"array\"\n        },\n        \"event.method\": {\n          \"type\": \"array\"\n        },\n        \"event.severity\": {\n          \"type\": \"array\"\n        },\n        \"event.since\": {\n          \"type\": \"array\"\n        },\n        \"event.before\": {\n          \"type\": \"array\"\n        },\n        \"browser.name\": {\n          \"type\": \"array\"\n        },\n        \"browser.version\": {\n          \"type\": \"array\"\n        },\n        \"os.name\": {\n          \"type\": \"array\"\n        },\n        \"os.version\": {\n          \"type\": \"array\"\n        },\n        \"device.hostname\": {\n          \"type\": \"array\"\n        },\n        \"device.manufacturer\": {\n          \"type\": \"array\"\n        },\n        \"device.model\": {\n          \"type\": \"array\"\n        },\n        \"request.url\": {\n          \"type\": \"array\"\n        },\n        \"request.ip\": {\n          \"type\": \"array\"\n        },\n        \"device.jailbroken\": {\n          \"type\": \"array\"\n        },\n        \"app.in_foreground\": {\n          \"type\": \"array\"\n        }\n      }\n    }\n  },\n  \"required\": [\n    \"filters\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "name": "",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "object",
                            "content": [
                              {
                                "element": "member",
                                "meta": {
                                  "description": "the type of report to request; omit this if you want all event fields"
                                },
                                "attributes": {
                                  "typeAttributes": [
                                    "optional"
                                  ]
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "content": "report_type"
                                  },
                                  "value": {
                                    "element": "EventDataRequestReportType"
                                  }
                                }
                              },
                              {
                                "element": "member",
                                "meta": {
                                  "description": "The filters used to determine which events will be included in the report.\nSee [Filtering](/#introduction/filtering) for details."
                                },
                                "attributes": {
                                  "typeAttributes": [
                                    "required"
                                  ]
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "content": "filters"
                                  },
                                  "value": {
                                    "element": "Filters"
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"id\": \"5bf49d97468ce913212ae486\",\n  \"status\": \"ACCEPTED\",\n  \"total\": 10,\n  \"report_type\": \"gdpr\",\n  \"filters\": {\n    \"user.id\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"user.email\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"john.doe@example.com\"\n      }\n    ],\n    \"user.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"John Doe\"\n      }\n    ],\n    \"error.status\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"open\"\n      }\n    ],\n    \"error.assigned_to\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"app.release_stage\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"production\"\n      }\n    ],\n    \"app.context\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"users#show\"\n      }\n    ],\n    \"app.type\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"sidekiq\"\n      }\n    ],\n    \"version.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.?.1\"\n      }\n    ],\n    \"version.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2.*\"\n      }\n    ],\n    \"version_code.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"version_code.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"event.class\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"NoMethodError\"\n      }\n    ],\n    \"event.message\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"redis\"\n      }\n    ],\n    \"event.file\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"app/controllers/users_controller.rb\"\n      }\n    ],\n    \"event.method\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"process_payment\"\n      }\n    ],\n    \"event.severity\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"info\"\n      }\n    ],\n    \"event.since\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"event.before\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"browser.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Chrome\"\n      }\n    ],\n    \"browser.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"70.0\"\n      }\n    ],\n    \"os.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Android\"\n      }\n    ],\n    \"os.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.2.3\"\n      }\n    ],\n    \"device.hostname\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"staging1\"\n      }\n    ],\n    \"device.manufacturer\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Google\"\n      }\n    ],\n    \"device.model\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Pixel 3\"\n      }\n    ],\n    \"request.url\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"https://api.example.com/users\"\n      }\n    ],\n    \"request.ip\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"192.168.5.6\"\n      }\n    ],\n    \"device.jailbroken\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ],\n    \"app.in_foreground\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ]\n  },\n  \"created_at\": \"2018-11-21T01:31:25.000Z\",\n  \"completed_at\": \"2018-11-21T01:35:00.000Z\",\n  \"expires_at\": \"2018-11-28T01:35:00.000Z\"\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"url\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"enum\": [\n            \"PREPARING\",\n            \"AWAITING_CONFIRMATION\",\n            \"ACCEPTED\",\n            \"IN_PROGRESS\",\n            \"COMPLETED\",\n            \"EXPIRED\"\n          ]\n        }\n      ]\n    },\n    \"total\": {\n      \"type\": \"number\"\n    },\n    \"report_type\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"const\": \"gdpr\"\n        }\n      ]\n    },\n    \"filters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user.id\": {\n          \"type\": \"array\"\n        },\n        \"user.email\": {\n          \"type\": \"array\"\n        },\n        \"user.name\": {\n          \"type\": \"array\"\n        },\n        \"error.status\": {\n          \"type\": \"array\"\n        },\n        \"error.assigned_to\": {\n          \"type\": \"array\"\n        },\n        \"error.has_issue\": {\n          \"type\": \"boolean\"\n        },\n        \"app.release_stage\": {\n          \"type\": \"array\"\n        },\n        \"app.context\": {\n          \"type\": \"array\"\n        },\n        \"app.type\": {\n          \"type\": \"array\"\n        },\n        \"version.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"release.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"release.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"event.class\": {\n          \"type\": \"array\"\n        },\n        \"event.message\": {\n          \"type\": \"array\"\n        },\n        \"event.file\": {\n          \"type\": \"array\"\n        },\n        \"event.method\": {\n          \"type\": \"array\"\n        },\n        \"event.severity\": {\n          \"type\": \"array\"\n        },\n        \"event.since\": {\n          \"type\": \"array\"\n        },\n        \"event.before\": {\n          \"type\": \"array\"\n        },\n        \"browser.name\": {\n          \"type\": \"array\"\n        },\n        \"browser.version\": {\n          \"type\": \"array\"\n        },\n        \"os.name\": {\n          \"type\": \"array\"\n        },\n        \"os.version\": {\n          \"type\": \"array\"\n        },\n        \"device.hostname\": {\n          \"type\": \"array\"\n        },\n        \"device.manufacturer\": {\n          \"type\": \"array\"\n        },\n        \"device.model\": {\n          \"type\": \"array\"\n        },\n        \"request.url\": {\n          \"type\": \"array\"\n        },\n        \"request.ip\": {\n          \"type\": \"array\"\n        },\n        \"device.jailbroken\": {\n          \"type\": \"array\"\n        },\n        \"app.in_foreground\": {\n          \"type\": \"array\"\n        }\n      }\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"completed_at\": {\n      \"type\": \"string\"\n    },\n    \"expires_at\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"status\",\n    \"filters\",\n    \"created_at\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "201",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "EventDataRequestApiView"
                          }
                        ]
                      }
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Check the status of an event data request",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/event_data_requests/{id}",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the project of the event data request\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "5bf5b201468ce95aa753a35f",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "\u003cp>ID of the event data request\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "5bf5bde1468ce95b0a6724e8",
                  "values": [],
                  "key": "id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"id\": \"5bf49d97468ce913212ae486\",\n  \"status\": \"ACCEPTED\",\n  \"total\": 10,\n  \"report_type\": \"gdpr\",\n  \"filters\": {\n    \"user.id\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"user.email\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"john.doe@example.com\"\n      }\n    ],\n    \"user.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"John Doe\"\n      }\n    ],\n    \"error.status\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"open\"\n      }\n    ],\n    \"error.assigned_to\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"app.release_stage\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"production\"\n      }\n    ],\n    \"app.context\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"users#show\"\n      }\n    ],\n    \"app.type\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"sidekiq\"\n      }\n    ],\n    \"version.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.?.1\"\n      }\n    ],\n    \"version.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2.*\"\n      }\n    ],\n    \"version_code.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"version_code.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"event.class\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"NoMethodError\"\n      }\n    ],\n    \"event.message\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"redis\"\n      }\n    ],\n    \"event.file\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"app/controllers/users_controller.rb\"\n      }\n    ],\n    \"event.method\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"process_payment\"\n      }\n    ],\n    \"event.severity\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"info\"\n      }\n    ],\n    \"event.since\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"event.before\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"browser.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Chrome\"\n      }\n    ],\n    \"browser.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"70.0\"\n      }\n    ],\n    \"os.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Android\"\n      }\n    ],\n    \"os.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.2.3\"\n      }\n    ],\n    \"device.hostname\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"staging1\"\n      }\n    ],\n    \"device.manufacturer\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Google\"\n      }\n    ],\n    \"device.model\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Pixel 3\"\n      }\n    ],\n    \"request.url\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"https://api.example.com/users\"\n      }\n    ],\n    \"request.ip\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"192.168.5.6\"\n      }\n    ],\n    \"device.jailbroken\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ],\n    \"app.in_foreground\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ]\n  },\n  \"created_at\": \"2018-11-21T01:31:25.000Z\",\n  \"completed_at\": \"2018-11-21T01:35:00.000Z\",\n  \"expires_at\": \"2018-11-28T01:35:00.000Z\"\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"url\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"enum\": [\n            \"PREPARING\",\n            \"AWAITING_CONFIRMATION\",\n            \"ACCEPTED\",\n            \"IN_PROGRESS\",\n            \"COMPLETED\",\n            \"EXPIRED\"\n          ]\n        }\n      ]\n    },\n    \"total\": {\n      \"type\": \"number\"\n    },\n    \"report_type\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"const\": \"gdpr\"\n        }\n      ]\n    },\n    \"filters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user.id\": {\n          \"type\": \"array\"\n        },\n        \"user.email\": {\n          \"type\": \"array\"\n        },\n        \"user.name\": {\n          \"type\": \"array\"\n        },\n        \"error.status\": {\n          \"type\": \"array\"\n        },\n        \"error.assigned_to\": {\n          \"type\": \"array\"\n        },\n        \"error.has_issue\": {\n          \"type\": \"boolean\"\n        },\n        \"app.release_stage\": {\n          \"type\": \"array\"\n        },\n        \"app.context\": {\n          \"type\": \"array\"\n        },\n        \"app.type\": {\n          \"type\": \"array\"\n        },\n        \"version.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"release.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"release.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"event.class\": {\n          \"type\": \"array\"\n        },\n        \"event.message\": {\n          \"type\": \"array\"\n        },\n        \"event.file\": {\n          \"type\": \"array\"\n        },\n        \"event.method\": {\n          \"type\": \"array\"\n        },\n        \"event.severity\": {\n          \"type\": \"array\"\n        },\n        \"event.since\": {\n          \"type\": \"array\"\n        },\n        \"event.before\": {\n          \"type\": \"array\"\n        },\n        \"browser.name\": {\n          \"type\": \"array\"\n        },\n        \"browser.version\": {\n          \"type\": \"array\"\n        },\n        \"os.name\": {\n          \"type\": \"array\"\n        },\n        \"os.version\": {\n          \"type\": \"array\"\n        },\n        \"device.hostname\": {\n          \"type\": \"array\"\n        },\n        \"device.manufacturer\": {\n          \"type\": \"array\"\n        },\n        \"device.model\": {\n          \"type\": \"array\"\n        },\n        \"request.url\": {\n          \"type\": \"array\"\n        },\n        \"request.ip\": {\n          \"type\": \"array\"\n        },\n        \"device.jailbroken\": {\n          \"type\": \"array\"\n        },\n        \"app.in_foreground\": {\n          \"type\": \"array\"\n        }\n      }\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"completed_at\": {\n      \"type\": \"string\"\n    },\n    \"expires_at\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"status\",\n    \"filters\",\n    \"created_at\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "EventDataRequestApiView"
                          }
                        ]
                      }
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            }
          ],
          "description": "\u003cp>Request event data for the given project. This request will start an asynchronous job to collate all event data present at the time of the request and return a URL where you can download the data when the job is complete. These endpoints are intended for bulk download of events. If you want to query events, use the \u003ca href=\"/#reference/errors/events\">Events APIs\u003c/a> instead.\u003c/p>"
        },
        {
          "name": "Event data deletions",
          "model": {},
          "headers": {},
          "parameters": [],
          "uriTemplate": "/projects/{project_id}/event_data_deletions",
          "actions": [
            {
              "name": "Create an event deletion request",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/event_data_deletions",
              "description": "\u003cp>Creates a request to asynchronously delete events for the project.\nNote that filters such as \u003ccode>user.email\u003c/code> and \u003ccode>user.name\u003c/code> use substring matching,\nso using the \u003ccode>user.id\u003c/code> filter will be more appropriate for deleting events for\n1 specific user.\u003c/p>",
              "method": "POST",
              "parameters": [
                {
                  "description": "\u003cp>ID of the project to delete events from\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "5bf5c369468ce95b0a6734c9",
                  "values": [],
                  "key": "project_id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "{\n  \"skip_confirmation\": false,\n  \"filters\": {\n    \"user.id\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"user.email\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"john.doe@example.com\"\n      }\n    ],\n    \"user.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"John Doe\"\n      }\n    ],\n    \"error.status\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"open\"\n      }\n    ],\n    \"error.assigned_to\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"app.release_stage\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"production\"\n      }\n    ],\n    \"app.context\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"users#show\"\n      }\n    ],\n    \"app.type\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"sidekiq\"\n      }\n    ],\n    \"version.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.?.1\"\n      }\n    ],\n    \"version.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2.*\"\n      }\n    ],\n    \"version_code.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"version_code.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"event.class\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"NoMethodError\"\n      }\n    ],\n    \"event.message\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"redis\"\n      }\n    ],\n    \"event.file\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"app/controllers/users_controller.rb\"\n      }\n    ],\n    \"event.method\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"process_payment\"\n      }\n    ],\n    \"event.severity\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"info\"\n      }\n    ],\n    \"event.since\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"event.before\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"browser.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Chrome\"\n      }\n    ],\n    \"browser.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"70.0\"\n      }\n    ],\n    \"os.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Android\"\n      }\n    ],\n    \"os.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.2.3\"\n      }\n    ],\n    \"device.hostname\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"staging1\"\n      }\n    ],\n    \"device.manufacturer\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Google\"\n      }\n    ],\n    \"device.model\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Pixel 3\"\n      }\n    ],\n    \"request.url\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"https://api.example.com/users\"\n      }\n    ],\n    \"request.ip\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"192.168.5.6\"\n      }\n    ],\n    \"device.jailbroken\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ],\n    \"app.in_foreground\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ]\n  }\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"skip_confirmation\": {\n      \"type\": \"boolean\"\n    },\n    \"filters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user.id\": {\n          \"type\": \"array\"\n        },\n        \"user.email\": {\n          \"type\": \"array\"\n        },\n        \"user.name\": {\n          \"type\": \"array\"\n        },\n        \"error.status\": {\n          \"type\": \"array\"\n        },\n        \"error.assigned_to\": {\n          \"type\": \"array\"\n        },\n        \"error.has_issue\": {\n          \"type\": \"boolean\"\n        },\n        \"app.release_stage\": {\n          \"type\": \"array\"\n        },\n        \"app.context\": {\n          \"type\": \"array\"\n        },\n        \"app.type\": {\n          \"type\": \"array\"\n        },\n        \"version.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"release.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"release.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"event.class\": {\n          \"type\": \"array\"\n        },\n        \"event.message\": {\n          \"type\": \"array\"\n        },\n        \"event.file\": {\n          \"type\": \"array\"\n        },\n        \"event.method\": {\n          \"type\": \"array\"\n        },\n        \"event.severity\": {\n          \"type\": \"array\"\n        },\n        \"event.since\": {\n          \"type\": \"array\"\n        },\n        \"event.before\": {\n          \"type\": \"array\"\n        },\n        \"browser.name\": {\n          \"type\": \"array\"\n        },\n        \"browser.version\": {\n          \"type\": \"array\"\n        },\n        \"os.name\": {\n          \"type\": \"array\"\n        },\n        \"os.version\": {\n          \"type\": \"array\"\n        },\n        \"device.hostname\": {\n          \"type\": \"array\"\n        },\n        \"device.manufacturer\": {\n          \"type\": \"array\"\n        },\n        \"device.model\": {\n          \"type\": \"array\"\n        },\n        \"request.url\": {\n          \"type\": \"array\"\n        },\n        \"request.ip\": {\n          \"type\": \"array\"\n        },\n        \"device.jailbroken\": {\n          \"type\": \"array\"\n        },\n        \"app.in_foreground\": {\n          \"type\": \"array\"\n        }\n      }\n    }\n  },\n  \"required\": [\n    \"filters\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "name": "",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "object",
                            "content": [
                              {
                                "element": "member",
                                "meta": {
                                  "description": "whether to skip requiring another request to confirm the deletion"
                                },
                                "attributes": {
                                  "typeAttributes": [
                                    "optional"
                                  ]
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "content": "skip_confirmation"
                                  },
                                  "value": {
                                    "element": "boolean",
                                    "attributes": {
                                      "default": false
                                    },
                                    "content": false
                                  }
                                }
                              },
                              {
                                "element": "member",
                                "meta": {
                                  "description": "The filters used to determine which events will be deleted.\nSee [Filtering](/#introduction/filtering) for details.\nNote that filters with an empty string value and filters that don't\napply to a project (e.g. using a custom filter from one project on\nanother project that doesn't have that custom filter) will be skipped.\nBefore proceeding with an event data deletion request, it's recommended to verify the\n[project's event fields](/#reference/projects/event-fields/list-the-event-fields-for-a-project)\nand test your filters using the\n[List the Events on an Error](/#reference/errors/events/list-the-events-on-a-project)\nor\n[Create an event data request](/#reference/projects/event-data-requests/create-an-event-data-request)\nAPI."
                                },
                                "attributes": {
                                  "typeAttributes": [
                                    "required"
                                  ]
                                },
                                "content": {
                                  "key": {
                                    "element": "string",
                                    "content": "filters"
                                  },
                                  "value": {
                                    "element": "Filters"
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"id\": \"5bf4b8aed1befa02a523f526\",\n  \"status\": \"IN_PROGRESS\",\n  \"total\": 12,\n  \"filters\": {\n    \"user.id\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"user.email\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"john.doe@example.com\"\n      }\n    ],\n    \"user.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"John Doe\"\n      }\n    ],\n    \"error.status\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"open\"\n      }\n    ],\n    \"error.assigned_to\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"app.release_stage\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"production\"\n      }\n    ],\n    \"app.context\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"users#show\"\n      }\n    ],\n    \"app.type\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"sidekiq\"\n      }\n    ],\n    \"version.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.?.1\"\n      }\n    ],\n    \"version.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2.*\"\n      }\n    ],\n    \"version_code.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"version_code.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"event.class\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"NoMethodError\"\n      }\n    ],\n    \"event.message\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"redis\"\n      }\n    ],\n    \"event.file\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"app/controllers/users_controller.rb\"\n      }\n    ],\n    \"event.method\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"process_payment\"\n      }\n    ],\n    \"event.severity\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"info\"\n      }\n    ],\n    \"event.since\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"event.before\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"browser.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Chrome\"\n      }\n    ],\n    \"browser.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"70.0\"\n      }\n    ],\n    \"os.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Android\"\n      }\n    ],\n    \"os.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.2.3\"\n      }\n    ],\n    \"device.hostname\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"staging1\"\n      }\n    ],\n    \"device.manufacturer\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Google\"\n      }\n    ],\n    \"device.model\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Pixel 3\"\n      }\n    ],\n    \"request.url\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"https://api.example.com/users\"\n      }\n    ],\n    \"request.ip\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"192.168.5.6\"\n      }\n    ],\n    \"device.jailbroken\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ],\n    \"app.in_foreground\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ]\n  },\n  \"created_at\": \"2018-11-21T01:31:25.000Z\",\n  \"completed_at\": \"2018-11-21T01:35:00.000Z\"\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"enum\": [\n            \"PREPARING\",\n            \"AWAITING_CONFIRMATION\",\n            \"ACCEPTED\",\n            \"IN_PROGRESS\",\n            \"COMPLETED\",\n            \"EXPIRED\"\n          ]\n        }\n      ]\n    },\n    \"total\": {\n      \"type\": \"number\"\n    },\n    \"filters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user.id\": {\n          \"type\": \"array\"\n        },\n        \"user.email\": {\n          \"type\": \"array\"\n        },\n        \"user.name\": {\n          \"type\": \"array\"\n        },\n        \"error.status\": {\n          \"type\": \"array\"\n        },\n        \"error.assigned_to\": {\n          \"type\": \"array\"\n        },\n        \"error.has_issue\": {\n          \"type\": \"boolean\"\n        },\n        \"app.release_stage\": {\n          \"type\": \"array\"\n        },\n        \"app.context\": {\n          \"type\": \"array\"\n        },\n        \"app.type\": {\n          \"type\": \"array\"\n        },\n        \"version.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"release.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"release.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"event.class\": {\n          \"type\": \"array\"\n        },\n        \"event.message\": {\n          \"type\": \"array\"\n        },\n        \"event.file\": {\n          \"type\": \"array\"\n        },\n        \"event.method\": {\n          \"type\": \"array\"\n        },\n        \"event.severity\": {\n          \"type\": \"array\"\n        },\n        \"event.since\": {\n          \"type\": \"array\"\n        },\n        \"event.before\": {\n          \"type\": \"array\"\n        },\n        \"browser.name\": {\n          \"type\": \"array\"\n        },\n        \"browser.version\": {\n          \"type\": \"array\"\n        },\n        \"os.name\": {\n          \"type\": \"array\"\n        },\n        \"os.version\": {\n          \"type\": \"array\"\n        },\n        \"device.hostname\": {\n          \"type\": \"array\"\n        },\n        \"device.manufacturer\": {\n          \"type\": \"array\"\n        },\n        \"device.model\": {\n          \"type\": \"array\"\n        },\n        \"request.url\": {\n          \"type\": \"array\"\n        },\n        \"request.ip\": {\n          \"type\": \"array\"\n        },\n        \"device.jailbroken\": {\n          \"type\": \"array\"\n        },\n        \"app.in_foreground\": {\n          \"type\": \"array\"\n        }\n      }\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"completed_at\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"status\",\n    \"filters\",\n    \"created_at\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "201",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "EventDataDeletionApiView"
                          }
                        ]
                      }
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Confirm an event deletion request",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/event_data_deletions/{id}/confirm",
              "description": "",
              "method": "POST",
              "parameters": [
                {
                  "description": "\u003cp>ID of the project of the deletion request\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "5bf5c369468ce95b0a6734c9",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "\u003cp>ID of the deletion request\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "5bf5c5ee468ce95db8170d15",
                  "values": [],
                  "key": "id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"id\": \"5bf4b8aed1befa02a523f526\",\n  \"status\": \"IN_PROGRESS\",\n  \"total\": 12,\n  \"filters\": {\n    \"user.id\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"user.email\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"john.doe@example.com\"\n      }\n    ],\n    \"user.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"John Doe\"\n      }\n    ],\n    \"error.status\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"open\"\n      }\n    ],\n    \"error.assigned_to\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"app.release_stage\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"production\"\n      }\n    ],\n    \"app.context\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"users#show\"\n      }\n    ],\n    \"app.type\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"sidekiq\"\n      }\n    ],\n    \"version.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.?.1\"\n      }\n    ],\n    \"version.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2.*\"\n      }\n    ],\n    \"version_code.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"version_code.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"event.class\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"NoMethodError\"\n      }\n    ],\n    \"event.message\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"redis\"\n      }\n    ],\n    \"event.file\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"app/controllers/users_controller.rb\"\n      }\n    ],\n    \"event.method\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"process_payment\"\n      }\n    ],\n    \"event.severity\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"info\"\n      }\n    ],\n    \"event.since\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"event.before\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"browser.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Chrome\"\n      }\n    ],\n    \"browser.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"70.0\"\n      }\n    ],\n    \"os.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Android\"\n      }\n    ],\n    \"os.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.2.3\"\n      }\n    ],\n    \"device.hostname\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"staging1\"\n      }\n    ],\n    \"device.manufacturer\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Google\"\n      }\n    ],\n    \"device.model\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Pixel 3\"\n      }\n    ],\n    \"request.url\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"https://api.example.com/users\"\n      }\n    ],\n    \"request.ip\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"192.168.5.6\"\n      }\n    ],\n    \"device.jailbroken\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ],\n    \"app.in_foreground\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ]\n  },\n  \"created_at\": \"2018-11-21T01:31:25.000Z\",\n  \"completed_at\": \"2018-11-21T01:35:00.000Z\"\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"enum\": [\n            \"PREPARING\",\n            \"AWAITING_CONFIRMATION\",\n            \"ACCEPTED\",\n            \"IN_PROGRESS\",\n            \"COMPLETED\",\n            \"EXPIRED\"\n          ]\n        }\n      ]\n    },\n    \"total\": {\n      \"type\": \"number\"\n    },\n    \"filters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user.id\": {\n          \"type\": \"array\"\n        },\n        \"user.email\": {\n          \"type\": \"array\"\n        },\n        \"user.name\": {\n          \"type\": \"array\"\n        },\n        \"error.status\": {\n          \"type\": \"array\"\n        },\n        \"error.assigned_to\": {\n          \"type\": \"array\"\n        },\n        \"error.has_issue\": {\n          \"type\": \"boolean\"\n        },\n        \"app.release_stage\": {\n          \"type\": \"array\"\n        },\n        \"app.context\": {\n          \"type\": \"array\"\n        },\n        \"app.type\": {\n          \"type\": \"array\"\n        },\n        \"version.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"release.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"release.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"event.class\": {\n          \"type\": \"array\"\n        },\n        \"event.message\": {\n          \"type\": \"array\"\n        },\n        \"event.file\": {\n          \"type\": \"array\"\n        },\n        \"event.method\": {\n          \"type\": \"array\"\n        },\n        \"event.severity\": {\n          \"type\": \"array\"\n        },\n        \"event.since\": {\n          \"type\": \"array\"\n        },\n        \"event.before\": {\n          \"type\": \"array\"\n        },\n        \"browser.name\": {\n          \"type\": \"array\"\n        },\n        \"browser.version\": {\n          \"type\": \"array\"\n        },\n        \"os.name\": {\n          \"type\": \"array\"\n        },\n        \"os.version\": {\n          \"type\": \"array\"\n        },\n        \"device.hostname\": {\n          \"type\": \"array\"\n        },\n        \"device.manufacturer\": {\n          \"type\": \"array\"\n        },\n        \"device.model\": {\n          \"type\": \"array\"\n        },\n        \"request.url\": {\n          \"type\": \"array\"\n        },\n        \"request.ip\": {\n          \"type\": \"array\"\n        },\n        \"device.jailbroken\": {\n          \"type\": \"array\"\n        },\n        \"app.in_foreground\": {\n          \"type\": \"array\"\n        }\n      }\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"completed_at\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"status\",\n    \"filters\",\n    \"created_at\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "EventDataDeletionApiView"
                          }
                        ]
                      }
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            },
            {
              "name": "Check the status of an event deletion request",
              "relation": "",
              "uriTemplate": "/projects/{project_id}/event_data_deletions/{id}",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "description": "\u003cp>ID of the project of the deletion request\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "5bf5c369468ce95b0a6734c9",
                  "values": [],
                  "key": "project_id"
                },
                {
                  "description": "\u003cp>ID of the deletion request\u003c/p>\n",
                  "type": "string",
                  "required": true,
                  "default": "",
                  "example": "5bf5c5ee468ce95db8170d15",
                  "values": [],
                  "key": "id"
                }
              ],
              "headers": {},
              "examples": [
                {
                  "requests": [
                    {
                      "body": "",
                      "schema": "",
                      "description": "",
                      "headers": {},
                      "headers1A": [],
                      "name": "",
                      "authSchemes": []
                    }
                  ],
                  "responses": [
                    {
                      "body": "{\n  \"id\": \"5bf4b8aed1befa02a523f526\",\n  \"status\": \"IN_PROGRESS\",\n  \"total\": 12,\n  \"filters\": {\n    \"user.id\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"user.email\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"john.doe@example.com\"\n      }\n    ],\n    \"user.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"John Doe\"\n      }\n    ],\n    \"error.status\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"open\"\n      }\n    ],\n    \"error.assigned_to\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"515fb9337c1074f6fd000002\"\n      }\n    ],\n    \"app.release_stage\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"production\"\n      }\n    ],\n    \"app.context\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"users#show\"\n      }\n    ],\n    \"app.type\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"sidekiq\"\n      }\n    ],\n    \"version.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.?.1\"\n      }\n    ],\n    \"version.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2.*\"\n      }\n    ],\n    \"version_code.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"version_code.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.introduced_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"release.seen_in\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"123\"\n      }\n    ],\n    \"event.class\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"NoMethodError\"\n      }\n    ],\n    \"event.message\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"redis\"\n      }\n    ],\n    \"event.file\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"app/controllers/users_controller.rb\"\n      }\n    ],\n    \"event.method\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"process_payment\"\n      }\n    ],\n    \"event.severity\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"info\"\n      }\n    ],\n    \"event.since\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"event.before\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"2017-04-18T22:12:00.000Z\"\n      }\n    ],\n    \"browser.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Chrome\"\n      }\n    ],\n    \"browser.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"70.0\"\n      }\n    ],\n    \"os.name\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Android\"\n      }\n    ],\n    \"os.version\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"1.2.3\"\n      }\n    ],\n    \"device.hostname\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"staging1\"\n      }\n    ],\n    \"device.manufacturer\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Google\"\n      }\n    ],\n    \"device.model\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"Pixel 3\"\n      }\n    ],\n    \"request.url\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"https://api.example.com/users\"\n      }\n    ],\n    \"request.ip\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"192.168.5.6\"\n      }\n    ],\n    \"device.jailbroken\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ],\n    \"app.in_foreground\": [\n      {\n        \"type\": \"eq\",\n        \"value\": \"true\"\n      }\n    ]\n  },\n  \"created_at\": \"2018-11-21T01:31:25.000Z\",\n  \"completed_at\": \"2018-11-21T01:35:00.000Z\"\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"enum\": [\n            \"PREPARING\",\n            \"AWAITING_CONFIRMATION\",\n            \"ACCEPTED\",\n            \"IN_PROGRESS\",\n            \"COMPLETED\",\n            \"EXPIRED\"\n          ]\n        }\n      ]\n    },\n    \"total\": {\n      \"type\": \"number\"\n    },\n    \"filters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user.id\": {\n          \"type\": \"array\"\n        },\n        \"user.email\": {\n          \"type\": \"array\"\n        },\n        \"user.name\": {\n          \"type\": \"array\"\n        },\n        \"error.status\": {\n          \"type\": \"array\"\n        },\n        \"error.assigned_to\": {\n          \"type\": \"array\"\n        },\n        \"error.has_issue\": {\n          \"type\": \"boolean\"\n        },\n        \"app.release_stage\": {\n          \"type\": \"array\"\n        },\n        \"app.context\": {\n          \"type\": \"array\"\n        },\n        \"app.type\": {\n          \"type\": \"array\"\n        },\n        \"version.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"version_code.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"release.introduced_in\": {\n          \"type\": \"array\"\n        },\n        \"release.seen_in\": {\n          \"type\": \"array\"\n        },\n        \"event.class\": {\n          \"type\": \"array\"\n        },\n        \"event.message\": {\n          \"type\": \"array\"\n        },\n        \"event.file\": {\n          \"type\": \"array\"\n        },\n        \"event.method\": {\n          \"type\": \"array\"\n        },\n        \"event.severity\": {\n          \"type\": \"array\"\n        },\n        \"event.since\": {\n          \"type\": \"array\"\n        },\n        \"event.before\": {\n          \"type\": \"array\"\n        },\n        \"browser.name\": {\n          \"type\": \"array\"\n        },\n        \"browser.version\": {\n          \"type\": \"array\"\n        },\n        \"os.name\": {\n          \"type\": \"array\"\n        },\n        \"os.version\": {\n          \"type\": \"array\"\n        },\n        \"device.hostname\": {\n          \"type\": \"array\"\n        },\n        \"device.manufacturer\": {\n          \"type\": \"array\"\n        },\n        \"device.model\": {\n          \"type\": \"array\"\n        },\n        \"request.url\": {\n          \"type\": \"array\"\n        },\n        \"request.ip\": {\n          \"type\": \"array\"\n        },\n        \"device.jailbroken\": {\n          \"type\": \"array\"\n        },\n        \"app.in_foreground\": {\n          \"type\": \"array\"\n        }\n      }\n    },\n    \"created_at\": {\n      \"type\": \"string\"\n    },\n    \"completed_at\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"status\",\n    \"filters\",\n    \"created_at\"\n  ]\n}",
                      "description": "",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "headers1A": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "status": "200",
                      "attributes": {
                        "element": "dataStructure",
                        "content": [
                          {
                            "element": "EventDataDeletionApiView"
                          }
                        ]
                      }
                    }
                  ],
                  "name": "",
                  "description": ""
                }
              ]
            }
          ],
          "description": "\u003cp>Request events of the given project to be deleted. This request will start an asynchronous job to delete events present at the time of the request. If you want to delete a single event, use \u003ca href=\"/#reference/errors/events/delete-an-event\">this endpoint\u003c/a> instead.\u003c/p>"
        }
      ]
    }
  ]
}
