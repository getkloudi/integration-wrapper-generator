{
  "swagger": "2.0",
  "schemes": [
    "https"
  ],
  "host": "api.atlassian.com/ex/jira",
  "basePath": "/{cloudid}/rest/api/3",
  "info": {
    "contact": {
      "email": "ecosystem@atlassian.com"
    },
    "description": "Jira Cloud platform REST API documentation",
    "title": "The Jira Cloud platform REST API",
    "version": "1001.0.0-SNAPSHOT",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "http://atlassian.com/terms/"
  },
  "x-atlassian-narrative": {
    "documents": [
      {
        "anchor": "about",
        "body": "The Jira REST API enables you to interact with Jira programmatically. Use this API to \n[build apps](https://developer.atlassian.com/cloud/jira/platform/integrating-with-jira-cloud/), script interactions with \nJira, or develop any other type of integration. This page documents the REST resources available in Jira Cloud, including \nthe HTTP response codes and example requests and responses.",
        "title": "About"
      },
      {
        "anchor": "version",
        "body": "This documentation is for **version 3** of the Jira Cloud platform REST API, which is the latest version. \n\nThe URIs for resources have the following structure:\n\n`https://<site-url>/rest/api/3/<resource-name>`\n\nFor example,\n`https://your-domain.atlassian.net/rest/api/3/issue/DEMO-1`\n\n**Note that version 3 of the Jira Cloud platform REST API is in beta**. All the endpoints from the \n[version 2](https://developer.atlassian.com/cloud/jira/platform/rest/v2/) API are available. However,\nthey are under development and may change. \n\nThe change from version 2 is the introduction of the \n[Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/) \nto: \n- `body` in comments, including where comments are used in issue, issue link, and transition resources.\n- `comment` in worklogs.\n- `description` and `environment` fields in issues.\n- `textarea` type custom fields (multi-line text fields) in issues. Single line custom fields \n  (`textfield`) accept a string and don't handle Atlassian Document Format content.",
        "title": "Version and URI"
      },
      {
        "anchor": "authentication",
        "body": "### Connect apps\n\nFor Connect apps, authentication (JWT-based) is built into the Connect libraries. Authorization is implemented using either \nscopes (shown as _App scope required_ for operations on this page) or user impersonation. See \n[Security for Connect apps](https://developer.atlassian.com/cloud/jira/platform/security-for-connect-apps/) \nfor details.\n\n### Other integrations\n\nFor integrations that are not Connect apps, use OAuth 2.0 authorization code grants (3LO) for security \n(3LO scopes are shown as _OAuth scopes required_ for operations on this page). Basic authentication is also available, \nbut you should only use it for tools such as personal scripts or bots. See \n[Security for other integrations](https://developer.atlassian.com/cloud/jira/platform/security-for-other-integrations/) \nfor details.",
        "title": "Authentication and authorization"
      },
      {
        "anchor": "permissions",
        "body": "### Operation permissions\n\nMost operations in this API require permissions. The calling user must have the required permissions for an operation to \nuse it. Note that for Connect apps, the app user must have the required permissions for the operation and the app must \nhave scopes that permit the operation.\n\nA permission can be granted to a group, project role, or issue role that the user is a member of, or granted directly to a user. \nSee [Permissions overview](https://confluence.atlassian.com/x/FQiiLQ) for details. The most common permissions are:\n\n- **Administer the Cloud site**: Users in the _site-admins_ group have this \npermission. See [Manage groups](https://confluence.atlassian.com/x/24xjL) for details.\n- **Administer Jira**: Granted by the _Jira Administrators_ global permission. Users in the _administrators_ group have this \npermission. See [Manage groups](https://confluence.atlassian.com/x/24xjL) and \n[Managing global permissions](https://confluence.atlassian.com/x/x4dKLg) for details.\n- **Administer a project in Jira**: Granted by the _Administer projects_ project permission for a project. This can be \ngranted to a user, a group, a project role, and more. \nSee [Managing project permissions](https://confluence.atlassian.com/x/yodKLg) for details.\n- **Access a project in Jira**: Granted by the _Browse projects_ project permission for a project. This can be \ngranted to a user, a group, a project role, and more. \nSee [Managing project permissions](https://confluence.atlassian.com/x/yodKLg) for details.\n- **Access Jira**: Granted by the _Jira Users_ global permission. Users in the _\\[product]-users_ (for example, \n_jira-software-users_) group have this permission. \nSee [Manage groups](https://confluence.atlassian.com/x/24xjL) and \n[Managing global permissions](https://confluence.atlassian.com/x/x4dKLg) for details.\n\n### Anonymous access\n\nSome operations provide support for anonymous access. However, anonymous access is only available if \nthe Jira permission needed to access the object or records returned by the operation is granted to \nthe _Public_ group. See [Allowing anonymous access to your project](https://confluence.atlassian.com/x/GDxxLg) \nfor details.\n\nIf an operation is called anonymously and anonymous access is not available, the operation will return \nan error. Note that not all operations that correspond to objects that can be given public access \nprovide for anonymous access.",
        "title": "Permissions"
      },
      {
        "anchor": "expansion",
        "body": "### Expansion\n\nThe Jira REST API uses resource expansion, which means that some parts of a resource are not returned unless specified \nin the request. This simplifies responses and minimizes network traffic.\n\nTo expand part of a resource in a request, use the expand query parameter and specify the object(s) to be expanded. \nIf you need to expand nested objects, use the `.` dot notation. If you need to expand multiple objects, use a \ncomma-separated list. \n\nFor example, the following request expands the `names` and `renderedFields` properties for the _JRACLOUD-34423_ issue:\n\n`GET issue/JRACLOUD-34423?expand=names,renderedFields`\n\nTo discover which object can be expanded, refer to the `expand` property in the object. \nIn the JSON example below, the resource declares `widgets` as expandable.\n\n```json\n{\n  \"expand\": \"widgets\", \n  \"self\": \"https://your-domain.atlassian.net/rest/api/3/resource/KEY-1\", \n  \"widgets\": {\n    \"widgets\": [],\n    \"size\": 5\n   }\n}\n```\n\n### Pagination\n\nThe Jira REST API uses pagination to improve performance. Pagination is enforced for operations that could return a large \ncollection of items. When you make a request to a paginated resource, the response wraps the returned array of values in \na JSON object with paging metadata. For example:\n\n```json\n{\n    \"startAt\" : 0,\n    \"maxResults\" : 10,\n    \"total\": 200,\n    \"isLast\": false,\n    \"values\": [\n        { /* result 0 */ },\n        { /* result 1 */ },\n        { /* result 2 */ }\n    ]\n}\n```\n\n*   `startAt` is the index of the first item returned in the page.\n*   `maxResults` is the maximum number of items that a page can return. Each operation can have a different limit for\n    the number of items returned, and these limits may change without notice. To find the maximum number of items \n    that an operation could return, set `maxResults` to a large number—for example, over 1000—and if the returned value of `maxResults` is less than the requested value, the returned value is the maximum.\n*    `total` is the total number of items contained in all pages. This number **_may change_** as the client \nrequests the subsequent pages, therefore the client should always assume that the requested page can be empty. Note \nthat this property is not returned for all operations.\n*   `isLast` indicates whether the page returned is the last one. Note that this property is not returned for all operations.\n\n### Ordering\n\nSome operations support ordering the elements of a response by a field. Check the documentation for the operation to \nconfirm whether ordering of a response is supported and which fields can be used. Responses are listed in ascending order \nby default. You can change the order using the `orderby` query parameter with a `-` or `+` symbol. For example:\n\n*   `?orderBy=name` to order by `name` field ascending.\n*   `?orderBy=+name` to order by `name` field ascending.\n*   `?orderBy=-name` to order by `name` field descending.\n\n\n",
        "title": "Expansion, pagination, and ordering"
      },
      {
        "anchor": "special-request-headers",
        "body": "The following request and response headers define important metadata for the Jira Cloud REST API resources.\n\n-   `X-Atlassian-Token` (request): Operations that accept multipart/form-data must include the `X-Atlassian-Token: no-check`\nheader in requests. Otherwise the request will be blocked by cross-site request forgery (CSRF/XSRF) protection.\n-   `X-Force-Accept-Language` (request): controls how the standard HTTP `Accept-Language` header is processed.\nBy default `Accept-Language` is ignored and the response is in the language configured in the user's profile or,\nwhen no language is configured for the user, the default Jira instance language. For the response to recognize\n`Accept-Language` send `X-Force-Accept-Language = true` as well. If `Accept-Language` requests a language that Jira\ncan return the response is in that language, otherwise Jira returns the response in the default language. If\n`Accept-Language` is not specified the response is in the default language.\n-   `X-AccountId` (response): This response header contains the Atlassian account ID of the authenticated user.",
        "title": "Special headers"
      },
      {
        "anchor": "anonymous-operations",
        "body": " Jira provides for all permissions, except the [global permission](https://confluence.atlassian.com/x/x4dKLg) Administer Jira, to be assigned to *Anyone*. Once a permission is assigned to *Anyone*, anyone knowing a project's URL is able to use the features in Jira enabled by the permission. However, the Jira REST API does not enable anonymous access for operations by default. This means that an anonymous user who may be able to perform an action through Jira, may not be able to perform the same action where it's enabled by the REST API. \n\n The operations that provide anonymous access are annotated \"This operation can be accessed anonymously.\"",
        "title": "Anonymous operations"
      },
      {
        "anchor": "async-operations",
        "body": "Some Jira REST API operations may trigger long-running or computationally expensive tasks. In these cases, the operation \nwill schedule an asynchronous task and return a `303 (See Other)` response, indicating the location of the queued task \nin the `Location` header. You can query this task to get progress updates.\n\nWhen the task finishes, the response object will contain the `result` field. The content of the field is specific to the \noperation that created the task. Refer to the operation’s documentation for more information.\n\nNote that asynchronous tasks are not guaranteed to be run in order. In other words, if you need your tasks to execute \nin a certain order, you should start a task only after the prerequisite task(s) have finished.",
        "title": "Asynchronous operations"
      },
      {
        "anchor": "experimental",
        "body": "Features and methods marked as experimental may change without notice. Feedback on experimental functionality is welcome. \nReport your suggestions and bugs in the [ACJIRA project](https://ecosystem.atlassian.net/projects/ACJIRA) (preferred) or use the \n**Give docs feedback** link at the top of this page. \n",
        "title": "Experimental features"
      },
      {
        "anchor": "status-codes",
        "body": "The Jira Cloud platform REST API uses the [standard HTTP status codes](https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html).\n\nOperations that return an error status code may also return a response body containing details of the error or errors. \nThe schema for the response body is shown below:\n\n\n```json\n{\n  \"id\": \"https://docs.atlassian.com/jira/REST/schema/error-collection#\",\n  \"title\": \"Error Collection\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"errorMessages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    },\n    \"errors\": {\n      \"type\": \"object\",\n      \"patternProperties\": {\n        \".+\": {\n          \"type\": \"string\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"status\": { \n      \"type\": \"integer\"\n    }\n  },\n  \"additionalProperties\": false\n}\n```",
        "title": "Status codes"
      }
    ]
  },
  "x-components": {},
  "securityDefinitions": {
    "OAuth2": {
      "authorizationUrl": "https://auth.atlassian.com/authorize",
      "description": "OAuth2 scopes for Jira",
      "flow": "accessCode",
      "scopes": {
        "manage:jira-configuration": "Configure Jira settings that require the Jira administrators permission, for example, create projects and custom fields, view workflows, manage issue link types.",
        "manage:jira-project": "Create and edit project settings and create new project-level objects, for example, versions, components.",
        "read:jira-user": "View user information in Jira that you have access to, including usernames, email addresses, and avatars.",
        "read:jira-work": "Read project and issue data. Search for issues and objects associated with issues (such as attachments and worklogs).",
        "write:jira-work": "Create and edit issues in Jira, post comments, create worklogs, and delete issues."
      },
      "tokenUrl": "https://auth.atlassian.com/oauth/token",
      "type": "oauth2"
    },
    "basicAuth": {
      "description": "You can access this resource via basic auth.",
      "type": "basic"
    }
  },
  "parameters": {
    "cloudid": {
      "in": "path",
      "name": "cloudid",
      "required": true,
      "schema": {
        "type": "string"
      },
      "description": "Cloudi of the project"
    }
  },
  "paths": {
    "/application-properties": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The key of the application property.",
            "in": "query",
            "name": "key",
            "type": "string"
          },
          {
            "description": "The permission level of all items being returned in the list.",
            "in": "query",
            "name": "permissionLevel",
            "type": "string"
          },
          {
            "description": "When a `key` isn't provided, this filters the list of results by the application property `key` using a regular expression. For example, using `jira.lf.*` will return all application properties with keys that start with *jira.lf.*.",
            "in": "query",
            "name": "keyFilter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"id\":\"jira.home\",\"key\":\"jira.home\",\"value\":\"/var/jira/jira-home\",\"name\":\"jira.home\",\"desc\":\"Jira home directory\",\"type\":\"string\",\"defaultValue\":\"\"},{\"id\":\"jira.clone.prefix\",\"key\":\"jira.clone.prefix\",\"value\":\"CLONE -\",\"name\":\"The prefix added to the Summary field of cloned issues\",\"type\":\"string\",\"defaultValue\":\"CLONE -\"}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ApplicationProperty"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the application property is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Jira settings"
        ],
        "deprecated": false,
        "summary": "Get application property",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/application-properties/advanced-settings": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"id\":\"jira.home\",\"key\":\"jira.home\",\"value\":\"/var/jira/jira-home\",\"name\":\"jira.home\",\"desc\":\"Jira home directory\",\"type\":\"string\",\"defaultValue\":\"\"},{\"id\":\"jira.clone.prefix\",\"key\":\"jira.clone.prefix\",\"value\":\"CLONE -\",\"name\":\"The prefix added to the Summary field of cloned issues\",\"type\":\"string\",\"defaultValue\":\"CLONE -\"}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ApplicationProperty"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user is not an administrator."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Jira settings"
        ],
        "deprecated": false,
        "summary": "Get advanced settings",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/application-properties/{id}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The key of the application property to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SimpleApplicationPropertyBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "schema": {
              "$ref": "#/definitions/ApplicationProperty"
            }
          },
          "400": {
            "description": "Returned if the data type of the `value` does not match the application property's data type. For example, a string is provided instead of an integer."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have permission to edit the property."
          },
          "404": {
            "description": "Returned if the property is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Jira settings"
        ],
        "deprecated": false,
        "summary": "Set application property",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/applicationrole": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"key\":\"jira-software\",\"groups\":[\"jira-software-users\",\"jira-testers\"],\"name\":\"Jira Software\",\"defaultGroups\":[\"jira-software-users\"],\"selectedByDefault\":false,\"defined\":false,\"numberOfSeats\":10,\"remainingSeats\":5,\"userCount\":5,\"userCountDescription\":\"5 developers\",\"hasUnlimitedSeats\":false,\"platform\":false},{\"key\":\"jira-core\",\"groups\":[\"jira-core-users\"],\"name\":\"Jira Core\",\"defaultGroups\":[\"jira-core-users\"],\"selectedByDefault\":false,\"defined\":false,\"numberOfSeats\":1,\"remainingSeats\":1,\"userCount\":0,\"userCountDescription\":\"0 users\",\"hasUnlimitedSeats\":false,\"platform\":true}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ApplicationRole"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user is not an administrator."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Application roles"
        ],
        "deprecated": false,
        "summary": "Get all application roles",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/applicationrole/{key}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The key of the application role. Use the [Get all application roles](#api-rest-api-3-applicationrole-get) operation to get the key for each application role.",
            "in": "path",
            "name": "key",
            "required": true,
            "type": "string",
            "x-showInExample": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"key\":\"jira-software\",\"groups\":[\"jira-software-users\",\"jira-testers\"],\"name\":\"Jira Software\",\"defaultGroups\":[\"jira-software-users\"],\"selectedByDefault\":false,\"defined\":false,\"numberOfSeats\":10,\"remainingSeats\":5,\"userCount\":5,\"userCountDescription\":\"5 developers\",\"hasUnlimitedSeats\":false,\"platform\":false}"
            },
            "schema": {
              "$ref": "#/definitions/ApplicationRole"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user is not an administrator."
          },
          "404": {
            "description": "Returned if the role is not found."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Application roles"
        ],
        "deprecated": false,
        "summary": "Get application role",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/attachment/meta": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"enabled\":true,\"uploadLimit\":1000000}"
            },
            "schema": {
              "$ref": "#/definitions/AttachmentSettings"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue attachments"
        ],
        "deprecated": false,
        "summary": "Get Jira attachment settings",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/attachment/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the attachment.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if:\n\n *  the attachment is not found.\n *  attachments are disabled in the Jira settings."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue attachments"
        ],
        "deprecated": false,
        "summary": "Delete attachment",
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the attachment.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":10000,\"self\":\"https://your-domain.atlassian.net/rest/api/3/attachments/10000\",\"filename\":\"picture.jpg\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2020-06-15T03:55:41.964+0000\",\"size\":23123,\"mimeType\":\"image/jpeg\",\"content\":\"https://your-domain.atlassian.net/jira/secure/attachments/10000/picture.jpg\",\"thumbnail\":\"https://your-domain.atlassian.net/jira/secure/thumbnail/10000/picture.jpg\"}"
            },
            "schema": {
              "$ref": "#/definitions/AttachmentMetadata"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if:\n\n *  the attachment is not found.\n *  attachments are disabled in the Jira settings."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue attachments"
        ],
        "deprecated": false,
        "summary": "Get attachment metadata",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/attachment/{id}/expand/human": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the attachment.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful. If an empty list is returned in the response, the attachment is empty, corrupt, or not an archive.",
            "examples": {
              "application/json": "{\"id\":7237823,\"name\":\"images.zip\",\"entries\":[{\"path\":\"MG00N067.JPG\",\"index\":0,\"size\":\"119 kB\",\"mediaType\":\"image/jpeg\",\"label\":\"MG00N067.JPG\"},{\"path\":\"Allegro from Duet in C Major.mp3\",\"index\":1,\"size\":\"1.36 MB\",\"mediaType\":\"audio/mpeg\",\"label\":\"Allegro from Duet in C Major.mp3\"},{\"path\":\"long/path/thanks/to/lots/of/subdirectories/inside/making/it/quite/hard/to/reach/the/leaf.txt\",\"index\":2,\"size\":\"0.0 k\",\"mediaType\":\"text/plain\",\"label\":\"long/path/thanks/to/.../reach/the/leaf.txt\"}],\"totalEntryCount\":39,\"mediaType\":\"application/zip\"}"
            },
            "schema": {
              "$ref": "#/definitions/AttachmentArchiveMetadataReadable"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "The user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if:\n\n *  the attachment is not found.\n *  attachments are disabled in the Jira settings."
          },
          "409": {
            "description": "Returned if the attachment is an archive, but not a supported archive format."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue attachments"
        ],
        "deprecated": false,
        "summary": "Get all metadata for an expanded attachment",
        "x-atlassian-connect-scope": "READ",
        "x-experimental": true
      }
    },
    "/attachment/{id}/expand/raw": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the attachment.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful. If an empty list is returned in the response, the attachment is empty, corrupt, or not an archive.",
            "examples": {
              "application/json": "{\"entries\":[{\"entryIndex\":0,\"name\":\"Allegro from Duet in C Major.mp3\",\"size\":1430174,\"mediaType\":\"audio/mpeg\"},{\"entryIndex\":1,\"name\":\"lrm.rtf\",\"size\":331,\"mediaType\":\"text/rtf\"}],\"totalEntryCount\":24}"
            },
            "schema": {
              "$ref": "#/definitions/AttachmentArchiveImpl"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "The user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if:\n\n *  the attachment is not found.\n *  attachments are disabled in the Jira settings."
          },
          "409": {
            "description": "Returned if the attachment is an archive, but not a supported archive format."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue attachments"
        ],
        "deprecated": false,
        "summary": "Get contents metadata for an expanded attachment",
        "x-atlassian-connect-scope": "READ",
        "x-experimental": true
      }
    },
    "/auditing/record": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The number of records to skip before returning the first result.",
            "format": "int32",
            "in": "query",
            "name": "offset",
            "type": "integer"
          },
          {
            "default": 1000,
            "description": "The maximum number of results to return.",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "The query string.",
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "description": "The date and time on or after which returned audit records must have been created. If `to` is provided `from` must be before `to` or no audit records are returned.",
            "format": "date-time",
            "in": "query",
            "name": "from",
            "type": "string"
          },
          {
            "description": "The date and time on or before which returned audit results must have been created. If `from` is provided `to` must be after `from` or no audit records are returned.",
            "format": "date-time",
            "in": "query",
            "name": "to",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"offset\":0,\"limit\":1000,\"total\":1,\"records\":[{\"id\":1,\"summary\":\"User created\",\"remoteAddress\":\"192.168.1.1\",\"authorKey\":\"administrator\",\"authorAccountId\":\"5ab8f18d741e9c2c7e9d4538\",\"created\":\"2014-03-19T18:45:42.967+0000\",\"category\":\"user management\",\"eventSource\":\"Jira Connect Plugin\",\"description\":\"Optional description\",\"objectItem\":{\"id\":\"user\",\"name\":\"user\",\"typeName\":\"USER\",\"parentId\":\"1\",\"parentName\":\"Jira Internal Directory\"},\"changedValues\":[{\"fieldName\":\"email\",\"changedFrom\":\"user@atlassian.com\",\"changedTo\":\"newuser@atlassian.com\"}],\"associatedItems\":[{\"id\":\"jira-software-users\",\"name\":\"jira-software-users\",\"typeName\":\"GROUP\",\"parentId\":\"1\",\"parentName\":\"Jira Internal Directory\"}]}]}"
            },
            "schema": {
              "$ref": "#/definitions/AuditRecords"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if:\n\n *  the user does not have the required permissions.\n *  all Jira products are on free plans. Audit logs are available when at least one Jira product is on a paid plan."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Audit records"
        ],
        "deprecated": false,
        "summary": "Get audit records",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/avatar/{type}/system": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The avatar type.",
            "enum": [
              "issuetype",
              "project",
              "user"
            ],
            "in": "path",
            "name": "type",
            "required": true,
            "type": "string",
            "x-showInExample": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"system\":[{\"id\":\"1000\",\"isSystemAvatar\":true,\"isSelected\":false,\"isDeletable\":false,\"urls\":{\"16x16\":\"/secure/useravatar?size=xsmall&avatarId=10040&avatarType=project\",\"24x24\":\"/secure/useravatar?size=small&avatarId=10040&avatarType=project\",\"32x32\":\"/secure/useravatar?size=medium&avatarId=10040&avatarType=project\",\"48x48\":\"/secure/useravatar?avatarId=10040&avatarType=project\"}}]}"
            },
            "schema": {
              "$ref": "#/definitions/SystemAvatars"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "500": {
            "description": "Returned if an error occurs while retrieving the list of avatars."
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Avatars"
        ],
        "deprecated": false,
        "summary": "Get system avatars by type",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/comment/list": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about comments in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `renderedBody` Returns the comment body rendered in HTML.\n *  `properties` Returns the comment's properties.",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "description": "The list of comment IDs.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueCommentListRequestBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":1048576,\"startAt\":0,\"total\":1,\"isLast\":true,\"values\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2020-06-15T03:55:41.968+0000\",\"updated\":\"2020-06-15T03:55:41.968+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanComment"
            }
          },
          "400": {
            "description": "Returned if the request contains more than 1000 IDs or is empty."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue comments"
        ],
        "deprecated": false,
        "summary": "Get comments by IDs",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/comment/{commentId}/properties": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the comment.",
            "in": "path",
            "name": "commentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"keys\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support\",\"key\":\"issue.support\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PropertyKeys"
            }
          },
          "400": {
            "description": "Returned if the comment ID is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the comment is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue comment properties"
        ],
        "deprecated": false,
        "summary": "Get comment property keys",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/comment/{commentId}/properties/{propertyKey}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the comment.",
            "in": "path",
            "name": "commentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The key of the property.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the comment or the property is not found or the user has the necessary project permissions but isn't a member of the role or group visibility of the comment is restricted to."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue comment properties"
        ],
        "deprecated": false,
        "summary": "Delete comment property",
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the comment.",
            "in": "path",
            "name": "commentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The key of the property.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"key\":\"issue.support\",\"value\":{\"system.conversation.id\":\"b1bf38be-5e94-4b40-a3b8-9278735ee1e6\",\"system.support.time\":\"1m\"}}"
            },
            "schema": {
              "$ref": "#/definitions/EntityProperty"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the comment or the property is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue comment properties"
        ],
        "deprecated": false,
        "summary": "Get comment property",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the comment.",
            "in": "path",
            "name": "commentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The key of the property. The maximum length is 255 characters.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the comment property is updated.",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Returned if the comment property is created.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the comment is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue comment properties"
        ],
        "deprecated": false,
        "summary": "Set comment property",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/component": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Component"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/component/10000\",\"id\":\"10000\",\"name\":\"Component 1\",\"description\":\"This is a Jira component\",\"lead\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"assigneeType\":\"PROJECT_LEAD\",\"assignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"realAssigneeType\":\"PROJECT_LEAD\",\"realAssignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"isAssigneeTypeValid\":false,\"project\":\"HSP\",\"projectId\":10000}"
            },
            "schema": {
              "$ref": "#/definitions/Component"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  the user is not found.\n *  `name` is not provided.\n *  `name` is over 255 characters in length.\n *  `projectId` is not provided.\n *  `assigneeType` is an invalid value."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have permission to manage the project containing the component or does not have permission to administer Jira."
          },
          "404": {
            "description": "Returned if the project is not found or the user does not have permission to browse the project containing the component."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Project components"
        ],
        "deprecated": false,
        "summary": "Create component",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      }
    },
    "/component/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the component.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the component to replace the deleted component. If this value is null no replacement is made.",
            "in": "query",
            "name": "moveIssuesTo",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have permission to manage the project containing the component or does not have permission to administer Jira."
          },
          "404": {
            "description": "Returned if:\n\n *  the component is not found.\n *  the replacement component is not found.\n *  the user does not have permission to browse the project containing the component."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Project components"
        ],
        "deprecated": false,
        "summary": "Delete component",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the component.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/component/10000\",\"id\":\"10000\",\"name\":\"Component 1\",\"description\":\"This is a Jira component\",\"lead\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"assigneeType\":\"PROJECT_LEAD\",\"assignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"realAssigneeType\":\"PROJECT_LEAD\",\"realAssignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"isAssigneeTypeValid\":false,\"project\":\"HSP\",\"projectId\":10000}"
            },
            "schema": {
              "$ref": "#/definitions/Component"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the component is not found or the user does not have permission to browse the project containing the component."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Project components"
        ],
        "deprecated": false,
        "summary": "Get component",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the component.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Component"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/component/10000\",\"id\":\"10000\",\"name\":\"Component 1\",\"description\":\"This is a Jira component\",\"lead\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"assigneeType\":\"PROJECT_LEAD\",\"assignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"realAssigneeType\":\"PROJECT_LEAD\",\"realAssignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"isAssigneeTypeValid\":false,\"project\":\"HSP\",\"projectId\":10000}"
            },
            "schema": {
              "$ref": "#/definitions/Component"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  the user is not found.\n *  `assigneeType` is an invalid value.\n *  `name` is over 255 characters in length."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have permission to manage the project containing the component or does not have permission to administer Jira."
          },
          "404": {
            "description": "Returned if the component is not found or the user does not have permission to browse the project containing the component."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Project components"
        ],
        "deprecated": false,
        "summary": "Update component",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      }
    },
    "/component/{id}/relatedIssueCounts": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the component.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/component/10000\",\"issueCount\":23}"
            },
            "schema": {
              "$ref": "#/definitions/ComponentIssuesCount"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the component is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Project components"
        ],
        "deprecated": false,
        "summary": "Get component issues count",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/configuration": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"votingEnabled\":true,\"watchingEnabled\":true,\"unassignedIssuesAllowed\":false,\"subTasksEnabled\":false,\"issueLinkingEnabled\":true,\"timeTrackingEnabled\":true,\"attachmentsEnabled\":true,\"timeTrackingConfiguration\":{\"workingHoursPerDay\":8.0,\"workingDaysPerWeek\":5.0,\"timeFormat\":\"pretty\",\"defaultUnit\":\"day\"}}"
            },
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Jira settings"
        ],
        "deprecated": false,
        "summary": "Get global settings",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/configuration/timetracking": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful and time tracking is enabled.",
            "examples": {
              "application/json": "{\"key\":\"Jira\",\"name\":\"JIRA provided time tracking\",\"url\":\"/example/config/url\"}"
            },
            "schema": {
              "$ref": "#/definitions/TimeTrackingProvider"
            }
          },
          "204": {
            "description": "Returned if the request is successful but time tracking is disabled.",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Time tracking"
        ],
        "deprecated": false,
        "summary": "Get selected time tracking provider",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TimeTrackingProvider"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if the time tracking provider is not found."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Time tracking"
        ],
        "deprecated": false,
        "summary": "Select time tracking provider",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/configuration/timetracking/list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"key\":\"Jira\",\"name\":\"JIRA provided time tracking\",\"url\":\"/example/config/url\"}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/TimeTrackingProvider"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Time tracking"
        ],
        "deprecated": false,
        "summary": "Get all time tracking providers",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/configuration/timetracking/options": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"workingHoursPerDay\":7.6,\"workingDaysPerWeek\":5.5,\"timeFormat\":\"pretty\",\"defaultUnit\":\"hour\"}"
            },
            "schema": {
              "$ref": "#/definitions/TimeTrackingConfiguration"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Time tracking"
        ],
        "deprecated": false,
        "summary": "Get time tracking settings",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TimeTrackingConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"workingHoursPerDay\":7.6,\"workingDaysPerWeek\":5.5,\"timeFormat\":\"pretty\",\"defaultUnit\":\"hour\"}"
            },
            "schema": {
              "$ref": "#/definitions/TimeTrackingConfiguration"
            }
          },
          "400": {
            "description": "Returned if the request object is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Time tracking"
        ],
        "deprecated": false,
        "summary": "Set time tracking settings",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/customField/{fieldId}/option": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the custom field. Note: This is the numeric part of the of the field ID. For example, for a field with the ID *customfield\\_10075* use *10075*.",
            "format": "int64",
            "in": "path",
            "name": "fieldId",
            "required": true,
            "type": "integer"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 1000,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":2,\"startAt\":0,\"total\":100,\"isLast\":false,\"values\":[{\"id\":10000,\"value\":\"Option value\",\"cascadingOptions\":[\"Child option\",\"Child option 2\"]},{\"id\":10001,\"value\":\"Other option value\",\"cascadingOptions\":[]}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanCustomFieldOptionDetails"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the field is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue custom field options"
        ],
        "deprecated": false,
        "summary": "Get options for field",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the custom field. Note: This is the numeric part of the of the field ID. For example, for a field with the ID *customfield\\_10075* use *10075*.",
            "format": "int64",
            "in": "path",
            "name": "fieldId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkCreateCustomFieldOptionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "404": {
            "description": "Returned if the field is not found.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue custom field options"
        ],
        "deprecated": false,
        "summary": "Create custom field options",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the custom field. Note: This is the numeric part of the of the field ID. For example, for a field with the ID *customfield\\_10075* use *10075*.",
            "format": "int64",
            "in": "path",
            "name": "fieldId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCustomFieldOption"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "404": {
            "description": "Returned if the field is not found.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue custom field options"
        ],
        "deprecated": false,
        "summary": "Update custom field options",
        "x-atlassian-connect-scope": "ADMIN",
        "x-experimental": true
      }
    },
    "/customFieldOption/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the custom field option.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/customFieldOption/10000\",\"value\":\"To Do\"}"
            },
            "schema": {
              "$ref": "#/definitions/CustomFieldOption"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  the custom field option is not found.\n *  the user does not have permission to view the custom field."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue custom field options"
        ],
        "deprecated": false,
        "summary": "Get custom field option",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/dashboard": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The filter applied to the list of dashboards. Valid values are:\n\n *  `favourite` Returns dashboards the user has marked as favorite.\n *  `my` Returns dashboards owned by the user.",
            "enum": [
              "my",
              "favourite"
            ],
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int32",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 20,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"startAt\":10,\"maxResults\":10,\"total\":143,\"prev\":\"https://your-domain.atlassian.net/rest/api/3/dashboard?startAt=0\",\"next\":\"https://your-domain.atlassian.net/rest/api/3/dashboard?startAt=10\",\"dashboards\":[{\"id\":\"10000\",\"isFavourite\":false,\"name\":\"System Dashboard\",\"popularity\":1,\"self\":\"https://your-domain.atlassian.net/rest/api/3/dashboard/10000\",\"sharePermissions\":[{\"type\":\"global\"}],\"view\":\"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=10000\"},{\"id\":\"20000\",\"isFavourite\":true,\"name\":\"Build Engineering\",\"owner\":{\"key\":\"Mia\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"name\":\"mia\",\"displayName\":\"Mia Krystof\",\"avatarUrls\":{\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\",\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\"}},\"popularity\":1,\"self\":\"https://your-domain.atlassian.net/rest/api/3/dashboard/20000\",\"sharePermissions\":[{\"id\":10105,\"type\":\"group\",\"group\":{\"name\":\"administrators\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/group?groupname=administrators\"}}],\"view\":\"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=20000\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageOfDashboards"
            }
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Dashboards"
        ],
        "deprecated": false,
        "summary": "Get all dashboards",
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "Dashboard details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DashboardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":\"10000\",\"isFavourite\":false,\"name\":\"System Dashboard\",\"popularity\":1,\"self\":\"https://your-domain.atlassian.net/rest/api/3/dashboard/10000\",\"sharePermissions\":[{\"type\":\"global\"}],\"view\":\"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=10000\"}"
            },
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          },
          "400": {
            "description": "Returned if the request is not valid.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "deprecated": false,
        "summary": "Create dashboard",
        "x-atlassian-connect-scope": "WRITE",
        "x-experimental": true
      }
    },
    "/dashboard/search": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "String used to perform a case-insensitive partial match with `name`.",
            "in": "query",
            "name": "dashboardName",
            "type": "string"
          },
          {
            "description": "User account ID used to return dashboards with the matching `owner.accountId`. This parameter cannot be used with the `owner` parameter.",
            "in": "query",
            "maxLength": 128,
            "name": "accountId",
            "type": "string"
          },
          {
            "description": "This parameter is deprecated because of privacy changes. Use `accountId` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. User name used to return dashboards with the matching `owner.name`. This parameter cannot be used with the `accountId` parameter.",
            "in": "query",
            "name": "owner",
            "type": "string"
          },
          {
            "description": "Group name used to returns dashboards that are shared with a group that matches `sharePermissions.group.name`.",
            "in": "query",
            "name": "groupname",
            "type": "string"
          },
          {
            "description": "Project ID used to returns dashboards that are shared with a project that matches `sharePermissions.project.id`.",
            "format": "int64",
            "in": "query",
            "name": "projectId",
            "type": "integer"
          },
          {
            "default": "name",
            "description": "[Order](#ordering) the results by a field:\n\n *  `description` Sorts by dashboard description. Note that this sort works independently of whether the expand to display the description field is in use.\n *  `favourite_count` Sorts by dashboard popularity.\n *  `id` Sorts by dashboard ID.\n *  `is_favourite` Sorts by whether the dashboard is marked as a favorite.\n *  `name` Sorts by dashboard name.\n *  `owner` Sorts by dashboard owner name.",
            "enum": [
              "description",
              "-description",
              "+description",
              "favorite_count",
              "-favorite_count",
              "+favorite_count",
              "id",
              "-id",
              "+id",
              "is_favorite",
              "-is_favorite",
              "+is_favorite",
              "name",
              "-name",
              "+name",
              "owner",
              "-owner",
              "+owner"
            ],
            "in": "query",
            "name": "orderBy",
            "type": "string"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about dashboard in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `description` Returns the description of the dashboard.\n *  `owner` Returns the owner of the dashboard.\n *  `viewUrl` Returns the URL that is used to view the dashboard.\n *  `favourite` Returns `isFavourite`, an indicator of whether the user has set the dashboard as a favorite.\n *  `favouritedCount` Returns `popularity`, a count of how many users have set this dashboard as a favorite.\n *  `sharePermissions` Returns details of the share permissions defined for the dashboard.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/dashboard/search?expand=owner&maxResults=50&startAt=0\",\"maxResults\":100,\"startAt\":0,\"total\":2,\"isLast\":true,\"values\":[{\"description\":\"Testing program\",\"id\":\"1\",\"isFavourite\":true,\"name\":\"Testing\",\"owner\":{\"self\":\"https://your-domain.atlassian.net/user?accountId=5b10a2844c20165700ede21g\",\"displayName\":\"Mia\",\"active\":true,\"accountId\":\"5b10a2844c20165700ede21g\",\"avatarUrls\":{\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\",\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\"}},\"popularity\":1,\"self\":\"https://your-domain.atlassian.net/rest/api/3/dashboard/1\",\"sharePermissions\":[{\"type\":\"global\"}],\"view\":\"https://your-domain.atlassian.net/Dashboard.jspa?selectPageId=1\"},{\"description\":\"Quantum initiative\",\"id\":\"2\",\"isFavourite\":false,\"name\":\"Quantum \",\"owner\":{\"self\":\"https://your-domain.atlassian.net/user?accountId=5b10a2844c20165700ede21g\",\"displayName\":\"Mia\",\"active\":true,\"accountId\":\"5b10a2844c20165700ede21g\",\"avatarUrls\":{\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\",\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\"}},\"popularity\":0,\"self\":\"https://your-domain.atlassian.net/rest/api/3/dashboard/2\",\"sharePermissions\":[{\"type\":\"loggedin\"}],\"view\":\"https://your-domain.atlassian.net/Dashboard.jspa?selectPageId=2\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanDashboard"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  `orderBy` is invalid.\n *  `expand` includes an invalid value.\n *  `accountId` and `owner` are provided.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "401": {
            "description": "401 response",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Dashboards"
        ],
        "deprecated": false,
        "summary": "Search for dashboards",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/dashboard/{dashboardId}/items/{itemId}/properties": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the dashboard.",
            "in": "path",
            "name": "dashboardId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the dashboard item.",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"keys\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support\",\"key\":\"issue.support\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PropertyKeys"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the dashboard or dashboard item is not found, or the dashboard is not owned by or shared with the user."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Dashboards"
        ],
        "deprecated": false,
        "summary": "Get dashboard item property keys",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/dashboard/{dashboardId}/items/{itemId}/properties/{propertyKey}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the dashboard.",
            "in": "path",
            "name": "dashboardId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the dashboard item.",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The key of the dashboard item property.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the dashboard item property is deleted."
          },
          "400": {
            "description": "Returned if the dashboard or dashboard item ID is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user is not the owner of the dashboard."
          },
          "404": {
            "description": "Returned if the dashboard item is not found or the dashboard is not shared with the user."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "deprecated": false,
        "summary": "Delete dashboard item property",
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the dashboard.",
            "in": "path",
            "name": "dashboardId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the dashboard item.",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The key of the dashboard item property.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"key\":\"issue.support\",\"value\":{\"system.conversation.id\":\"b1bf38be-5e94-4b40-a3b8-9278735ee1e6\",\"system.support.time\":\"1m\"}}"
            },
            "schema": {
              "$ref": "#/definitions/EntityProperty"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the dashboard, the dashboard item, or dashboard item property is not found, or the dashboard is not owned by or shared with the user."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Dashboards"
        ],
        "deprecated": false,
        "summary": "Get dashboard item property",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the dashboard.",
            "in": "path",
            "name": "dashboardId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the dashboard item.",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The key of the dashboard item property. The maximum length is 255 characters.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the dashboard item property is updated.",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Returned if the dashboard item property is created.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user is not the owner of the dashboard."
          },
          "404": {
            "description": "Returned if the dashboard item is not found or the dashboard is not shared with the user."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "deprecated": false,
        "summary": "Set dashboard item property",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/dashboard/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the dashboard.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the dashboard is deleted."
          },
          "400": {
            "description": "400 response",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "deprecated": false,
        "summary": "Delete dashboard",
        "x-atlassian-connect-scope": "DELETE",
        "x-experimental": true
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the dashboard.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":\"10000\",\"isFavourite\":false,\"name\":\"System Dashboard\",\"popularity\":1,\"self\":\"https://your-domain.atlassian.net/rest/api/3/dashboard/10000\",\"sharePermissions\":[{\"type\":\"global\"}],\"view\":\"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=10000\"}"
            },
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          },
          "400": {
            "description": "400 response",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "404": {
            "description": "Returned if the dashboard is not found or the dashboard is not owned by or shared with the user."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Dashboards"
        ],
        "deprecated": false,
        "summary": "Get dashboard",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the dashboard to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Replacement dashboard details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DashboardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":\"10000\",\"isFavourite\":false,\"name\":\"System Dashboard\",\"popularity\":1,\"self\":\"https://your-domain.atlassian.net/rest/api/3/dashboard/10000\",\"sharePermissions\":[{\"type\":\"global\"}],\"view\":\"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=10000\"}"
            },
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          },
          "400": {
            "description": "Returned if the request is not valid.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "404": {
            "description": "Returned if the dashboard is not found or the dashboard is not owned by the user.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "deprecated": false,
        "summary": "Update dashboard",
        "x-atlassian-connect-scope": "WRITE",
        "x-experimental": true
      }
    },
    "/dashboard/{id}/copy": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Dashboard details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DashboardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":\"10000\",\"isFavourite\":false,\"name\":\"System Dashboard\",\"popularity\":1,\"self\":\"https://your-domain.atlassian.net/rest/api/3/dashboard/10000\",\"sharePermissions\":[{\"type\":\"global\"}],\"view\":\"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=10000\"}"
            },
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          },
          "400": {
            "description": "Returned if the request is not valid.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "404": {
            "description": "Returned if the dashboard is not found or the dashboard is not owned by or shared with the user.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Dashboards"
        ],
        "deprecated": false,
        "summary": "Copy dashboard",
        "x-atlassian-connect-scope": "WRITE",
        "x-experimental": true
      }
    },
    "/expression/analyse": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The Jira expressions to analyse.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JiraExpressionForAnalysis"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"results\":[{\"expression\":\"analysed expression\",\"errors\":[{\"line\":1,\"column\":4,\"message\":\"!, -, typeof, (, IDENTIFIER, null, true, false, NUMBER, STRING, new, [ or { expected, > encountered.\",\"type\":\"syntax\"},{\"message\":\"Jira expression is too long (1040), limit: 1000 characters\",\"type\":\"other\"},{\"message\":\"Jira expression has too many nodes (150), limit: 100 leaves\",\"type\":\"other\"}],\"valid\":false}]}"
            },
            "schema": {
              "$ref": "#/definitions/JiraExpressionsAnalysis"
            }
          },
          "400": {
            "description": "400 response",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "404 response",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work",
              "read:jira-user"
            ]
          },
          {}
        ],
        "tags": [
          "Jira expressions"
        ],
        "deprecated": false,
        "summary": "Analyse Jira expression",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/expression/eval": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts `meta.complexity` that returns information about the expression complexity. For example, the number of expensive operations used by the expression and how close the expression is to reaching the [complexity limit](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/#restrictions). Useful when designing and debugging your expressions.",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "description": "The Jira expression and the evaluation context.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JiraExpressionEvalRequestBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the evaluation results in a value. The result is a JSON primitive value, list, or object.",
            "examples": {
              "application/json": "{\"value\":\"The expression's result. This value can be any JSON, not necessarily a String\",\"meta\":{\"complexity\":{\"steps\":{\"value\":1,\"limit\":10000},\"expensiveOperations\":{\"value\":3,\"limit\":10},\"beans\":{\"value\":0,\"limit\":1000},\"primitiveValues\":{\"value\":1,\"limit\":10000}},\"issues\":{\"jql\":{\"startAt\":0,\"maxResults\":1000,\"count\":140,\"totalCount\":140,\"validationWarnings\":[\"There is a problem with the JQL query.\"]}}}}"
            },
            "schema": {
              "$ref": "#/definitions/JiraExpressionResult"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  the request is invalid, that is:\n    \n     *  invalid data is provided, such as a request including issue ID and key.\n     *  the expression is invalid and can not be parsed.\n *  evaluation fails at runtime. This may happen for various reasons. For example, accessing a property on a null object (such as the expression `issue.id` where `issue` is `null`). In this case an error message is provided.",
            "examples": {
              "application/json": "{\"errorMessages\":[\"Evaluation failed: \\\"issue['a' + 'b']\\\" - Unrecognized property of `issue`: \\\"ab\\\" ('a' + 'b'). Available properties of type 'Issue' are: 'assignee', 'comments', 'description', 'id', 'issueType', 'key', 'priority', 'project', 'properties', 'reporter', 'status', 'summary'\"],\"errors\":{}}"
            },
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if any object provided in the request context is not found or the user does not have permission to view it.",
            "examples": {
              "application/json": "{\"errorMessages\":[\"Issue does not exist or you do not have permission to see it.\"],\"errors\":{}}"
            },
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work",
              "read:jira-user"
            ]
          },
          {}
        ],
        "tags": [
          "Jira expressions"
        ],
        "deprecated": false,
        "summary": "Evaluate Jira expression",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/field": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"id\":\"description\",\"name\":\"Description\",\"custom\":false,\"orderable\":true,\"navigable\":true,\"searchable\":true,\"clauseNames\":[\"description\"],\"schema\":{\"type\":\"string\",\"system\":\"description\"}},{\"id\":\"summary\",\"key\":\"summary\",\"name\":\"Summary\",\"custom\":false,\"orderable\":true,\"navigable\":true,\"searchable\":true,\"clauseNames\":[\"summary\"],\"schema\":{\"type\":\"string\",\"system\":\"summary\"}}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/FieldDetails"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue fields"
        ],
        "deprecated": false,
        "summary": "Get fields",
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "Definition of the custom field to be created",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomFieldDefinitionJsonBean"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the custom field is created.",
            "examples": {
              "application/json": "{\"id\":\"customfield_10101\",\"key\":\"customfield_10101\",\"name\":\"New custom field\",\"untranslatedName\":\"New custom field\",\"custom\":true,\"orderable\":true,\"navigable\":true,\"searchable\":true,\"clauseNames\":[\"cf[10101]\",\"New custom field\"],\"schema\":{\"type\":\"project\",\"custom\":\"com.atlassian.jira.plugin.system.customfieldtypes:project\",\"customId\":10101}}"
            },
            "schema": {
              "$ref": "#/definitions/FieldDetails"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  the user does not have permission to create custom fields.\n *  any of the request object properties have invalid or missing values."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          },
          {}
        ],
        "tags": [
          "Issue fields"
        ],
        "deprecated": false,
        "summary": "Create custom field",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/field/search": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "The type of fields to search.",
            "in": "query",
            "items": {
              "enum": [
                "custom",
                "system"
              ],
              "type": "string"
            },
            "name": "type",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "The IDs of the custom fields to return or, where`query is specified, filter. IDs should be provided in the format customfield_XXXXX.`",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "id",
            "type": "array",
            "uniqueItems": true
          },
          {
            "description": "String used to perform a case-insensitive partial match with field names or descriptions.",
            "in": "query",
            "name": "query",
            "type": "string"
          },
          {
            "description": "[Order](#ordering) the results by a field:\n\n *  `contextsCount` Sorts by the number of contexts related to a field.\n *  `lastUsed` Sorts by the date when the value of the field last changed.\n *  `name` Sorts by the field name.\n *  `screensCount` Sorts by the number of screens related to a field.",
            "enum": [
              "contextsCount",
              "-contextsCount",
              "+contextsCount",
              "lastUsed",
              "-lastUsed",
              "+lastUsed",
              "name",
              "-name",
              "+name",
              "screensCount",
              "-screensCount",
              "+screensCount"
            ],
            "in": "query",
            "name": "orderBy",
            "type": "string"
          },
          {
            "description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `key` Returns the key for each field.\n *  `lastUsed` Returns the date when the value of the field last changed.\n *  `screensCount` Returns the number of screens related to a field.\n *  `contextsCount` Returns the number of contexts related to a field.\n *  `isLocked` Returns information about whether the field is [locked](https://confluence.atlassian.com/x/ZSN7Og).",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":50,\"startAt\":0,\"total\":2,\"isLast\":false,\"values\":[{\"id\":\"customfield_10000\",\"name\":\"Approvers\",\"description\":\"Contains users needed for approval. This custom field was created by Jira Service Desk.\",\"key\":\"customfield_10000\",\"isLocked\":true,\"screensCount\":2,\"contextsCount\":2,\"lastUsed\":{\"type\":\"TRACKED\",\"value\":\"2019-09-12T10:10:00.291+0000\"}},{\"id\":\"customfield_10001\",\"name\":\"Change reason\",\"description\":\"Choose the reason for the change request\",\"key\":\"customfield_10001\",\"isLocked\":false,\"screensCount\":2,\"contextsCount\":2}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanField"
            }
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "examples": {
              "application/json": "{\"errorMessages\":[\"Only custom fields can be queried.\"],\"errors\":{}}"
            },
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission.",
            "examples": {
              "application/json": "{\"errorMessages\":[\"Only Jira administrators can access fields.\"],\"errors\":{}}"
            },
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Issue fields"
        ],
        "deprecated": false,
        "summary": "Get fields paginated",
        "x-atlassian-connect-scope": "NONE",
        "x-experimental": true
      }
    },
    "/field/{fieldId}/contexts": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the field to return contexts for.",
            "in": "path",
            "name": "fieldId",
            "required": true,
            "type": "string"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 20,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":1,\"startAt\":0,\"total\":5,\"isLast\":false,\"values\":[{\"id\":10001,\"name\":\"Default Context\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanContext"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Issue fields"
        ],
        "deprecated": false,
        "summary": "Get contexts for a field",
        "x-atlassian-connect-scope": "NONE",
        "x-experimental": true
      }
    },
    "/field/{fieldId}/screens": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the field to return screens for.",
            "in": "path",
            "name": "fieldId",
            "required": true,
            "type": "string"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 100,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":1,\"startAt\":0,\"total\":5,\"isLast\":false,\"values\":[{\"id\":10001,\"name\":\"Default Screen\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanScreen"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Screens"
        ],
        "deprecated": false,
        "summary": "Get screens for a field",
        "x-atlassian-connect-scope": "NONE"
      }
    },
    "/field/{fieldKey}/option": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "description": "The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`",
            "in": "path",
            "name": "fieldKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/field/fieldKey/option?startAt=0&maxResults=1\",\"nextPage\":\"https://your-domain.atlassian.net/rest/api/3/field/fieldKey/option?startAt=1&maxResults=1\",\"maxResults\":1,\"startAt\":0,\"total\":10,\"isLast\":false,\"values\":[{\"id\":1,\"value\":\"Team 1\",\"properties\":{\"leader\":{\"name\":\"Leader Name\",\"email\":\"lname@example.com\"},\"members\":42,\"description\":\"The team's description\",\"founded\":\"2016-06-06\"},\"config\":{\"scope\":{\"projects\":[],\"projects2\":[{\"id\":1001,\"attributes\":[\"notSelectable\"]},{\"id\":1002,\"attributes\":[\"notSelectable\"]}],\"global\":{}},\"attributes\":[]}}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanIssueFieldOption"
            }
          },
          "400": {
            "description": "Returned if the field is not found or does not support options."
          },
          "403": {
            "description": "Returned if the request is not authenticated as a Jira administrator or the app that provided the field."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue custom field options (apps)"
        ],
        "deprecated": false,
        "summary": "Get all issue field options",
        "x-atlassian-connect-scope": "NONE"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`",
            "in": "path",
            "name": "fieldKey",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueFieldOptionCreateBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":1,\"value\":\"Team 1\",\"properties\":{\"leader\":{\"name\":\"Leader Name\",\"email\":\"lname@example.com\"},\"members\":42,\"description\":\"The team's description\",\"founded\":\"2016-06-06\"},\"config\":{\"scope\":{\"projects\":[],\"projects2\":[{\"id\":1001,\"attributes\":[\"notSelectable\"]},{\"id\":1002,\"attributes\":[\"notSelectable\"]}],\"global\":{}},\"attributes\":[]}}"
            },
            "schema": {
              "$ref": "#/definitions/IssueFieldOption"
            }
          },
          "400": {
            "description": "Returned if the option is invalid."
          },
          "403": {
            "description": "Returned if the request is not authenticated as a Jira administrator or the app that provided the field."
          },
          "404": {
            "description": "Returned if the field is not found or does not support options."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue custom field options (apps)"
        ],
        "deprecated": false,
        "summary": "Create issue field option",
        "x-atlassian-connect-scope": "NONE"
      }
    },
    "/field/{fieldKey}/option/suggestions/edit": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "description": "Filters the results to options that are only available in the specified project.",
            "format": "int64",
            "in": "query",
            "name": "projectId",
            "type": "integer"
          },
          {
            "description": "The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`",
            "in": "path",
            "name": "fieldKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/field/fieldKey/option/suggestions?startAt=0&maxResults=1\",\"nextPage\":\"https://your-domain.atlassian.net/rest/api/3/field/fieldKey/option/suggestions?startAt=1&maxResults=1\",\"maxResults\":1,\"startAt\":0,\"total\":10,\"isLast\":false,\"values\":[{\"id\":1,\"value\":\"Team 1\",\"properties\":{\"leader\":{\"name\":\"Leader Name\",\"email\":\"lname@example.com\"},\"members\":42,\"description\":\"The team's description\",\"founded\":\"2016-06-06\"}}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanIssueFieldOption"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the field is not found or does not support options."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue custom field options (apps)"
        ],
        "deprecated": false,
        "summary": "Get selectable issue field options",
        "x-atlassian-connect-scope": "NONE"
      }
    },
    "/field/{fieldKey}/option/suggestions/search": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "description": "Filters the results to options that are only available in the specified project.",
            "format": "int64",
            "in": "query",
            "name": "projectId",
            "type": "integer"
          },
          {
            "description": "The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`",
            "in": "path",
            "name": "fieldKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/field/fieldKey/option/suggestions?startAt=0&maxResults=1\",\"nextPage\":\"https://your-domain.atlassian.net/rest/api/3/field/fieldKey/option/suggestions?startAt=1&maxResults=1\",\"maxResults\":1,\"startAt\":0,\"total\":10,\"isLast\":false,\"values\":[{\"id\":1,\"value\":\"Team 1\",\"properties\":{\"leader\":{\"name\":\"Leader Name\",\"email\":\"lname@example.com\"},\"members\":42,\"description\":\"The team's description\",\"founded\":\"2016-06-06\"}}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanIssueFieldOption"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the field is not found or does not support options."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue custom field options (apps)"
        ],
        "deprecated": false,
        "summary": "Get visible issue field options",
        "x-atlassian-connect-scope": "NONE"
      }
    },
    "/field/{fieldKey}/option/{optionId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`",
            "in": "path",
            "name": "fieldKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the option to be deleted.",
            "format": "int64",
            "in": "path",
            "name": "optionId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the field option is deleted.",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "Returned if the request is not authenticated as a Jira administrator or the app that provided the field."
          },
          "404": {
            "description": "Returned if the field or option is not found."
          },
          "409": {
            "description": "Returned if the option is selected for the field in any issue."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue custom field options (apps)"
        ],
        "deprecated": false,
        "summary": "Delete issue field option",
        "x-atlassian-connect-scope": "NONE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`",
            "in": "path",
            "name": "fieldKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the option to be returned.",
            "format": "int64",
            "in": "path",
            "name": "optionId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the requested option is returned.",
            "examples": {
              "application/json": "{\"id\":1,\"value\":\"Team 1\",\"properties\":{\"leader\":{\"name\":\"Leader Name\",\"email\":\"lname@example.com\"},\"members\":42,\"description\":\"The team's description\",\"founded\":\"2016-06-06\"},\"config\":{\"scope\":{\"projects\":[],\"projects2\":[{\"id\":1001,\"attributes\":[\"notSelectable\"]},{\"id\":1002,\"attributes\":[\"notSelectable\"]}],\"global\":{}},\"attributes\":[]}}"
            },
            "schema": {
              "$ref": "#/definitions/IssueFieldOption"
            }
          },
          "400": {
            "description": "Returned if the field is not found or does not support options."
          },
          "403": {
            "description": "Returned if the request is not authenticated as a Jira administrator or the app that provided the field."
          },
          "404": {
            "description": "Returned if the option is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue custom field options (apps)"
        ],
        "deprecated": false,
        "summary": "Get issue field option",
        "x-atlassian-connect-scope": "NONE"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`",
            "in": "path",
            "name": "fieldKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the option to be updated.",
            "format": "int64",
            "in": "path",
            "name": "optionId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueFieldOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the option is updated or created.",
            "examples": {
              "application/json": "{\"id\":1,\"value\":\"Team 1\",\"properties\":{\"leader\":{\"name\":\"Leader Name\",\"email\":\"lname@example.com\"},\"members\":42,\"description\":\"The team's description\",\"founded\":\"2016-06-06\"},\"config\":{\"scope\":{\"projects\":[],\"projects2\":[{\"id\":1001,\"attributes\":[\"notSelectable\"]},{\"id\":1002,\"attributes\":[\"notSelectable\"]}],\"global\":{}},\"attributes\":[]}}"
            },
            "schema": {
              "$ref": "#/definitions/IssueFieldOption"
            }
          },
          "400": {
            "description": "Returned if the option is invalid, or the *ID* in the request object does not match the *optionId* parameter."
          },
          "403": {
            "description": "Returned if the request is not authenticated as a Jira administrator or the app that provided the field."
          },
          "404": {
            "description": "Returned if field is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue custom field options (apps)"
        ],
        "deprecated": false,
        "summary": "Update issue field option",
        "x-atlassian-connect-scope": "NONE"
      }
    },
    "/field/{fieldKey}/option/{optionId}/issue": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the option that will replace the currently selected option.",
            "format": "int64",
            "in": "query",
            "name": "replaceWith",
            "type": "integer"
          },
          {
            "description": "A JQL query that specifies the issues to be updated. For example, *project=10000*.",
            "in": "query",
            "name": "jql",
            "type": "string"
          },
          {
            "description": "The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`",
            "in": "path",
            "name": "fieldKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the option to be deselected.",
            "format": "int64",
            "in": "path",
            "name": "optionId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "303": {
            "description": "Returned if the long-running task to deselect the option is started.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/task/1\",\"id\":\"1\",\"description\":\"Remove option 1 from issues matched by '*', and replace with option 3\",\"status\":\"COMPLETE\",\"result\":{\"modifiedIssues\":[10001,10010],\"unmodifiedIssues\":[10005],\"errors\":{\"errors\":{},\"errorMessages\":[\"Option 2 cannot be set on issue MKY-5 as it is not in the correct scope\"],\"httpStatusCode\":{\"present\":true}}},\"elapsedRuntime\":42}"
            },
            "schema": {
              "$ref": "#/definitions/TaskProgressBeanRemoveOptionFromIssuesResult"
            }
          },
          "400": {
            "description": "Returned if the JQL query is invalid."
          },
          "404": {
            "description": "Returned if the field is not found or does not support options, or the options to be replaced are not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue custom field options (apps)"
        ],
        "deprecated": false,
        "summary": "Replace issue field option",
        "x-atlassian-connect-scope": "NONE"
      }
    },
    "/fieldconfiguration": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "The list of field configuration IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`.",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "id",
            "type": "array",
            "uniqueItems": true
          },
          {
            "default": false,
            "description": "If *true* returns the default field configuration only.",
            "in": "query",
            "name": "isDefault",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":50,\"startAt\":0,\"total\":2,\"isLast\":true,\"values\":[{\"id\":10000,\"name\":\"Default Field Configuration\",\"description\":\"The default field configuration description\",\"isDefault\":true},{\"id\":10001,\"name\":\"My Field Configuration\",\"description\":\"My field configuration description\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanFieldConfiguration"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue field configurations"
        ],
        "deprecated": false,
        "summary": "Get all field configurations",
        "x-atlassian-connect-scope": "ADMIN",
        "x-experimental": true
      }
    },
    "/fieldconfiguration/{id}/fields": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the field configuration.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":50,\"startAt\":0,\"total\":2,\"isLast\":true,\"values\":[{\"id\":\"environment\",\"description\":\"For example operating system, software platform and/or hardware specifications (include as appropriate for the issue).\",\"isHidden\":false,\"isRequired\":false},{\"id\":\"description\",\"isHidden\":false,\"isRequired\":false}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanFieldConfigurationItem"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the field configuration is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue field configurations"
        ],
        "deprecated": false,
        "summary": "Get field configuration items",
        "x-atlassian-connect-scope": "ADMIN",
        "x-experimental": true
      }
    },
    "/fieldconfigurationscheme": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "The list of field configuration scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`.",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "id",
            "type": "array",
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":10,\"startAt\":0,\"total\":3,\"isLast\":true,\"values\":[{\"id\":\"10000\",\"name\":\"Field Configuration Scheme for Bugs\",\"description\":\"This field configuration scheme is for bugs only.\"},{\"id\":\"10001\",\"name\":\"Field Configuration Scheme for software related projects\",\"description\":\"We can use this one for software projects.\"},{\"id\":\"10002\",\"name\":\"Field Configuration Scheme for Epics\",\"description\":\"Use this one for Epic issue type.\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanFieldConfigurationScheme"
            }
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue field configurations"
        ],
        "deprecated": false,
        "summary": "Get all field configuration schemes",
        "x-atlassian-connect-scope": "ADMIN",
        "x-experimental": true
      }
    },
    "/fieldconfigurationscheme/mapping": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "The list of field configuration scheme IDs. To include multiple field configuration schemes separate IDs with ampersand: `fieldConfigurationSchemeId=10000&fieldConfigurationSchemeId=10001`.",
            "in": "query",
            "items": {
              "example": 10020,
              "format": "int64",
              "type": "integer"
            },
            "maxItems": 50,
            "minItems": 1,
            "name": "fieldConfigurationSchemeId",
            "type": "array",
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":100,\"startAt\":0,\"total\":5,\"isLast\":true,\"values\":[{\"fieldConfigurationSchemeId\":\"10020\",\"issueTypeId\":\"10000\",\"fieldConfigurationId\":\"10010\"},{\"fieldConfigurationSchemeId\":\"10020\",\"issueTypeId\":\"10001\",\"fieldConfigurationId\":\"10010\"},{\"fieldConfigurationSchemeId\":\"10021\",\"issueTypeId\":\"10002\",\"fieldConfigurationId\":\"10000\"},{\"fieldConfigurationSchemeId\":\"10022\",\"issueTypeId\":\"default\",\"fieldConfigurationId\":\"10011\"},{\"fieldConfigurationSchemeId\":\"10023\",\"issueTypeId\":\"default\",\"fieldConfigurationId\":\"10000\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanFieldConfigurationIssueTypeItem"
            }
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if no field configuration schemes are found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue field configurations"
        ],
        "deprecated": false,
        "summary": "Get field configuration issue type items",
        "x-atlassian-connect-scope": "ADMIN",
        "x-experimental": true
      }
    },
    "/fieldconfigurationscheme/project": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "The list of project IDs. To include multiple projects, separate IDs with ampersand: `projectId=10000&projectId=10001`.",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "projectId",
            "required": true,
            "type": "array",
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":50,\"startAt\":0,\"total\":5,\"isLast\":true,\"values\":[{\"projectIds\":[\"10\",\"11\"]},{\"fieldConfigurationScheme\":{\"id\":\"10002\",\"name\":\"Field Configuration Scheme for software related projects\",\"description\":\"We can use this one for software projects.\"},\"projectIds\":[\"12\",\"13\",\"14\"]}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanFieldConfigurationSchemeProjects"
            }
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue field configurations"
        ],
        "deprecated": false,
        "summary": "Get field configuration schemes for projects",
        "x-atlassian-connect-scope": "ADMIN",
        "x-experimental": true
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FieldConfigurationSchemeProjectAssociation"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if the project is not a classic project.",
            "examples": {
              "application/json": "{\"errorMessages\":[\"Only classic projects can have field configuration schemes assigned.\"],\"errors\":{}}"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the required permissions.",
            "examples": {
              "application/json": "{\"errorMessages\":[\"Only Jira administrators can access field configurations.\"],\"errors\":{}}"
            }
          },
          "404": {
            "description": "Returned if the project is missing.",
            "examples": {
              "application/json": "{\"errorMessages\":[\"The specified project does not exist.\"],\"errors\":{}}"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue field configurations"
        ],
        "deprecated": false,
        "summary": "Assign field configuration scheme to project",
        "x-atlassian-connect-scope": "ADMIN",
        "x-experimental": true
      }
    },
    "/filter": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/filter/10000\",\"id\":\"10000\",\"name\":\"All Open Bugs\",\"description\":\"Lists all open bugs\",\"owner\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"jql\":\"type = Bug and resolution is empty\",\"viewUrl\":\"https://your-domain.atlassian.net/issues/?filter=10000\",\"searchUrl\":\"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\",\"favourite\":true,\"favouritedCount\":0,\"sharePermissions\":[],\"subscriptions\":{\"size\":0,\"items\":[],\"max-results\":0,\"start-index\":0,\"end-index\":0}}"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/Filter"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Filters"
        ],
        "deprecated": true,
        "summary": "Get filters",
        "x-atlassian-connect-scope": "READ",
        "x-changes": [
          {
            "announced": "2018-10-19T00:00:00.000Z",
            "details": "https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-removal-of-get-filters-and-get-all-projects/",
            "effective": "2019-04-19T00:00:00.000Z",
            "type": "removed"
          }
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "description": "The filter to create.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/filter/10000\",\"id\":\"10000\",\"name\":\"All Open Bugs\",\"description\":\"Lists all open bugs\",\"owner\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"jql\":\"type = Bug and resolution is empty\",\"viewUrl\":\"https://your-domain.atlassian.net/issues/?filter=10000\",\"searchUrl\":\"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\",\"favourite\":true,\"favouritedCount\":0,\"sharePermissions\":[],\"subscriptions\":{\"size\":0,\"items\":[],\"max-results\":0,\"start-index\":0,\"end-index\":0}}"
            },
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          },
          "400": {
            "description": "Returned if the request object is invalid. For example, the `name` is not unique or the project ID is not specified for a project role share permission."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Filters"
        ],
        "deprecated": false,
        "summary": "Create filter",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/filter/defaultShareScope": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"scope\":\"GLOBAL\"}"
            },
            "schema": {
              "$ref": "#/definitions/DefaultShareScope"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Filter sharing"
        ],
        "deprecated": false,
        "summary": "Get default share scope",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DefaultShareScope"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"scope\":\"GLOBAL\"}"
            },
            "schema": {
              "$ref": "#/definitions/DefaultShareScope"
            }
          },
          "400": {
            "description": "Returned if an invalid scope is set."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Filter sharing"
        ],
        "deprecated": false,
        "summary": "Set default share scope",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/filter/favourite": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/filter/10000\",\"id\":\"10000\",\"name\":\"All Open Bugs\",\"description\":\"Lists all open bugs\",\"owner\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"jql\":\"type = Bug and resolution is empty\",\"viewUrl\":\"https://your-domain.atlassian.net/issues/?filter=10000\",\"searchUrl\":\"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\",\"favourite\":true,\"favouritedCount\":0,\"sharePermissions\":[],\"subscriptions\":{\"size\":0,\"items\":[],\"max-results\":0,\"start-index\":0,\"end-index\":0}},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/filter/10010\",\"id\":\"10010\",\"name\":\"My issues\",\"description\":\"Issues assigned to me\",\"owner\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"jql\":\"assignee = currentUser() and resolution is empty\",\"viewUrl\":\"https://your-domain.atlassian.net/issues/?filter=10010\",\"searchUrl\":\"https://your-domain.atlassian.net/rest/api/3/search?jql=assignee+in+%28currentUser%28%29%29+and+resolution+is+empty\",\"favourite\":true,\"favouritedCount\":0,\"sharePermissions\":[{\"id\":10000,\"type\":\"global\"},{\"id\":10010,\"type\":\"project\",\"project\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2020-06-15T03:55:39.545+0000\"}}}],\"subscriptions\":{\"size\":0,\"items\":[],\"max-results\":0,\"start-index\":0,\"end-index\":0}}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/Filter"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Filters"
        ],
        "deprecated": false,
        "summary": "Get favorite filters",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/filter/my": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "default": false,
            "description": "Include the user's favorite filters in the response.",
            "in": "query",
            "name": "includeFavourites",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/filter/10000\",\"id\":\"10000\",\"name\":\"All Open Bugs\",\"description\":\"Lists all open bugs\",\"owner\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"jql\":\"type = Bug and resolution is empty\",\"viewUrl\":\"https://your-domain.atlassian.net/issues/?filter=10000\",\"searchUrl\":\"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\",\"favourite\":true,\"favouritedCount\":0,\"sharePermissions\":[],\"subscriptions\":{\"size\":0,\"items\":[],\"max-results\":0,\"start-index\":0,\"end-index\":0}},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/filter/10010\",\"id\":\"10010\",\"name\":\"My issues\",\"description\":\"Issues assigned to me\",\"owner\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"jql\":\"assignee = currentUser() and resolution is empty\",\"viewUrl\":\"https://your-domain.atlassian.net/issues/?filter=10010\",\"searchUrl\":\"https://your-domain.atlassian.net/rest/api/3/search?jql=assignee+in+%28currentUser%28%29%29+and+resolution+is+empty\",\"favourite\":true,\"favouritedCount\":0,\"sharePermissions\":[{\"id\":10000,\"type\":\"global\"},{\"id\":10010,\"type\":\"project\",\"project\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2020-06-15T03:55:39.545+0000\"}}}],\"subscriptions\":{\"size\":0,\"items\":[],\"max-results\":0,\"start-index\":0,\"end-index\":0}}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/Filter"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Filters"
        ],
        "deprecated": false,
        "summary": "Get my filters",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/filter/search": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "String used to perform a case-insensitive partial match with `name`.",
            "in": "query",
            "name": "filterName",
            "type": "string"
          },
          {
            "description": "User account ID used to return filters with the matching `owner.accountId`. This parameter cannot be used with `owner`.",
            "in": "query",
            "maxLength": 128,
            "name": "accountId",
            "type": "string"
          },
          {
            "description": "This parameter is deprecated because of privacy changes. Use `accountId` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. User name used to return filters with the matching `owner.name`. This parameter cannot be used with `accountId`.",
            "in": "query",
            "name": "owner",
            "type": "string"
          },
          {
            "description": "Group name used to returns filters that are shared with a group that matches `sharePermissions.group.groupname`.",
            "in": "query",
            "name": "groupname",
            "type": "string"
          },
          {
            "description": "Project ID used to returns filters that are shared with a project that matches `sharePermissions.project.id`.",
            "format": "int64",
            "in": "query",
            "name": "projectId",
            "type": "integer"
          },
          {
            "default": "name",
            "description": "[Order](#ordering) the results by a field:\n\n *  `description` Sorts by filter description. Note that this sorting works independently of whether the expand to display the description field is in use.\n *  `favourite_count` Sorts by the count of how many users have this filter as a favorite.\n *  `is_favourite` Sorts by whether the filter is marked as a favorite.\n *  `id` Sorts by filter ID.\n *  `name` Sorts by filter name.\n *  `owner` Sorts by the ID of the filter owner.",
            "enum": [
              "description",
              "-description",
              "+description",
              "favorite_count",
              "-favorite_count",
              "+favorite_count",
              "id",
              "-id",
              "+id",
              "is_favorite",
              "-is_favorite",
              "+is_favorite",
              "name",
              "-name",
              "+name",
              "owner",
              "-owner",
              "+owner"
            ],
            "in": "query",
            "name": "orderBy",
            "type": "string"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `description` Returns the description of the filter.\n *  `favourite` Returns an indicator of whether the user has set the filter as a favorite.\n *  `favouritedCount` Returns a count of how many users have set this filter as a favorite.\n *  `jql` Returns the JQL query that the filter uses.\n *  `owner` Returns the owner of the filter.\n *  `searchUrl` Returns a URL to perform the filter's JQL query.\n *  `sharePermissions` Returns the share permissions defined for the filter.\n *  `subscriptions` Returns the users that are subscribed to the filter.\n *  `viewUrl` Returns a URL to view the filter.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/filter/search?accountId=&maxResults=50&filterName=&orderBy=name&startAt=0\",\"maxResults\":100,\"startAt\":0,\"total\":2,\"isLast\":true,\"values\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/filter/10000\",\"id\":\"10000\",\"name\":\"All Open Bugs\",\"description\":\"Lists all open bugs\",\"owner\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"jql\":\"type = Bug and resolution is empty\",\"viewUrl\":\"https://your-domain.atlassian.net/issues/?filter=10000\",\"searchUrl\":\"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\",\"favourite\":true,\"favouritedCount\":0,\"sharePermissions\":[],\"subscriptions\":[]},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/filter/10010\",\"id\":\"10010\",\"name\":\"My issues\",\"description\":\"Issues assigned to me\",\"owner\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"jql\":\"assignee = currentUser() and resolution is empty\",\"viewUrl\":\"https://your-domain.atlassian.net/issues/?filter=10010\",\"searchUrl\":\"https://your-domain.atlassian.net/rest/api/3/search?jql=assignee+in+%28currentUser%28%29%29+and+resolution+is+empty\",\"favourite\":true,\"favouritedCount\":0,\"sharePermissions\":[{\"id\":10000,\"type\":\"global\"},{\"id\":10010,\"type\":\"project\",\"project\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2020-06-15T03:55:39.545+0000\"}}}],\"subscriptions\":[{\"id\":1,\"user\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"emailAddress\":\"mia@example.com\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"groups\":{\"size\":3,\"items\":[]},\"applicationRoles\":{\"size\":1,\"items\":[]}}}]}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanFoundFilter"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  `owner` and `accountId` are provided.\n *  `expand` includes an invalid value.\n *  `orderBy` is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Filters"
        ],
        "deprecated": false,
        "summary": "Search for filters",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/filter/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the filter to delete.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if the filter is not found."
          },
          "401": {
            "description": "Returned if the user does not have permission to delete the filter."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Filters"
        ],
        "deprecated": false,
        "summary": "Delete filter",
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the filter to return.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/filter/10000\",\"id\":\"10000\",\"name\":\"All Open Bugs\",\"description\":\"Lists all open bugs\",\"owner\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"jql\":\"type = Bug and resolution is empty\",\"viewUrl\":\"https://your-domain.atlassian.net/issues/?filter=10000\",\"searchUrl\":\"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\",\"favourite\":true,\"favouritedCount\":0,\"sharePermissions\":[],\"subscriptions\":{\"size\":0,\"items\":[],\"max-results\":0,\"start-index\":0,\"end-index\":0}}"
            },
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          },
          "400": {
            "description": "Returned if the filter is not found or the user does not have permission to view it."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Filters"
        ],
        "deprecated": false,
        "summary": "Get filter",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the filter to update.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "description": "The filter to update.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/filter/10000\",\"id\":\"10000\",\"name\":\"All Open Bugs\",\"description\":\"Lists all open bugs\",\"owner\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"jql\":\"type = Bug and resolution is empty\",\"viewUrl\":\"https://your-domain.atlassian.net/issues/?filter=10000\",\"searchUrl\":\"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\",\"favourite\":true,\"favouritedCount\":0,\"sharePermissions\":[],\"subscriptions\":{\"size\":0,\"items\":[],\"max-results\":0,\"start-index\":0,\"end-index\":0}}"
            },
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          },
          "400": {
            "description": "Returned if the request object is invalid. For example, the `name` is not unique or the project ID is not specified for a project role share permission."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Filters"
        ],
        "deprecated": false,
        "summary": "Update filter",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/filter/{id}/columns": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the filter.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if:\n\n *  the filter is not found.\n *  the user does not have permission to view the filter."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Filters"
        ],
        "deprecated": false,
        "summary": "Reset columns",
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the filter.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"label\":\"Key\",\"value\":\"issuekey\"},{\"label\":\"Summary\",\"value\":\"summary\"}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ColumnItem"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Returned if the user does not have permission to view the filter."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if a column configuration is not set for the filter."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Filters"
        ],
        "deprecated": false,
        "summary": "Get columns",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the filter.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "The IDs of the fields to set as columns. In the form data, specify each field as `columns=id`, where `id` is the *id* of a field (as seen in the response for [Get fields](#api-rest-api-<ver>-field-get)). For example, `columns=summary`.",
            "in": "formData",
            "items": {
              "type": "string"
            },
            "name": "body",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  a non-navigable field is set as a column.\n *  the user does not have permission to view the filter."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Filters"
        ],
        "deprecated": false,
        "summary": "Set columns",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/filter/{id}/favourite": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the filter.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/filter/10000\",\"id\":\"10000\",\"name\":\"All Open Bugs\",\"description\":\"Lists all open bugs\",\"owner\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"jql\":\"type = Bug and resolution is empty\",\"viewUrl\":\"https://your-domain.atlassian.net/issues/?filter=10000\",\"searchUrl\":\"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\",\"favourite\":true,\"favouritedCount\":0,\"sharePermissions\":[],\"subscriptions\":{\"size\":0,\"items\":[],\"max-results\":0,\"start-index\":0,\"end-index\":0}}"
            },
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  the filter is not found.\n *  the user does not have permission to view the filter."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Filters"
        ],
        "deprecated": false,
        "summary": "Remove filter as favorite",
        "x-atlassian-connect-scope": "DELETE"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the filter.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/filter/10000\",\"id\":\"10000\",\"name\":\"All Open Bugs\",\"description\":\"Lists all open bugs\",\"owner\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"jql\":\"type = Bug and resolution is empty\",\"viewUrl\":\"https://your-domain.atlassian.net/issues/?filter=10000\",\"searchUrl\":\"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\",\"favourite\":true,\"favouritedCount\":0,\"sharePermissions\":[],\"subscriptions\":{\"size\":0,\"items\":[],\"max-results\":0,\"start-index\":0,\"end-index\":0}}"
            },
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  the filter is not found.\n *  the user does not have permission to favorite the filter."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Filters"
        ],
        "deprecated": false,
        "summary": "Add filter as favorite",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/filter/{id}/permission": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the filter.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"id\":10000,\"type\":\"global\"},{\"id\":10010,\"type\":\"project\",\"project\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2020-06-15T03:55:39.545+0000\"}}},{\"id\":10010,\"type\":\"project\",\"project\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY\",\"id\":\"10002\",\"key\":\"MKY\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10002\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10002\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10002\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10002\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2020-06-15T03:55:39.545+0000\"},\"deleted\":true,\"retentionTillDate\":\"2020-08-14T03:55:39.546+0000\",\"deletedDate\":\"2020-06-15T03:55:39.546+0000\",\"deletedBy\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false}},\"role\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\",\"name\":\"Developers\",\"id\":10360,\"description\":\"A project role that represents developers in a project\",\"actors\":[{\"id\":10240,\"displayName\":\"jira-developers\",\"type\":\"atlassian-group-role-actor\",\"name\":\"jira-developers\",\"actorGroup\":{\"name\":\"jira-developers\",\"displayName\":\"jira-developers\"}},{\"id\":10241,\"displayName\":\"Mia Krystof\",\"type\":\"atlassian-user-role-actor\",\"actorUser\":{\"accountId\":\"5b10a2844c20165700ede21g\"}}],\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}}},{\"id\":10010,\"type\":\"group\",\"group\":{\"name\":\"jira-administrators\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/group?groupname=jira-administrators\"}}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/SharePermission"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  the filter is not found.\n *  the user does not have permission to view the filter."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Filter sharing"
        ],
        "deprecated": false,
        "summary": "Get share permissions",
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the filter.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharePermissionInputBean"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"id\":10000,\"type\":\"global\"},{\"id\":10010,\"type\":\"project\",\"project\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2020-06-15T03:55:39.545+0000\"}}},{\"id\":10010,\"type\":\"project\",\"project\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY\",\"id\":\"10002\",\"key\":\"MKY\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10002\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10002\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10002\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10002\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2020-06-15T03:55:39.545+0000\"},\"deleted\":true,\"retentionTillDate\":\"2020-08-14T03:55:39.546+0000\",\"deletedDate\":\"2020-06-15T03:55:39.546+0000\",\"deletedBy\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false}},\"role\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\",\"name\":\"Developers\",\"id\":10360,\"description\":\"A project role that represents developers in a project\",\"actors\":[{\"id\":10240,\"displayName\":\"jira-developers\",\"type\":\"atlassian-group-role-actor\",\"name\":\"jira-developers\",\"actorGroup\":{\"name\":\"jira-developers\",\"displayName\":\"jira-developers\"}},{\"id\":10241,\"displayName\":\"Mia Krystof\",\"type\":\"atlassian-user-role-actor\",\"actorUser\":{\"accountId\":\"5b10a2844c20165700ede21g\"}}],\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}}},{\"id\":10010,\"type\":\"group\",\"group\":{\"name\":\"jira-administrators\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/group?groupname=jira-administrators\"}}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/SharePermission"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  the request object is invalid. For example, it contains an invalid type, the ID does not match the type, or the project or group is not found.\n *  the user does not own the filter.\n *  the user does not have the required permissions."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  the filter is not found.\n *  the user does not have permission to view the filter."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Filter sharing"
        ],
        "deprecated": false,
        "summary": "Add share permission",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/filter/{id}/permission/{permissionId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the filter.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The ID of the share permission.",
            "format": "int64",
            "in": "path",
            "name": "permissionId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  the filter is not found.\n *  the user does not own the filter."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Filter sharing"
        ],
        "deprecated": false,
        "summary": "Delete share permission",
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the filter.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The ID of the share permission.",
            "format": "int64",
            "in": "path",
            "name": "permissionId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":10000,\"type\":\"global\"}"
            },
            "schema": {
              "$ref": "#/definitions/SharePermission"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  the filter is not found.\n *  the permission is not found.\n *  the user does not have permission to view the filter."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Filter sharing"
        ],
        "deprecated": false,
        "summary": "Get share permission",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/group": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The name of the group.",
            "in": "query",
            "name": "groupname",
            "required": true,
            "type": "string"
          },
          {
            "description": "The group to transfer restrictions to. Only comments and worklogs are transferred. If restrictions are not transferred, comments and worklogs are inaccessible after the deletion.",
            "in": "query",
            "name": "swapGroup",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if the group name is not specified."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing from the request."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the group is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Groups"
        ],
        "deprecated": false,
        "summary": "Remove group",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The name of the group.",
            "in": "query",
            "name": "groupname",
            "required": true,
            "type": "string"
          },
          {
            "description": "List of fields to expand.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Returned if the group name is not specified."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the calling user does not have the Administer Jira global permission."
          },
          "404": {
            "description": "Returned if the group is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-user"
            ]
          }
        ],
        "tags": [
          "Groups"
        ],
        "deprecated": true,
        "summary": "Get group",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The name of the group.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddGroupBean"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"name\":\"power-users\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/group?groupname=power-users\",\"users\":{\"size\":1,\"items\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false}],\"max-results\":50,\"start-index\":0,\"end-index\":0},\"expand\":\"users\"}"
            },
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Returned if group name is not specified or the group name is in use."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Groups"
        ],
        "deprecated": false,
        "summary": "Create group",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/group/member": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The name of the group.",
            "in": "query",
            "name": "groupname",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "Include inactive users.",
            "in": "query",
            "name": "includeInactiveUsers",
            "type": "boolean"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/group/member?groupname=jira-administrators&includeInactiveUsers=false&startAt=2&maxResults=2\",\"nextPage\":\"https://your-domain.atlassian.net/rest/api/3/group/member?groupname=jira-administrators&includeInactiveUsers=false&startAt=4&maxResults=2\",\"maxResults\":2,\"startAt\":3,\"total\":5,\"isLast\":false,\"values\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"name\":\"\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"emailAddress\":\"mia@example.com\",\"avatarUrls\":{},\"displayName\":\"Mia\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"accountType\":\"atlassian\"},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a0effa615349cb016cd8\",\"name\":\"\",\"key\":\"\",\"accountId\":\"5b10a0effa615349cb016cd8\",\"emailAddress\":\"will@example.com\",\"avatarUrls\":{},\"displayName\":\"Will\",\"active\":false,\"timeZone\":\"Australia/Sydney\",\"accountType\":\"atlassian\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanUserDetails"
            }
          },
          "400": {
            "description": "Returned if the group name is not specified."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the calling user does not have the Administer Jira global permission."
          },
          "404": {
            "description": "Returned if the group is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Groups"
        ],
        "deprecated": false,
        "summary": "Get users from group",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/group/user": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The name of the group.",
            "in": "query",
            "name": "groupname",
            "required": true,
            "type": "string"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "username",
            "type": "string"
          },
          {
            "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
            "in": "query",
            "maxLength": 128,
            "name": "accountId",
            "required": true,
            "type": "string",
            "x-showInExample": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if:\n\n *  `groupName` is missing.\n *  `accountId` is missing."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing from the request."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the group or user are not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Groups"
        ],
        "deprecated": false,
        "summary": "Remove user from group",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The name of the group (case sensitive).",
            "in": "query",
            "name": "groupname",
            "required": true,
            "type": "string"
          },
          {
            "description": "The user to add to the group.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserToGroupBean"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the request is successful.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  `groupname` is not provided.\n *  `accountId` is missing."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing from the request."
          },
          "403": {
            "description": "Returned if the calling user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the group or user are not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Groups"
        ],
        "deprecated": false,
        "summary": "Add user to group",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/groups/picker": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "This parameter is deprecated, setting it does not affect the results. To find groups containing a particular user, use [Get user groups](#api-rest-api-3-user-groups-get).",
            "in": "query",
            "name": "accountId",
            "type": "string"
          },
          {
            "description": "The string to find in group names.",
            "in": "query",
            "name": "query",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "A group to exclude from the result. To exclude multiple groups, provide an ampersand-separated list. For example, `exclude=group1&exclude=group2`.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "description": "The maximum number of groups to return. The maximum number of groups that can be returned is limited by the system property `jira.ajax.autocomplete.limit`.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "userName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"header\":\"Showing 20 of 25 matching groups\",\"total\":25,\"groups\":[{\"name\":\"jdog-developers\",\"html\":\"<b>j</b>dog-developers\",\"groupId\":\"276f955c-63d7-42c8-9520-92d01dca0625\"},{\"name\":\"juvenal-bot\",\"html\":\"<b>j</b>uvenal-bot\",\"groupId\":\"6e87dc72-4f1f-421f-9382-2fee8b652487\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/FoundGroups"
            }
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Groups"
        ],
        "deprecated": false,
        "summary": "Find groups",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/groupuserpicker": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The search string.",
            "in": "query",
            "name": "query",
            "required": true,
            "type": "string"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return in each list.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Whether the user avatar should be returned. If an invalid value is provided, the default value is used.",
            "in": "query",
            "name": "showAvatar",
            "type": "boolean"
          },
          {
            "description": "The custom field ID of the field this request is for.",
            "in": "query",
            "name": "fieldId",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "The ID of a project that returned users and groups must have permission to view. To include multiple projects, provide an ampersand-separated list. For example, `projectId=10000&projectId=10001`. This parameter is only used when `fieldId` is present.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "projectId",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "The ID of an issue type that returned users and groups must have permission to view. To include multiple issue types, provide an ampersand-separated list. For example, `issueTypeId=10000&issueTypeId=10001`. Special values, such as `-1` (all standard issue types) and `-2` (all subtask issue types), are supported. This parameter is only used when `fieldId` is present.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "issueTypeId",
            "type": "array"
          },
          {
            "default": "xsmall",
            "description": "The size of the avatar to return. If an invalid value is provided, the default value is used.",
            "enum": [
              "xsmall",
              "xsmall@2x",
              "xsmall@3x",
              "small",
              "small@2x",
              "small@3x",
              "medium",
              "medium@2x",
              "medium@3x",
              "large",
              "large@2x",
              "large@3x",
              "xlarge",
              "xlarge@2x",
              "xlarge@3x",
              "xxlarge",
              "xxlarge@2x",
              "xxlarge@3x",
              "xxxlarge",
              "xxxlarge@2x",
              "xxxlarge@3x"
            ],
            "in": "query",
            "name": "avatarSize",
            "type": "string"
          },
          {
            "default": false,
            "description": "Whether the search for groups should be case insensitive.",
            "in": "query",
            "name": "caseInsensitive",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Whether Connect app users and groups should be excluded from the search results. If an invalid value is provided, the default value is used.",
            "in": "query",
            "name": "excludeConnectAddons",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"users\":{\"users\":[{\"accountId\":\"5b10a2844c20165700ede21g\",\"accountType\":\"atlassian\",\"name\":\"mia\",\"key\":\"mia\",\"html\":\"<strong>Mi</strong>a Krystof - <strong>mi</strong>a@example.com (<strong>mi</strong>a)\",\"displayName\":\"Mia Krystof\",\"avatarUrl\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\"}],\"total\":25,\"header\":\"Showing 20 of 25 matching groups\"},\"groups\":{\"header\":\"Showing 20 of 25 matching groups\",\"total\":25,\"groups\":[{\"name\":\"jdog-developers\",\"html\":\"<b>j</b>dog-developers\",\"groupId\":\"276f955c-63d7-42c8-9520-92d01dca0625\"},{\"name\":\"juvenal-bot\",\"html\":\"<b>j</b>uvenal-bot\",\"groupId\":\"6e87dc72-4f1f-421f-9382-2fee8b652487\"}]}}"
            },
            "schema": {
              "$ref": "#/definitions/FoundUsersAndGroups"
            }
          },
          "400": {
            "description": "Returned if the query parameter is not provided."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Group and user picker"
        ],
        "deprecated": false,
        "summary": "Find users and groups",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/issue": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": false,
            "description": "Whether the project in which the issue is created is added to the user's **Recently viewed** project list, as shown under **Projects** in Jira.",
            "in": "query",
            "name": "updateHistory",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueUpdateDetails"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":\"10000\",\"key\":\"ED-24\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10000\",\"transition\":{\"status\":200,\"errorCollection\":{\"errorMessages\":[],\"errors\":{}}}}"
            },
            "schema": {
              "$ref": "#/definitions/CreatedIssue"
            }
          },
          "400": {
            "description": "Returned if the request:\n\n *  is missing required fields.\n *  contains invalid field values.\n *  contains fields that cannot be set for the issue type.\n *  is by a user who does not have the necessary permission.\n *  is to create a subtype in a project different that of the the parent issue.\n *  is for a subtask when the option to create subtasks is disabled.\n *  is invalid for any other reason.",
            "examples": {
              "application/json": "{\"errorMessages\":[\"Field 'priority' is required\"],\"errors\":{}}"
            },
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issues"
        ],
        "deprecated": false,
        "summary": "Create issue",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/issue/bulk": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssuesUpdateBean"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if any of the issue or subtask creation requests were successful. A request may be unsuccessful when it:\n\n *  is missing required fields.\n *  contains invalid field values.\n *  contains fields that cannot be set for the issue type.\n *  is by a user who does not have the necessary permission.\n *  is to create a subtype in a project different that of the the parent issue.\n *  is for a subtask when the option to create subtasks is disabled.\n *  is invalid for any other reason.",
            "examples": {
              "application/json": "{\"issues\":[{\"id\":\"10000\",\"key\":\"ED-24\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10000\",\"transition\":{\"status\":200,\"errorCollection\":{\"errorMessages\":[],\"errors\":{}}}},{\"id\":\"10001\",\"key\":\"ED-25\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10001\"}],\"errors\":[]}"
            },
            "schema": {
              "$ref": "#/definitions/CreatedIssues"
            }
          },
          "400": {
            "description": "Returned if all requests are invalid. Requests may be unsuccessful when they:\n\n *  are missing required fields.\n *  contain invalid field values.\n *  contain fields that cannot be set for the issue type.\n *  are by a user who does not have the necessary permission.\n *  are to create a subtype in a project different that of the the parent issue.\n *  is for a subtask when the option to create subtasks is disabled.\n *  are invalid for any other reason.",
            "examples": {
              "application/json": "{\"issues\":[],\"errors\":[{\"status\":400,\"elementErrors\":{\"errorMessages\":[],\"errors\":{\"issuetype\":\"The issue type selected is invalid.\",\"project\":\"Sub-tasks must be created in the same project as the parent.\"}},\"failedElementNumber\":0},{\"status\":400,\"elementErrors\":{\"errorMessages\":[],\"errors\":{\"issuetype\":\"The issue type selected is invalid.\",\"project\":\"Sub-tasks must be created in the same project as the parent.\"}},\"failedElementNumber\":1}]}"
            },
            "schema": {
              "$ref": "#/definitions/CreatedIssues"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issues"
        ],
        "deprecated": false,
        "summary": "Bulk create issue",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/issue/createmeta": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "collectionFormat": "multi",
            "description": "List of project IDs. This parameter accepts a comma-separated list. Multiple project IDs can also be provided using an ampersand-separated list. For example, `projectIds=10000,10001&projectIds=10020,10021`. This parameter may be provided with `projectKeys`.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "projectIds",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "List of project keys. This parameter accepts a comma-separated list. Multiple project keys can also be provided using an ampersand-separated list. For example, `projectKeys=proj1,proj2&projectKeys=proj3`. This parameter may be provided with `projectIds`.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "projectKeys",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "List of issue type IDs. This parameter accepts a comma-separated list. Multiple issue type IDs can also be provided using an ampersand-separated list. For example, `issuetypeIds=10000,10001&issuetypeIds=10020,10021`. This parameter may be provided with `issuetypeNames`.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "issuetypeIds",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "List of issue type names. This parameter accepts a comma-separated list. Multiple issue type names can also be provided using an ampersand-separated list. For example, `issuetypeNames=name1,name2&issuetypeNames=name3`. This parameter may be provided with `issuetypeIds`.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "issuetypeNames",
            "type": "array"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about issue metadata in the response. This parameter accepts `projects.issuetypes.fields`, which returns information about the fields in the issue creation screen for each issue type. Fields hidden from the screen are not returned. Use the information to populate the `fields` and `update` fields in [Create issue](#api-rest-api-3-issue-post) and [Create issues](#api-rest-api-3-issue-bulk-post).",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"projects\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/ED\",\"id\":\"10000\",\"key\":\"ED\",\"name\":\"Edison Project\",\"avatarUrls\":{\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000&avatarId=10011\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000&avatarId=10011\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000&avatarId=10011\",\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?pid=10000&avatarId=10011\"},\"issuetypes\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueType/1\",\"id\":\"1\",\"description\":\"An error in the code\",\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/issuetypes/bug.png\",\"name\":\"Bug\",\"subtask\":false,\"fields\":{\"issuetype\":{\"required\":true,\"name\":\"Issue Type\",\"key\":\"issuetype\",\"hasDefaultValue\":false,\"operations\":[\"set\"]}}}]}]}"
            },
            "schema": {
              "$ref": "#/definitions/IssueCreateMetadata"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issues"
        ],
        "deprecated": false,
        "summary": "Get create issue metadata",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/issue/picker": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "A string to match against text fields in the issue such as title, description, or comments.",
            "in": "query",
            "name": "query",
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "A JQL query defining a list of issues to search for the query term. Note that `username` and `userkey` cannot be used as search terms for this parameter, due to privacy reasons. Use `accountId` instead.",
            "in": "query",
            "name": "currentJQL",
            "type": "string"
          },
          {
            "description": "The key of an issue to exclude from search results. For example, the issue the user is viewing when they perform this query.",
            "in": "query",
            "name": "currentIssueKey",
            "type": "string"
          },
          {
            "description": "The ID of a project that suggested issues must belong to.",
            "in": "query",
            "name": "currentProjectId",
            "type": "string"
          },
          {
            "description": "Indicate whether to include subtasks in the suggestions list.",
            "in": "query",
            "name": "showSubTasks",
            "type": "boolean"
          },
          {
            "description": "When `currentIssueKey` is a subtask, whether to include the parent issue in the suggestions if it matches the query.",
            "in": "query",
            "name": "showSubTaskParent",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "schema": {
              "$ref": "#/definitions/IssuePickerSuggestions"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue search"
        ],
        "deprecated": false,
        "summary": "Get issue picker suggestions",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/issue/properties": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "Issue properties to be set or updated with values.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueEntityProperties"
            }
          }
        ],
        "responses": {
          "303": {
            "description": "Returned if the operation is successful."
          },
          "400": {
            "description": "Return if the request is invalid or the user does not have the necessary permission.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue properties"
        ],
        "deprecated": false,
        "summary": "Bulk set issues properties",
        "x-atlassian-connect-scope": "WRITE",
        "x-experimental": true
      }
    },
    "/issue/properties/{propertyKey}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The key of the property.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueFilterForBulkPropertyDelete"
            }
          }
        ],
        "responses": {
          "303": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue properties"
        ],
        "deprecated": false,
        "summary": "Bulk delete issue property",
        "x-atlassian-connect-scope": "DELETE"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The key of the property. The maximum length is 255 characters.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkIssuePropertyUpdateRequest"
            }
          }
        ],
        "responses": {
          "303": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue properties"
        ],
        "deprecated": false,
        "summary": "Bulk set issue property",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/issue/{issueIdOrKey}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "default": "false",
            "description": "Whether the issue's subtasks are deleted when the issue is deleted.",
            "enum": [
              "true",
              "false"
            ],
            "in": "query",
            "name": "deleteSubtasks",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if the issue has subtasks and `deleteSubtasks` is not set to *true*."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          },
          "403": {
            "description": "Returned if the user does not have permission to delete the issue."
          },
          "404": {
            "description": "Returned if the issue is not found or the user does not have permission to view the issue."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issues"
        ],
        "deprecated": false,
        "summary": "Delete issue",
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "A list of fields to return for the issue. This parameter accepts a comma-separated list. Use it to retrieve a subset of fields. Allowed values:\n\n *  `*all` Returns all fields.\n *  `*navigable` Returns navigable fields.\n *  Any issue field, prefixed with a minus to exclude.\n\nExamples:\n\n *  `summary,comment` Returns only the summary and comments fields.\n *  `-description` Returns all (default) fields except description.\n *  `*navigable,-comment` Returns all navigable fields except comment.\n\nThis parameter may be specified multiple times. For example, `fields=field1,field2& fields=field3`.\n\nNote: All fields are returned by default. This differs from [Search for issues using JQL (GET)](#api-rest-api-3-search-get) and [Search for issues using JQL (POST)](#api-rest-api-3-search-post) where the default is all navigable fields.",
            "in": "query",
            "items": {
              "default": "*all",
              "type": "string"
            },
            "name": "fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "Whether fields in `fields` are referenced by keys rather than IDs. This parameter is useful where fields have been added by a connect app and a field's key may differ from its ID.",
            "in": "query",
            "name": "fieldsByKeys",
            "type": "boolean"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about the issues in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `renderedFields` Returns field values rendered in HTML format.\n *  `names` Returns the display name of each field.\n *  `schema` Returns the schema describing a field type.\n *  `transitions` Returns all possible transitions for the issue.\n *  `editmeta` Returns information about how each field can be edited.\n *  `changelog` Returns a list of recent updates to an issue, sorted by date, starting from the most recent.\n *  `versionedRepresentations` Returns a JSON array for each version of a field's value, with the highest number representing the most recent version. Note: When included in the request, the `fields` parameter is ignored.",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "A list of issue properties to return for the issue. This parameter accepts a comma-separated list. Allowed values:\n\n *  `*all` Returns all issue properties.\n *  Any issue property key, prefixed with a minus to exclude.\n\nExamples:\n\n *  `*all` Returns all properties.\n *  `*all,-prop1` Returns all properties except `prop1`.\n *  `prop1,prop2` Returns `prop1` and `prop2` properties.\n\nThis parameter may be specified multiple times. For example, `properties=prop1,prop2& properties=prop3`.",
            "in": "query",
            "items": {
              "default": "null",
              "type": "string"
            },
            "name": "properties",
            "type": "array"
          },
          {
            "default": false,
            "description": "Whether the project in which the issue is created is added to the user's **Recently viewed** project list, as shown under **Projects** in Jira. This also populates the [JQL issues search](#api-rest-api-3-search-get) `lastViewed` field.",
            "in": "query",
            "name": "updateHistory",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"expand\":\"\",\"id\":\"10002\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10002\",\"key\":\"ED-1\",\"fields\":{\"watcher\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/EX-1/watchers\",\"isWatching\":false,\"watchCount\":1,\"watchers\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false}]},\"attachment\":[{\"id\":10000,\"self\":\"https://your-domain.atlassian.net/rest/api/3/attachments/10000\",\"filename\":\"picture.jpg\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2020-06-15T03:55:41.964+0000\",\"size\":23123,\"mimeType\":\"image/jpeg\",\"content\":\"https://your-domain.atlassian.net/jira/secure/attachments/10000/picture.jpg\",\"thumbnail\":\"https://your-domain.atlassian.net/jira/secure/thumbnail/10000/picture.jpg\"}],\"sub-tasks\":[{\"id\":\"10000\",\"type\":{\"id\":\"10000\",\"name\":\"\",\"inward\":\"Parent\",\"outward\":\"Sub-task\"},\"outwardIssue\":{\"id\":\"10003\",\"key\":\"ED-2\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/ED-2\",\"fields\":{\"status\":{\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/statuses/open.png\",\"name\":\"Open\"}}}}],\"description\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Main order flow broken\"}]}]},\"project\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2020-06-15T03:55:39.545+0000\"}},\"comment\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2020-06-15T03:55:41.968+0000\",\"updated\":\"2020-06-15T03:55:41.968+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"issuelinks\":[{\"id\":\"10001\",\"type\":{\"id\":\"10000\",\"name\":\"Dependent\",\"inward\":\"depends on\",\"outward\":\"is depended by\"},\"outwardIssue\":{\"id\":\"10004L\",\"key\":\"PR-2\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/PR-2\",\"fields\":{\"status\":{\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/statuses/open.png\",\"name\":\"Open\"}}}},{\"id\":\"10002\",\"type\":{\"id\":\"10000\",\"name\":\"Dependent\",\"inward\":\"depends on\",\"outward\":\"is depended by\"},\"inwardIssue\":{\"id\":\"10004\",\"key\":\"PR-3\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/PR-3\",\"fields\":{\"status\":{\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/statuses/open.png\",\"name\":\"Open\"}}}}],\"worklog\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2020-06-15T03:55:41.972+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2020-06-15T03:55:41.972+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}"
            },
            "schema": {
              "$ref": "#/definitions/IssueBean"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the issue is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issues"
        ],
        "deprecated": false,
        "summary": "Get issue",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "description": "Whether a notification email about the issue update is sent to all watchers. To disable the notification, administer Jira or administer project permissions are required. If the user doesn't have the necessary permission the request is ignored.",
            "in": "query",
            "name": "notifyUsers",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Whether screen security should be overridden to enable hidden fields to be edited. Available to Connect app users with admin permissions.",
            "in": "query",
            "name": "overrideScreenSecurity",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Whether screen security should be overridden to enable uneditable fields to be edited. Available to Connect app users with admin permissions.",
            "in": "query",
            "name": "overrideEditableFlag",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueUpdateDetails"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  the request body is missing.\n *  the user does not have the necessary permission to edit one or more fields.\n *  the request includes one or more fields that are not found or are not associated with the issue's edit screen.\n *  the request includes an invalid transition."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user uses `overrideScreenSecurity` or `overrideEditableFlag` but doesn't have the necessary permission."
          },
          "404": {
            "description": "Returned if the issue is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issues"
        ],
        "deprecated": false,
        "summary": "Edit issue",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/issue/{issueIdOrKey}/assignee": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue to be assigned.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request object with the user that the issue is assigned to.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  the user is not found.\n *  `name`, `key`, or `accountId` is missing.\n *  more than one of `name`, `key`, and `accountId` are provided."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the issue is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issues"
        ],
        "deprecated": false,
        "summary": "Assign issue",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/issue/{issueIdOrKey}/attachments": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue that attachments are added to.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "format": "binary",
            "in": "formData",
            "name": "body",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/attachments/10000\",\"id\":\"10001\",\"filename\":\"picture.jpg\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"emailAddress\":\"mia@example.com\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":true,\"timeZone\":\"Australia/Sydney\"},\"created\":\"2020-06-15T03:55:45.467+0000\",\"size\":23123,\"mimeType\":\"image/jpeg\",\"content\":\"https://your-domain.atlassian.net/secure/attachments/10000/picture.jpg\",\"thumbnail\":\"https://your-domain.atlassian.net/secure/thumbnail/10000/picture.jpg\"},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/attachments/10001\",\"filename\":\"dbeuglog.txt\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"emailAddress\":\"mia@example.com\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":true,\"timeZone\":\"Australia/Sydney\"},\"created\":\"2020-06-15T03:55:45.467+0000\",\"size\":2460,\"mimeType\":\"text/plain\",\"content\":\"https://your-domain.atlassian.net/secure/attachments/10001/dbeuglog.txt\"}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/Attachment"
              },
              "type": "array"
            }
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if any of the following is true:\n\n *  the issue is not found.\n *  the user does not have permission to view the issue."
          },
          "413": {
            "description": "The attachments exceed the maximum attachment size for issues. See [Configuring file attachments](https://confluence.atlassian.com/x/wIXKM) for details."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue attachments"
        ],
        "deprecated": false,
        "summary": "Add attachment",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/issue/{issueIdOrKey}/changelog": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int32",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 100,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/TT-1/changelog?startAt=2&maxResults=2\",\"nextPage\":\"https://your-domain.atlassian.net/rest/api/3/issue/TT-1/changelog?&startAt=4&maxResults=2\",\"maxResults\":2,\"startAt\":2,\"total\":5,\"isLast\":false,\"values\":[{\"id\":\"10001\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"emailAddress\":\"mia@example.com\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":true,\"timeZone\":\"Australia/Sydney\"},\"created\":\"1970-01-18T06:27:50.429+0000\",\"items\":[{\"field\":\"fields\",\"fieldtype\":\"jira\",\"fieldId\":\"fieldId\",\"from\":null,\"fromString\":\"\",\"to\":null,\"toString\":\"label-1\"}]},{\"id\":\"10002\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"emailAddress\":\"mia@example.com\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":true,\"timeZone\":\"Australia/Sydney\"},\"created\":\"1970-01-18T06:27:51.429+0000\",\"items\":[{\"field\":\"fields\",\"fieldtype\":\"jira\",\"fieldId\":\"fieldId\",\"from\":null,\"fromString\":\"label-1\",\"to\":null,\"toString\":\"label-1 label-2\"}]}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanChangelog"
            }
          },
          "404": {
            "description": "Returned if the issue is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issues"
        ],
        "deprecated": false,
        "summary": "Get change logs",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/issue/{issueIdOrKey}/comment": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "description": "[Order](#ordering) the results by a field. Accepts *created* to sort comments by their created date.",
            "enum": [
              "created",
              "-created",
              "+created"
            ],
            "in": "query",
            "name": "orderBy",
            "type": "string"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about comments in the response. This parameter accepts `renderedBody`, which returns the comment body rendered in HTML.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"startAt\":0,\"maxResults\":1,\"total\":1,\"comments\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2020-06-15T03:55:41.968+0000\",\"updated\":\"2020-06-15T03:55:41.968+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageOfComments"
            }
          },
          "400": {
            "description": "Returned if `orderBy` is set to a value other than *created*."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the issue is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue comments"
        ],
        "deprecated": false,
        "summary": "Get comments",
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about comments in the response. This parameter accepts `renderedBody`, which returns the comment body rendered in HTML.",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2020-06-15T03:55:41.968+0000\",\"updated\":\"2020-06-15T03:55:41.968+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}"
            },
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          },
          "404": {
            "description": "Returned if the issue is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue comments"
        ],
        "deprecated": false,
        "summary": "Add comment",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/issue/{issueIdOrKey}/comment/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the comment.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if the user does not have permission to delete the comment."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the issue or comment is not found or the user does not have permission to view the issue or comment."
          },
          "405": {
            "description": "Returned if an anonymous call is made to the operation."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue comments"
        ],
        "deprecated": false,
        "summary": "Delete comment",
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the comment.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about comments in the response. This parameter accepts `renderedBody`, which returns the comment body rendered in HTML.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2020-06-15T03:55:41.968+0000\",\"updated\":\"2020-06-15T03:55:41.968+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}"
            },
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the issue or comment is not found or the user does not have permission to view the issue or comment."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue comments"
        ],
        "deprecated": false,
        "summary": "Get comment",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the comment.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about comments in the response. This parameter accepts `renderedBody`, which returns the comment body rendered in HTML.",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2020-06-15T03:55:41.968+0000\",\"updated\":\"2020-06-15T03:55:41.968+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}"
            },
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          "400": {
            "description": "Returned if the user does not have permission to edit the comment or the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the issue or comment is not found or the user does not have permission to view the issue or comment."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue comments"
        ],
        "deprecated": false,
        "summary": "Update comment",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/issue/{issueIdOrKey}/editmeta": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "Whether hidden fields should be returned. Available to connect app users with admin permissions.",
            "in": "query",
            "name": "overrideScreenSecurity",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Whether non-editable fields should be returned. Available to connect app users with admin permissions.",
            "in": "query",
            "name": "overrideEditableFlag",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"fields\":{\"summary\":{\"required\":false,\"schema\":{\"type\":\"array\",\"items\":\"option\",\"custom\":\"com.atlassian.jira.plugin.system.customfieldtypes:multiselect\",\"customId\":10001},\"name\":\"My Multi Select\",\"key\":\"field_key\",\"hasDefaultValue\":false,\"operations\":[\"set\",\"add\"],\"allowedValues\":[\"red\",\"blue\"],\"defaultValue\":\"red\"}}}"
            },
            "schema": {
              "$ref": "#/definitions/IssueUpdateMetadata"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user uses an override parameter but doesn't have permission to do so."
          },
          "404": {
            "description": "Returned if the issue is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issues"
        ],
        "deprecated": false,
        "summary": "Get edit issue metadata",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/issue/{issueIdOrKey}/notify": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "ID or key of the issue that the notification is sent for.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request object for the notification and recipients.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the email is queued for sending.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  the recipient is the same as the calling user.\n *  the recipient is invalid. For example, the recipient is set to the assignee, but the issue is unassigned.\n *  the request is invalid. For example, required fields are missing or have invalid values."
          },
          "403": {
            "description": "Returned if:\n\n *  outgoing emails are disabled.\n *  no SMTP server is configured."
          },
          "404": {
            "description": "Returned if the issue is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issues"
        ],
        "deprecated": false,
        "summary": "Send notification for issue",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/issue/{issueIdOrKey}/properties": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The key or ID of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"keys\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support\",\"key\":\"issue.support\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PropertyKeys"
            }
          },
          "404": {
            "description": "Returned if the issue is not found or the user does not have permissions to view the issue."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue properties"
        ],
        "deprecated": false,
        "summary": "Get issue property keys",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/issue/{issueIdOrKey}/properties/{propertyKey}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The key or ID of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The key of the property.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the issue or property is not found, or the user does not have permission to edit the issue."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue properties"
        ],
        "deprecated": false,
        "summary": "Delete issue property",
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The key or ID of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The key of the property.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"key\":\"issue.support\",\"value\":{\"system.conversation.id\":\"b1bf38be-5e94-4b40-a3b8-9278735ee1e6\",\"system.support.time\":\"1m\"}}"
            },
            "schema": {
              "$ref": "#/definitions/EntityProperty"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the issue or property is not found or the user does not have permission to see the issue."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue properties"
        ],
        "deprecated": false,
        "summary": "Get issue property",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The key of the issue property. The maximum length is 255 characters.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the issue property is updated.",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Returned if the issue property is created.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have permission to edit the issue."
          },
          "404": {
            "description": "Returned if the issue is not found or the user does not have permission to view the issue."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue properties"
        ],
        "deprecated": false,
        "summary": "Set issue property",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/issue/{issueIdOrKey}/remotelink": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "The global ID of a remote issue link.",
            "in": "query",
            "name": "globalId",
            "required": true,
            "type": "string",
            "x-showInExample": "true"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if a global ID isn't provided."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have permission to link issues."
          },
          "404": {
            "description": "Returned if the issue or remote issue link is not found or the user does not have permission to view the issue."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue remote links"
        ],
        "deprecated": false,
        "summary": "Delete remote issue link by global ID",
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "The global ID of the remote issue link.",
            "in": "query",
            "name": "globalId",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"id\":10000,\"self\":\"https://your-domain.atlassian.net/rest/api/issue/MKY-1/remotelink/10000\",\"globalId\":\"system=http://www.mycompany.com/support&id=1\",\"application\":{\"type\":\"com.acme.tracker\",\"name\":\"My Acme Tracker\"},\"relationship\":\"causes\",\"object\":{\"url\":\"http://www.mycompany.com/support?id=1\",\"title\":\"TSTSUP-111\",\"summary\":\"Customer support issue\",\"icon\":{\"url16x16\":\"http://www.mycompany.com/support/ticket.png\",\"title\":\"Support Ticket\"},\"status\":{\"resolved\":true,\"icon\":{\"url16x16\":\"http://www.mycompany.com/support/resolved.png\",\"title\":\"Case Closed\",\"link\":\"http://www.mycompany.com/support?id=1&details=closed\"}}}},{\"id\":10001,\"self\":\"https://your-domain.atlassian.net/rest/api/issue/MKY-1/remotelink/10001\",\"globalId\":\"system=http://www.anothercompany.com/tester&id=1234\",\"application\":{\"type\":\"com.acme.tester\",\"name\":\"My Acme Tester\"},\"relationship\":\"is tested by\",\"object\":{\"url\":\"http://www.anothercompany.com/tester/testcase/1234\",\"title\":\"Test Case #1234\",\"summary\":\"Test that the submit button saves the item\",\"icon\":{\"url16x16\":\"http://www.anothercompany.com/tester/images/testcase.gif\",\"title\":\"Test Case\"},\"status\":{\"resolved\":false,\"icon\":{\"url16x16\":\"http://www.anothercompany.com/tester/images/person/mia.gif\",\"title\":\"Tested by Mia Krystof\",\"link\":\"http://www.anothercompany.com/tester/person?accountId=5b10a2844c20165700ede21g\"}}}}]"
            },
            "schema": {
              "$ref": "#/definitions/RemoteIssueLink"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if issue linking is disabled."
          },
          "404": {
            "description": "Returned if the the issue or remote issue link is not found or the user does not have permission to view the issue."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue remote links"
        ],
        "deprecated": false,
        "summary": "Get remote issue links",
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoteIssueLinkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the remote issue link is updated.",
            "examples": {
              "application/json": "{\"id\":10000,\"self\":\"https://your-domain.atlassian.net/rest/api/issue/MKY-1/remotelink/10000\"}"
            },
            "schema": {
              "$ref": "#/definitions/RemoteIssueLinkIdentifies"
            }
          },
          "201": {
            "description": "Returned if the remote issue link is created.",
            "examples": {
              "application/json": "{\"id\":10000,\"self\":\"https://your-domain.atlassian.net/rest/api/issue/MKY-1/remotelink/10000\"}"
            },
            "schema": {
              "$ref": "#/definitions/RemoteIssueLinkIdentifies"
            }
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "examples": {
              "application/json": "{\"errorMessages\":[],\"errors\":{\"title\":\"'title' is required.\"}}"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have permission to link issues."
          },
          "404": {
            "description": "Returned if the issue is not found or the user does not have permission to view the issue."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue remote links"
        ],
        "deprecated": false,
        "summary": "Create or update remote issue link",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/issue/{issueIdOrKey}/remotelink/{linkId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "The ID of a remote issue link.",
            "in": "path",
            "name": "linkId",
            "required": true,
            "type": "string",
            "x-showInExample": "true"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if the link ID is invalid or the remote issue link does not belong to the issue."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have permission to link issues."
          },
          "404": {
            "description": "Returned if the issue or remote issue link is not found or the user does not have permission to view the issue."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue remote links"
        ],
        "deprecated": false,
        "summary": "Delete remote issue link by ID",
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the remote issue link.",
            "in": "path",
            "name": "linkId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":10000,\"self\":\"https://your-domain.atlassian.net/rest/api/issue/MKY-1/remotelink/10000\",\"globalId\":\"system=http://www.mycompany.com/support&id=1\",\"application\":{\"type\":\"com.acme.tracker\",\"name\":\"My Acme Tracker\"},\"relationship\":\"causes\",\"object\":{\"url\":\"http://www.mycompany.com/support?id=1\",\"title\":\"TSTSUP-111\",\"summary\":\"Customer support issue\",\"icon\":{\"url16x16\":\"http://www.mycompany.com/support/ticket.png\",\"title\":\"Support Ticket\"},\"status\":{\"resolved\":true,\"icon\":{\"url16x16\":\"http://www.mycompany.com/support/resolved.png\",\"title\":\"Case Closed\",\"link\":\"http://www.mycompany.com/support?id=1&details=closed\"}}}}"
            },
            "schema": {
              "$ref": "#/definitions/RemoteIssueLink"
            }
          },
          "400": {
            "description": "Returned if the link ID is invalid or the remote issue link does not belong to the issue."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if issue linking is disabled."
          },
          "404": {
            "description": "Returned if the issue or remote issue link is not found or the user does not have permission to view the issue."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue remote links"
        ],
        "deprecated": false,
        "summary": "Get remote issue link by ID",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "The ID of the remote issue link.",
            "in": "path",
            "name": "linkId",
            "required": true,
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoteIssueLinkRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  the link ID is invalid.\n *  the remote issue link does not belong to the issue.\n *  the request body is invalid.",
            "examples": {
              "application/json": "{\"errorMessages\":[],\"errors\":{\"title\":\"'title' is required.\"}}"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have permission to link issues."
          },
          "404": {
            "description": "Returned if the issue or remote issue link is not found or the user does not have permission to view the issue."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue remote links"
        ],
        "deprecated": false,
        "summary": "Update remote issue link by ID",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/issue/{issueIdOrKey}/transitions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about transitions in the response. This parameter accepts `transitions.fields`, which returns information about the fields in the transition screen for each transition. Fields hidden from the screen are not returned. Use this information to populate the `fields` and `update` fields in [Transition issue](#api-rest-api-3-issue-issueIdOrKey-transitions-post).",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "description": "The ID of the transition.",
            "in": "query",
            "name": "transitionId",
            "type": "string"
          },
          {
            "default": false,
            "description": "Whether transitions with the condition *Hide From User Condition* are included in the response.",
            "in": "query",
            "name": "skipRemoteOnlyCondition",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Whether details of transitions that fail a condition are included in the response",
            "in": "query",
            "name": "includeUnavailableTransitions",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"transitions\":[{\"id\":\"2\",\"name\":\"Close Issue\",\"to\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/status/10000\",\"description\":\"The issue is currently being worked on.\",\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/progress.gif\",\"name\":\"In Progress\",\"id\":\"10000\",\"statusCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/statuscategory/1\",\"id\":1,\"key\":\"in-flight\",\"colorName\":\"yellow\",\"name\":\"In Progress\"}},\"hasScreen\":false,\"isGlobal\":false,\"isInitial\":false,\"isAvailable\":true,\"isConditional\":false,\"fields\":{\"summary\":{\"required\":false,\"schema\":{\"type\":\"array\",\"items\":\"option\",\"custom\":\"com.atlassian.jira.plugin.system.customfieldtypes:multiselect\",\"customId\":10001},\"name\":\"My Multi Select\",\"key\":\"field_key\",\"hasDefaultValue\":false,\"operations\":[\"set\",\"add\"],\"allowedValues\":[\"red\",\"blue\"],\"defaultValue\":\"red\"}}},{\"id\":\"711\",\"name\":\"QA Review\",\"to\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/status/5\",\"description\":\"The issue is closed.\",\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/closed.gif\",\"name\":\"Closed\",\"id\":\"5\",\"statusCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/statuscategory/9\",\"id\":9,\"key\":\"completed\",\"colorName\":\"green\"}},\"hasScreen\":true,\"fields\":{\"summary\":{\"required\":false,\"schema\":{\"type\":\"array\",\"items\":\"option\",\"custom\":\"com.atlassian.jira.plugin.system.customfieldtypes:multiselect\",\"customId\":10001},\"name\":\"My Multi Select\",\"key\":\"field_key\",\"hasDefaultValue\":false,\"operations\":[\"set\",\"add\"],\"allowedValues\":[\"red\",\"blue\"],\"defaultValue\":\"red\"},\"colour\":{\"required\":false,\"schema\":{\"type\":\"array\",\"items\":\"option\",\"custom\":\"com.atlassian.jira.plugin.system.customfieldtypes:multiselect\",\"customId\":10001},\"name\":\"My Multi Select\",\"key\":\"field_key\",\"hasDefaultValue\":false,\"operations\":[\"set\",\"add\"],\"allowedValues\":[\"red\",\"blue\"],\"defaultValue\":\"red\"}}}]}"
            },
            "schema": {
              "$ref": "#/definitions/Transitions"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the issue is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issues"
        ],
        "deprecated": false,
        "summary": "Get transitions",
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueUpdateDetails"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  no transition is specified.\n *  the user does not have permission to transition the issue.\n *  a field that isn't included on the transition screen is defined in `fields` or `update`.\n *  a field is specified in both `fields` and `update`.\n *  the request is invalid for any other reason."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the issue is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issues"
        ],
        "deprecated": false,
        "summary": "Transition issue",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/issue/{issueIdOrKey}/votes": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  voting is disabled.\n *  the user has not voted on the issue.\n *  the user is the issue reporter.\n *  the issue is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue votes"
        ],
        "deprecated": false,
        "summary": "Delete vote",
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/issue/MKY-1/votes\",\"votes\":24,\"hasVoted\":true,\"voters\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false}]}"
            },
            "schema": {
              "$ref": "#/definitions/Votes"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  voting is disabled.\n *  the user does not have permission to view the issue.\n *  the issue is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue votes"
        ],
        "deprecated": false,
        "summary": "Get votes",
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  voting is disabled.\n *  the user is the issue reporter.\n *  the issue is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue votes"
        ],
        "deprecated": false,
        "summary": "Add vote",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/issue/{issueIdOrKey}/watchers": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "username",
            "type": "string"
          },
          {
            "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required.",
            "in": "query",
            "maxLength": 128,
            "name": "accountId",
            "type": "string",
            "x-showInExample": "true"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if `accountId` is not supplied."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the permission to manage the watcher list."
          },
          "404": {
            "description": "Returned if the issue or the user is not found or the user does not have permission to view the issue."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue watchers"
        ],
        "deprecated": false,
        "summary": "Delete watcher",
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/EX-1/watchers\",\"isWatching\":false,\"watchCount\":1,\"watchers\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false}]}"
            },
            "schema": {
              "$ref": "#/definitions/Watchers"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the issue is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue watchers"
        ],
        "deprecated": false,
        "summary": "Get issue watchers",
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The account ID of the user. Note that username cannot be used due to privacy changes.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the permission to manage the watcher list."
          },
          "404": {
            "description": "Returned if the issue or the user is not found or the user does not have permission to view the issue."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue watchers"
        ],
        "deprecated": false,
        "summary": "Add watcher",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/issue/{issueIdOrKey}/worklog": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 1048576,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "description": "The worklog start date and time, as a UNIX timestamp in milliseconds, after which worklogs are returned.",
            "format": "int64",
            "in": "query",
            "name": "startedAfter",
            "type": "integer"
          },
          {
            "default": "",
            "description": "Use [expand](#expansion) to include additional information about worklogs in the response. This parameter accepts`properties`, which returns worklog properties.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful",
            "examples": {
              "application/json": "{\"startAt\":0,\"maxResults\":1,\"total\":1,\"worklogs\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2020-06-15T03:55:41.972+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2020-06-15T03:55:41.972+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageOfWorklogs"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  the issue is not found or the user does not have permission to view the issue.\n *  `startAt` or `maxResults` has non-numeric values.\n *  time tracking is disabled."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue worklogs"
        ],
        "deprecated": false,
        "summary": "Get issue worklogs",
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "description": "Whether users watching the issue are notified by email.",
            "in": "query",
            "name": "notifyUsers",
            "type": "boolean"
          },
          {
            "default": "auto",
            "description": "Defines how to update the issue's time estimate, the options are:\n\n *  `new` Sets the estimate to a specific value, defined in `newEstimate`.\n *  `leave` Leaves the estimate unchanged.\n *  `manual` Reduces the estimate by amount specified in `reduceBy`.\n *  `auto` Reduces the estimate by the value of `timeSpent` in the worklog.",
            "enum": [
              "new",
              "leave",
              "manual",
              "auto"
            ],
            "in": "query",
            "name": "adjustEstimate",
            "type": "string"
          },
          {
            "description": "The value to set as the issue's remaining time estimate, as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). For example, *2d*. Required when `adjustEstimate` is `new`.",
            "in": "query",
            "name": "newEstimate",
            "type": "string"
          },
          {
            "description": "The amount to reduce the issue's remaining estimate by, as days (\\#d), hours (\\#h), or minutes (\\#m). For example, *2d*. Required when `adjustEstimate` is `manual`.",
            "in": "query",
            "name": "reduceBy",
            "type": "string"
          },
          {
            "default": "",
            "description": "Use [expand](#expansion) to include additional information about work logs in the response. This parameter accepts `properties`, which returns worklog properties.",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "default": false,
            "description": "Whether the worklog entry should be added to the issue even if the issue is not editable, because jira.issue.editable set to false or missing. For example, the issue is closed. Only connect app users with admin scope permission can use this flag.",
            "in": "query",
            "name": "overrideEditableFlag",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Worklog"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the request is successful.",
            "schema": {
              "$ref": "#/definitions/Worklog"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  `adjustEstimate` is set to `new` but `newEstimate` is not provided or is invalid.\n *  `adjustEstimate` is set to `manual` but `reduceBy` is not provided or is invalid.\n *  the user does not have permission to add the worklog.\n *  the request JSON is malformed."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          },
          "404": {
            "description": "Returned if the issue is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue worklogs"
        ],
        "deprecated": false,
        "summary": "Add worklog",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/issue/{issueIdOrKey}/worklog/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the worklog.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "description": "Whether users watching the issue are notified by email.",
            "in": "query",
            "name": "notifyUsers",
            "type": "boolean"
          },
          {
            "default": "auto",
            "description": "Defines how to update the issue's time estimate, the options are:\n\n *  `new` Sets the estimate to a specific value, defined in `newEstimate`.\n *  `leave` Leaves the estimate unchanged.\n *  `manual` Increases the estimate by amount specified in `increaseBy`.\n *  `auto` Reduces the estimate by the value of `timeSpent` in the worklog.",
            "enum": [
              "new",
              "leave",
              "manual",
              "auto"
            ],
            "in": "query",
            "name": "adjustEstimate",
            "type": "string"
          },
          {
            "description": "The value to set as the issue's remaining time estimate, as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). For example, *2d*. Required when `adjustEstimate` is `new`.",
            "in": "query",
            "name": "newEstimate",
            "type": "string"
          },
          {
            "description": "The amount to increase the issue's remaining estimate by, as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). For example, *2d*. Required when `adjustEstimate` is `manual`.",
            "in": "query",
            "name": "increaseBy",
            "type": "string"
          },
          {
            "default": false,
            "description": "Whether the work log entry should be added to the issue even if the issue is not editable, because jira.issue.editable set to false or missing. For example, the issue is closed. Only connect app users with admin permissions can use this flag.",
            "in": "query",
            "name": "overrideEditableFlag",
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if:\n\n *  `adjustEstimate` is set to `new` but `newEstimate` is not provided or is invalid.\n *  `adjustEstimate` is set to `manual` but `reduceBy` is not provided or is invalid.\n *  the user does not have permission to delete the worklog."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          },
          "404": {
            "description": "Returned if:\n\n *  the issue is not found or user does not have permission to view the issue.\n *  the worklog is not found or the user does not have permission to view it.\n *  time tracking is disabled."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue worklogs"
        ],
        "deprecated": false,
        "summary": "Delete worklog",
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the worklog.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": "",
            "description": "Use [expand](#expansion) to include additional information about work logs in the response. This parameter accepts\n\n`properties`, which returns worklog properties.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2020-06-15T03:55:41.972+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2020-06-15T03:55:41.972+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}"
            },
            "schema": {
              "$ref": "#/definitions/Worklog"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          },
          "404": {
            "description": "Returned if:\n\n *  the issue is not found or the user does not have permission to view it.\n *  the worklog is not found or the user does not have permission to view it.\n *  time tracking is disabled.\n\n."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue worklogs"
        ],
        "deprecated": false,
        "summary": "Get worklog",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the worklog.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "description": "Whether users watching the issue are notified by email.",
            "in": "query",
            "name": "notifyUsers",
            "type": "boolean"
          },
          {
            "default": "auto",
            "description": "Defines how to update the issue's time estimate, the options are:\n\n *  `new` Sets the estimate to a specific value, defined in `newEstimate`.\n *  `leave` Leaves the estimate unchanged.\n *  `auto` Updates the estimate by the difference between the original and updated value of `timeSpent` or `timeSpentSeconds`.",
            "enum": [
              "new",
              "leave",
              "manual",
              "auto"
            ],
            "in": "query",
            "name": "adjustEstimate",
            "type": "string"
          },
          {
            "description": "The value to set as the issue's remaining time estimate, as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). For example, *2d*. Required when `adjustEstimate` is `new`.",
            "in": "query",
            "name": "newEstimate",
            "type": "string"
          },
          {
            "default": "",
            "description": "Use [expand](#expansion) to include additional information about worklogs in the response. This parameter accepts `properties`, which returns worklog properties.",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "default": false,
            "description": "Whether the worklog should be added to the issue even if the issue is not editable. For example, because the issue is closed. Only connect app users with admin permissions can use this flag.",
            "in": "query",
            "name": "overrideEditableFlag",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Worklog"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2020-06-15T03:55:41.972+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2020-06-15T03:55:41.972+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}"
            },
            "schema": {
              "$ref": "#/definitions/Worklog"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  `adjustEstimate` is set to `new` but `newEstimate` is not provided or is invalid.\n *  the user does not have permission to update the worklog.\n *  the request JSON is malformed."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          },
          "404": {
            "description": "Returned if:\n\n *  the issue is not found or user does not have permission to view the issue.\n *  the worklog is not found or the user does not have permission to view it.\n *  time tracking is disabled."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue worklogs"
        ],
        "deprecated": false,
        "summary": "Update worklog",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/issue/{issueIdOrKey}/worklog/{worklogId}/properties": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the worklog.",
            "in": "path",
            "name": "worklogId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"keys\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support\",\"key\":\"issue.support\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PropertyKeys"
            }
          },
          "400": {
            "description": "Returned if the worklog ID is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  the issue or worklog is not found.\n *  the user does not have permission to view the issue or worklog."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue worklog properties"
        ],
        "deprecated": false,
        "summary": "Get worklog property keys",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/issue/{issueIdOrKey}/worklog/{worklogId}/properties/{propertyKey}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the worklog.",
            "in": "path",
            "name": "worklogId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The key of the property.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the worklog property is removed."
          },
          "400": {
            "description": "Returned if the worklog key or id is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have permission to edit the worklog."
          },
          "404": {
            "description": "Returned if:\n\n *  the issue, worklog, or property is not found.\n *  the user does not have permission to view the issue or worklog."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue worklog properties"
        ],
        "deprecated": false,
        "summary": "Delete worklog property",
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the worklog.",
            "in": "path",
            "name": "worklogId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The key of the property.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"key\":\"issue.support\",\"value\":{\"system.conversation.id\":\"b1bf38be-5e94-4b40-a3b8-9278735ee1e6\",\"system.support.time\":\"1m\"}}"
            },
            "schema": {
              "$ref": "#/definitions/EntityProperty"
            }
          },
          "400": {
            "description": "Returned if the worklog ID is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  the issue, worklog, or property is not found.\n *  the user does not have permission to view the issue or worklog."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue worklog properties"
        ],
        "deprecated": false,
        "summary": "Get worklog property",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the issue.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the worklog.",
            "in": "path",
            "name": "worklogId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The key of the issue property. The maximum length is 255 characters.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the worklog property is updated.",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Returned if the worklog property is created.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if the worklog ID is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have permission to edit the worklog."
          },
          "404": {
            "description": "Returned if:\n\n *  the issue or worklog is not found.\n *  the user does not have permission to view the issue or worklog."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue worklog properties"
        ],
        "deprecated": false,
        "summary": "Set worklog property",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/issueLink": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The issue link request.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LinkIssueRequestJsonBean"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if the comment is not created. The response contains an error message indicating why the comment wasn't created. The issue link is also not created."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  issue linking is disabled.\n *  the user cannot view one or both of the issues. For example, the user doesn't have *Browse project* project permission for a project containing one of the issues.\n *  the user does not have *link issues* project permission.\n *  either of the link issues are not found.\n *  the issue link type is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue links"
        ],
        "deprecated": false,
        "summary": "Create issue link",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/issueLink/{linkId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the issue link.",
            "in": "path",
            "name": "linkId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response"
          },
          "204": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if the issue link ID is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  issue linking is disabled.\n *  the issue link is not found.\n *  the user doesn't have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue links"
        ],
        "deprecated": false,
        "summary": "Delete issue link",
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the issue link.",
            "in": "path",
            "name": "linkId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":\"10001\",\"type\":{\"id\":\"1000\",\"name\":\"Duplicate\",\"inward\":\"Duplicated by\",\"outward\":\"Duplicates\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueLinkType/1000\"},\"inwardIssue\":{\"id\":\"10004\",\"key\":\"PR-3\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/PR-3\",\"fields\":{\"status\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/status/5\",\"description\":\"The issue is closed.\",\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/closed.gif\",\"name\":\"Closed\",\"id\":\"5\",\"statusCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/statuscategory/9\",\"id\":9,\"key\":\"completed\",\"colorName\":\"green\"}},\"priority\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/priority/5\",\"statusColor\":\"#cfcfcf\",\"description\":\"Very little impact.\",\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/priorities/trivial.png\",\"name\":\"Trivial\",\"id\":\"2\"},\"issuetype\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueType/1\",\"id\":\"1\",\"description\":\"A problem with the software.\",\"iconUrl\":\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\\\",\",\"name\":\"Bug\",\"subtask\":false,\"avatarId\":10002,\"entityId\":\"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2\",\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}}}},\"outwardIssue\":{\"id\":\"10004L\",\"key\":\"PR-2\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/PR-2\",\"fields\":{\"status\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/status/10000\",\"description\":\"The issue is currently being worked on.\",\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/progress.gif\",\"name\":\"In Progress\",\"id\":\"10000\",\"statusCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/statuscategory/1\",\"id\":1,\"key\":\"in-flight\",\"colorName\":\"yellow\",\"name\":\"In Progress\"}},\"priority\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/priority/3\",\"statusColor\":\"#009900\",\"description\":\"Major loss of function.\",\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/priorities/major.png\",\"name\":\"Major\",\"id\":\"1\"},\"issuetype\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueType/3\",\"id\":\"3\",\"description\":\"A task that needs to be done.\",\"iconUrl\":\"https://your-domain.atlassian.net//secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\\\",\",\"name\":\"Task\",\"subtask\":false,\"avatarId\":1}}}}"
            },
            "schema": {
              "$ref": "#/definitions/IssueLink"
            }
          },
          "400": {
            "description": "Returned if the issue link ID is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  issue linking is disabled.\n *  the issue link is not found.\n *  the user doesn't have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue links"
        ],
        "deprecated": false,
        "summary": "Get issue link",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/issueLinkType": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"issueLinkTypes\":[{\"id\":\"1000\",\"name\":\"Duplicate\",\"inward\":\"Duplicated by\",\"outward\":\"Duplicates\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueLinkType/1000\"},{\"id\":\"1010\",\"name\":\"Blocks\",\"inward\":\"Blocked by\",\"outward\":\"Blocks\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueLinkType/1010\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/IssueLinkTypes"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if issue linking is disabled."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue link types"
        ],
        "deprecated": false,
        "summary": "Get issue link types",
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueLinkType"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":\"1000\",\"name\":\"Duplicate\",\"inward\":\"Duplicated by\",\"outward\":\"Duplicates\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueLinkType/1000\"}"
            },
            "schema": {
              "$ref": "#/definitions/IssueLinkType"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  issue linking is disabled.\n *  the issue link type name is in use.\n *  the user does not have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          },
          {}
        ],
        "tags": [
          "Issue link types"
        ],
        "deprecated": false,
        "summary": "Create issue link type",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/issueLinkType/{issueLinkTypeId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the issue link type.",
            "in": "path",
            "name": "issueLinkTypeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if the issue link type ID is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  issue linking is disabled.\n *  the issue link type is not found.\n *  the user does not have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          },
          {}
        ],
        "tags": [
          "Issue link types"
        ],
        "deprecated": false,
        "summary": "Delete issue link type",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the issue link type.",
            "in": "path",
            "name": "issueLinkTypeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":\"1000\",\"name\":\"Duplicate\",\"inward\":\"Duplicated by\",\"outward\":\"Duplicates\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueLinkType/1000\"}"
            },
            "schema": {
              "$ref": "#/definitions/IssueLinkType"
            }
          },
          "400": {
            "description": "Returned if the issue link type ID is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  issue linking is disabled.\n *  the issue link type is not found.\n *  the user does not have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue link types"
        ],
        "deprecated": false,
        "summary": "Get issue link type",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the issue link type.",
            "in": "path",
            "name": "issueLinkTypeId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueLinkType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":\"1000\",\"name\":\"Duplicate\",\"inward\":\"Duplicated by\",\"outward\":\"Duplicates\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueLinkType/1000\"}"
            },
            "schema": {
              "$ref": "#/definitions/IssueLinkType"
            }
          },
          "400": {
            "description": "Returned if the issue link type ID or the request body are invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  issue linking is disabled.\n *  the issue link type is not found.\n *  the user does not have the required permissions."
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Issue link types"
        ],
        "deprecated": false,
        "summary": "Update issue link type",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/issuesecurityschemes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"issueSecuritySchemes\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issuesecurityschemes/10000\",\"id\":10000,\"name\":\"Default Issue Security Scheme\",\"description\":\"Description for the default issue security scheme\",\"defaultSecurityLevelId\":10021}]}"
            },
            "schema": {
              "$ref": "#/definitions/SecuritySchemes"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          },
          "403": {
            "description": "Returned if the user does not have permission to administer issue security schemes."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Issue security schemes"
        ],
        "deprecated": false,
        "summary": "Get issue security schemes",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      }
    },
    "/issuesecurityschemes/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the issue security scheme. Use the [Get issue security schemes](#api-rest-api-3-issuesecurityschemes-get) operation to get a list of issue security scheme IDs.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issuesecurityschemes/10000\",\"id\":10000,\"name\":\"Default Issue Security Scheme\",\"description\":\"Description for the default issue security scheme\",\"defaultSecurityLevelId\":10021,\"levels\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/securitylevel/10021\",\"id\":\"10021\",\"description\":\"Only the reporter and internal staff can see this issue.\",\"name\":\"Reporter Only\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/SecurityScheme"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the administrator permission and the scheme is not used in any project where the user has administrative permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Issue security schemes"
        ],
        "deprecated": false,
        "summary": "Get issue security scheme",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      }
    },
    "/issuesecurityschemes/{issueSecuritySchemeId}/members": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the issue security scheme. Use the [Get issue security schemes](#api-rest-api-3-issuesecurityschemes-get) operation to get a list of issue security scheme IDs.",
            "format": "int64",
            "in": "path",
            "name": "issueSecuritySchemeId",
            "required": true,
            "type": "integer"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "The list of issue security level IDs. To include multiple issue security levels separate IDs with ampersand: `issueSecurityLevelId=10000&issueSecurityLevelId=10001`.",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "issueSecurityLevelId",
            "type": "array",
            "uniqueItems": true
          },
          {
            "description": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":100,\"startAt\":0,\"total\":3,\"isLast\":true,\"values\":[{\"id\":10000,\"issueSecurityLevelId\":10020,\"holder\":{\"type\":\"user\",\"user\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"emailAddress\":\"mia@example.com\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":true,\"timeZone\":\"Australia/Sydney\"},\"expand\":\"user\"}},{\"id\":10001,\"issueSecurityLevelId\":10020,\"holder\":{\"type\":\"group\",\"parameter\":\"jira-core-users\",\"expand\":\"group\"}},{\"id\":10002,\"issueSecurityLevelId\":10021,\"holder\":{\"type\":\"assignee\"}}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanIssueSecurityLevelMember"
            }
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if no issue security level members are found."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Issue security level"
        ],
        "deprecated": false,
        "summary": "Get issue security level members",
        "x-atlassian-connect-scope": "PROJECT_ADMIN",
        "x-experimental": true
      }
    },
    "/issuetype": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueType/3\",\"id\":\"3\",\"description\":\"A task that needs to be done.\",\"iconUrl\":\"https://your-domain.atlassian.net//secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\\\",\",\"name\":\"Task\",\"subtask\":false,\"avatarId\":1},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueType/1\",\"id\":\"1\",\"description\":\"A problem with the software.\",\"iconUrl\":\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\\\",\",\"name\":\"Bug\",\"subtask\":false,\"avatarId\":10002,\"entityId\":\"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2\",\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/IssueTypeDetails"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue types"
        ],
        "deprecated": false,
        "summary": "Get all issue types for user",
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueTypeCreateBean"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the request is successful.",
            "schema": {
              "$ref": "#/definitions/IssueTypeDetails"
            }
          },
          "400": {
            "description": "Returned if the request is invalid because:\n\n *  no content is sent.\n *  the issue type name exceeds 60 characters.\n *  a subtask issue type is requested on an instance where subtasks are disabled."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "409": {
            "description": "Returned if the issue type name is in use."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          },
          {}
        ],
        "tags": [
          "Issue types"
        ],
        "deprecated": false,
        "summary": "Create issue type",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/issuetype/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the issue type.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the replacement issue type.",
            "in": "query",
            "name": "alternativeIssueTypeId",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if any issues cannot be updated with the alternative issue type."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if:\n\n *  the issue type is in use and an alternative issue type is not specified.\n *  the issue type or alternative issue type is not found."
          },
          "409": {
            "description": "Returned if the issue type is in use and:\n\n *  also specified as the alternative issue type.\n *  is a *standard* issue type and the alternative issue type is a *subtask*."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          },
          {}
        ],
        "tags": [
          "Issue types"
        ],
        "deprecated": false,
        "summary": "Delete issue type",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the issue type.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueType/3\",\"id\":\"3\",\"description\":\"A task that needs to be done.\",\"iconUrl\":\"https://your-domain.atlassian.net//secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\\\",\",\"name\":\"Task\",\"subtask\":false,\"avatarId\":1}"
            },
            "schema": {
              "$ref": "#/definitions/IssueTypeDetails"
            }
          },
          "400": {
            "description": "Returned if the issue type ID is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  the issue type is not found.\n *  the user does not have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue types"
        ],
        "deprecated": false,
        "summary": "Get issue type",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the issue type.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueTypeUpdateBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "schema": {
              "$ref": "#/definitions/IssueTypeDetails"
            }
          },
          "400": {
            "description": "Returned if the request is invalid because:\n\n *  no content is sent.\n *  the issue type name exceeds 60 characters.\n *  the avatar is not associated with this issue type."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the issue type is not found."
          },
          "409": {
            "description": "Returned if the issue type name is in use."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          },
          {}
        ],
        "tags": [
          "Issue types"
        ],
        "deprecated": false,
        "summary": "Update issue type",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/issuetype/{id}/alternatives": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the issue type.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueType/3\",\"id\":\"3\",\"description\":\"A task that needs to be done.\",\"iconUrl\":\"https://your-domain.atlassian.net//secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\\\",\",\"name\":\"Task\",\"subtask\":false,\"avatarId\":1},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueType/1\",\"id\":\"1\",\"description\":\"A problem with the software.\",\"iconUrl\":\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\\\",\",\"name\":\"Bug\",\"subtask\":false,\"avatarId\":10002,\"entityId\":\"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2\",\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/IssueTypeDetails"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  the issue type is not found.\n *  the user does not have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue types"
        ],
        "deprecated": false,
        "summary": "Get alternative issue types",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/issuetype/{id}/avatar2": {
      "post": {
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the issue type.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": 0,
            "description": "The X coordinate of the top-left corner of the crop region.",
            "format": "int32",
            "in": "query",
            "name": "x",
            "type": "integer"
          },
          {
            "default": 0,
            "description": "The Y coordinate of the top-left corner of the crop region.",
            "format": "int32",
            "in": "query",
            "name": "y",
            "type": "integer"
          },
          {
            "description": "The length of each side of the crop region.",
            "format": "int32",
            "in": "query",
            "name": "size",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":\"1000\",\"isSystemAvatar\":true,\"isSelected\":false,\"isDeletable\":false,\"urls\":{\"16x16\":\"/secure/useravatar?size=xsmall&avatarId=10040&avatarType=project\",\"24x24\":\"/secure/useravatar?size=small&avatarId=10040&avatarType=project\",\"32x32\":\"/secure/useravatar?size=medium&avatarId=10040&avatarType=project\",\"48x48\":\"/secure/useravatar?avatarId=10040&avatarType=project\"}}"
            },
            "schema": {
              "$ref": "#/definitions/Avatar"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  an image isn't included in the request.\n *  the image type is unsupported.\n *  the crop parameters extend the crop area beyond the edge of the image.\n *  `cropSize` is missing.\n *  the issue type ID is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the issue type is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          },
          {}
        ],
        "tags": [
          "Issue types"
        ],
        "deprecated": false,
        "summary": "Load issue type avatar",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/issuetype/{issueTypeId}/properties": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the issue type.",
            "in": "path",
            "name": "issueTypeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"keys\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support\",\"key\":\"issue.support\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PropertyKeys"
            }
          },
          "400": {
            "description": "Returned if the issue type ID is invalid."
          },
          "404": {
            "description": "Returned if:\n\n *  the issue type is not found.\n *  the user does not have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue type properties"
        ],
        "deprecated": false,
        "summary": "Get issue type property keys",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/issuetype/{issueTypeId}/properties/{propertyKey}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the issue type.",
            "in": "path",
            "name": "issueTypeId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The key of the property. Use [Get issue type property keys](#api-rest-api-3-issuetype-issueTypeId-properties-get) to get a list of all issue type property keys.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the issue type property is deleted."
          },
          "400": {
            "description": "Returned if the issue type ID is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the issue type or property is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          },
          {}
        ],
        "tags": [
          "Issue type properties"
        ],
        "deprecated": false,
        "summary": "Delete issue type property",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the issue type.",
            "in": "path",
            "name": "issueTypeId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The key of the property. Use [Get issue type property keys](#api-rest-api-3-issuetype-issueTypeId-properties-get) to get a list of all issue type property keys.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"key\":\"issue.support\",\"value\":{\"system.conversation.id\":\"b1bf38be-5e94-4b40-a3b8-9278735ee1e6\",\"system.support.time\":\"1m\"}}"
            },
            "schema": {
              "$ref": "#/definitions/EntityProperty"
            }
          },
          "400": {
            "description": "Returned if the issue type ID is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the issue type or property is not found or the user does not have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue type properties"
        ],
        "deprecated": false,
        "summary": "Get issue type property",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the issue type.",
            "in": "path",
            "name": "issueTypeId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The key of the issue type property. The maximum length is 255 characters.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the issue type property is updated.",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Returned if the issue type property is created.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  the issue type ID is invalid.\n *  a property value is not provided.\n *  the property value JSON content is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have permission to modify the issue type."
          },
          "404": {
            "description": "Returned if:\n\n *  the issue type is not found.\n *  the user does not have the permission view the issue type."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          },
          {}
        ],
        "tags": [
          "Issue type properties"
        ],
        "deprecated": false,
        "summary": "Set issue type property",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/issuetypescheme": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "The list of issue type schemes IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`.",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "id",
            "type": "array",
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":100,\"startAt\":0,\"total\":3,\"isLast\":true,\"values\":[{\"id\":\"10000\",\"name\":\"Default Issue Type Scheme\",\"description\":\"Default issue type scheme is the list of global issue types. All newly created issue types will automatically be added to this scheme.\",\"defaultIssueTypeId\":\"10003\",\"isDefault\":true},{\"id\":\"10001\",\"name\":\"SUP: Kanban Issue Type Scheme\",\"description\":\"A collection of issue types suited to use in a kanban style project.\"},{\"id\":\"10002\",\"name\":\"HR: Scrum issue type scheme\",\"description\":\"\",\"defaultIssueTypeId\":\"10004\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanIssueTypeScheme"
            }
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue type schemes"
        ],
        "deprecated": false,
        "summary": "Get all issue type schemes",
        "x-atlassian-connect-scope": "ADMIN",
        "x-experimental": true
      }
    },
    "/issuetypescheme/mapping": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "The list of issue type scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, `issueTypeSchemeId=10000&issueTypeSchemeId=10001`.",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "issueTypeSchemeId",
            "type": "array",
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":100,\"startAt\":0,\"total\":4,\"isLast\":true,\"values\":[{\"issueTypeSchemeId\":\"10000\",\"issueTypeId\":\"10000\"},{\"issueTypeSchemeId\":\"10000\",\"issueTypeId\":\"10001\"},{\"issueTypeSchemeId\":\"10000\",\"issueTypeId\":\"10002\"},{\"issueTypeSchemeId\":\"10001\",\"issueTypeId\":\"10000\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanIssueTypeSchemeMapping"
            }
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue type schemes"
        ],
        "deprecated": false,
        "summary": "Get issue type scheme items",
        "x-atlassian-connect-scope": "ADMIN",
        "x-experimental": true
      }
    },
    "/issuetypescheme/project": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "The list of project IDs. To include multiple project IDs, provide an ampersand-separated list. For example, `projectId=10000&projectId=10001`.",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "projectId",
            "required": true,
            "type": "array",
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":100,\"startAt\":0,\"total\":3,\"isLast\":true,\"values\":[{\"issueTypeScheme\":{\"id\":\"10000\",\"name\":\"Default Issue Type Scheme\",\"description\":\"Default issue type scheme is the list of global issue types. All newly created issue types will automatically be added to this scheme.\",\"defaultIssueTypeId\":\"10003\",\"isDefault\":true},\"projectIds\":[\"10000\",\"10001\"]},{\"issueTypeScheme\":{\"id\":\"10001\",\"name\":\"SUP: Kanban Issue Type Scheme\",\"description\":\"A collection of issue types suited to use in a kanban style project.\"},\"projectIds\":[\"10002\"]},{\"issueTypeScheme\":{\"id\":\"10002\",\"name\":\"HR: Scrum issue type scheme\",\"description\":\"\",\"defaultIssueTypeId\":\"10004\"},\"projectIds\":[\"10003\",\"10004\",\"10005\"]}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanIssueTypeSchemeProjects"
            }
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue type schemes"
        ],
        "deprecated": false,
        "summary": "Get issue type schemes for projects",
        "x-atlassian-connect-scope": "ADMIN",
        "x-experimental": true
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueTypeSchemeProjectAssociation"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if the request is not valid.",
            "examples": {
              "application/json": "{\"errorMessages\":[\"Can't assign Issue Type Scheme to Project. There are some Issues in this Project with Issue Types missing in the new Scheme. Please migrate these Issues before assigning new Scheme to this Project. Affected issues: 7\"],\"errors\":{}}"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the required permissions.",
            "examples": {
              "application/json": "{\"errorMessages\":[\"Only Jira administrators can access Issue Type Schemes.\"],\"errors\":{}}"
            }
          },
          "404": {
            "description": "Returned if the issue type scheme or the project are missing.",
            "examples": {
              "application/json": "{\"errorMessages\":[\"The specified Issue Type Scheme does not exist.\"],\"errors\":{}}"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue type schemes"
        ],
        "deprecated": false,
        "summary": "Assign issue type scheme to project",
        "x-atlassian-connect-scope": "ADMIN",
        "x-experimental": true
      }
    },
    "/issuetypescreenscheme": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "The list of issue type screen scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`.",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "id",
            "type": "array",
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":100,\"startAt\":0,\"total\":2,\"isLast\":true,\"values\":[{\"id\":\"1\",\"name\":\"Default Issue Type Screen Scheme\",\"description\":\"The default issue type screen scheme\"},{\"id\":\"10000\",\"name\":\"Office issue type screen scheme\",\"description\":\"Managing office projects\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanIssueTypeScreenScheme"
            }
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue type screen schemes"
        ],
        "deprecated": false,
        "summary": "Get issue type screen schemes",
        "x-atlassian-connect-scope": "ADMIN",
        "x-experimental": true
      }
    },
    "/issuetypescreenscheme/mapping": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "The list of issue type screen scheme IDs. To include multiple issue type screen schemes, separate IDs with ampersand: `issueTypeScreenSchemeId=10000&issueTypeScreenSchemeId=10001`.",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "issueTypeScreenSchemeId",
            "type": "array",
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":100,\"startAt\":0,\"total\":4,\"isLast\":true,\"values\":[{\"issueTypeScreenSchemeId\":\"10020\",\"issueTypeId\":\"10000\",\"screenSchemeId\":\"10010\"},{\"issueTypeScreenSchemeId\":\"10021\",\"issueTypeId\":\"10001\",\"screenSchemeId\":\"10010\"},{\"issueTypeScreenSchemeId\":\"10022\",\"issueTypeId\":\"10002\",\"screenSchemeId\":\"10010\"},{\"issueTypeScreenSchemeId\":\"10023\",\"issueTypeId\":\"default\",\"screenSchemeId\":\"10011\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanIssueTypeScreenSchemeItem"
            }
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue type screen schemes"
        ],
        "deprecated": false,
        "summary": "Get issue type screen scheme items",
        "x-atlassian-connect-scope": "ADMIN",
        "x-experimental": true
      }
    },
    "/issuetypescreenscheme/project": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "The list of project IDs. To include multiple projects, separate IDs with ampersand: `projectId=10000&projectId=10001`.",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "projectId",
            "type": "array",
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":100,\"startAt\":0,\"total\":1,\"isLast\":true,\"values\":[{\"issueTypeScreenScheme\":{\"id\":\"1\",\"name\":\"Default Issue Type Screen Scheme\",\"description\":\"The default issue type screen scheme\"},\"projectIds\":[\"10000\",\"10001\"]}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanIssueTypeScreenSchemesProjects"
            }
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue type screen schemes"
        ],
        "deprecated": false,
        "summary": "Get issue type screen schemes for projects",
        "x-atlassian-connect-scope": "ADMIN",
        "x-experimental": true
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueTypeScreenSchemeProjectAssociation"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  project is not found.\n *  issue type screen scheme is not found.\n *  the project is not a classic project.",
            "examples": {
              "application/json": "{\"errorMessages\":[\"Only classic projects can have issue type screen scheme assigned.\"],\"errors\":{}}"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the required permissions.",
            "examples": {
              "application/json": "{\"errorMessages\":[\"Only Jira administrators can access issue type screen schemes.\"],\"errors\":{}}"
            }
          },
          "404": {
            "description": "Returned if the issue type screen scheme or the project are missing.",
            "examples": {
              "application/json": "{\"errorMessages\":[\"The specified issue type screen scheme does not exist.\"],\"errors\":{}}"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue type screen schemes"
        ],
        "deprecated": false,
        "summary": "Assign issue type screen scheme to project",
        "x-atlassian-connect-scope": "ADMIN",
        "x-experimental": true
      }
    },
    "/jql/autocompletedata": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"visibleFieldNames\":[{\"value\":\"summary\",\"displayName\":\"summary\",\"orderable\":\"true\",\"searchable\":\"true\",\"operators\":[\"~\",\"!~\",\"is\",\"is not\"],\"types\":[\"java.lang.String\"]},{\"value\":\"Sprint\",\"displayName\":\"Sprint - cf[10880]\",\"orderable\":\"true\",\"searchable\":\"true\",\"auto\":\"true\",\"cfid\":\"cf[10880]\",\"operators\":[\"=\",\"!=\",\"in\",\"not in\",\"is\",\"is not\"],\"types\":[\"com.atlassian.greenhopper.service.sprint.Sprint\"]}],\"visibleFunctionNames\":[{\"value\":\"standardIssueTypes()\",\"displayName\":\"standardIssueTypes()\",\"isList\":\"true\",\"types\":[\"com.atlassian.jira.issue.issuetype.IssueType\"]}],\"jqlReservedWords\":[\"empty\",\"and\",\"or\",\"in\",\"distinct\"]}"
            },
            "schema": {
              "$ref": "#/definitions/JQLReferenceData"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "JQL"
        ],
        "deprecated": false,
        "summary": "Get field reference data",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/jql/autocompletedata/suggestions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The name of the field.",
            "in": "query",
            "name": "fieldName",
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "The partial field item name entered by the user.",
            "in": "query",
            "name": "fieldValue",
            "type": "string"
          },
          {
            "description": "The name of the [ CHANGED operator predicate](https://confluence.atlassian.com/x/hQORLQ#Advancedsearching-operatorsreference-CHANGEDCHANGED) for which the suggestions are generated. The valid predicate operators are *by*, *from*, and *to*.",
            "in": "query",
            "name": "predicateName",
            "type": "string"
          },
          {
            "description": "The partial predicate item name entered by the user.",
            "in": "query",
            "name": "predicateValue",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"results\":[{\"value\":\"ActiveObjects\",\"displayName\":\"<b>Ac</b>tiveObjects (AO)\"},{\"value\":\"Atlassian Connect\",\"displayName\":\"Atlassian Connect (<b>AC</b>)\"},{\"value\":\"Atlassian Connect in Jira\",\"displayName\":\"Atlassian Connect in Jira (<b>AC</b>JIRA)\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/AutoCompleteSuggestions"
            }
          },
          "400": {
            "description": "Returned if an invalid combination of parameters is passed."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "JQL"
        ],
        "deprecated": false,
        "summary": "Get field auto complete suggestions",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/jql/match": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssuesAndJQLQueries"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"matches\":[{\"matchedIssues\":[10000,10004],\"errors\":[]},{\"matchedIssues\":[100134,10025,10236],\"errors\":[]},{\"matchedIssues\":[],\"errors\":[]},{\"matchedIssues\":[],\"errors\":[\"Invalid JQL: broken = value\"]}]}"
            },
            "schema": {
              "$ref": "#/definitions/IssueMatches"
            }
          },
          "400": {
            "description": "Returned if `jqls` exceeds the maximum number of JQL queries or `issueIds` exceeds the maximum number of issue IDs."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Issue search"
        ],
        "deprecated": false,
        "summary": "Check issues against JQL",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/jql/parse": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JqlQueriesToParse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"queries\":[{\"query\":\"summary ~ test AND (labels in (urgent, blocker) OR lastCommentedBy = currentUser()) AND status CHANGED AFTER -5d ORDER BY updated DESC\",\"structure\":{\"where\":{\"clauses\":[{\"field\":{\"name\":\"summary\"},\"operator\":\"~\",\"operand\":{\"value\":\"test\"}},{\"clauses\":[{\"field\":{\"name\":\"labels\"},\"operator\":\"in\",\"operand\":{\"values\":[{\"value\":\"urgent\"},{\"value\":\"blocker\"}]}},{\"field\":{\"name\":\"lastCommentedBy\",\"property\":[{\"entity\":\"issue\",\"key\":\"propertyKey\",\"path\":\"path.in.property\",\"type\":\"user\"}]},\"operator\":\"=\",\"operand\":{\"function\":\"currentUser\",\"arguments\":[]}}],\"operator\":\"or\"},{\"field\":{\"name\":\"status\"},\"operator\":\"changed\",\"predicates\":[{\"operator\":\"after\",\"operand\":{\"function\":\"startOfMonth\",\"arguments\":[\"-1M\"]}}]}],\"operator\":\"and\"},\"orderBy\":{\"fields\":[{\"field\":{\"name\":\"updated\"},\"direction\":\"desc\"}]}}},{\"query\":\"invalid query\",\"errors\":[\"Error in the JQL Query: Expecting operator but got 'query'. The valid operators are '=', '!=', '<', '>', '<=', '>=', '~', '!~', 'IN', 'NOT IN', 'IS' and 'IS NOT'. (line 1, character 9)\"]},{\"query\":\"summary = test\",\"errors\":[\"The operator '=' is not supported by the 'summary' field.\"]},{\"query\":\"summary in test\",\"errors\":[\"Operator 'in' does not support the non-list value '\\\"test\\\"' for field 'summary'.\"]},{\"query\":\"project = INVALID\",\"errors\":[\"The value 'INVALID' does not exist for the field 'project'.\"]},{\"query\":\"universe = 42\",\"errors\":[\"Field 'universe' does not exist or you do not have permission to view it.\"]}]}"
            },
            "schema": {
              "$ref": "#/definitions/ParsedJqlQueries"
            }
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "JQL"
        ],
        "deprecated": false,
        "summary": "Parse JQL query",
        "x-atlassian-connect-scope": "READ",
        "x-experimental": true
      }
    },
    "/jql/pdcleaner": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JQLPersonalDataMigrationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful. Note that the JQL queries are returned in the same order that they were passed.",
            "examples": {
              "application/json": "{\"queryStrings\":[\"issuetype = Bug AND assignee in (abcde-12345) AND reporter in (abc551-c4e99) order by lastViewed DESC\"],\"queriesWithUnknownUsers\":[{\"originalQuery\":\"assignee = mia\",\"convertedQuery\":\"assignee = unknown\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/ConvertedJQLQueries"
            }
          },
          "400": {
            "description": "Returned if at least one of the queries cannot be converted. For example, the JQL has invalid operators or invalid keywords, or the users in the query cannot be found."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-user"
            ]
          }
        ],
        "tags": [
          "JQL"
        ],
        "deprecated": false,
        "summary": "Convert user identifiers to account IDs in JQL queries",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/label": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 1000,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":2,\"startAt\":0,\"total\":100,\"isLast\":false,\"values\":[\"performance\",\"security\"]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanString"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Labels"
        ],
        "deprecated": false,
        "summary": "Get all labels",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/mypermissions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The key of project. Ignored if `projectId` is provided.",
            "in": "query",
            "name": "projectKey",
            "type": "string"
          },
          {
            "description": "The ID of project.",
            "in": "query",
            "name": "projectId",
            "type": "string"
          },
          {
            "description": "The key of the issue. Ignored if `issueId` is provided.",
            "in": "query",
            "name": "issueKey",
            "type": "string"
          },
          {
            "description": "The ID of the issue.",
            "in": "query",
            "name": "issueId",
            "type": "string"
          },
          {
            "description": "A list of permission keys. (Required) This parameter accepts a comma-separated list. To get the list of available permissions, use [Get all permissions](#api-rest-api-3-permissions-get).",
            "in": "query",
            "name": "permissions",
            "type": "string",
            "x-changes": [
              {
                "announced": "2018-08-01T00:00:00.000Z",
                "details": "https://developer.atlassian.com/cloud/jira/platform/change-notice-get-my-permissions-requires-permissions-query-parameter/",
                "effective": "2019-02-01T00:00:00.000Z",
                "type": "required"
              }
            ],
            "x-showInExample": "true"
          },
          {
            "in": "query",
            "name": "projectUuid",
            "type": "string"
          },
          {
            "in": "query",
            "name": "projectConfigurationUuid",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"permissions\":{\"EDIT_ISSUE\":{\"id\":\"12\",\"key\":\"EDIT_ISSUES\",\"name\":\"Edit Issues\",\"type\":\"PROJECT\",\"description\":\"Ability to edit issues.\",\"havePermission\":true}}}"
            },
            "schema": {
              "$ref": "#/definitions/Permissions"
            }
          },
          "400": {
            "description": "Returned if `permissions` is empty or the permission key it contains is not found or deprecated.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "404": {
            "description": "Returned if the project or issue is not found or the user does not have permission to view the project or issue.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": []
          },
          {}
        ],
        "tags": [
          "Permissions"
        ],
        "deprecated": false,
        "summary": "Get my permissions",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/mypreferences": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The key of the preference.",
            "in": "query",
            "name": "key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the key is not provided or not found."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Myself"
        ],
        "deprecated": false,
        "summary": "Delete preference",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The key of the preference.",
            "in": "query",
            "name": "key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the key is not provided or not found."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Myself"
        ],
        "deprecated": false,
        "summary": "Get preference",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      },
      "put": {
        "consumes": [
          "application/json",
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The key of the preference. The maximum length is 255 characters.",
            "in": "query",
            "name": "key",
            "required": true,
            "type": "string"
          },
          {
            "description": "The value of the preference as a plain text string. The maximum length is 255 characters.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the key or value is not provided or invalid."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Myself"
        ],
        "deprecated": false,
        "summary": "Set preference",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/mypreferences/locale": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Myself"
        ],
        "deprecated": true,
        "summary": "Delete locale",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"locale\":\"en_US\"}"
            },
            "schema": {
              "$ref": "#/definitions/Locale"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Myself"
        ],
        "deprecated": false,
        "summary": "Get locale",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The locale defined in a LocaleBean.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Locale"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Myself"
        ],
        "deprecated": true,
        "summary": "Set locale",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/myself": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about user in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `groups` Returns all groups, including nested groups, the user belongs to.\n *  `applicationRoles` Returns the application roles the user is assigned to.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"emailAddress\":\"mia@example.com\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"groups\":{\"size\":3,\"items\":[]},\"applicationRoles\":{\"size\":1,\"items\":[]}}"
            },
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-user"
            ]
          }
        ],
        "tags": [
          "Myself"
        ],
        "deprecated": false,
        "summary": "Get current user",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/notificationscheme": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about any custom fields assigned to receive an event.\n *  `group` Returns information about any groups assigned to receive an event.\n *  `notificationSchemeEvents` Returns a list of event associations. This list is returned for all expandable information.\n *  `projectRole` Returns information about any project roles assigned to receive an event.\n *  `user` Returns information about any users assigned to receive an event.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful. Only returns notification schemes that the user has permission to access. An empty list is returned if the user lacks permission to access all notification schemes.",
            "examples": {
              "application/json": "{\"maxResults\":6,\"startAt\":1,\"total\":5,\"isLast\":false,\"values\":[{\"expand\":\"notificationSchemeEvents,user,group,projectRole,field,all\",\"id\":10100,\"self\":\"https://your-domain.atlassian.net/rest/api/3/notificationscheme\",\"name\":\"notification scheme name\",\"description\":\"description\",\"notificationSchemeEvents\":[{\"event\":{\"id\":1,\"name\":\"Issue created\",\"description\":\"Event published when an issue is created\"},\"notifications\":[{\"id\":1,\"notificationType\":\"Group\",\"parameter\":\"jira-administrators\",\"group\":{\"name\":\"jira-administrators\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/group?groupname=jira-administrators\"},\"expand\":\"group\"},{\"id\":2,\"notificationType\":\"CurrentAssignee\"},{\"id\":3,\"notificationType\":\"ProjectRole\",\"parameter\":\"10360\",\"projectRole\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\",\"name\":\"Developers\",\"id\":10360,\"description\":\"A project role that represents developers in a project\",\"actors\":[{\"id\":10240,\"displayName\":\"jira-developers\",\"type\":\"atlassian-group-role-actor\",\"name\":\"jira-developers\",\"actorGroup\":{\"name\":\"jira-developers\",\"displayName\":\"jira-developers\"}},{\"id\":10241,\"displayName\":\"Mia Krystof\",\"type\":\"atlassian-user-role-actor\",\"actorUser\":{\"accountId\":\"5b10a2844c20165700ede21g\"}}],\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}},\"expand\":\"projectRole\"},{\"id\":4,\"notificationType\":\"EmailAddress\",\"parameter\":\"rest-developer@atlassian.com\",\"emailAddress\":\"rest-developer@atlassian.com\"},{\"id\":5,\"notificationType\":\"User\",\"parameter\":\"5b10a2844c20165700ede21g\",\"user\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"expand\":\"user\"},{\"id\":6,\"notificationType\":\"GroupCustomField\",\"parameter\":\"customfield_10101\",\"field\":{\"id\":\"customfield_10101\",\"key\":\"customfield_10101\",\"name\":\"New custom field\",\"untranslatedName\":\"New custom field\",\"custom\":true,\"orderable\":true,\"navigable\":true,\"searchable\":true,\"clauseNames\":[\"cf[10101]\",\"New custom field\"],\"schema\":{\"type\":\"project\",\"custom\":\"com.atlassian.jira.plugin.system.customfieldtypes:project\",\"customId\":10101}},\"expand\":\"field\"}]},{\"event\":{\"id\":20,\"name\":\"Custom event\",\"description\":\"Custom event that is published together with an issue created event\",\"templateEvent\":{\"id\":1,\"name\":\"Issue created\",\"description\":\"Event published when an issue is created\"}},\"notifications\":[{\"id\":1,\"notificationType\":\"Group\",\"parameter\":\"jira-administrators\",\"group\":{\"name\":\"jira-administrators\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/group?groupname=jira-administrators\"},\"expand\":\"group\"},{\"id\":2,\"notificationType\":\"CurrentAssignee\"},{\"id\":3,\"notificationType\":\"ProjectRole\",\"parameter\":\"10360\",\"projectRole\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\",\"name\":\"Developers\",\"id\":10360,\"description\":\"A project role that represents developers in a project\",\"actors\":[{\"id\":10240,\"displayName\":\"jira-developers\",\"type\":\"atlassian-group-role-actor\",\"name\":\"jira-developers\",\"actorGroup\":{\"name\":\"jira-developers\",\"displayName\":\"jira-developers\"}},{\"id\":10241,\"displayName\":\"Mia Krystof\",\"type\":\"atlassian-user-role-actor\",\"actorUser\":{\"accountId\":\"5b10a2844c20165700ede21g\"}}],\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}},\"expand\":\"projectRole\"},{\"id\":4,\"notificationType\":\"EmailAddress\",\"parameter\":\"rest-developer@atlassian.com\",\"emailAddress\":\"rest-developer@atlassian.com\"},{\"id\":5,\"notificationType\":\"User\",\"parameter\":\"5b10a2844c20165700ede21g\",\"user\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"expand\":\"user\"},{\"id\":6,\"notificationType\":\"GroupCustomField\",\"parameter\":\"customfield_10101\",\"field\":{\"id\":\"customfield_10101\",\"key\":\"customfield_10101\",\"name\":\"New custom field\",\"untranslatedName\":\"New custom field\",\"custom\":true,\"orderable\":true,\"navigable\":true,\"searchable\":true,\"clauseNames\":[\"cf[10101]\",\"New custom field\"],\"schema\":{\"type\":\"project\",\"custom\":\"com.atlassian.jira.plugin.system.customfieldtypes:project\",\"customId\":10101}},\"expand\":\"field\"}]}]}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanNotificationScheme"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue notification schemes"
        ],
        "deprecated": false,
        "summary": "Get notification schemes paginated",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/notificationscheme/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the notification scheme. Use [Get notification schemes paginated](#api-rest-api-3-notificationscheme-get) to get a list of notification scheme IDs.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about any custom fields assigned to receive an event.\n *  `group` Returns information about any groups assigned to receive an event.\n *  `notificationSchemeEvents` Returns a list of event associations. This list is returned for all expandable information.\n *  `projectRole` Returns information about any project roles assigned to receive an event.\n *  `user` Returns information about any users assigned to receive an event.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"expand\":\"notificationSchemeEvents,user,group,projectRole,field,all\",\"id\":10100,\"self\":\"https://your-domain.atlassian.net/rest/api/3/notificationscheme\",\"name\":\"notification scheme name\",\"description\":\"description\",\"notificationSchemeEvents\":[{\"event\":{\"id\":1,\"name\":\"Issue created\",\"description\":\"Event published when an issue is created\"},\"notifications\":[{\"id\":1,\"notificationType\":\"Group\",\"parameter\":\"jira-administrators\",\"group\":{\"name\":\"jira-administrators\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/group?groupname=jira-administrators\"},\"expand\":\"group\"},{\"id\":2,\"notificationType\":\"CurrentAssignee\"},{\"id\":3,\"notificationType\":\"ProjectRole\",\"parameter\":\"10360\",\"projectRole\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\",\"name\":\"Developers\",\"id\":10360,\"description\":\"A project role that represents developers in a project\",\"actors\":[{\"id\":10240,\"displayName\":\"jira-developers\",\"type\":\"atlassian-group-role-actor\",\"name\":\"jira-developers\",\"actorGroup\":{\"name\":\"jira-developers\",\"displayName\":\"jira-developers\"}},{\"id\":10241,\"displayName\":\"Mia Krystof\",\"type\":\"atlassian-user-role-actor\",\"actorUser\":{\"accountId\":\"5b10a2844c20165700ede21g\"}}],\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}},\"expand\":\"projectRole\"},{\"id\":4,\"notificationType\":\"EmailAddress\",\"parameter\":\"rest-developer@atlassian.com\",\"emailAddress\":\"rest-developer@atlassian.com\"},{\"id\":5,\"notificationType\":\"User\",\"parameter\":\"5b10a2844c20165700ede21g\",\"user\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"expand\":\"user\"},{\"id\":6,\"notificationType\":\"GroupCustomField\",\"parameter\":\"customfield_10101\",\"field\":{\"id\":\"customfield_10101\",\"key\":\"customfield_10101\",\"name\":\"New custom field\",\"untranslatedName\":\"New custom field\",\"custom\":true,\"orderable\":true,\"navigable\":true,\"searchable\":true,\"clauseNames\":[\"cf[10101]\",\"New custom field\"],\"schema\":{\"type\":\"project\",\"custom\":\"com.atlassian.jira.plugin.system.customfieldtypes:project\",\"customId\":10101}},\"expand\":\"field\"}]},{\"event\":{\"id\":20,\"name\":\"Custom event\",\"description\":\"Custom event that is published together with an issue created event\",\"templateEvent\":{\"id\":1,\"name\":\"Issue created\",\"description\":\"Event published when an issue is created\"}},\"notifications\":[{\"id\":1,\"notificationType\":\"Group\",\"parameter\":\"jira-administrators\",\"group\":{\"name\":\"jira-administrators\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/group?groupname=jira-administrators\"},\"expand\":\"group\"},{\"id\":2,\"notificationType\":\"CurrentAssignee\"},{\"id\":3,\"notificationType\":\"ProjectRole\",\"parameter\":\"10360\",\"projectRole\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\",\"name\":\"Developers\",\"id\":10360,\"description\":\"A project role that represents developers in a project\",\"actors\":[{\"id\":10240,\"displayName\":\"jira-developers\",\"type\":\"atlassian-group-role-actor\",\"name\":\"jira-developers\",\"actorGroup\":{\"name\":\"jira-developers\",\"displayName\":\"jira-developers\"}},{\"id\":10241,\"displayName\":\"Mia Krystof\",\"type\":\"atlassian-user-role-actor\",\"actorUser\":{\"accountId\":\"5b10a2844c20165700ede21g\"}}],\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}},\"expand\":\"projectRole\"},{\"id\":4,\"notificationType\":\"EmailAddress\",\"parameter\":\"rest-developer@atlassian.com\",\"emailAddress\":\"rest-developer@atlassian.com\"},{\"id\":5,\"notificationType\":\"User\",\"parameter\":\"5b10a2844c20165700ede21g\",\"user\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"expand\":\"user\"},{\"id\":6,\"notificationType\":\"GroupCustomField\",\"parameter\":\"customfield_10101\",\"field\":{\"id\":\"customfield_10101\",\"key\":\"customfield_10101\",\"name\":\"New custom field\",\"untranslatedName\":\"New custom field\",\"custom\":true,\"orderable\":true,\"navigable\":true,\"searchable\":true,\"clauseNames\":[\"cf[10101]\",\"New custom field\"],\"schema\":{\"type\":\"project\",\"custom\":\"com.atlassian.jira.plugin.system.customfieldtypes:project\",\"customId\":10101}},\"expand\":\"field\"}]}]}"
            },
            "schema": {
              "$ref": "#/definitions/NotificationScheme"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the notification scheme is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Issue notification schemes"
        ],
        "deprecated": false,
        "summary": "Get notification scheme",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/permissions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"permissions\":{\"BULK_CHANGE\":{\"key\":\"BULK_CHANGE\",\"name\":\"Bulk Change\",\"type\":\"GLOBAL\",\"description\":\"Ability to modify a collection of issues at once. For example, resolve multiple issues in one step.\"}}}"
            },
            "schema": {
              "$ref": "#/definitions/Permissions"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Permissions"
        ],
        "deprecated": false,
        "summary": "Get all permissions",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/permissions/check": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "Details of the permissions to check.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkPermissionsRequestBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"projectPermissions\":[{\"permission\":\"EDIT_ISSUES\",\"issues\":[10010,10013,10014],\"projects\":[10001]}],\"globalPermissions\":[\"ADMINISTER\"]}"
            },
            "schema": {
              "$ref": "#/definitions/BulkPermissionGrants"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  issue or project IDs are provided without at least one project permission being provided.\n *  an invalid global permission is provided in the global permissions list.\n *  an invalid project permission is provided in the project permissions list.\n *  more than 1000 valid project IDs or more than 1000 valid issue IDs are provided.\n *  an invalid account ID is provided.",
            "examples": {
              "application/json": "{\"errorMessages\":[],\"errors\":{\"PERMISSION_123\":\"Unrecognized permission\"}}"
            },
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission.",
            "examples": {
              "application/json": "{\"errorMessages\":[\"Only Jira administrators can perform this operation.\"],\"errors\":{}}"
            },
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": []
          },
          {}
        ],
        "tags": [
          "Permissions"
        ],
        "deprecated": false,
        "summary": "Get bulk permissions",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/permissions/project": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PermissionsKeysBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"projects\":[{\"id\":10000,\"key\":\"DEMO\"},{\"id\":10101,\"key\":\"TEST\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PermittedProjects"
            }
          },
          "400": {
            "description": "Returned if a project permission is not found.",
            "examples": {
              "application/json": "{\"errorMessages\":[\"Could not find permission with key: NOT_EXISTING_PERMISSION_KEY\"],\"errors\":{}}"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": []
          },
          {}
        ],
        "tags": [
          "Permissions"
        ],
        "deprecated": false,
        "summary": "Get permitted projects",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/permissionscheme": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"permissionSchemes\":[{\"id\":10000,\"self\":\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/10000\",\"name\":\"Example permission scheme\",\"description\":\"description\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PermissionSchemes"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Permission schemes"
        ],
        "deprecated": false,
        "summary": "Get all permission schemes",
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission.",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "description": "The permission scheme to create.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PermissionScheme"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the permission scheme is created.",
            "examples": {
              "application/json": "{\"id\":10000,\"self\":\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/10000\",\"name\":\"Example permission scheme\",\"description\":\"description\",\"permissions\":[{\"id\":10000,\"self\":\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/permission/10000\",\"holder\":{\"type\":\"group\",\"parameter\":\"jira-core-users\",\"expand\":\"group\"},\"permission\":\"ADMINISTER_PROJECTS\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PermissionScheme"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Permission schemes"
        ],
        "deprecated": false,
        "summary": "Create permission scheme",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/permissionscheme/{schemeId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the permission scheme being deleted.",
            "format": "int64",
            "in": "path",
            "name": "schemeId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the permission scheme is deleted."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the permission scheme is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Permission schemes"
        ],
        "deprecated": false,
        "summary": "Delete permission scheme",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the permission scheme to return.",
            "format": "int64",
            "in": "path",
            "name": "schemeId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":10000,\"self\":\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/10000\",\"name\":\"Example permission scheme\",\"description\":\"description\",\"permissions\":[{\"id\":10000,\"self\":\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/permission/10000\",\"holder\":{\"type\":\"group\",\"parameter\":\"jira-core-users\",\"expand\":\"group\"},\"permission\":\"ADMINISTER_PROJECTS\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PermissionScheme"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the permission scheme is not found or the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Permission schemes"
        ],
        "deprecated": false,
        "summary": "Get permission scheme",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the permission scheme to update.",
            "format": "int64",
            "in": "path",
            "name": "schemeId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission.",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PermissionScheme"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the scheme is updated.",
            "examples": {
              "application/json": "{\"id\":10000,\"self\":\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/10000\",\"name\":\"Example permission scheme\",\"description\":\"description\",\"permissions\":[{\"id\":10000,\"self\":\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/permission/10000\",\"holder\":{\"type\":\"group\",\"parameter\":\"jira-core-users\",\"expand\":\"group\"},\"permission\":\"ADMINISTER_PROJECTS\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PermissionScheme"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if:\n\n *  the user does not have the necessary permission to update permission schemes.\n *  the Jira instance is Jira Core Free or Jira Software Free. Permission schemes cannot be updated on free plans."
          },
          "404": {
            "description": "Returned if the permission scheme is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Permission schemes"
        ],
        "deprecated": false,
        "summary": "Update permission scheme",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/permissionscheme/{schemeId}/permission": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the permission scheme.",
            "format": "int64",
            "in": "path",
            "name": "schemeId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:\n\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `user` Returns information about the user who is granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `field` Returns information about the custom field granted the permission.\n *  `all` Returns all expandable information.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"permissions\":[{\"id\":10000,\"self\":\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/permission/10000\",\"holder\":{\"type\":\"group\",\"parameter\":\"jira-core-users\",\"expand\":\"group\"},\"permission\":\"ADMINISTER_PROJECTS\"}],\"expand\":\"user,group,projectRole,field,all\"}"
            },
            "schema": {
              "$ref": "#/definitions/PermissionGrants"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the permission schemes is not found or the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Permission schemes"
        ],
        "deprecated": false,
        "summary": "Get permission scheme grants",
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the permission scheme in which to create a new permission grant.",
            "format": "int64",
            "in": "path",
            "name": "schemeId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:\n\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `user` Returns information about the user who is granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `field` Returns information about the custom field granted the permission.\n *  `all` Returns all expandable information.",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "description": "The permission grant to create.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PermissionGrant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the scheme permission is created.",
            "examples": {
              "application/json": "{\"id\":10000,\"self\":\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/permission/10000\",\"holder\":{\"type\":\"group\",\"parameter\":\"jira-core-users\",\"expand\":\"group\"},\"permission\":\"ADMINISTER_PROJECTS\"}"
            },
            "schema": {
              "$ref": "#/definitions/PermissionGrant"
            }
          },
          "400": {
            "description": "Returned if the value for expand is invalid or the same permission grant is present."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Permission schemes"
        ],
        "deprecated": false,
        "summary": "Create permission grant",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/permissionscheme/{schemeId}/permission/{permissionId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the permission scheme to delete the permission grant from.",
            "format": "int64",
            "in": "path",
            "name": "schemeId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The ID of the permission grant to delete.",
            "format": "int64",
            "in": "path",
            "name": "permissionId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the permission grant is deleted."
          },
          "400": {
            "description": "Returned if permission grant with the provided ID is not found."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Permission schemes"
        ],
        "deprecated": false,
        "summary": "Delete permission scheme grant",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the permission scheme.",
            "format": "int64",
            "in": "path",
            "name": "schemeId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The ID of the permission grant.",
            "format": "int64",
            "in": "path",
            "name": "permissionId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":10000,\"self\":\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/permission/10000\",\"holder\":{\"type\":\"group\",\"parameter\":\"jira-core-users\",\"expand\":\"group\"},\"permission\":\"ADMINISTER_PROJECTS\"}"
            },
            "schema": {
              "$ref": "#/definitions/PermissionGrant"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the permission scheme or permission grant is not found or the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Permission schemes"
        ],
        "deprecated": false,
        "summary": "Get permission scheme grant",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/priority": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/priority/3\",\"statusColor\":\"#009900\",\"description\":\"Major loss of function.\",\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/priorities/major.png\",\"name\":\"Major\",\"id\":\"1\"},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/priority/5\",\"statusColor\":\"#cfcfcf\",\"description\":\"Very little impact.\",\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/priorities/trivial.png\",\"name\":\"Trivial\",\"id\":\"2\"}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/Priority"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue priorities"
        ],
        "deprecated": false,
        "summary": "Get priorities",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/priority/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the issue priority.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/priority/3\",\"statusColor\":\"#009900\",\"description\":\"Major loss of function.\",\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/priorities/major.png\",\"name\":\"Major\",\"id\":\"1\"}"
            },
            "schema": {
              "$ref": "#/definitions/Priority"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          },
          "404": {
            "description": "Returned if the issue priority is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue priorities"
        ],
        "deprecated": false,
        "summary": "Get priority",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/project": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expanded options include:\n\n *  `description` Returns the project description.\n *  `issueTypes` Returns all issue types associated with the project.\n *  `lead` Returns information about the the project lead.\n *  `projectKeys` Returns all project keys associated with the project.",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "description": "Returns the user's most recently accessed projects. You may specify the number of results to return up to a maximum of 20. If access is anonymous, then the recently accessed projects are based on the current HTTP session.",
            "format": "int32",
            "in": "query",
            "name": "recent",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "A list of project properties to return for the project. This parameter accepts a comma-separated list.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "properties",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2020-06-15T03:55:39.545+0000\"}},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/ABC\",\"id\":\"10001\",\"key\":\"ABC\",\"name\":\"Alphabetical\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10001\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10001\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10001\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10001\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2020-06-15T03:55:39.545+0000\"}}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/Project"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Projects"
        ],
        "deprecated": true,
        "summary": "Get all projects",
        "x-atlassian-connect-scope": "READ",
        "x-changes": [
          {
            "announced": "2018-10-19T00:00:00.000Z",
            "details": "https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-removal-of-get-filters-and-get-all-projects/",
            "effective": "2019-04-19T00:00:00.000Z",
            "type": "removed"
          }
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The JSON representation of the project being created.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectInputBean"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the project is created.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/jira/rest/api/3/project/10042\",\"id\":10010,\"key\":\"EX\"}"
            },
            "schema": {
              "$ref": "#/definitions/ProjectIdentifiers"
            }
          },
          "400": {
            "description": "Returned if the request is not valid and the project could not be created."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have permission to create projects."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          },
          {}
        ],
        "tags": [
          "Projects"
        ],
        "deprecated": false,
        "summary": "Create project",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      }
    },
    "/project/search": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "default": "key",
            "description": "[Order](#ordering) the results by a field.\n\n *  `category` Sorts by project category. A complete list of category IDs is found using [Get all project categories](#api-rest-api-3-projectCategory-get).\n *  `issueCount` Sorts by the total number of issues in each project.\n *  `key` Sorts by project key.\n *  `lastIssueUpdatedTime` Sorts by the last issue update time.\n *  `name` Sorts by project name.\n *  `owner` Sorts by project lead.\n *  `archivedDate` EXPERIMENTAL. Sorts by project archived date.\n *  `deletedDate` EXPERIMENTAL. Sorts by project deleted date.",
            "enum": [
              "category",
              "-category",
              "+category",
              "key",
              "-key",
              "+key",
              "name",
              "-name",
              "+name",
              "owner",
              "-owner",
              "+owner",
              "issueCount",
              "-issueCount",
              "+issueCount",
              "lastIssueUpdatedDate",
              "-lastIssueUpdatedDate",
              "+lastIssueUpdatedDate",
              "archivedDate",
              "+archivedDate",
              "-archivedDate",
              "deletedDate",
              "+deletedDate",
              "-deletedDate"
            ],
            "in": "query",
            "name": "orderBy",
            "type": "string"
          },
          {
            "description": "Filter the results using a literal string. Projects with a matching `key` or `name` are returned (case insensitive).",
            "in": "query",
            "name": "query",
            "type": "string"
          },
          {
            "description": "Orders results by the [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes). This parameter accepts a comma-separated list. Valid values are `business`, `service_desk`, and `software`.",
            "in": "query",
            "name": "typeKey",
            "type": "string"
          },
          {
            "description": "The ID of the project's category. A complete list of category IDs is found using the [Get all project categories](#api-rest-api-3-projectCategory-get) operation.",
            "format": "int64",
            "in": "query",
            "name": "categoryId",
            "type": "integer"
          },
          {
            "default": "key, name",
            "in": "query",
            "name": "searchBy",
            "type": "string"
          },
          {
            "default": "view",
            "description": "Filter results by projects for which the user can:\n\n *  `view` the project, meaning that they have one of the following permissions:\n    \n     *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.\n     *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.\n     *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).\n *  `browse` the project, meaning that they have the *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.\n *  `edit` the project, meaning that they have one of the following permissions:\n    \n     *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.\n     *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).",
            "enum": [
              "view",
              "browse",
              "edit"
            ],
            "in": "query",
            "name": "action",
            "type": "string"
          },
          {
            "description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expanded options include:\n\n *  `description` Returns the project description.\n *  `projectKeys` Returns all project keys associated with a project.\n *  `lead` Returns information about the the project lead.\n *  `issueTypes` Returns all issue types associated with the project.\n *  `url` Returns the URL associated with the project.\n *  `insight` EXPERIMENTAL. Returns the insight details of total issue count and last issue update time for the project.",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "EXPERIMENTAL. Filter results by project status:\n\n *  `live` Search live projects.\n *  `archived` Search archived projects.\n *  `deleted` Search deleted projects, those in the recycle bin.",
            "in": "query",
            "items": {
              "default": "live",
              "type": "string"
            },
            "name": "status",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/search?startAt=0&maxResults=2\",\"nextPage\":\"https://your-domain.atlassian.net/rest/api/3/project/search?startAt=2&maxResults=2\",\"maxResults\":2,\"startAt\":0,\"total\":7,\"isLast\":false,\"values\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2020-06-15T03:55:39.545+0000\"}},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/ABC\",\"id\":\"10001\",\"key\":\"ABC\",\"name\":\"Alphabetical\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10001\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10001\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10001\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10001\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2020-06-15T03:55:39.545+0000\"}}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanProject"
            }
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if no projects matching the search criteria are found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Projects"
        ],
        "deprecated": false,
        "summary": "Get projects paginated",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/project/type": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"key\":\"business\",\"formattedKey\":\"Business\",\"descriptionI18nKey\":\"jira.project.type.business.description\",\"icon\":\"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+\",\"color\":\"#FFFFFF\"},{\"key\":\"software\",\"formattedKey\":\"Software\",\"descriptionI18nKey\":\"jira.project.type.software.description\",\"icon\":\"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+\",\"color\":\"#AAAAAA\"}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ProjectType"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Project types"
        ],
        "deprecated": false,
        "summary": "Get all project types",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/project/type/accessible": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"key\":\"business\",\"formattedKey\":\"Business\",\"descriptionI18nKey\":\"jira.project.type.business.description\",\"icon\":\"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+\",\"color\":\"#FFFFFF\"},{\"key\":\"software\",\"formattedKey\":\"Software\",\"descriptionI18nKey\":\"jira.project.type.software.description\",\"icon\":\"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+\",\"color\":\"#AAAAAA\"}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ProjectType"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Project types"
        ],
        "deprecated": false,
        "summary": "Get licensed project types",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/project/type/{projectTypeKey}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The key of the project type.",
            "enum": [
              "software",
              "service_desk",
              "business"
            ],
            "in": "path",
            "name": "projectTypeKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"key\":\"business\",\"formattedKey\":\"Business\",\"descriptionI18nKey\":\"jira.project.type.business.description\",\"icon\":\"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+\",\"color\":\"#FFFFFF\"}"
            },
            "schema": {
              "$ref": "#/definitions/ProjectType"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          },
          "404": {
            "description": "Returned if the project type is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Project types"
        ],
        "deprecated": false,
        "summary": "Get project type by key",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/project/type/{projectTypeKey}/accessible": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The key of the project type.",
            "enum": [
              "software",
              "service_desk",
              "business"
            ],
            "in": "path",
            "name": "projectTypeKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"key\":\"business\",\"formattedKey\":\"Business\",\"descriptionI18nKey\":\"jira.project.type.business.description\",\"icon\":\"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+\",\"color\":\"#FFFFFF\"}"
            },
            "schema": {
              "$ref": "#/definitions/ProjectType"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the project type is not accessible to the user."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Project types"
        ],
        "deprecated": false,
        "summary": "Get accessible project type by key",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/project/{projectIdOrKey}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "EXPERIMENTAL. Whether this project is placed in the Jira recycle bin where it will be available for restoration.",
            "in": "query",
            "name": "enableUndo",
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the project is deleted."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the project is not found or the user does not have permission to delete it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          },
          {}
        ],
        "tags": [
          "Projects"
        ],
        "deprecated": false,
        "summary": "Delete project",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that the project description, issue types, and project lead are included in all responses by default. Expand options include:\n\n *  `description` The project description.\n *  `issueTypes` The issue types associated with the project.\n *  `lead` The project lead.\n *  `projectKeys` All project keys associated with the project.\n *  `issueTypeHierarchy` The project issue type hierarchy.",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "A list of project properties to return for the project. This parameter accepts a comma-separated list.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "properties",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"description\":\"This project was created as an example for REST.\",\"lead\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"components\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/component/10000\",\"id\":\"10000\",\"name\":\"Component 1\",\"description\":\"This is a Jira component\",\"lead\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"assigneeType\":\"PROJECT_LEAD\",\"assignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"realAssigneeType\":\"PROJECT_LEAD\",\"realAssignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"isAssigneeTypeValid\":false,\"project\":\"HSP\",\"projectId\":10000}],\"issueTypes\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueType/3\",\"id\":\"3\",\"description\":\"A task that needs to be done.\",\"iconUrl\":\"https://your-domain.atlassian.net//secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\\\",\",\"name\":\"Task\",\"subtask\":false,\"avatarId\":1},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueType/1\",\"id\":\"1\",\"description\":\"A problem with the software.\",\"iconUrl\":\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\\\",\",\"name\":\"Bug\",\"subtask\":false,\"avatarId\":10002,\"entityId\":\"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2\",\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}}],\"url\":\"https://your-domain.atlassian.net/browse/EX\",\"email\":\"from-jira@example.com\",\"assigneeType\":\"PROJECT_LEAD\",\"versions\":[],\"name\":\"Example\",\"roles\":{\"Developers\":\"https://your-domain.atlassian.net/rest/api/3/project/EX/role/10000\"},\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"properties\":{\"propertyKey\":\"propertyValue\"},\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2020-06-15T03:55:39.545+0000\"}}"
            },
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the project is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Projects"
        ],
        "deprecated": false,
        "summary": "Get project",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that the project description, issue types, and project lead are included in all responses by default. Expand options include:\n\n *  `description` The project description.\n *  `issueTypes` The issue types associated with the project.\n *  `lead` The project lead.\n *  `projectKeys` All project keys associated with the project.",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "description": "The project details to be updated.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectInputBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the project is updated.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"description\":\"This project was created as an example for REST.\",\"lead\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"components\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/component/10000\",\"id\":\"10000\",\"name\":\"Component 1\",\"description\":\"This is a Jira component\",\"lead\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"assigneeType\":\"PROJECT_LEAD\",\"assignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"realAssigneeType\":\"PROJECT_LEAD\",\"realAssignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"isAssigneeTypeValid\":false,\"project\":\"HSP\",\"projectId\":10000}],\"issueTypes\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueType/3\",\"id\":\"3\",\"description\":\"A task that needs to be done.\",\"iconUrl\":\"https://your-domain.atlassian.net//secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\\\",\",\"name\":\"Task\",\"subtask\":false,\"avatarId\":1},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueType/1\",\"id\":\"1\",\"description\":\"A problem with the software.\",\"iconUrl\":\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\\\",\",\"name\":\"Bug\",\"subtask\":false,\"avatarId\":10002,\"entityId\":\"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2\",\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}}],\"url\":\"https://your-domain.atlassian.net/browse/EX\",\"email\":\"from-jira@example.com\",\"assigneeType\":\"PROJECT_LEAD\",\"versions\":[],\"name\":\"Example\",\"roles\":{\"Developers\":\"https://your-domain.atlassian.net/rest/api/3/project/EX/role/10000\"},\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"properties\":{\"propertyKey\":\"propertyValue\"},\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2020-06-15T03:55:39.545+0000\"}}"
            },
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if:\n\n *  the user does not have the necessary permission to update project details.\n *  the permission scheme is being changed and the Jira instance is Jira Core Free or Jira Software Free. Permission schemes cannot be changed on free plans."
          },
          "404": {
            "description": "Returned if the project is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Projects"
        ],
        "deprecated": false,
        "summary": "Update project",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      }
    },
    "/project/{projectIdOrKey}/avatar": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or (case-sensitive) key of the project.",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Avatar"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have permission to administer the project."
          },
          "404": {
            "description": "Returned if the project or avatar is not found or the user does not have permission to view the project."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Project avatars"
        ],
        "deprecated": false,
        "summary": "Set project avatar",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      }
    },
    "/project/{projectIdOrKey}/avatar/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or (case-sensitive) key.",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the avatar.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the avatar is a system avatar or the user does not have permission to administer the project."
          },
          "404": {
            "description": "Returned if the project or avatar is not found or the user does not have permission to view the project."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Project avatars"
        ],
        "deprecated": false,
        "summary": "Delete project avatar",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      }
    },
    "/project/{projectIdOrKey}/avatar2": {
      "post": {
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or (case-sensitive) key of the project.",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "default": 0,
            "description": "The X coordinate of the top-left corner of the crop region.",
            "format": "int32",
            "in": "query",
            "name": "x",
            "type": "integer"
          },
          {
            "default": 0,
            "description": "The Y coordinate of the top-left corner of the crop region.",
            "format": "int32",
            "in": "query",
            "name": "y",
            "type": "integer"
          },
          {
            "description": "The length of each side of the crop region.",
            "format": "int32",
            "in": "query",
            "name": "size",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":\"1010\",\"isSystemAvatar\":false,\"isSelected\":false,\"isDeletable\":true}"
            },
            "schema": {
              "$ref": "#/definitions/Avatar"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  an image isn't included in the request.\n *  the image type is unsupported.\n *  the crop parameters extend the crop area beyond the edge of the image."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have permission to administer the project or an anonymous call is made to the operation."
          },
          "404": {
            "description": "Returned if the project is not found or the user does not have permission to view the project."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Project avatars"
        ],
        "deprecated": false,
        "summary": "Load project avatar",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      }
    },
    "/project/{projectIdOrKey}/avatars": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or (case-sensitive) key of the project.",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if request is successful.",
            "examples": {
              "application/json": "{\"system\":[{\"id\":\"1000\",\"isSystemAvatar\":true,\"isSelected\":false,\"isDeletable\":false,\"urls\":{\"16x16\":\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10040&avatarType=project\",\"24x24\":\"https://your-domain.atlassian.net/secure/viewavatar?size=small&avatarId=10040&avatarType=project\",\"32x32\":\"https://your-domain.atlassian.net/secure/viewavatar?size=medium&avatarId=10040&avatarType=project\",\"48x48\":\"https://your-domain.atlassian.net/secure/viewavatar?avatarId=10040&avatarType=project\"}}],\"custom\":[{\"id\":\"1010\",\"isSystemAvatar\":false,\"isSelected\":false,\"isDeletable\":true,\"urls\":{\"16x16\":\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10080&avatarType=project\",\"24x24\":\"https://your-domain.atlassian.net/secure/viewavatar?size=small&avatarId=10080&avatarType=project\",\"32x32\":\"https://your-domain.atlassian.net/secure/viewavatar?size=medium&avatarId=10080&avatarType=project\",\"48x48\":\"https://your-domain.atlassian.net/secure/viewavatar?avatarId=10080&avatarType=project\"}}]}"
            },
            "schema": {
              "$ref": "#/definitions/ProjectAvatars"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the the project is not found or the user does not have permission to view the project."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Project avatars"
        ],
        "deprecated": false,
        "summary": "Get all project avatars",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/project/{projectIdOrKey}/component": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "description": "[Order](#ordering) the results by a field:\n\n *  `description` Sorts by the component description.\n *  `issueCount` Sorts by the count of issues associated with the component.\n *  `lead` Sorts by the user key of the component's project lead.\n *  `name` Sorts by component name.",
            "enum": [
              "description",
              "-description",
              "+description",
              "issueCount",
              "-issueCount",
              "+issueCount",
              "lead",
              "-lead",
              "+lead",
              "name",
              "-name",
              "+name"
            ],
            "in": "query",
            "name": "orderBy",
            "type": "string"
          },
          {
            "description": "Filter the results using a literal string. Components with a matching `name` or `description` are returned (case insensitive).",
            "in": "query",
            "name": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/PR/component?startAt=0&maxResults=2\",\"nextPage\":\"https://your-domain.atlassian.net/rest/api/3/project/PR/component?startAt=2&maxResults=2\",\"maxResults\":2,\"startAt\":0,\"total\":7,\"isLast\":false,\"values\":[{\"componentBean\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/component/10000\",\"id\":\"10000\",\"name\":\"Component 1\",\"description\":\"This is a Jira component\",\"lead\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"assigneeType\":\"PROJECT_LEAD\",\"assignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"realAssigneeType\":\"PROJECT_LEAD\",\"realAssignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"isAssigneeTypeValid\":false,\"project\":\"HSP\",\"projectId\":10000},\"issueCount\":1,\"description\":\"This is a Jira component\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/component/10000\",\"project\":\"HSP\",\"projectId\":10000,\"assigneeType\":\"PROJECT_LEAD\",\"lead\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"realAssignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"isAssigneeTypeValid\":false,\"assignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"realAssigneeType\":\"PROJECT_LEAD\",\"name\":\"Component 1\",\"id\":\"10000\"},{\"componentBean\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/component/10000\",\"id\":\"10050\",\"name\":\"PXA\",\"description\":\"This is a another Jira component\",\"lead\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"assigneeType\":\"PROJECT_LEAD\",\"assignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"realAssigneeType\":\"PROJECT_LEAD\",\"realAssignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"isAssigneeTypeValid\":false,\"project\":\"PROJECTKEY\",\"projectId\":10000},\"issueCount\":5,\"description\":\"This is a another Jira component\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/component/10000\",\"project\":\"PROJECTKEY\",\"projectId\":10000,\"assigneeType\":\"PROJECT_LEAD\",\"lead\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"realAssignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"isAssigneeTypeValid\":false,\"assignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"realAssigneeType\":\"PROJECT_LEAD\",\"name\":\"PXA\",\"id\":\"10050\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanComponentWithIssueCount"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the project is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Project components"
        ],
        "deprecated": false,
        "summary": "Get project components paginated",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/project/{projectIdOrKey}/components": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/component/10000\",\"id\":\"10000\",\"name\":\"Component 1\",\"description\":\"This is a Jira component\",\"lead\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"assigneeType\":\"PROJECT_LEAD\",\"assignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"realAssigneeType\":\"PROJECT_LEAD\",\"realAssignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"isAssigneeTypeValid\":false,\"project\":\"HSP\",\"projectId\":10000},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/component/10000\",\"id\":\"10050\",\"name\":\"PXA\",\"description\":\"This is a another Jira component\",\"lead\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"assigneeType\":\"PROJECT_LEAD\",\"assignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"realAssigneeType\":\"PROJECT_LEAD\",\"realAssignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"isAssigneeTypeValid\":false,\"project\":\"PROJECTKEY\",\"projectId\":10000}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/Component"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the project is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Project components"
        ],
        "deprecated": false,
        "summary": "Get project components",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/project/{projectIdOrKey}/delete": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "303": {
            "description": "Returned if the request is successful.",
            "schema": {
              "$ref": "#/definitions/TaskProgressBeanObject"
            }
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the project is not found or the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          },
          {}
        ],
        "tags": [
          "Projects"
        ],
        "deprecated": false,
        "summary": "Delete project asynchronously",
        "x-atlassian-connect-scope": "PROJECT_ADMIN",
        "x-experimental": true
      }
    },
    "/project/{projectIdOrKey}/properties": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"keys\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support\",\"key\":\"issue.support\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PropertyKeys"
            }
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          },
          "403": {
            "description": "Returned if the user does not have permission to view the project."
          },
          "404": {
            "description": "Returned if the project is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Project properties"
        ],
        "deprecated": false,
        "summary": "Get project property keys",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/project/{projectIdOrKey}/properties/{propertyKey}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The project property key. Use [Get project property keys](#api-rest-api-3-project-projectIdOrKey-properties-get) to get a list of all project property keys.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the project property is deleted."
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          },
          "403": {
            "description": "Returned if the user does not have permission to administer the project."
          },
          "404": {
            "description": "Returned if the project or property is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Project properties"
        ],
        "deprecated": false,
        "summary": "Delete project property",
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The project property key. Use [Get project property keys](#api-rest-api-3-project-projectIdOrKey-properties-get) to get a list of all project property keys.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"key\":\"issue.support\",\"value\":{\"system.conversation.id\":\"b1bf38be-5e94-4b40-a3b8-9278735ee1e6\",\"system.support.time\":\"1m\"}}"
            },
            "schema": {
              "$ref": "#/definitions/EntityProperty"
            }
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          },
          "403": {
            "description": "Returned if the user does not have permission to view the project."
          },
          "404": {
            "description": "Returned if the project or property is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Project properties"
        ],
        "deprecated": false,
        "summary": "Get project property",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The key of the project property. The maximum length is 255 characters.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the project property is updated.",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Returned if the project property is created.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if the project key or id is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          },
          "403": {
            "description": "Returned if the user does not have permission to administer the project."
          },
          "404": {
            "description": "Returned if the project is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Project properties"
        ],
        "deprecated": false,
        "summary": "Set project property",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/project/{projectIdOrKey}/role": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"Administrators\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10002\",\"Users\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10001\",\"Developers\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10000\"}"
            },
            "schema": {
              "additionalProperties": {
                "format": "uri",
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing or if the user lacks administrative permissions for the project."
          },
          "404": {
            "description": "Returned if the project is not found or or if the user does not have administrative permissions for the project."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Project roles"
        ],
        "deprecated": false,
        "summary": "Get project roles for project",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/project/{projectIdOrKey}/role/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The user account ID of the user to remove from the project role.",
            "in": "query",
            "name": "user",
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "The name of the group to remove from the project role.",
            "in": "query",
            "name": "group",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "404": {
            "description": "Returned if:\n\n *  the project or project role is not found.\n *  the calling user does not have administrative permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Project role actors"
        ],
        "deprecated": false,
        "summary": "Delete actors from project role",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\",\"name\":\"Developers\",\"id\":10360,\"description\":\"A project role that represents developers in a project\",\"actors\":[{\"id\":10240,\"displayName\":\"jira-developers\",\"type\":\"atlassian-group-role-actor\",\"name\":\"jira-developers\",\"actorGroup\":{\"name\":\"jira-developers\",\"displayName\":\"jira-developers\"}},{\"id\":10241,\"displayName\":\"Mia Krystof\",\"type\":\"atlassian-user-role-actor\",\"actorUser\":{\"accountId\":\"5b10a2844c20165700ede21g\"}}],\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}}"
            },
            "schema": {
              "$ref": "#/definitions/ProjectRole"
            }
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  the project or project role is not found.\n *  the user does not have administrative permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Project roles"
        ],
        "deprecated": false,
        "summary": "Get project role for project",
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The groups or users to associate with the project role for this project. Provide the user account ID or group name.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActorsMap"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful. The complete list of actors for the project is returned.\n\nFor example, the cURL request above adds a group, *jira-developers*. For the response below to be returned as a result of that request, the user *Mia Krystof* would have previously been added as a `user` actor for this project.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\",\"name\":\"Developers\",\"id\":10360,\"description\":\"A project role that represents developers in a project\",\"actors\":[{\"id\":10240,\"displayName\":\"jira-developers\",\"type\":\"atlassian-group-role-actor\",\"name\":\"jira-developers\",\"actorGroup\":{\"name\":\"jira-developers\",\"displayName\":\"jira-developers\"}},{\"id\":10241,\"displayName\":\"Mia Krystof\",\"type\":\"atlassian-user-role-actor\",\"actorUser\":{\"accountId\":\"5b10a2844c20165700ede21g\"}}],\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}}"
            },
            "schema": {
              "$ref": "#/definitions/ProjectRole"
            }
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing or if the calling user lacks administrative permissions for the project."
          },
          "404": {
            "description": "Returned if:\n\n *  the project is not found.\n *  the user or group is not found.\n *  the group or user is not active."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          },
          {}
        ],
        "tags": [
          "Project role actors"
        ],
        "deprecated": false,
        "summary": "Add actors to project role",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The groups or users to associate with the project role for this project. Provide the user account ID or group name.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectRoleActorsUpdateBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful. The complete list of actors for the project is returned.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\",\"name\":\"Developers\",\"id\":10360,\"description\":\"A project role that represents developers in a project\",\"actors\":[{\"id\":10240,\"displayName\":\"jira-developers\",\"type\":\"atlassian-group-role-actor\",\"name\":\"jira-developers\",\"actorGroup\":{\"name\":\"jira-developers\",\"displayName\":\"jira-developers\"}},{\"id\":10241,\"displayName\":\"Mia Krystof\",\"type\":\"atlassian-user-role-actor\",\"actorUser\":{\"accountId\":\"5b10a2844c20165700ede21g\"}}],\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}}"
            },
            "schema": {
              "$ref": "#/definitions/ProjectRole"
            }
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing or if the calling user lacks administrative permissions for the project."
          },
          "404": {
            "description": "Returned if:\n\n *  the project is not found.\n *  a user or group is not found.\n *  a group or user is not active."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Project role actors"
        ],
        "deprecated": false,
        "summary": "Set actors for project role",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      }
    },
    "/project/{projectIdOrKey}/roledetails": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "Whether the roles should be filtered to include only those the user is assigned to.",
            "in": "query",
            "name": "currentMember",
            "type": "boolean"
          },
          {
            "default": false,
            "in": "query",
            "name": "excludeConnectAddons",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\",\"name\":\"Developers\",\"id\":10360,\"description\":\"A project role that represents developers in a project\",\"actors\":[{\"id\":10240,\"displayName\":\"jira-developers\",\"type\":\"atlassian-group-role-actor\",\"name\":\"jira-developers\",\"actorGroup\":{\"name\":\"jira-developers\",\"displayName\":\"jira-developers\"}},{\"id\":10241,\"displayName\":\"Mia Krystof\",\"type\":\"atlassian-user-role-actor\",\"actorUser\":{\"accountId\":\"5b10a2844c20165700ede21g\"}}],\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ProjectRole"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the project is not found or if the user does not have the necessary permissions for the project."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Project roles"
        ],
        "deprecated": false,
        "summary": "Get project role details",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/project/{projectIdOrKey}/statuses": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueType/3\",\"id\":\"3\",\"name\":\"Task\",\"subtask\":false,\"statuses\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/status/10000\",\"description\":\"The issue is currently being worked on.\",\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/progress.gif\",\"name\":\"In Progress\",\"id\":\"10000\"},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/status/5\",\"description\":\"The issue is closed.\",\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/closed.gif\",\"name\":\"Closed\",\"id\":\"5\"}]}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/IssueTypeWithStatus"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the project is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Projects"
        ],
        "deprecated": false,
        "summary": "Get all statuses for project",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/project/{projectIdOrKey}/type/{newProjectTypeKey}": {
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The key of the new project type.",
            "enum": [
              "software",
              "service_desk",
              "business"
            ],
            "in": "path",
            "name": "newProjectTypeKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the project type is updated.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"description\":\"This project was created as an example for REST.\",\"lead\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"components\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/component/10000\",\"id\":\"10000\",\"name\":\"Component 1\",\"description\":\"This is a Jira component\",\"lead\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"assigneeType\":\"PROJECT_LEAD\",\"assignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"realAssigneeType\":\"PROJECT_LEAD\",\"realAssignee\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"isAssigneeTypeValid\":false,\"project\":\"HSP\",\"projectId\":10000}],\"issueTypes\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueType/3\",\"id\":\"3\",\"description\":\"A task that needs to be done.\",\"iconUrl\":\"https://your-domain.atlassian.net//secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\\\",\",\"name\":\"Task\",\"subtask\":false,\"avatarId\":1},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issueType/1\",\"id\":\"1\",\"description\":\"A problem with the software.\",\"iconUrl\":\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\\\",\",\"name\":\"Bug\",\"subtask\":false,\"avatarId\":10002,\"entityId\":\"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2\",\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}}],\"url\":\"https://your-domain.atlassian.net/browse/EX\",\"email\":\"from-jira@example.com\",\"assigneeType\":\"PROJECT_LEAD\",\"versions\":[],\"name\":\"Example\",\"roles\":{\"Developers\":\"https://your-domain.atlassian.net/rest/api/3/project/EX/role/10000\"},\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"properties\":{\"propertyKey\":\"propertyValue\"},\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2020-06-15T03:55:39.545+0000\"}}"
            },
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the project is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Projects"
        ],
        "deprecated": true,
        "summary": "Update project type",
        "x-atlassian-connect-scope": "PROJECT_ADMIN",
        "x-changes": [
          {
            "announced": "2019-06-03T00:00:00.000Z",
            "details": "https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-change-project-type-via-api//",
            "effective": "2019-12-03T00:00:00.000Z",
            "type": "removed"
          }
        ]
      }
    },
    "/project/{projectIdOrKey}/version": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "description": "[Order](#ordering) the results by a field:\n\n *  `description` Sorts by version description.\n *  `name` Sorts by version name.\n *  `releaseDate` Sorts by release date, starting with the oldest date. Versions with no release date are listed last.\n *  `sequence` Sorts by the order of appearance in the user interface.\n *  `startDate` Sorts by start date, starting with the oldest date. Versions with no start date are listed last.",
            "enum": [
              "description",
              "-description",
              "+description",
              "name",
              "-name",
              "+name",
              "releaseDate",
              "-releaseDate",
              "+releaseDate",
              "sequence",
              "-sequence",
              "+sequence",
              "startDate",
              "-startDate",
              "+startDate"
            ],
            "in": "query",
            "name": "orderBy",
            "type": "string"
          },
          {
            "description": "Filter the results using a literal string. Versions with matching `name` or `description` are returned (case insensitive).",
            "in": "query",
            "name": "query",
            "type": "string"
          },
          {
            "description": "A list of status values used to filter the results by version status. This parameter accepts a comma-separated list. The status values are `released`, `unreleased`, and `archived`.",
            "in": "query",
            "name": "status",
            "type": "string"
          },
          {
            "description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `issuesstatus` Returns the number of issues in each status category for each version.\n *  `operations` Returns actions that can be performed on the specified version.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/PR/version?startAt=0&maxResults=2\",\"nextPage\":\"https://your-domain.atlassian.net/rest/api/3/project/PR/version?startAt=2&maxResults=2\",\"maxResults\":2,\"startAt\":0,\"total\":7,\"isLast\":false,\"values\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/version/10000\",\"id\":\"10000\",\"description\":\"An excellent version\",\"name\":\"New Version 1\",\"archived\":false,\"released\":true,\"releaseDate\":\"2010-07-06\",\"overdue\":true,\"userReleaseDate\":\"6/Jul/2010\",\"projectId\":10000},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/version/10010\",\"id\":\"10010\",\"description\":\"Minor Bugfix version\",\"name\":\"Next Version\",\"archived\":false,\"released\":false,\"overdue\":false,\"projectId\":10000,\"issuesStatusForFixVersion\":{\"unmapped\":0,\"toDo\":10,\"inProgress\":20,\"done\":100}}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanVersion"
            }
          },
          "404": {
            "description": "Returned if the project is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Project versions"
        ],
        "deprecated": false,
        "summary": "Get project versions paginated",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/project/{projectIdOrKey}/versions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectIdOrKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts `operations`, which returns actions that can be performed on the version.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/version/10000\",\"id\":\"10000\",\"description\":\"An excellent version\",\"name\":\"New Version 1\",\"archived\":false,\"released\":true,\"releaseDate\":\"2010-07-06\",\"overdue\":true,\"userReleaseDate\":\"6/Jul/2010\",\"projectId\":10000},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/version/10010\",\"id\":\"10010\",\"description\":\"Minor Bugfix version\",\"name\":\"Next Version\",\"archived\":false,\"released\":false,\"overdue\":false,\"projectId\":10000,\"issuesStatusForFixVersion\":{\"unmapped\":0,\"toDo\":10,\"inProgress\":20,\"done\":100}}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/Version"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "Returned if the project is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Project versions"
        ],
        "deprecated": false,
        "summary": "Get project versions",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/project/{projectId}/hierarchy": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the project.",
            "format": "int64",
            "in": "path",
            "name": "projectId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"projectId\":10030,\"hierarchy\":[{\"entityId\":\"7d376823-e88a-4982-af71-35ceaafef522\",\"level\":0,\"name\":\"Base\",\"issueTypes\":[{\"id\":10008,\"entityId\":\"8b5c9e4e-49d0-4aeb-8f41-510bbbc8d1f4\",\"name\":\"Story\",\"avatarId\":10324},{\"id\":10001,\"entityId\":\"84e5a873-ab25-4cd8-be4e-95618158de11\",\"name\":\"Bug\",\"avatarId\":10324}]},{\"entityId\":\"f633e069-6128-438d-a367-a5100860a297\",\"level\":1,\"name\":\"Epic\",\"issueTypes\":[{\"id\":10007,\"entityId\":\"55d18b74-4397-44cd-bb74-431016f54f85\",\"name\":\"Epic\",\"avatarId\":10179}]},{\"entityId\":\"3c6ae6fe-754d-4984-a3f1-c198effe6b46\",\"level\":-1,\"name\":\"Subtask\",\"issueTypes\":[{\"id\":10009,\"entityId\":\"7733012d-f667-4002-a444-97125708a197\",\"name\":\"Subtask\",\"avatarId\":10573}]}]}"
            },
            "schema": {
              "$ref": "#/definitions/ProjectIssueTypeHierarchy"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the project is not found or the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Projects"
        ],
        "deprecated": false,
        "summary": "Get project issue type hierarchy",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/project/{projectKeyOrId}/issuesecuritylevelscheme": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectKeyOrId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issuesecurityschemes/10000\",\"id\":10000,\"name\":\"Default Issue Security Scheme\",\"description\":\"Description for the default issue security scheme\",\"defaultSecurityLevelId\":10021,\"levels\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/securitylevel/10021\",\"id\":\"10021\",\"description\":\"Only the reporter and internal staff can see this issue.\",\"name\":\"Reporter Only\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/SecurityScheme"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the project is visible to the user but the user doesn't have administrative permissions."
          },
          "404": {
            "description": "Returned if the project is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Project permission schemes"
        ],
        "deprecated": false,
        "summary": "Get project issue security scheme",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/project/{projectKeyOrId}/notificationscheme": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectKeyOrId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about any custom fields assigned to receive an event.\n *  `group` Returns information about any groups assigned to receive an event.\n *  `notificationSchemeEvents` Returns a list of event associations. This list is returned for all expandable information.\n *  `projectRole` Returns information about any project roles assigned to receive an event.\n *  `user` Returns information about any users assigned to receive an event.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"expand\":\"notificationSchemeEvents,user,group,projectRole,field,all\",\"id\":10100,\"self\":\"https://your-domain.atlassian.net/rest/api/3/notificationscheme\",\"name\":\"notification scheme name\",\"description\":\"description\",\"notificationSchemeEvents\":[{\"event\":{\"id\":1,\"name\":\"Issue created\",\"description\":\"Event published when an issue is created\"},\"notifications\":[{\"id\":1,\"notificationType\":\"Group\",\"parameter\":\"jira-administrators\",\"group\":{\"name\":\"jira-administrators\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/group?groupname=jira-administrators\"},\"expand\":\"group\"},{\"id\":2,\"notificationType\":\"CurrentAssignee\"},{\"id\":3,\"notificationType\":\"ProjectRole\",\"parameter\":\"10360\",\"projectRole\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\",\"name\":\"Developers\",\"id\":10360,\"description\":\"A project role that represents developers in a project\",\"actors\":[{\"id\":10240,\"displayName\":\"jira-developers\",\"type\":\"atlassian-group-role-actor\",\"name\":\"jira-developers\",\"actorGroup\":{\"name\":\"jira-developers\",\"displayName\":\"jira-developers\"}},{\"id\":10241,\"displayName\":\"Mia Krystof\",\"type\":\"atlassian-user-role-actor\",\"actorUser\":{\"accountId\":\"5b10a2844c20165700ede21g\"}}],\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}},\"expand\":\"projectRole\"},{\"id\":4,\"notificationType\":\"EmailAddress\",\"parameter\":\"rest-developer@atlassian.com\",\"emailAddress\":\"rest-developer@atlassian.com\"},{\"id\":5,\"notificationType\":\"User\",\"parameter\":\"5b10a2844c20165700ede21g\",\"user\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"expand\":\"user\"},{\"id\":6,\"notificationType\":\"GroupCustomField\",\"parameter\":\"customfield_10101\",\"field\":{\"id\":\"customfield_10101\",\"key\":\"customfield_10101\",\"name\":\"New custom field\",\"untranslatedName\":\"New custom field\",\"custom\":true,\"orderable\":true,\"navigable\":true,\"searchable\":true,\"clauseNames\":[\"cf[10101]\",\"New custom field\"],\"schema\":{\"type\":\"project\",\"custom\":\"com.atlassian.jira.plugin.system.customfieldtypes:project\",\"customId\":10101}},\"expand\":\"field\"}]},{\"event\":{\"id\":20,\"name\":\"Custom event\",\"description\":\"Custom event that is published together with an issue created event\",\"templateEvent\":{\"id\":1,\"name\":\"Issue created\",\"description\":\"Event published when an issue is created\"}},\"notifications\":[{\"id\":1,\"notificationType\":\"Group\",\"parameter\":\"jira-administrators\",\"group\":{\"name\":\"jira-administrators\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/group?groupname=jira-administrators\"},\"expand\":\"group\"},{\"id\":2,\"notificationType\":\"CurrentAssignee\"},{\"id\":3,\"notificationType\":\"ProjectRole\",\"parameter\":\"10360\",\"projectRole\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\",\"name\":\"Developers\",\"id\":10360,\"description\":\"A project role that represents developers in a project\",\"actors\":[{\"id\":10240,\"displayName\":\"jira-developers\",\"type\":\"atlassian-group-role-actor\",\"name\":\"jira-developers\",\"actorGroup\":{\"name\":\"jira-developers\",\"displayName\":\"jira-developers\"}},{\"id\":10241,\"displayName\":\"Mia Krystof\",\"type\":\"atlassian-user-role-actor\",\"actorUser\":{\"accountId\":\"5b10a2844c20165700ede21g\"}}],\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}},\"expand\":\"projectRole\"},{\"id\":4,\"notificationType\":\"EmailAddress\",\"parameter\":\"rest-developer@atlassian.com\",\"emailAddress\":\"rest-developer@atlassian.com\"},{\"id\":5,\"notificationType\":\"User\",\"parameter\":\"5b10a2844c20165700ede21g\",\"user\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"expand\":\"user\"},{\"id\":6,\"notificationType\":\"GroupCustomField\",\"parameter\":\"customfield_10101\",\"field\":{\"id\":\"customfield_10101\",\"key\":\"customfield_10101\",\"name\":\"New custom field\",\"untranslatedName\":\"New custom field\",\"custom\":true,\"orderable\":true,\"navigable\":true,\"searchable\":true,\"clauseNames\":[\"cf[10101]\",\"New custom field\"],\"schema\":{\"type\":\"project\",\"custom\":\"com.atlassian.jira.plugin.system.customfieldtypes:project\",\"customId\":10101}},\"expand\":\"field\"}]}]}"
            },
            "schema": {
              "$ref": "#/definitions/NotificationScheme"
            }
          },
          "400": {
            "description": "Returned if the request is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the project is not found or the user is not an administrator."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Projects"
        ],
        "deprecated": false,
        "summary": "Get project notification scheme",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/project/{projectKeyOrId}/permissionscheme": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectKeyOrId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":10000,\"self\":\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/10000\",\"name\":\"Example permission scheme\",\"description\":\"description\"}"
            },
            "schema": {
              "$ref": "#/definitions/PermissionScheme"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have permission to view the project's configuration."
          },
          "404": {
            "description": "Returned if the project is not found or the user does not have permission to view the project."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Project permission schemes"
        ],
        "deprecated": false,
        "summary": "Get assigned permission scheme",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectKeyOrId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission.",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":10000,\"self\":\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/10000\",\"name\":\"Example permission scheme\",\"description\":\"description\"}"
            },
            "schema": {
              "$ref": "#/definitions/PermissionScheme"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if:\n\n *  the user does not have the necessary permission to edit the project's configuration.\n *  the Jira instance is Jira Core Free or Jira Software Free. Permission schemes cannot be assigned to projects on free plans."
          },
          "404": {
            "description": "Returned if the project or permission scheme is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          }
        ],
        "tags": [
          "Project permission schemes"
        ],
        "deprecated": false,
        "summary": "Assign permission scheme",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      }
    },
    "/project/{projectKeyOrId}/securitylevel": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project ID or project key (case sensitive).",
            "in": "path",
            "name": "projectKeyOrId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"levels\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/securitylevel/100000\",\"id\":\"100000\",\"description\":\"Only the reporter and internal staff can see this issue.\",\"name\":\"Reporter Only\"},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/securitylevel/100001\",\"id\":\"100001\",\"description\":\"Only internal staff can see this issue.\",\"name\":\"Staff Only\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/ProjectIssueSecurityLevels"
            }
          },
          "404": {
            "description": "Returned if the project is not found or the user does not have permission to view it."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Project permission schemes"
        ],
        "deprecated": false,
        "summary": "Get project issue security levels",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/projectCategory": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10001\",\"id\":\"10001\",\"name\":\"SECOND\",\"description\":\"Second Project Category\"}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ProjectCategory"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Project categories"
        ],
        "deprecated": false,
        "summary": "Get all project categories",
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectCategory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10100\",\"id\":\"10100\",\"name\":\"CREATED\",\"description\":\"Created Project Category\"}"
            },
            "schema": {
              "$ref": "#/definitions/ProjectCategory"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  `name` is not provided or exceeds 255 characters.\n *  `description` is not provided or exceeds 1000 characters."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "409": {
            "description": "Returned if the project category name is in use."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          }
        ],
        "tags": [
          "Project categories"
        ],
        "deprecated": false,
        "summary": "Create project category",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/projectCategory/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "ID of the project category to delete.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the project category is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          }
        ],
        "tags": [
          "Project categories"
        ],
        "deprecated": false,
        "summary": "Delete project category",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the project category.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"}"
            },
            "schema": {
              "$ref": "#/definitions/ProjectCategory"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the project category is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Project categories"
        ],
        "deprecated": false,
        "summary": "Get project category by id",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10100\",\"id\":\"10100\",\"name\":\"UPDATED\",\"description\":\"Updated Project Category\"}"
            },
            "schema": {
              "$ref": "#/definitions/UpdatedProjectCategory"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  `name` has been modified and exceeds 255 characters.\n *  `description` has been modified and exceeds 1000 characters."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the project category is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          }
        ],
        "tags": [
          "Project categories"
        ],
        "deprecated": false,
        "summary": "Update project category",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/projectvalidate/key": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project key.",
            "in": "query",
            "name": "key",
            "type": "string",
            "x-showInExample": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"errorMessages\":[],\"errors\":{\"projectKey\":\"A project with that project key already exists.\"}}"
            },
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Project key and name validation"
        ],
        "deprecated": false,
        "summary": "Validate project key",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/projectvalidate/validProjectKey": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project key.",
            "in": "query",
            "name": "key",
            "type": "string",
            "x-showInExample": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "\"VPNE\""
            },
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Project key and name validation"
        ],
        "deprecated": false,
        "summary": "Get valid project key",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/projectvalidate/validProjectName": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The project name.",
            "in": "query",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "\"Valid Project Name Example\""
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          },
          "404": {
            "description": "Returned if a valid project name cannot be generated."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Project key and name validation"
        ],
        "deprecated": false,
        "summary": "Get valid project name",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/resolution": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/resolution/1\",\"id\":\"10000\",\"description\":\"A fix for this issue is checked into the tree and tested.\",\"name\":\"Fixed\"},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/resolution/3\",\"id\":\"10001\",\"description\":\"This is what it is supposed to do.\",\"name\":\"Works as designed\"}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/Resolution"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue resolutions"
        ],
        "deprecated": false,
        "summary": "Get resolutions",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/resolution/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the issue resolution value.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/resolution/1\",\"id\":\"10000\",\"description\":\"A fix for this issue is checked into the tree and tested.\",\"name\":\"Fixed\"}"
            },
            "schema": {
              "$ref": "#/definitions/Resolution"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the issue resolution value is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue resolutions"
        ],
        "deprecated": false,
        "summary": "Get resolution",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/role": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\",\"name\":\"Developers\",\"id\":10360,\"description\":\"A project role that represents developers in a project\",\"actors\":[{\"id\":10240,\"displayName\":\"jira-developers\",\"type\":\"atlassian-group-role-actor\",\"name\":\"jira-developers\",\"actorGroup\":{\"name\":\"jira-developers\",\"displayName\":\"jira-developers\"}},{\"id\":10241,\"displayName\":\"Mia Krystof\",\"type\":\"atlassian-user-role-actor\",\"actorUser\":{\"accountId\":\"5b10a2844c20165700ede21g\"}}],\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ProjectRole"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have administrative permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Project roles"
        ],
        "deprecated": false,
        "summary": "Get all project roles",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUpdateRoleRequestBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\",\"name\":\"Developers\",\"id\":10360,\"description\":\"A project role that represents developers in a project\"}"
            },
            "schema": {
              "$ref": "#/definitions/ProjectRole"
            }
          },
          "400": {
            "description": "Returned if the request is not valid. The `name` cannot be empty or start or end with whitespace."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have administrative permissions."
          },
          "409": {
            "description": "Returned if a project role with the provided name already exists."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Project roles"
        ],
        "deprecated": false,
        "summary": "Create project role",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/role/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the project role to delete. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The ID of the project role that will replace the one being deleted.",
            "format": "int64",
            "in": "query",
            "name": "swap",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if the request is invalid or if the replacement project role is not found."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have administrative permissions."
          },
          "404": {
            "description": "Returned if the project role being deleted is not found."
          },
          "409": {
            "description": "Returned if the project role being deleted is in use and a replacement project role is not specified in the request."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Project roles"
        ],
        "deprecated": false,
        "summary": "Delete project role",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\",\"name\":\"Developers\",\"id\":10360,\"description\":\"A project role that represents developers in a project\",\"actors\":[{\"id\":10240,\"displayName\":\"jira-developers\",\"type\":\"atlassian-group-role-actor\",\"name\":\"jira-developers\",\"actorGroup\":{\"name\":\"jira-developers\",\"displayName\":\"jira-developers\"}},{\"id\":10241,\"displayName\":\"Mia Krystof\",\"type\":\"atlassian-user-role-actor\",\"actorUser\":{\"accountId\":\"5b10a2844c20165700ede21g\"}}],\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}}"
            },
            "schema": {
              "$ref": "#/definitions/ProjectRole"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have administrative permissions."
          },
          "404": {
            "description": "Returned if the project role is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Project roles"
        ],
        "deprecated": false,
        "summary": "Get project role by ID",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUpdateRoleRequestBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\",\"name\":\"Developers\",\"id\":10360,\"description\":\"A project role that represents developers in a project\",\"actors\":[{\"id\":10240,\"displayName\":\"jira-developers\",\"type\":\"atlassian-group-role-actor\",\"name\":\"jira-developers\",\"actorGroup\":{\"name\":\"jira-developers\",\"displayName\":\"jira-developers\"}},{\"id\":10241,\"displayName\":\"Mia Krystof\",\"type\":\"atlassian-user-role-actor\",\"actorUser\":{\"accountId\":\"5b10a2844c20165700ede21g\"}}],\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}}"
            },
            "schema": {
              "$ref": "#/definitions/ProjectRole"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have administrative permissions."
          },
          "404": {
            "description": "Returned if the project role is not found."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Project roles"
        ],
        "deprecated": false,
        "summary": "Partial update project role",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUpdateRoleRequestBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\",\"name\":\"Developers\",\"id\":10360,\"description\":\"A project role that represents developers in a project\",\"actors\":[{\"id\":10240,\"displayName\":\"jira-developers\",\"type\":\"atlassian-group-role-actor\",\"name\":\"jira-developers\",\"actorGroup\":{\"name\":\"jira-developers\",\"displayName\":\"jira-developers\"}},{\"id\":10241,\"displayName\":\"Mia Krystof\",\"type\":\"atlassian-user-role-actor\",\"actorUser\":{\"accountId\":\"5b10a2844c20165700ede21g\"}}],\"scope\":{\"type\":\"PROJECT\",\"project\":{\"id\":\"10000\",\"key\":\"KEY\",\"name\":\"Next Gen Project\"}}}"
            },
            "schema": {
              "$ref": "#/definitions/ProjectRole"
            }
          },
          "400": {
            "description": "Returned if the request is not valid. The `name` cannot be empty or start or end with whitespace."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have administrative permissions."
          },
          "404": {
            "description": "Returned if the project role is not found."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Project roles"
        ],
        "deprecated": false,
        "summary": "Fully update project role",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/role/{id}/actors": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The user account ID of the user to remove as a default actor.",
            "in": "query",
            "name": "user",
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "The group name of the group to be removed as a default actor.",
            "in": "query",
            "name": "group",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"actors\":[{\"id\":10240,\"displayName\":\"jira-developers\",\"type\":\"atlassian-group-role-actor\",\"name\":\"jira-developers\",\"actorGroup\":{\"name\":\"jira-developers\",\"displayName\":\"jira-developers\"}}]}"
            },
            "schema": {
              "$ref": "#/definitions/ProjectRole"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have administrative permissions."
          },
          "404": {
            "description": "Returned if the project role is not found."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Project role actors"
        ],
        "deprecated": false,
        "summary": "Delete default actors from project role",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"actors\":[{\"id\":10240,\"displayName\":\"jira-developers\",\"type\":\"atlassian-group-role-actor\",\"name\":\"jira-developers\",\"actorGroup\":{\"name\":\"jira-developers\",\"displayName\":\"jira-developers\"}}]}"
            },
            "schema": {
              "$ref": "#/definitions/ProjectRole"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have administrative permissions."
          },
          "404": {
            "description": "Returned if the project role is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Project role actors"
        ],
        "deprecated": false,
        "summary": "Get default actors for project role",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActorInputBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"actors\":[{\"id\":10240,\"displayName\":\"jira-developers\",\"type\":\"atlassian-group-role-actor\",\"name\":\"jira-developers\",\"actorGroup\":{\"name\":\"jira-developers\",\"displayName\":\"jira-developers\"}}]}"
            },
            "schema": {
              "$ref": "#/definitions/ProjectRole"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have administrative permissions."
          },
          "404": {
            "description": "Returned if the project role is not found."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Project role actors"
        ],
        "deprecated": false,
        "summary": "Add default actors to project role",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/screens": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 100,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "schema": {
              "$ref": "#/definitions/PageBeanScreen"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Screens"
        ],
        "deprecated": false,
        "summary": "Get all screens",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/screens/addToDefault/{fieldId}": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the field.",
            "in": "path",
            "name": "fieldId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the field it not found or the field is already present."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Screens"
        ],
        "deprecated": false,
        "summary": "Add field to default screen",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/screens/{screenId}/availableFields": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the screen.",
            "format": "int64",
            "in": "path",
            "name": "screenId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "schema": {
              "items": {
                "$ref": "#/definitions/ScreenableField"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the screen is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Screens"
        ],
        "deprecated": false,
        "summary": "Get available screen fields",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/screens/{screenId}/tabs": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the screen.",
            "format": "int64",
            "in": "path",
            "name": "screenId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The key of the project.",
            "in": "query",
            "name": "projectKey",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "schema": {
              "items": {
                "$ref": "#/definitions/ScreenableTab"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Returned if the screen ID is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the screen is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Screens"
        ],
        "deprecated": false,
        "summary": "Get all screen tabs",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the screen.",
            "format": "int64",
            "in": "path",
            "name": "screenId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScreenableTab"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":10000,\"name\":\"Fields Tab\"}"
            },
            "schema": {
              "$ref": "#/definitions/ScreenableTab"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the screen is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Screens"
        ],
        "deprecated": false,
        "summary": "Create screen tab",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/screens/{screenId}/tabs/{tabId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the screen.",
            "format": "int64",
            "in": "path",
            "name": "screenId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The ID of the screen tab.",
            "format": "int64",
            "in": "path",
            "name": "tabId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the screen or screen tab is not found."
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Screens"
        ],
        "deprecated": false,
        "summary": "Delete screen tab",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the screen.",
            "format": "int64",
            "in": "path",
            "name": "screenId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The ID of the screen tab.",
            "format": "int64",
            "in": "path",
            "name": "tabId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScreenableTab"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":10000,\"name\":\"Fields Tab\"}"
            },
            "schema": {
              "$ref": "#/definitions/ScreenableTab"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the screen or screen tab is not found."
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Screens"
        ],
        "deprecated": false,
        "summary": "Update screen tab",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/screens/{screenId}/tabs/{tabId}/fields": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the screen.",
            "format": "int64",
            "in": "path",
            "name": "screenId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The ID of the screen tab.",
            "format": "int64",
            "in": "path",
            "name": "tabId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The key of the project.",
            "in": "query",
            "name": "projectKey",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "schema": {
              "items": {
                "$ref": "#/definitions/ScreenableField"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the screen or screen tab is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Screens"
        ],
        "deprecated": false,
        "summary": "Get all screen tab fields",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the screen.",
            "format": "int64",
            "in": "path",
            "name": "screenId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The ID of the screen tab.",
            "format": "int64",
            "in": "path",
            "name": "tabId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddFieldBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":\"summary\",\"name\":\"Summary\"}"
            },
            "schema": {
              "$ref": "#/definitions/ScreenableField"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the screen, screen tab, or field is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Screens"
        ],
        "deprecated": false,
        "summary": "Add screen tab field",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/screens/{screenId}/tabs/{tabId}/fields/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the screen.",
            "format": "int64",
            "in": "path",
            "name": "screenId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The ID of the screen tab.",
            "format": "int64",
            "in": "path",
            "name": "tabId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The ID of the field.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the screen, screen tab, or field is not found."
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Screens"
        ],
        "deprecated": false,
        "summary": "Remove screen tab field",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/screens/{screenId}/tabs/{tabId}/fields/{id}/move": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the screen.",
            "format": "int64",
            "in": "path",
            "name": "screenId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The ID of the screen tab.",
            "format": "int64",
            "in": "path",
            "name": "tabId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The ID of the field.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveFieldBean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the screen, screen tab, or field is not found or the field can't be moved to the requested position."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Screens"
        ],
        "deprecated": false,
        "summary": "Move screen tab field",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/screens/{screenId}/tabs/{tabId}/move/{pos}": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the screen.",
            "format": "int64",
            "in": "path",
            "name": "screenId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The ID of the screen tab.",
            "format": "int64",
            "in": "path",
            "name": "tabId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The position of tab. The base index is 0.",
            "format": "int32",
            "in": "path",
            "name": "pos",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the screen or screen tab is not found or the position is invalid."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Screens"
        ],
        "deprecated": false,
        "summary": "Move screen tab",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/screenscheme": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 25,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "The list of screen scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`.",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "id",
            "type": "array",
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/screenscheme?maxResults=25&startAt=0\",\"maxResults\":100,\"startAt\":0,\"total\":2,\"isLast\":true,\"values\":[{\"id\":10010,\"name\":\"Employees screen scheme\",\"description\":\"Managing employees data\",\"screens\":{\"default\":10017,\"edit\":10019,\"create\":10019,\"view\":10020}},{\"id\":10032,\"name\":\"Offices screen scheme\",\"description\":\"Managing offices data\",\"screens\":{\"default\":10020}}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanScreenScheme"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Screens"
        ],
        "deprecated": false,
        "summary": "Get screen schemes",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/search": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The [JQL](https://confluence.atlassian.com/x/egORLQ) that defines the search. Note:\n\n *  If no JQL expression is provided, all issues are returned.\n *  `username` and `userkey` cannot be used as search terms due to privacy reasons. Use `accountId` instead.\n *  If a user has hidden their email address in their user profile, partial matches of the email address will not find the user. An exact match is required.",
            "in": "query",
            "name": "jql",
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int32",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page. To manage page size, Jira may return fewer items per page where a large number of fields are requested. The greatest number of items returned per page is achieved when requesting `id` or `key` only.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "default": "strict",
            "description": "Determines how to validate the JQL query and treat the validation results. Supported values are:\n\n *  `strict` Returns a 400 response code if any errors are found, along with a list of all errors (and warnings).\n *  `warn` Returns all errors as warnings.\n *  `none` No validation is performed.\n *  `true` *Deprecated* A legacy synonym for `strict`.\n *  `false` *Deprecated* A legacy synonym for `warn`.\n\nNote: If the JQL is not correctly formed a 400 response code is returned, regardless of the `validateQuery` value.",
            "enum": [
              "strict",
              "warn",
              "none",
              "true",
              "false"
            ],
            "in": "query",
            "name": "validateQuery",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "A list of fields to return for each issue, use it to retrieve a subset of fields. This parameter accepts a comma-separated list. Expand options include:\n\n *  `*all` Returns all fields.\n *  `*navigable` Returns navigable fields.\n *  Any issue field, prefixed with a minus to exclude.\n\nExamples:\n\n *  `summary,comment` Returns only the summary and comments fields.\n *  `-description` Returns all navigable (default) fields except description.\n *  `*all,-comment` Returns all fields except comments.\n\nThis parameter may be specified multiple times. For example, `fields=field1,field2&fields=field3`.\n\nNote: All navigable fields are returned by default. This differs from [GET issue](#api-rest-api-3-issue-issueIdOrKey-get) where the default is all fields.",
            "in": "query",
            "items": {
              "default": "*navigable",
              "type": "string"
            },
            "name": "fields",
            "type": "array"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about issues in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `renderedFields` Returns field values rendered in HTML format.\n *  `names` Returns the display name of each field.\n *  `schema` Returns the schema describing a field type.\n *  `transitions` Returns all possible transitions for the issue.\n *  `operations` Returns all possible operations for the issue.\n *  `editmeta` Returns information about how each field can be edited.\n *  `changelog` Returns a list of recent updates to an issue, sorted by date, starting from the most recent.\n *  `versionedRepresentations` Instead of `fields`, returns `versionedRepresentations` a JSON array containing each version of a field's value, with the highest numbered item representing the most recent version.",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "A list of issue property keys for issue properties to include in the results. This parameter accepts a comma-separated list. Multiple properties can also be provided using an ampersand separated list. For example, `properties=prop1,prop2&properties=prop3`. A maximum of 5 issue property keys can be specified.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "properties",
            "type": "array"
          },
          {
            "default": false,
            "description": "Reference fields by their key (rather than ID).",
            "in": "query",
            "name": "fieldsByKeys",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"expand\":\"names,schema\",\"startAt\":0,\"maxResults\":50,\"total\":1,\"issues\":[{\"expand\":\"\",\"id\":\"10002\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10002\",\"key\":\"ED-1\",\"fields\":{\"watcher\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/EX-1/watchers\",\"isWatching\":false,\"watchCount\":1,\"watchers\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false}]},\"attachment\":[{\"id\":10000,\"self\":\"https://your-domain.atlassian.net/rest/api/3/attachments/10000\",\"filename\":\"picture.jpg\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2020-06-15T03:55:41.964+0000\",\"size\":23123,\"mimeType\":\"image/jpeg\",\"content\":\"https://your-domain.atlassian.net/jira/secure/attachments/10000/picture.jpg\",\"thumbnail\":\"https://your-domain.atlassian.net/jira/secure/thumbnail/10000/picture.jpg\"}],\"sub-tasks\":[{\"id\":\"10000\",\"type\":{\"id\":\"10000\",\"name\":\"\",\"inward\":\"Parent\",\"outward\":\"Sub-task\"},\"outwardIssue\":{\"id\":\"10003\",\"key\":\"ED-2\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/ED-2\",\"fields\":{\"status\":{\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/statuses/open.png\",\"name\":\"Open\"}}}}],\"description\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Main order flow broken\"}]}]},\"project\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2020-06-15T03:55:39.545+0000\"}},\"comment\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2020-06-15T03:55:41.968+0000\",\"updated\":\"2020-06-15T03:55:41.968+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"issuelinks\":[{\"id\":\"10001\",\"type\":{\"id\":\"10000\",\"name\":\"Dependent\",\"inward\":\"depends on\",\"outward\":\"is depended by\"},\"outwardIssue\":{\"id\":\"10004L\",\"key\":\"PR-2\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/PR-2\",\"fields\":{\"status\":{\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/statuses/open.png\",\"name\":\"Open\"}}}},{\"id\":\"10002\",\"type\":{\"id\":\"10000\",\"name\":\"Dependent\",\"inward\":\"depends on\",\"outward\":\"is depended by\"},\"inwardIssue\":{\"id\":\"10004\",\"key\":\"PR-3\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/PR-3\",\"fields\":{\"status\":{\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/statuses/open.png\",\"name\":\"Open\"}}}}],\"worklog\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2020-06-15T03:55:41.972+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2020-06-15T03:55:41.972+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}],\"warningMessages\":[\"The value 'bar' does not exist for the field 'foo'.\"]}"
            },
            "schema": {
              "$ref": "#/definitions/SearchResults"
            }
          },
          "400": {
            "description": "Returned if the JQL query is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue search"
        ],
        "deprecated": false,
        "summary": "Search for issues using JQL (GET)",
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "A JSON object containing the search request.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchRequestBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"expand\":\"names,schema\",\"startAt\":0,\"maxResults\":50,\"total\":1,\"issues\":[{\"expand\":\"\",\"id\":\"10002\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10002\",\"key\":\"ED-1\",\"fields\":{\"watcher\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/EX-1/watchers\",\"isWatching\":false,\"watchCount\":1,\"watchers\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false}]},\"attachment\":[{\"id\":10000,\"self\":\"https://your-domain.atlassian.net/rest/api/3/attachments/10000\",\"filename\":\"picture.jpg\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2020-06-15T03:55:41.964+0000\",\"size\":23123,\"mimeType\":\"image/jpeg\",\"content\":\"https://your-domain.atlassian.net/jira/secure/attachments/10000/picture.jpg\",\"thumbnail\":\"https://your-domain.atlassian.net/jira/secure/thumbnail/10000/picture.jpg\"}],\"sub-tasks\":[{\"id\":\"10000\",\"type\":{\"id\":\"10000\",\"name\":\"\",\"inward\":\"Parent\",\"outward\":\"Sub-task\"},\"outwardIssue\":{\"id\":\"10003\",\"key\":\"ED-2\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/ED-2\",\"fields\":{\"status\":{\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/statuses/open.png\",\"name\":\"Open\"}}}}],\"description\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Main order flow broken\"}]}]},\"project\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2020-06-15T03:55:39.545+0000\"}},\"comment\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2020-06-15T03:55:41.968+0000\",\"updated\":\"2020-06-15T03:55:41.968+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"issuelinks\":[{\"id\":\"10001\",\"type\":{\"id\":\"10000\",\"name\":\"Dependent\",\"inward\":\"depends on\",\"outward\":\"is depended by\"},\"outwardIssue\":{\"id\":\"10004L\",\"key\":\"PR-2\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/PR-2\",\"fields\":{\"status\":{\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/statuses/open.png\",\"name\":\"Open\"}}}},{\"id\":\"10002\",\"type\":{\"id\":\"10000\",\"name\":\"Dependent\",\"inward\":\"depends on\",\"outward\":\"is depended by\"},\"inwardIssue\":{\"id\":\"10004\",\"key\":\"PR-3\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/PR-3\",\"fields\":{\"status\":{\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/statuses/open.png\",\"name\":\"Open\"}}}}],\"worklog\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2020-06-15T03:55:41.972+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2020-06-15T03:55:41.972+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}],\"warningMessages\":[\"The value 'bar' does not exist for the field 'foo'.\"]}"
            },
            "schema": {
              "$ref": "#/definitions/SearchResults"
            }
          },
          "400": {
            "description": "Returned if the JQL query is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Issue search"
        ],
        "deprecated": false,
        "summary": "Search for issues using JQL (POST)",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/securitylevel/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the issue security level.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/securitylevel/10021\",\"id\":\"10021\",\"description\":\"Only the reporter and internal staff can see this issue.\",\"name\":\"Reporter Only\"}"
            },
            "schema": {
              "$ref": "#/definitions/SecurityLevel"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          },
          "404": {
            "description": "Returned if the issue security level is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          },
          {}
        ],
        "tags": [
          "Issue security level"
        ],
        "deprecated": false,
        "summary": "Get issue security level",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/serverInfo": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"baseUrl\":\"https://your-domain.atlassian.net/jira\",\"version\":\"1001.0.0-SNAPSHOT\",\"versionNumbers\":[5,0,0],\"buildNumber\":582,\"buildDate\":\"2020-06-15T03:55:41.606+0000\",\"serverTime\":\"2020-06-15T03:55:41.606+0000\",\"scmInfo\":\"1f51473f5c7b75c1a69a0090f4832cdc5053702a\",\"serverTitle\":\"My Jira instance\",\"defaultLocale\":{\"locale\":\"en_AU\"}}"
            },
            "schema": {
              "$ref": "#/definitions/ServerInformation"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          }
        },
        "security": [
          {
            "OAuth2": []
          },
          {}
        ],
        "tags": [
          "Server info"
        ],
        "deprecated": false,
        "summary": "Get Jira instance info",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/settings/columns": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"label\":\"Key\",\"value\":\"issuekey\"},{\"label\":\"Summary\",\"value\":\"summary\"}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ColumnItem"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Issue navigator settings"
        ],
        "deprecated": false,
        "summary": "Get issue navigator default columns",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      },
      "put": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "collectionFormat": "csv",
            "description": "A navigable field value.",
            "in": "formData",
            "items": {
              "type": "string"
            },
            "name": "body",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if invalid parameters are passed."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if a navigable field value is not found."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Issue navigator settings"
        ],
        "deprecated": false,
        "summary": "Set issue navigator default columns",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/status": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/status/10000\",\"description\":\"The issue is currently being worked on.\",\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/progress.gif\",\"name\":\"In Progress\",\"id\":\"10000\",\"statusCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/statuscategory/1\",\"id\":1,\"key\":\"in-flight\",\"colorName\":\"yellow\",\"name\":\"In Progress\"}},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/status/5\",\"description\":\"The issue is closed.\",\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/closed.gif\",\"name\":\"Closed\",\"id\":\"5\",\"statusCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/statuscategory/9\",\"id\":9,\"key\":\"completed\",\"colorName\":\"green\"}}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/StatusDetails"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Workflow statuses"
        ],
        "deprecated": false,
        "summary": "Get all statuses",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/status/{idOrName}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or name of the status.",
            "in": "path",
            "name": "idOrName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/status/10000\",\"description\":\"The issue is currently being worked on.\",\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/progress.gif\",\"name\":\"In Progress\",\"id\":\"10000\",\"statusCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/statuscategory/1\",\"id\":1,\"key\":\"in-flight\",\"colorName\":\"yellow\",\"name\":\"In Progress\"}}"
            },
            "schema": {
              "$ref": "#/definitions/StatusDetails"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  the status is not found.\n *  the status is not associated with a workflow.\n *  the user does not have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Workflow statuses"
        ],
        "deprecated": false,
        "summary": "Get status",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/statuscategory": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/statuscategory/1\",\"id\":1,\"key\":\"in-flight\",\"colorName\":\"yellow\",\"name\":\"In Progress\"},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/statuscategory/9\",\"id\":9,\"key\":\"completed\",\"colorName\":\"green\"}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/StatusCategory"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Workflow status categories"
        ],
        "deprecated": false,
        "summary": "Get all status categories",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/statuscategory/{idOrKey}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID or key of the status category.",
            "in": "path",
            "name": "idOrKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/statuscategory/1\",\"id\":1,\"key\":\"in-flight\",\"colorName\":\"yellow\",\"name\":\"In Progress\"}"
            },
            "schema": {
              "$ref": "#/definitions/StatusCategory"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the status category is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Workflow status categories"
        ],
        "deprecated": false,
        "summary": "Get status category",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/task/{taskId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the task.",
            "in": "path",
            "name": "taskId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/task/1\",\"id\":\"1\",\"description\":\"Task description\",\"status\":\"COMPLETE\",\"result\":\"the task result, this may be any JSON\",\"submittedBy\":10000,\"progress\":100,\"elapsedRuntime\":156,\"submitted\":1592193339908,\"started\":1592193340035,\"finished\":1592193340135,\"lastUpdate\":1592193340135}"
            },
            "schema": {
              "$ref": "#/definitions/TaskProgressBeanObject"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the task is not found."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "deprecated": false,
        "summary": "Get task",
        "x-atlassian-connect-scope": "NONE"
      }
    },
    "/task/{taskId}/cancel": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the task.",
            "in": "path",
            "name": "taskId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if cancellation of the task is not possible.",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing.",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission.",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "Returned if the task is not found.",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "Tasks"
        ],
        "deprecated": false,
        "summary": "Cancel task",
        "x-atlassian-connect-scope": "NONE",
        "x-experimental": true
      }
    },
    "/universal_avatar/type/{type}/owner/{entityId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The avatar type.",
            "enum": [
              "project",
              "issuetype"
            ],
            "in": "path",
            "name": "type",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the item the avatar is associated with.",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"system\":[{\"id\":\"1000\",\"isSystemAvatar\":true,\"isSelected\":false,\"isDeletable\":false,\"urls\":{\"16x16\":\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10040&avatarType=project\",\"24x24\":\"https://your-domain.atlassian.net/secure/viewavatar?size=small&avatarId=10040&avatarType=project\",\"32x32\":\"https://your-domain.atlassian.net/secure/viewavatar?size=medium&avatarId=10040&avatarType=project\",\"48x48\":\"https://your-domain.atlassian.net/secure/viewavatar?avatarId=10040&avatarType=project\"}}],\"custom\":[{\"id\":\"1010\",\"isSystemAvatar\":false,\"isSelected\":false,\"isDeletable\":true,\"urls\":{\"16x16\":\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10080&avatarType=project\",\"24x24\":\"https://your-domain.atlassian.net/secure/viewavatar?size=small&avatarId=10080&avatarType=project\",\"32x32\":\"https://your-domain.atlassian.net/secure/viewavatar?size=medium&avatarId=10080&avatarType=project\",\"48x48\":\"https://your-domain.atlassian.net/secure/viewavatar?avatarId=10080&avatarType=project\"}}]}"
            },
            "schema": {
              "$ref": "#/definitions/Avatars"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the avatar type is invalid, the associated item ID is missing, or the item is not found."
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Avatars"
        ],
        "deprecated": false,
        "summary": "Get avatars",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      },
      "post": {
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The avatar type.",
            "enum": [
              "project",
              "issuetype"
            ],
            "in": "path",
            "name": "type",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the item the avatar is associated with.",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "string"
          },
          {
            "default": 0,
            "description": "The X coordinate of the top-left corner of the crop region.",
            "format": "int32",
            "in": "query",
            "name": "x",
            "type": "integer"
          },
          {
            "default": 0,
            "description": "The Y coordinate of the top-left corner of the crop region.",
            "format": "int32",
            "in": "query",
            "name": "y",
            "type": "integer"
          },
          {
            "description": "The length of each side of the crop region.",
            "format": "int32",
            "in": "query",
            "name": "size",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":\"1000\",\"isSystemAvatar\":true,\"isSelected\":false,\"isDeletable\":false,\"urls\":{\"16x16\":\"/secure/useravatar?size=xsmall&avatarId=10040&avatarType=project\",\"24x24\":\"/secure/useravatar?size=small&avatarId=10040&avatarType=project\",\"32x32\":\"/secure/useravatar?size=medium&avatarId=10040&avatarType=project\",\"48x48\":\"/secure/useravatar?avatarId=10040&avatarType=project\"}}"
            },
            "schema": {
              "$ref": "#/definitions/Avatar"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  an image isn't included in the request.\n *  the image type is unsupported.\n *  the crop parameters extend the crop area beyond the edge of the image."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permissions."
          },
          "404": {
            "description": "Returned if the avatar type is invalid, the associated item ID is missing, or the item is not found."
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Avatars"
        ],
        "deprecated": false,
        "summary": "Load avatar",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/universal_avatar/type/{type}/owner/{owningObjectId}/avatar/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The avatar type.",
            "enum": [
              "project",
              "issuetype"
            ],
            "in": "path",
            "name": "type",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the item the avatar is associated with.",
            "in": "path",
            "name": "owningObjectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the avatar.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "403": {
            "description": "Returned if the user does not have permission to delete the avatar, the avatar is not deletedable."
          },
          "404": {
            "description": "Returned if the avatar type, associated item ID, or avatar ID is invalid."
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Avatars"
        ],
        "deprecated": false,
        "summary": "Delete avatar",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/user": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
            "in": "query",
            "maxLength": 128,
            "name": "accountId",
            "required": true,
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "username",
            "type": "string"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "key",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if the user cannot be removed."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if:\n\n *  `accountId` is missing.\n *  the user is not found."
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Users"
        ],
        "deprecated": false,
        "summary": "Delete user",
        "x-atlassian-connect-scope": "INACCESSIBLE",
        "x-experimental": true
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required.",
            "in": "query",
            "maxLength": 128,
            "name": "accountId",
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide) for details.",
            "in": "query",
            "name": "username",
            "type": "string"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide) for details.",
            "in": "query",
            "name": "key",
            "type": "string"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about users in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `groups` includes all groups and nested groups to which the user belongs.\n *  `applicationRoles` includes details of all the applications to which the user has access.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"emailAddress\":\"mia@example.com\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"groups\":{\"size\":3,\"items\":[]},\"applicationRoles\":{\"size\":1,\"items\":[]}}"
            },
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the calling user does not have the *Browse users and groups* global permission."
          },
          "404": {
            "description": "Returned if:\n\n *  `accountId` is missing.\n *  the user is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-user"
            ]
          },
          {}
        ],
        "tags": [
          "Users"
        ],
        "deprecated": false,
        "summary": "Get user",
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWriteBean"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"emailAddress\":\"mia@example.com\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"groups\":{\"size\":3,\"items\":[]},\"applicationRoles\":{\"size\":1,\"items\":[]}}"
            },
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Returned if the request is invalid or the number of licensed users is exceeded."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Users"
        ],
        "deprecated": false,
        "summary": "Create user",
        "x-atlassian-connect-scope": "INACCESSIBLE",
        "x-experimental": true
      }
    },
    "/user/assignable/multiProjectSearch": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "A query string that is matched against user attributes, such as `displayName` and `emailAddress`, to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a `displayName` of *John Smith* and a user with an `emailAddress` of *johnson@example.com*. Required, unless `accountId` is specified.",
            "in": "query",
            "name": "query",
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "username",
            "type": "string"
          },
          {
            "description": "A query string that is matched exactly against user `accountId`. Required, unless `query` is specified.",
            "in": "query",
            "maxLength": 128,
            "name": "accountId",
            "type": "string"
          },
          {
            "description": "A list of project keys (case sensitive). This parameter accepts a comma-separated list.",
            "in": "query",
            "name": "projectKeys",
            "required": true,
            "type": "string"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int32",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5\",\"key\":\"\",\"accountId\":\"5b10ac8d82e05b22cc7d4ef5\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=32&s=32\"},\"displayName\":\"Emma Richards\",\"active\":false}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/User"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  `projectKeys` is missing.\n *  `query` or `accountId` is missing.\n *  `query` and `accountId` are provided."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if one or more of the projects is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-user"
            ]
          },
          {}
        ],
        "tags": [
          "User search"
        ],
        "deprecated": false,
        "summary": "Find users assignable to projects",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/user/assignable/search": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "A query string that is matched against user attributes, such as `displayName`, and `emailAddress`, to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a `displayName` of *John Smith* and a user with an `emailAddress` of *johnson@example.com*. Required, unless `username` or `accountId` is specified.",
            "in": "query",
            "name": "query",
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "The sessionId of this request. SessionId is the same until the assignee is set.",
            "in": "query",
            "name": "sessionId",
            "type": "string"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "username",
            "type": "string"
          },
          {
            "description": "A query string that is matched exactly against user `accountId`. Required, unless `query` is specified.",
            "in": "query",
            "maxLength": 128,
            "name": "accountId",
            "type": "string"
          },
          {
            "description": "The project ID or project key (case sensitive). Required, unless `issueKey` is specified.",
            "in": "query",
            "name": "project",
            "type": "string"
          },
          {
            "description": "The key of the issue. Required, unless `project` is specified.",
            "in": "query",
            "name": "issueKey",
            "type": "string"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int32",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return. This operation may return less than the maximum number of items even if more are available. The operation fetches users up to the maximum and then, from the fetched users, returns only the users that can be assigned to the issue.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "description": "The ID of the transition.",
            "format": "int32",
            "in": "query",
            "name": "actionDescriptorId",
            "type": "integer"
          },
          {
            "default": false,
            "in": "query",
            "name": "recommend",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"emailAddress\":\"mia@example.com\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"groups\":{\"size\":3,\"items\":[]},\"applicationRoles\":{\"size\":1,\"items\":[]}}"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/User"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  `issueKey` or `project` is missing.\n *  `query` or `accountId` is missing.\n *  `query` and `accountId` are provided."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the project, issue, or transition is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-user"
            ]
          },
          {}
        ],
        "tags": [
          "User search"
        ],
        "deprecated": false,
        "summary": "Find users assignable to issues",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/user/bulk": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "username",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "key",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "The account ID of a user. To specify multiple users, pass multiple `accountId` parameters. For example, `accountId=5b10a2844c20165700ede21g&accountId=5b10ac8d82e05b22cc7d4ef5`.",
            "in": "query",
            "items": {
              "example": "5b10ac8d82e05b22cc7d4ef5",
              "maxLength": 128,
              "type": "string"
            },
            "maxLength": 128,
            "name": "accountId",
            "required": true,
            "type": "array",
            "x-showInExample": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":100,\"startAt\":0,\"total\":1,\"isLast\":true,\"values\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"emailAddress\":\"mia@example.com\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"groups\":{\"size\":3,\"items\":[]},\"applicationRoles\":{\"size\":1,\"items\":[]}}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanUser"
            }
          },
          "400": {
            "description": "Returned if `accountID` is missing."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-user"
            ]
          }
        ],
        "tags": [
          "Users"
        ],
        "deprecated": false,
        "summary": "Bulk get users",
        "x-atlassian-connect-scope": "READ",
        "x-experimental": true
      }
    },
    "/user/bulk/migration": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "Username of a user. To specify multiple users, pass multiple copies of this parameter. For example, `username=fred&username=barney`. Required if `key` isn't provided. Cannot be provided if `key` is present.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "username",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "Key of a user. To specify multiple users, pass multiple copies of this parameter. For example, `key=fred&key=barney`. Required if `username` isn't provided. Cannot be provided if `username` is present.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "key",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"username\":\"mia\",\"accountId\":\"5b10a2844c20165700ede21g\"},{\"username\":\"emma\",\"accountId\":\"5b10ac8d82e05b22cc7d4ef5\"}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/UserMigrationBean"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Returned if `key` or `username`"
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-user"
            ]
          }
        ],
        "tags": [
          "Users"
        ],
        "deprecated": false,
        "summary": "Get account IDs for users",
        "x-atlassian-connect-scope": "READ",
        "x-experimental": true
      }
    },
    "/user/columns": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
            "in": "query",
            "maxLength": 128,
            "name": "accountId",
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "username",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission or is not accessing their user record."
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Users"
        ],
        "deprecated": false,
        "summary": "Reset user default columns",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
            "in": "query",
            "maxLength": 128,
            "name": "accountId",
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "username",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "schema": {
              "items": {
                "$ref": "#/definitions/ColumnItem"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission or is not accessing their user record."
          },
          "404": {
            "description": "Returned if the requested user is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-user"
            ]
          },
          {}
        ],
        "tags": [
          "Users"
        ],
        "deprecated": false,
        "summary": "Get user default columns",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
            "in": "query",
            "maxLength": 128,
            "name": "accountId",
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "collectionFormat": "csv",
            "description": "The ID of a column to set. To set multiple columns, send multiple `columns` parameters.",
            "in": "formData",
            "items": {
              "type": "string"
            },
            "name": "body",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission or is not accessing their user record."
          },
          "404": {
            "description": "Returned if the requested user is not found."
          },
          "500": {
            "description": "Returned if an invalid issue table column ID is sent."
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Users"
        ],
        "deprecated": false,
        "summary": "Set user default columns",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/user/email": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, `5b10ac8d82e05b22cc7d4ef5`.",
            "in": "query",
            "maxLength": 128,
            "name": "accountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "name@example.com"
            },
            "schema": {
              "$ref": "#/definitions/UnrestrictedUserEmail"
            }
          },
          "400": {
            "description": "Returned if the calling app is not approved to use this API."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing from the request (for example if a user is trying to access this API)."
          },
          "404": {
            "description": "Returned if a user with the given `accountId` doesn't exist"
          },
          "503": {
            "description": "Indicates the API is not currently enabled"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Users"
        ],
        "deprecated": false,
        "summary": "Get user email",
        "x-atlassian-connect-scope": "ACCESS_EMAIL_ADDRESSES",
        "x-experimental": true
      }
    },
    "/user/email/bulk": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "collectionFormat": "multi",
            "description": "The account IDs of the users for which emails are required. An `accountId` is an identifier that uniquely identifies the user across all Atlassian products. For example, `5b10ac8d82e05b22cc7d4ef5`. Note, this should be treated as an opaque identifier (that is, do not assume any structure in the value).",
            "in": "query",
            "items": {
              "maxLength": 128,
              "type": "string"
            },
            "maxLength": 128,
            "name": "accountId",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "schema": {
              "$ref": "#/definitions/UnrestrictedUserEmail"
            }
          },
          "400": {
            "description": "Returned if the calling app is not approved to use this API."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect, or missing from the request (for example if a user is trying to access this API)."
          },
          "503": {
            "description": "Indicates the API is not currently enabled."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Users"
        ],
        "deprecated": false,
        "summary": "Get user email bulk",
        "x-atlassian-connect-scope": "ACCESS_EMAIL_ADDRESSES",
        "x-experimental": true
      }
    },
    "/user/groups": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
            "in": "query",
            "maxLength": 128,
            "name": "accountId",
            "required": true,
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "username",
            "type": "string"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"name\":\"jira-administrators\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/group?groupname=jira-administrators\"}"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/GroupName"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the calling user does not have the *Browse users and groups* global permission."
          },
          "404": {
            "description": "Returned if:\n\n *  `accountId` is missing.\n *  the user is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-user"
            ]
          },
          {}
        ],
        "tags": [
          "Users"
        ],
        "deprecated": false,
        "summary": "Get user groups",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/user/permission/search": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "A query string that is matched against user attributes, such as `displayName` and `emailAddress`, to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a `displayName` of *John Smith* and a user with an `emailAddress` of *johnson@example.com*. Required, unless `accountId` is specified.",
            "in": "query",
            "name": "query",
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "username",
            "type": "string"
          },
          {
            "description": "A query string that is matched exactly against user `accountId`. Required, unless `query` is specified.",
            "in": "query",
            "maxLength": 128,
            "name": "accountId",
            "type": "string"
          },
          {
            "description": "A comma separated list of permissions. Permissions can be specified as any:\n\n *  permission returned by [Get all permissions](#api-rest-api-3-permissions-get).\n *  custom project permission added by Connect apps.\n *  (deprecated) one of the following:\n    \n     *  ASSIGNABLE\\_USER\n     *  ASSIGN\\_ISSUE\n     *  ATTACHMENT\\_DELETE\\_ALL\n     *  ATTACHMENT\\_DELETE\\_OWN\n     *  BROWSE\n     *  CLOSE\\_ISSUE\n     *  COMMENT\\_DELETE\\_ALL\n     *  COMMENT\\_DELETE\\_OWN\n     *  COMMENT\\_EDIT\\_ALL\n     *  COMMENT\\_EDIT\\_OWN\n     *  COMMENT\\_ISSUE\n     *  CREATE\\_ATTACHMENT\n     *  CREATE\\_ISSUE\n     *  DELETE\\_ISSUE\n     *  EDIT\\_ISSUE\n     *  LINK\\_ISSUE\n     *  MANAGE\\_WATCHER\\_LIST\n     *  MODIFY\\_REPORTER\n     *  MOVE\\_ISSUE\n     *  PROJECT\\_ADMIN\n     *  RESOLVE\\_ISSUE\n     *  SCHEDULE\\_ISSUE\n     *  SET\\_ISSUE\\_SECURITY\n     *  TRANSITION\\_ISSUE\n     *  VIEW\\_VERSION\\_CONTROL\n     *  VIEW\\_VOTERS\\_AND\\_WATCHERS\n     *  VIEW\\_WORKFLOW\\_READONLY\n     *  WORKLOG\\_DELETE\\_ALL\n     *  WORKLOG\\_DELETE\\_OWN\n     *  WORKLOG\\_EDIT\\_ALL\n     *  WORKLOG\\_EDIT\\_OWN\n     *  WORK\\_ISSUE",
            "in": "query",
            "name": "permissions",
            "required": true,
            "type": "string"
          },
          {
            "description": "The issue key for the issue.",
            "in": "query",
            "name": "issueKey",
            "type": "string"
          },
          {
            "description": "The project key for the project (case sensitive).",
            "in": "query",
            "name": "projectKey",
            "type": "string"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int32",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5\",\"key\":\"\",\"accountId\":\"5b10ac8d82e05b22cc7d4ef5\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=32&s=32\"},\"displayName\":\"Emma Richards\",\"active\":false}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/User"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  `issueKey` or `projectKey` is missing.\n *  `query` or `accountId` is missing.\n *  `query` and `accountId` are provided.\n *  `permissions` is empty or contains an invalid entry."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the issue or project is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-user"
            ]
          },
          {}
        ],
        "tags": [
          "User search"
        ],
        "deprecated": false,
        "summary": "Find users with permissions",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/user/picker": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "A query string that is matched against user attributes, such as `displayName`, and `emailAddress`, to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a `displayName` of *John Smith* and a user with an `emailAddress` of *johnson@example.com*.",
            "in": "query",
            "name": "query",
            "required": true,
            "type": "string"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return. The total number of matched users is returned in `total`.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Include the URI to the user's avatar.",
            "in": "query",
            "name": "showAvatar",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "A list of account IDs to exclude from the search results. This parameter accepts a comma-separated list. Multiple account IDs can also be provided using an ampersand-separated list. For example, `excludeAccountIds=5b10a2844c20165700ede21g,5b10a0effa615349cb016cd8&excludeAccountIds=5b10ac8d82e05b22cc7d4ef5`. Cannot be provided with `exclude`.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "excludeAccountIds",
            "type": "array"
          },
          {
            "in": "query",
            "name": "avatarSize",
            "type": "string"
          },
          {
            "default": false,
            "in": "query",
            "name": "excludeConnectUsers",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"users\":[{\"accountId\":\"5b10a2844c20165700ede21g\",\"accountType\":\"atlassian\",\"name\":\"mia\",\"key\":\"mia\",\"html\":\"<strong>Mi</strong>a Krystof - <strong>mi</strong>a@example.com (<strong>mi</strong>a)\",\"displayName\":\"Mia Krystof\",\"avatarUrl\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\"}],\"total\":25,\"header\":\"Showing 20 of 25 matching groups\"}"
            },
            "schema": {
              "$ref": "#/definitions/FoundUsers"
            }
          },
          "400": {
            "description": "Returned if `exclude` and `excludeAccountIds` are provided."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-user"
            ]
          },
          {}
        ],
        "tags": [
          "User search"
        ],
        "deprecated": false,
        "summary": "Find users for picker",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/user/properties": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
            "in": "query",
            "maxLength": 128,
            "name": "accountId",
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "userKey",
            "type": "string"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "username",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"keys\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support\",\"key\":\"issue.support\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PropertyKeys"
            }
          },
          "400": {
            "description": "Returned if `accountId` is missing."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission or is not accessing their user record."
          },
          "404": {
            "description": "Returned if the user is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-user"
            ]
          }
        ],
        "tags": [
          "User properties"
        ],
        "deprecated": false,
        "summary": "Get user property keys",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/user/properties/{propertyKey}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
            "in": "query",
            "maxLength": 128,
            "name": "accountId",
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "userKey",
            "type": "string"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "username",
            "type": "string"
          },
          {
            "description": "The key of the user's property.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the user property is deleted."
          },
          "400": {
            "description": "Returned if `accountId` is missing."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission or is not accessing their user record."
          },
          "404": {
            "description": "Returned if the user or the property is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "User properties"
        ],
        "deprecated": false,
        "summary": "Delete user property",
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
            "in": "query",
            "maxLength": 128,
            "name": "accountId",
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "userKey",
            "type": "string"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "username",
            "type": "string"
          },
          {
            "description": "The key of the user's property.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"key\":\"issue.support\",\"value\":{\"system.conversation.id\":\"b1bf38be-5e94-4b40-a3b8-9278735ee1e6\",\"system.support.time\":\"1m\"}}"
            },
            "schema": {
              "$ref": "#/definitions/EntityProperty"
            }
          },
          "400": {
            "description": "Returned if `accountId` is missing."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission or is not accessing their user record."
          },
          "404": {
            "description": "Returned if the user is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-user"
            ]
          }
        ],
        "tags": [
          "User properties"
        ],
        "deprecated": false,
        "summary": "Get user property",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
            "in": "query",
            "maxLength": 128,
            "name": "accountId",
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "userKey",
            "type": "string"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "username",
            "type": "string"
          },
          {
            "description": "The key of the user's property. The maximum length is 255 characters.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the user property is updated.",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Returned if the user property is created.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if `accountId` is missing."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission or is not accessing their user record."
          },
          "404": {
            "description": "Returned if the user is not found."
          },
          "405": {
            "description": "Returned if the property key is not specified."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:jira-work"
            ]
          }
        ],
        "tags": [
          "User properties"
        ],
        "deprecated": false,
        "summary": "Set user property",
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/user/search": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "A query string that is matched against user attributes ( `displayName`, and `emailAddress`) to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a `displayName` of *John Smith* and a user with an `emailAddress` of *johnson@example.com*. Required, unless `accountId` or `property` is specified.",
            "in": "query",
            "name": "query",
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "in": "query",
            "name": "username",
            "type": "string"
          },
          {
            "description": "A query string that is matched exactly against a user `accountId`. Required, unless `query` or `property` is specified.",
            "in": "query",
            "maxLength": 128,
            "name": "accountId",
            "type": "string"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int32",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "description": "A query string used to search properties. Property keys are specified by path, so property keys containing dot (.) or equals (=) characters cannot be used. The query string cannot be specified using a JSON object. Example: To search for the value of `nested` from `{\"something\":{\"nested\":1,\"other\":2}}` use `thepropertykey.something.nested=1`. Required, unless `accountId` or `query` is specified.",
            "in": "query",
            "name": "property",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5\",\"key\":\"\",\"accountId\":\"5b10ac8d82e05b22cc7d4ef5\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=32&s=32\"},\"displayName\":\"Emma Richards\",\"active\":false}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/User"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  `accountId`, `query` or `property` is missing.\n *  `query` and `accountId` are provided.\n *  `property` parameter is not valid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-user"
            ]
          },
          {}
        ],
        "tags": [
          "User search"
        ],
        "deprecated": false,
        "summary": "Find users",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/user/search/query": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The search query.",
            "in": "query",
            "name": "query",
            "required": true,
            "type": "string"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 100,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "schema": {
              "$ref": "#/definitions/PageBeanUser"
            }
          },
          "400": {
            "description": "Returned if the query is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "408": {
            "description": "Returned if the search is timed out."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-user"
            ]
          }
        ],
        "tags": [
          "User search"
        ],
        "deprecated": false,
        "summary": "Find users by query",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/user/search/query/key": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The search query.",
            "in": "query",
            "name": "query",
            "required": true,
            "type": "string"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 100,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "schema": {
              "$ref": "#/definitions/PageBeanUserKey"
            }
          },
          "400": {
            "description": "Returned if the query is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "408": {
            "description": "Returned if the search is timed out."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-user"
            ]
          }
        ],
        "tags": [
          "User search"
        ],
        "deprecated": false,
        "summary": "Find user keys by query",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/user/viewissue/search": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "A query string that is matched against user attributes, such as `displayName` and `emailAddress`, to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a `displayName` of *John Smith* and a user with an `emailAddress` of *johnson@example.com*. Required, unless `accountId` is specified.",
            "in": "query",
            "name": "query",
            "type": "string",
            "x-showInExample": "true"
          },
          {
            "description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "in": "query",
            "name": "username",
            "type": "string"
          },
          {
            "description": "A query string that is matched exactly against user `accountId`. Required, unless `query` is specified.",
            "in": "query",
            "maxLength": 128,
            "name": "accountId",
            "type": "string"
          },
          {
            "description": "The issue key for the issue. Required, unless `projectKey` is specified.",
            "in": "query",
            "name": "issueKey",
            "type": "string"
          },
          {
            "description": "The project key for the project (case sensitive). Required, unless `issueKey` is specified.",
            "in": "query",
            "name": "projectKey",
            "type": "string"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int32",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5\",\"key\":\"\",\"accountId\":\"5b10ac8d82e05b22cc7d4ef5\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=32&s=32\"},\"displayName\":\"Emma Richards\",\"active\":false}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/User"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  `issueKey` or `projectKey` is missing.\n *  `query` or `accountId` is missing.\n *  `query` and `accountId` are provided."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the issue or project is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-user"
            ]
          },
          {}
        ],
        "tags": [
          "User search"
        ],
        "deprecated": false,
        "summary": "Find users with browse permission",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return.",
            "format": "int32",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5\",\"key\":\"\",\"accountId\":\"5b10ac8d82e05b22cc7d4ef5\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=32&s=32\"},\"displayName\":\"Emma Richards\",\"active\":false}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/User"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "403": {
            "description": "Returned if the user doesn't have the necessary permission."
          },
          "409": {
            "description": "Returned if the request takes longer than 10 seconds or is interrupted."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-user"
            ]
          },
          {}
        ],
        "tags": [
          "Users"
        ],
        "deprecated": false,
        "summary": "Get all users default",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/users/search": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return.",
            "format": "int32",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":false},{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5\",\"key\":\"\",\"accountId\":\"5b10ac8d82e05b22cc7d4ef5\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=32&s=32\"},\"displayName\":\"Emma Richards\",\"active\":false}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/User"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "403": {
            "description": "Returned if the user doesn't have the necessary permission."
          },
          "409": {
            "description": "Returned if the request takes longer than 10 seconds or is interrupted."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-user"
            ]
          },
          {}
        ],
        "tags": [
          "Users"
        ],
        "deprecated": false,
        "summary": "Get all users",
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/version": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Version"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/version/10000\",\"id\":\"10000\",\"description\":\"An excellent version\",\"name\":\"New Version 1\",\"archived\":false,\"released\":true,\"releaseDate\":\"2010-07-06\",\"userReleaseDate\":\"6/Jul/2010\",\"project\":\"PXA\",\"projectId\":10000}"
            },
            "schema": {
              "$ref": "#/definitions/Version"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  the project is not found.\n *  the user does not have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Project versions"
        ],
        "deprecated": false,
        "summary": "Create version",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      }
    },
    "/version/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the version.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the version to update `fixVersion` to when the field contains the deleted version. The replacement version must be in the same project as the version being deleted and cannot be the version being deleted.",
            "in": "query",
            "name": "moveFixIssuesTo",
            "type": "string"
          },
          {
            "description": "The ID of the version to update `affectedVersion` to when the field contains the deleted version. The replacement version must be in the same project as the version being deleted and cannot be the version being deleted.",
            "in": "query",
            "name": "moveAffectedIssuesTo",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the version is deleted."
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if:\n\n *  the authentication credentials are incorrect.\n *  the user does not have the required permissions."
          },
          "404": {
            "description": "Returned if the version is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Project versions"
        ],
        "deprecated": true,
        "summary": "Delete version",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the version.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Use [expand](#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `operations` Returns the list of operations available for this version.\n *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property represents the number of issues with a status other than *to do*, *in progress*, and *done*.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/version/10000\",\"id\":\"10000\",\"description\":\"An excellent version\",\"name\":\"New Version 1\",\"archived\":false,\"released\":true,\"releaseDate\":\"2010-07-06\",\"overdue\":true,\"userReleaseDate\":\"6/Jul/2010\",\"projectId\":10000}"
            },
            "schema": {
              "$ref": "#/definitions/Version"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if the version is not found or the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Project versions"
        ],
        "deprecated": false,
        "summary": "Get version",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the version.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/version/10000\",\"id\":\"10000\",\"description\":\"An excellent version\",\"name\":\"New Version 1\",\"archived\":false,\"released\":true,\"releaseDate\":\"2010-07-06\",\"userReleaseDate\":\"6/Jul/2010\",\"project\":\"PXA\",\"projectId\":10000}"
            },
            "schema": {
              "$ref": "#/definitions/Version"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  the request is invalid.\n *  the user does not have the required permissions."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          },
          "404": {
            "description": "Returned if the version is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Project versions"
        ],
        "deprecated": false,
        "summary": "Update version",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      }
    },
    "/version/{id}/mergeto/{moveIssuesTo}": {
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the version to delete.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the version to merge into.",
            "in": "path",
            "name": "moveIssuesTo",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the version is deleted.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if:\n\n *  the authentication credentials are incorrect or missing.\n *  the user does not have the required permissions."
          },
          "404": {
            "description": "Returned if the version to be deleted or the version to merge to are not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Project versions"
        ],
        "deprecated": false,
        "summary": "Merge versions",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      }
    },
    "/version/{id}/move": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the version to be moved.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VersionMoveBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/version/10000\",\"id\":\"10000\",\"description\":\"An excellent version\",\"name\":\"New Version 1\",\"archived\":false,\"released\":true,\"releaseDate\":\"2010-07-06\",\"overdue\":true,\"userReleaseDate\":\"6/Jul/2010\",\"projectId\":10000}"
            },
            "schema": {
              "$ref": "#/definitions/Version"
            }
          },
          "400": {
            "description": "Returned if:\n\n *  no body parameters are provided.\n *  `after` and `position` are provided.\n *  `position` is invalid."
          },
          "401": {
            "description": "Returned if:\n\n *  the authentication credentials are incorrect or missing\n *  the user does not have the required commissions."
          },
          "404": {
            "description": "Returned if the version or move after version are not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Project versions"
        ],
        "deprecated": false,
        "summary": "Move version",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      }
    },
    "/version/{id}/relatedIssueCounts": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the version.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/version/10000\",\"issuesFixedCount\":23,\"issuesAffectedCount\":101,\"issueCountWithCustomFieldsShowingVersion\":54,\"customFieldUsage\":[{\"fieldName\":\"Field1\",\"customFieldId\":10000,\"issueCountWithVersionInCustomField\":2},{\"fieldName\":\"Field2\",\"customFieldId\":10010,\"issueCountWithVersionInCustomField\":3}]}"
            },
            "schema": {
              "$ref": "#/definitions/VersionIssueCounts"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect."
          },
          "404": {
            "description": "Returned if:\n\n *  the version is not found.\n *  the user does not have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Project versions"
        ],
        "deprecated": false,
        "summary": "Get version's related issues count",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/version/{id}/removeAndSwap": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the version.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteAndReplaceVersionBean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the version is deleted.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  the version to delete is not found.\n *  the user does not have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          },
          {}
        ],
        "tags": [
          "Project versions"
        ],
        "deprecated": false,
        "summary": "Delete and replace version",
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      }
    },
    "/version/{id}/unresolvedIssueCount": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the version.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"self\":\"https://your-domain.atlassian.net/rest/api/3/version/10000\",\"issuesUnresolvedCount\":23,\"issuesCount\":30}"
            },
            "schema": {
              "$ref": "#/definitions/VersionUnresolvedIssuesCount"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "404": {
            "description": "Returned if:\n\n *  the version is not found.\n *  the user does not have the required permissions."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          },
          {}
        ],
        "tags": [
          "Project versions"
        ],
        "deprecated": false,
        "summary": "Get version's unresolved issues count",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/webhook": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContainerForWebhookIDs"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if the list of webhook IDs is missing.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "403": {
            "description": "Returned if the caller is not a Connect app.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "deprecated": false,
        "summary": "Delete webhooks by ID",
        "x-atlassian-connect-scope": "READ"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 100,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":2,\"startAt\":0,\"total\":100,\"isLast\":false,\"values\":[{\"id\":10000,\"jqlFilter\":\"project = PRJ\",\"events\":[\"jira:issue_updated\",\"jira:issue_created\"],\"expirationDate\":\"2019-06-01T12:42:30.000+0000\"},{\"id\":10001,\"jqlFilter\":\"issuetype = Bug\",\"events\":[\"jira:issue_created\"],\"expirationDate\":\"2019-06-01T12:42:30.000+0000\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanWebhook"
            }
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "403": {
            "description": "Returned if the caller is not a Connect app.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "deprecated": false,
        "summary": "Get dynamic webhooks for app",
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebhookRegistrationDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"webhookRegistrationResult\":[{\"createdWebhookId\":1000},{\"errors\":[\"The clause watchCount is unsupported\"]},{\"createdWebhookId\":1001}]}"
            },
            "schema": {
              "$ref": "#/definitions/ContainerForRegisteredWebhooks"
            }
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "403": {
            "description": "Returned if the caller is not a Connect app.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "deprecated": false,
        "summary": "Register dynamic webhooks",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/webhook/failed": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The maximum number of webhooks to return per page. If obeying the maxResults directive would result in records with the same failure time being split across pages, the directive is ignored and all records with the same failure time included on the page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "description": "The time after which any webhook failure must have occurred for the record to be returned, expressed as milliseconds since the UNIX epoch.",
            "format": "int64",
            "in": "query",
            "name": "after",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"values\":[{\"id\":\"1\",\"body\":\"{\\\"data\\\":\\\"webhook data\\\"}\",\"url\":\"https://example.com\",\"failureTime\":1573118132000},{\"id\":\"2\",\"url\":\"https://example.com\",\"failureTime\":1573540473480}],\"maxResults\":100,\"next\":\"https://your-domain.atlassian.net/rest/api/3/webhook/failed?failedAfter=1573540473480&maxResults=100\"}"
            },
            "schema": {
              "$ref": "#/definitions/FailedWebhooks"
            }
          },
          "400": {
            "description": "400 response",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "403": {
            "description": "Returned if the caller is not a Connect app.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "deprecated": false,
        "summary": "Get failed webhooks",
        "x-atlassian-connect-scope": "READ",
        "x-experimental": true
      }
    },
    "/webhook/refresh": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContainerForWebhookIDs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"expirationDate\":\"2019-06-01T12:42:30.000+0000\"}"
            },
            "schema": {
              "$ref": "#/definitions/WebhooksExpirationDate"
            }
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "403": {
            "description": "Returned if the caller is not a Connect app.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Webhooks"
        ],
        "deprecated": false,
        "summary": "Extend webhook life",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/workflow": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The name of the workflow to be returned. Only one workflow can be specified.",
            "in": "query",
            "name": "workflowName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"name\":\"classic workflow\",\"description\":\"A classic Jira workflow\",\"lastModifiedDate\":\"01-01-2011\",\"lastModifiedUser\":\"admin\",\"lastModifiedUserAccountId\":\"5b10a2844c20165700ede21g\",\"steps\":5,\"default\":true}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/DeprecatedWorkflow"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflows"
        ],
        "deprecated": true,
        "summary": "Get all workflows",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/workflow/rule/config": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "The types of the transition rules to return.",
            "in": "query",
            "items": {
              "enum": [
                "postfunction",
                "condition",
                "validator"
              ],
              "type": "string"
            },
            "name": "types",
            "required": true,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "The transition rule class keys, as defined in the Connect app descriptor, of the transition rules to return.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "keys",
            "type": "array",
            "uniqueItems": true
          },
          {
            "description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts `transition`, which, for each rule, returns information about the transition the rule is assigned to.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":10,\"startAt\":0,\"total\":1,\"isLast\":true,\"values\":[{\"workflowId\":{\"name\":\"My Workflow name\",\"draft\":false},\"postFunctions\":[{\"id\":\"b4d6cbdc-59f5-11e9-8647-d663bd873d93\",\"key\":\"postfunction-key\",\"configuration\":{\"value\":\"{ \\\"color\\\": \\\"red\\\" }\"},\"transition\":{\"id\":1,\"name\":\"Open\"}}],\"conditions\":[{\"id\":\"d663bd873d93-59f5-11e9-8647-b4d6cbdc\",\"key\":\"condition-key\",\"configuration\":{\"value\":\"{ \\\"size\\\": \\\"medium\\\" }\"},\"transition\":{\"id\":1,\"name\":\"Open\"}}],\"validators\":[{\"id\":\"11e9-59f5-b4d6cbdc-8647-d663bd873d93\",\"key\":\"validator-key\",\"configuration\":{\"value\":\"\\\"{ \\\\\\\"shape\\\\\\\": \\\\\\\"square\\\\\\\" }\\\"\"},\"transition\":{\"id\":1,\"name\":\"Open\"}}]}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanWorkflowTransitionRules"
            }
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "403": {
            "description": "Returned if the caller is not a Connect app.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "404": {
            "description": "Returned if the any transition rule type is not supported."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Workflow transition rules"
        ],
        "deprecated": false,
        "summary": "Get workflow transition rule configurations",
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkflowTransitionRulesUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"updateResults\":[{\"workflowId\":{\"name\":\"Workflow with one rule not updated\",\"draft\":false},\"ruleUpdateErrors\":{\"example-rule-id\":[\"The rule with this id does not exist: example-rule-id\"]},\"updateErrors\":[]},{\"workflowId\":{\"name\":\"Workflow with all rules successfully updated\",\"draft\":true},\"ruleUpdateErrors\":{},\"updateErrors\":[]},{\"workflowId\":{\"name\":\"Non-existing workflow\",\"draft\":false},\"ruleUpdateErrors\":{},\"updateErrors\":[\"Workflow not found: WorkflowIdBean{name=Non-existing workflow, draft=false}\"]}]}"
            },
            "schema": {
              "$ref": "#/definitions/WorkflowTransitionRulesUpdateErrors"
            }
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          },
          "403": {
            "description": "Returned if the caller is not a Connect app.",
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Workflow transition rules"
        ],
        "deprecated": false,
        "summary": "Update workflow transition rule configurations",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/workflow/search": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "The name of a workflow to return.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "workflowName",
            "type": "array",
            "uniqueItems": true
          },
          {
            "description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `transitions` For each workflow, returns information about the transitions inside the workflow.\n *  `transitions.rules` For each workflow transition, returns information about its rules. Transitions are included automatically if this expand is requested.\n *  `statuses` For each workflow, returns information about the statuses inside the workflow.\n *  `statuses.properties` For each workflow status, returns information about its properties. Statuses are included automatically if this expand is requested.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":1,\"startAt\":0,\"total\":5,\"isLast\":false,\"values\":[{\"id\":{\"name\":\"SCRUM Workflow\"},\"description\":\"A workflow used for Software projects in the SCRUM methodology\",\"transitions\":[{\"id\":\"5\",\"name\":\"In Progress\",\"description\":\"Start working on the issue.\",\"from\":[\"10\",\"13\"],\"to\":\"14\",\"type\":\"directed\",\"screen\":{\"id\":\"10000\"},\"rules\":{\"conditions\":[{\"type\":\"PermissionCondition\",\"configuration\":{\"permissionKey\":\"WORK_ON_ISSUES\"}}],\"validators\":[{\"type\":\"FieldRequiredValidator\",\"configuration\":{\"ignoreContext\":true,\"errorMessage\":\"A custom error message\",\"fields\":[\"description\",\"assignee\"]}}],\"postFunctions\":[{\"type\":\"UpdateIssueStatusFunction\"},{\"type\":\"GenerateChangeHistoryFunction\"},{\"type\":\"FireIssueEventFunction\"}]}}],\"statuses\":[{\"id\":\"3\",\"name\":\"In Progress\",\"properties\":{\"issueEditable\":false}}]}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanWorkflow"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission.",
            "examples": {
              "application/json": "{\"errorMessages\":[\"Only Jira administrators can access workflows.\"],\"errors\":{}}"
            },
            "schema": {
              "$ref": "#/definitions/ErrorCollection"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          }
        ],
        "tags": [
          "Workflows"
        ],
        "deprecated": false,
        "summary": "Get workflows paginated",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/workflow/transitions/{transitionId}/properties": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the transition. To get the ID, view the workflow in text mode in the Jira admin settings. The ID is shown next to the transition.",
            "format": "int64",
            "in": "path",
            "name": "transitionId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The name of the transition property to delete, also known as the name of the property.",
            "in": "query",
            "name": "key",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workflow that the transition belongs to.",
            "in": "query",
            "name": "workflowName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The workflow status. Set to `live` for inactive workflows or `draft` for draft workflows. Active workflows cannot be edited.",
            "enum": [
              "live",
              "draft"
            ],
            "in": "query",
            "name": "workflowMode",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response"
          },
          "304": {
            "description": "Returned if no changes were made by the request. For example, trying to delete a property that cannot be found."
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the workflow transition is not found."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Workflow transition properties"
        ],
        "deprecated": false,
        "summary": "Delete workflow transition property",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the transition. To get the ID, view the workflow in text mode in the Jira administration console. The ID is shown next to the transition.",
            "format": "int64",
            "in": "path",
            "name": "transitionId",
            "required": true,
            "type": "integer"
          },
          {
            "default": false,
            "description": "Some properties with keys that have the *jira.* prefix are reserved, which means they are not editable. To include these properties in the results, set this parameter to *true*.",
            "in": "query",
            "name": "includeReservedKeys",
            "type": "boolean"
          },
          {
            "description": "The key of the property being returned, also known as the name of the property. If this parameter is not specified, all properties on the transition are returned.",
            "in": "query",
            "name": "key",
            "type": "string"
          },
          {
            "description": "The name of the workflow that the transition belongs to.",
            "in": "query",
            "name": "workflowName",
            "required": true,
            "type": "string"
          },
          {
            "default": "live",
            "description": "The workflow status. Set to *live* for active and inactive workflows, or *draft* for draft workflows.",
            "enum": [
              "live",
              "draft"
            ],
            "in": "query",
            "name": "workflowMode",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "examples": {
              "application/json": "[{\"key\":\"jira.i18n.title\",\"value\":\"some.title\",\"id\":\"jira.i18n.title\"},{\"key\":\"jira.permission\",\"value\":\"createissue\",\"id\":\"jira.permission\"}]"
            },
            "schema": {
              "$ref": "#/definitions/WorkflowTransitionProperty"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have admin permission"
          },
          "404": {
            "description": "Returned if the workflow transition or property is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow transition properties"
        ],
        "deprecated": false,
        "summary": "Get workflow transition properties",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the transition. To get the ID, view the workflow in text mode in the Jira admin settings. The ID is shown next to the transition.",
            "format": "int64",
            "in": "path",
            "name": "transitionId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The key of the property being added, also known as the name of the property. Set this to the same value as the `key` defined in the request body.",
            "in": "query",
            "name": "key",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workflow that the transition belongs to.",
            "in": "query",
            "name": "workflowName",
            "required": true,
            "type": "string"
          },
          {
            "default": "live",
            "description": "The workflow status. Set to *live* for inactive workflows or *draft* for draft workflows. Active workflows cannot be edited.",
            "enum": [
              "live",
              "draft"
            ],
            "in": "query",
            "name": "workflowMode",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkflowTransitionProperty"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "examples": {
              "application/json": "{\"key\":\"jira.i18n.title\",\"value\":\"some.title\",\"id\":\"jira.i18n.title\"}"
            },
            "schema": {
              "$ref": "#/definitions/WorkflowTransitionProperty"
            }
          },
          "400": {
            "description": "Returned if a workflow property with the same key is present on the transition."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the workflow transition is not found."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Workflow transition properties"
        ],
        "deprecated": false,
        "summary": "Create workflow transition property",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the transition. To get the ID, view the workflow in text mode in the Jira admin settings. The ID is shown next to the transition.",
            "format": "int64",
            "in": "path",
            "name": "transitionId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The key of the property being updated, also known as the name of the property. Set this to the same value as the `key` defined in the request body.",
            "in": "query",
            "name": "key",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workflow that the transition belongs to.",
            "in": "query",
            "name": "workflowName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The workflow status. Set to `live` for inactive workflows or `draft` for draft workflows. Active workflows cannot be edited.",
            "enum": [
              "live",
              "draft"
            ],
            "in": "query",
            "name": "workflowMode",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkflowTransitionProperty"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "examples": {
              "application/json": "{\"key\":\"jira.i18n.title\",\"value\":\"some.title\",\"id\":\"jira.i18n.title\"}"
            },
            "schema": {
              "$ref": "#/definitions/WorkflowTransitionProperty"
            }
          },
          "304": {
            "description": "Returned if no changes were made by the request. For example, attempting to update a property with its current value."
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the workflow transition is not found."
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Workflow transition properties"
        ],
        "deprecated": false,
        "summary": "Update workflow transition property",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/workflowscheme": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The index of the first item to return in a page of results (page offset).",
            "format": "int64",
            "in": "query",
            "name": "startAt",
            "type": "integer"
          },
          {
            "default": 50,
            "description": "The maximum number of items to return per page.",
            "format": "int32",
            "in": "query",
            "name": "maxResults",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"maxResults\":50,\"startAt\":0,\"total\":2,\"isLast\":true,\"values\":[{\"id\":101010,\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"jira\",\"issueTypeMappings\":{\"10000\":\"scrum workflow\",\"10001\":\"builds workflow\"},\"draft\":false,\"self\":\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\"},{\"id\":101011,\"name\":\"Another example workflow scheme\",\"description\":\"The description of the another example workflow scheme.\",\"defaultWorkflow\":\"jira\",\"issueTypeMappings\":{\"10000\":\"scrum workflow\",\"10001\":\"builds workflow\"},\"draft\":false,\"self\":\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101011\"}]}"
            },
            "schema": {
              "$ref": "#/definitions/PageBeanWorkflowScheme"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow schemes"
        ],
        "deprecated": false,
        "summary": "Get all workflow schemes",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkflowScheme"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":101010,\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"jira\",\"issueTypeMappings\":{\"10000\":\"scrum workflow\",\"10001\":\"builds workflow\"},\"draft\":false,\"self\":\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\"}"
            },
            "schema": {
              "$ref": "#/definitions/WorkflowScheme"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow schemes"
        ],
        "deprecated": false,
        "summary": "Create workflow scheme",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/workflowscheme/project": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "collectionFormat": "multi",
            "description": "The ID of a project to return the workflow schemes for. To include multiple projects, provide an ampersand-Jim: oneseparated list. For example, `projectId=10000&projectId=10001`.",
            "in": "query",
            "items": {
              "example": 10010,
              "format": "int64",
              "type": "integer"
            },
            "maxItems": 100,
            "minItems": 1,
            "name": "projectId",
            "required": true,
            "type": "array",
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"values\":[{\"projectIds\":[\"10010\",\"10020\"],\"workflowScheme\":{\"id\":101010,\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"jira\",\"issueTypeMappings\":{\"10000\":\"scrum workflow\",\"10001\":\"builds workflow\"},\"self\":\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\"}}]}"
            },
            "schema": {
              "$ref": "#/definitions/ContainerOfWorkflowSchemeAssociations"
            }
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "examples": {
              "application/json": "{\"errorMessages\":[],\"errors\":{\"projectId\":\"The projectId query param is required.\"}}"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission.",
            "examples": {
              "application/json": "{\"errorMessages\":[\"Only Jira administrators can access workflow scheme associations.\"],\"errors\":{}}"
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow scheme project associations"
        ],
        "deprecated": false,
        "summary": "Get workflow scheme project associations",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/workflowscheme/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme. Find this ID by editing the desired workflow scheme in Jira. The ID is shown in the URL as `schemeId`. For example, *schemeId=10301*.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if the scheme is active."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the workflow scheme is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow schemes"
        ],
        "deprecated": false,
        "summary": "Delete workflow scheme",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme. Find this ID by editing the desired workflow scheme in Jira. The ID is shown in the URL as `schemeId`. For example, *schemeId=10301*.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": false,
            "description": "Returns the workflow scheme's draft rather than scheme itself, if set to true. If the workflow scheme does not have a draft, then the workflow scheme is returned.",
            "in": "query",
            "name": "returnDraftIfExists",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":101010,\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"jira\",\"issueTypeMappings\":{\"10000\":\"scrum workflow\",\"10001\":\"builds workflow\"},\"draft\":false,\"self\":\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\"}"
            },
            "schema": {
              "$ref": "#/definitions/WorkflowScheme"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the workflow scheme is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow schemes"
        ],
        "deprecated": false,
        "summary": "Get workflow scheme",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme. Find this ID by editing the desired workflow scheme in Jira. The ID is shown in the URL as `schemeId`. For example, *schemeId=10301*.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkflowScheme"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":101010,\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"jira\",\"issueTypeMappings\":{\"10000\":\"scrum workflow\",\"10001\":\"builds workflow\"},\"draft\":false,\"self\":\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\"}"
            },
            "schema": {
              "$ref": "#/definitions/WorkflowScheme"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the workflow scheme is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow schemes"
        ],
        "deprecated": false,
        "summary": "Update workflow scheme",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/workflowscheme/{id}/createdraft": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the active workflow scheme that the draft is created from.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":17218781,\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"scrum workflow\",\"issueTypeMappings\":{\"10000\":\"jira\",\"10001\":\"jira\"},\"originalDefaultWorkflow\":\"jira\",\"originalIssueTypeMappings\":{\"10001\":\"builds workflow\"},\"draft\":true,\"lastModifiedUser\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"emailAddress\":\"mia@example.com\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"groups\":{\"size\":3,\"items\":[]},\"applicationRoles\":{\"size\":1,\"items\":[]}},\"lastModified\":\"Today 6:38 PM\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft\"}"
            },
            "schema": {
              "$ref": "#/definitions/WorkflowScheme"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow scheme drafts"
        ],
        "deprecated": false,
        "summary": "Create draft workflow scheme",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/workflowscheme/{id}/default": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Set to true to create or update the draft of a workflow scheme and delete the mapping from the draft, when the workflow scheme cannot be edited. Defaults to `false`.",
            "in": "query",
            "name": "updateDraftIfNeeded",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":101010,\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"jira\",\"issueTypeMappings\":{\"10000\":\"scrum workflow\",\"10001\":\"builds workflow\"},\"draft\":false,\"self\":\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\"}"
            },
            "schema": {
              "$ref": "#/definitions/WorkflowScheme"
            }
          },
          "400": {
            "description": "Returned if the workflow scheme cannot be edited and `updateDraftIfNeeded` is not `true`."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the workflow scheme is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow schemes"
        ],
        "deprecated": false,
        "summary": "Delete default workflow",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": false,
            "description": "Set to `true` to return the default workflow for the workflow scheme's draft rather than scheme itself. If the workflow scheme does not have a draft, then the default workflow for the workflow scheme is returned.",
            "in": "query",
            "name": "returnDraftIfExists",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"workflow\":\"jira\"}"
            },
            "schema": {
              "$ref": "#/definitions/DefaultWorkflow"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the workflow scheme is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow schemes"
        ],
        "deprecated": false,
        "summary": "Get default workflow",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The new default workflow.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DefaultWorkflow"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":101010,\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"jira\",\"issueTypeMappings\":{\"10000\":\"scrum workflow\",\"10001\":\"builds workflow\"},\"draft\":false,\"self\":\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\"}"
            },
            "schema": {
              "$ref": "#/definitions/WorkflowScheme"
            }
          },
          "400": {
            "description": "Returned if the workflow scheme cannot be edited and `updateDraftIfNeeded` is not `true`."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the workflow scheme is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow schemes"
        ],
        "deprecated": false,
        "summary": "Update default workflow",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/workflowscheme/{id}/draft": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the active workflow scheme that the draft was created from.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission.."
          },
          "404": {
            "description": "Returned if:\n\n *  the original active workflow scheme is not found.\n *  the original active workflow scheme does not have a draft."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow scheme drafts"
        ],
        "deprecated": false,
        "summary": "Delete draft workflow scheme",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the active workflow scheme that the draft was created from.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":17218781,\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"scrum workflow\",\"issueTypeMappings\":{\"10000\":\"jira\",\"10001\":\"jira\"},\"originalDefaultWorkflow\":\"jira\",\"originalIssueTypeMappings\":{\"10001\":\"builds workflow\"},\"draft\":true,\"lastModifiedUser\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"emailAddress\":\"mia@example.com\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"groups\":{\"size\":3,\"items\":[]},\"applicationRoles\":{\"size\":1,\"items\":[]}},\"lastModified\":\"Today 6:38 PM\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft\"}"
            },
            "schema": {
              "$ref": "#/definitions/WorkflowScheme"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if:\n\n *  the original active workflow scheme is not found.\n *  the original active workflow scheme does not have a draft."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow scheme drafts"
        ],
        "deprecated": false,
        "summary": "Get draft workflow scheme",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the active workflow scheme that the draft was created from.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkflowScheme"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":17218781,\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"scrum workflow\",\"issueTypeMappings\":{\"10000\":\"jira\",\"10001\":\"jira\"},\"originalDefaultWorkflow\":\"jira\",\"originalIssueTypeMappings\":{\"10001\":\"builds workflow\"},\"draft\":true,\"lastModifiedUser\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"emailAddress\":\"mia@example.com\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"groups\":{\"size\":3,\"items\":[]},\"applicationRoles\":{\"size\":1,\"items\":[]}},\"lastModified\":\"Today 6:38 PM\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft\"}"
            },
            "schema": {
              "$ref": "#/definitions/WorkflowScheme"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if:\n\n *  the original active workflow scheme is not found.\n *  the original active workflow scheme does not have a draft."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow scheme drafts"
        ],
        "deprecated": false,
        "summary": "Update draft workflow scheme",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/workflowscheme/{id}/draft/default": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme that the draft belongs to.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":17218781,\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"scrum workflow\",\"issueTypeMappings\":{\"10000\":\"jira\",\"10001\":\"jira\"},\"originalDefaultWorkflow\":\"jira\",\"originalIssueTypeMappings\":{\"10001\":\"builds workflow\"},\"draft\":true,\"lastModifiedUser\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"emailAddress\":\"mia@example.com\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"groups\":{\"size\":3,\"items\":[]},\"applicationRoles\":{\"size\":1,\"items\":[]}},\"lastModified\":\"Today 6:38 PM\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft\"}"
            },
            "schema": {
              "$ref": "#/definitions/WorkflowScheme"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow scheme does not have a draft."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow scheme drafts"
        ],
        "deprecated": false,
        "summary": "Delete draft default workflow",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme that the draft belongs to.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"workflow\":\"jira\"}"
            },
            "schema": {
              "$ref": "#/definitions/DefaultWorkflow"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission.."
          },
          "404": {
            "description": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow scheme does not have a draft."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow scheme drafts"
        ],
        "deprecated": false,
        "summary": "Get draft default workflow",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme that the draft belongs to.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The object for the new default workflow.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DefaultWorkflow"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":17218781,\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"scrum workflow\",\"issueTypeMappings\":{\"10000\":\"jira\",\"10001\":\"jira\"},\"originalDefaultWorkflow\":\"jira\",\"originalIssueTypeMappings\":{\"10001\":\"builds workflow\"},\"draft\":true,\"lastModifiedUser\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"emailAddress\":\"mia@example.com\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"groups\":{\"size\":3,\"items\":[]},\"applicationRoles\":{\"size\":1,\"items\":[]}},\"lastModified\":\"Today 6:38 PM\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft\"}"
            },
            "schema": {
              "$ref": "#/definitions/WorkflowScheme"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow scheme does not have a draft."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow scheme drafts"
        ],
        "deprecated": false,
        "summary": "Update draft default workflow",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/workflowscheme/{id}/draft/issuetype/{issueType}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme that the draft belongs to.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The ID of the issue type.",
            "in": "path",
            "name": "issueType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":17218781,\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"scrum workflow\",\"issueTypeMappings\":{\"10000\":\"jira\",\"10001\":\"jira\"},\"originalDefaultWorkflow\":\"jira\",\"originalIssueTypeMappings\":{\"10001\":\"builds workflow\"},\"draft\":true,\"lastModifiedUser\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"emailAddress\":\"mia@example.com\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"groups\":{\"size\":3,\"items\":[]},\"applicationRoles\":{\"size\":1,\"items\":[]}},\"lastModified\":\"Today 6:38 PM\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft\"}"
            },
            "schema": {
              "$ref": "#/definitions/WorkflowScheme"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the workflow scheme or issue type is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow scheme drafts"
        ],
        "deprecated": false,
        "summary": "Delete workflow for issue type in draft workflow scheme",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme that the draft belongs to.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The ID of the issue type.",
            "in": "path",
            "name": "issueType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"issueType\":\"10000\",\"workflow\":\"jira\"}"
            },
            "schema": {
              "$ref": "#/definitions/IssueTypeWorkflowMapping"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the workflow scheme or issue type is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow scheme drafts"
        ],
        "deprecated": false,
        "summary": "Get workflow for issue type in draft workflow scheme",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme that the draft belongs to.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The ID of the issue type.",
            "in": "path",
            "name": "issueType",
            "required": true,
            "type": "string"
          },
          {
            "description": "The issue type-project mapping.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueTypeWorkflowMapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":17218781,\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"scrum workflow\",\"issueTypeMappings\":{\"10000\":\"jira\",\"10001\":\"jira\"},\"originalDefaultWorkflow\":\"jira\",\"originalIssueTypeMappings\":{\"10001\":\"builds workflow\"},\"draft\":true,\"lastModifiedUser\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"name\":\"\",\"emailAddress\":\"mia@example.com\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\",\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\",\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\",\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"},\"displayName\":\"Mia Krystof\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"groups\":{\"size\":3,\"items\":[]},\"applicationRoles\":{\"size\":1,\"items\":[]}},\"lastModified\":\"Today 6:38 PM\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft\"}"
            },
            "schema": {
              "$ref": "#/definitions/WorkflowScheme"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the workflow scheme or issue type is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow scheme drafts"
        ],
        "deprecated": false,
        "summary": "Set workflow for issue type in draft workflow scheme",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/workflowscheme/{id}/draft/workflow": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme that the draft belongs to.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The name of the workflow.",
            "in": "query",
            "name": "workflowName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow scheme does not have a draft.\n *  The workflow is not found.\n *  The workflow is not specified."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow scheme drafts"
        ],
        "deprecated": false,
        "summary": "Delete issue types for workflow in draft workflow scheme",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme that the draft belongs to.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The name of a workflow in the scheme. Limits the results to the workflow-issue type mapping for the specified workflow.",
            "in": "query",
            "name": "workflowName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"workflow\":\"jira\",\"issueTypes\":[\"10000\",\"10001\"],\"defaultMapping\":false}"
            },
            "schema": {
              "$ref": "#/definitions/IssueTypesWorkflowMapping"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if either the workflow scheme or workflow (if specified) is not found. session."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow scheme drafts"
        ],
        "deprecated": false,
        "summary": "Get issue types for workflows in draft workflow scheme",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme that the draft belongs to.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The name of the workflow.",
            "in": "query",
            "name": "workflowName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueTypesWorkflowMapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":101010,\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"jira\",\"issueTypeMappings\":{\"10000\":\"scrum workflow\",\"10001\":\"builds workflow\"},\"draft\":false,\"self\":\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\"}"
            },
            "schema": {
              "$ref": "#/definitions/WorkflowScheme"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow scheme does not have a draft.\n *  The workflow is not found.\n *  The workflow is not specified."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow scheme drafts"
        ],
        "deprecated": false,
        "summary": "Set issue types for workflow in workflow scheme",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/workflowscheme/{id}/issuetype/{issueType}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The ID of the issue type.",
            "in": "path",
            "name": "issueType",
            "required": true,
            "type": "string"
          },
          {
            "description": "Set to true to create or update the draft of a workflow scheme and update the mapping in the draft, when the workflow scheme cannot be edited. Defaults to `false`.",
            "in": "query",
            "name": "updateDraftIfNeeded",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":101010,\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"jira\",\"issueTypeMappings\":{\"10000\":\"scrum workflow\",\"10001\":\"builds workflow\"},\"draft\":false,\"self\":\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\"}"
            },
            "schema": {
              "$ref": "#/definitions/WorkflowScheme"
            }
          },
          "400": {
            "description": "Returned if the workflow cannot be edited and `updateDraftIfNeeded` is false."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the workflow scheme or issue type is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow schemes"
        ],
        "deprecated": false,
        "summary": "Delete workflow for issue type in workflow scheme",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The ID of the issue type.",
            "in": "path",
            "name": "issueType",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "Returns the mapping from the workflow scheme's draft rather than the workflow scheme, if set to true. If no draft exists, the mapping from the workflow scheme is returned.",
            "in": "query",
            "name": "returnDraftIfExists",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"issueType\":\"10000\",\"workflow\":\"jira\"}"
            },
            "schema": {
              "$ref": "#/definitions/IssueTypeWorkflowMapping"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the workflow scheme or issue type is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow schemes"
        ],
        "deprecated": false,
        "summary": "Get workflow for issue type in workflow scheme",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The ID of the issue type.",
            "in": "path",
            "name": "issueType",
            "required": true,
            "type": "string"
          },
          {
            "description": "The issue type-project mapping.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueTypeWorkflowMapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":101010,\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"jira\",\"issueTypeMappings\":{\"10000\":\"scrum workflow\",\"10001\":\"builds workflow\"},\"draft\":false,\"self\":\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\"}"
            },
            "schema": {
              "$ref": "#/definitions/WorkflowScheme"
            }
          },
          "400": {
            "description": "Returned if the workflow cannot be edited and `updateDraftIfNeeded` is false."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if the workflow scheme or issue type is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow schemes"
        ],
        "deprecated": false,
        "summary": "Set workflow for issue type in workflow scheme",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/workflowscheme/{id}/workflow": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The name of the workflow.",
            "in": "query",
            "name": "workflowName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Set to true to create or update the draft of a workflow scheme and delete the mapping from the draft, when the workflow scheme cannot be edited. Defaults to `false`.",
            "in": "query",
            "name": "updateDraftIfNeeded",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if the workflow cannot be edited and `updateDraftIfNeeded` is not true."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow is not found.\n *  The workflow is not specified."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow schemes"
        ],
        "deprecated": false,
        "summary": "Delete issue types for workflow in workflow scheme",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The name of a workflow in the scheme. Limits the results to the workflow-issue type mapping for the specified workflow.",
            "in": "query",
            "name": "workflowName",
            "type": "string"
          },
          {
            "default": false,
            "description": "Returns the mapping from the workflow scheme's draft rather than the workflow scheme, if set to true. If no draft exists, the mapping from the workflow scheme is returned.",
            "in": "query",
            "name": "returnDraftIfExists",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"workflow\":\"jira\",\"issueTypes\":[\"10000\",\"10001\"],\"defaultMapping\":false}"
            },
            "schema": {
              "$ref": "#/definitions/IssueTypesWorkflowMapping"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if either the workflow scheme or workflow is not found."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow schemes"
        ],
        "deprecated": false,
        "summary": "Get issue types for workflows in workflow scheme",
        "x-atlassian-connect-scope": "ADMIN"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The ID of the workflow scheme.",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The name of the workflow.",
            "in": "query",
            "name": "workflowName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueTypesWorkflowMapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"id\":101010,\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"jira\",\"issueTypeMappings\":{\"10000\":\"scrum workflow\",\"10001\":\"builds workflow\"},\"draft\":false,\"self\":\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\"}"
            },
            "schema": {
              "$ref": "#/definitions/WorkflowScheme"
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "description": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow is not found.\n *  The workflow is not specified."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-configuration"
            ]
          }
        ],
        "tags": [
          "Workflow schemes"
        ],
        "deprecated": false,
        "summary": "Set issue types for workflow in workflow scheme",
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/worklog/deleted": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The date and time, as a UNIX timestamp in milliseconds, after which deleted worklogs are returned.",
            "format": "int64",
            "in": "query",
            "name": "since",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"values\":[{\"worklogId\":103,\"updatedTime\":1438013671562,\"properties\":[]},{\"worklogId\":104,\"updatedTime\":1438013672165,\"properties\":[]},{\"worklogId\":105,\"updatedTime\":1438013693136,\"properties\":[]}],\"since\":1438013671562,\"until\":1438013693136,\"self\":\"https://your-domain.atlassian.net/api/~ver~/worklog/deleted?since=1438013671562\",\"nextPage\":\"https://your-domain.atlassian.net/api/~ver~/worklog/deleted?since=1438013693136\",\"lastPage\":true}"
            },
            "schema": {
              "$ref": "#/definitions/ChangedWorklogs"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue worklogs"
        ],
        "deprecated": false,
        "summary": "Get IDs of deleted worklogs",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/worklog/list": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": "",
            "description": "Use [expand](#expansion) to include additional information about worklogs in the response. This parameter accepts `properties` that returns the properties of each worklog.",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "description": "A JSON object containing a list of worklog IDs.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorklogIdsRequestBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2020-06-15T03:55:41.972+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2020-06-15T03:55:41.972+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}]"
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/Worklog"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Returned if the request contains more than 1000 worklog IDs or is empty."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue worklogs"
        ],
        "deprecated": false,
        "summary": "Get worklogs",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/worklog/updated": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "default": 0,
            "description": "The date and time, as a UNIX timestamp in milliseconds, after which updated worklogs are returned.",
            "format": "int64",
            "in": "query",
            "name": "since",
            "type": "integer"
          },
          {
            "default": "",
            "description": "Use [expand](#expansion) to include additional information about worklogs in the response. This parameter accepts `properties` that returns the properties of each worklog.",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": "{\"values\":[{\"worklogId\":103,\"updatedTime\":1438013671562,\"properties\":[]},{\"worklogId\":104,\"updatedTime\":1438013672165,\"properties\":[]},{\"worklogId\":105,\"updatedTime\":1438013693136,\"properties\":[]}],\"since\":1438013671562,\"until\":1438013693136,\"self\":\"https://your-domain.atlassian.net/api/~ver~/worklog/updated?since=1438013671562\",\"nextPage\":\"https://your-domain.atlassian.net/api/~ver~/worklog/updated?since=1438013693136\",\"lastPage\":true}"
            },
            "schema": {
              "$ref": "#/definitions/ChangedWorklogs"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "tags": [
          "Issue worklogs"
        ],
        "deprecated": false,
        "summary": "Get IDs of updated worklogs",
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/atlassian-connect/1/addons/{addonKey}/properties": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The key of the app, as defined in its descriptor.",
            "in": "path",
            "name": "addonKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": {
                "keys": [
                  {
                    "key": "propertyKey",
                    "self": "https://your-domain.atlassian.net/jira/rest/atlassian-connect/1/addon/example.app.key/properties/propertyKey"
                  }
                ]
              }
            },
            "schema": {
              "$ref": "#/definitions/PropertyKeys"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing.",
            "examples": {
              "application/json": {
                "message": "Access to this resource must be authenticated as an app.",
                "statusCode": 401
              }
            },
            "schema": {
              "$ref": "#/definitions/OperationMessage"
            }
          }
        },
        "tags": [
          "App properties"
        ],
        "deprecated": false,
        "summary": "Get app properties",
        "x-atlassian-connect-scope": "NONE"
      }
    },
    "/rest/atlassian-connect/1/addons/{addonKey}/properties/{propertyKey}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The key of the app, as defined in its descriptor.",
            "in": "path",
            "name": "addonKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The key of the property.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if the property key is longer than 127 characters.",
            "examples": {
              "application/json": {
                "message": "The property key cannot be longer than 127 characters.",
                "statusCode": 400
              }
            },
            "schema": {
              "$ref": "#/definitions/OperationMessage"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing.",
            "examples": {
              "application/json": {
                "message": "Access to this resource must be authenticated as an app.",
                "statusCode": 401
              }
            },
            "schema": {
              "$ref": "#/definitions/OperationMessage"
            }
          },
          "404": {
            "description": "Returned if the property is not found or doesn't belong to the app.",
            "examples": {
              "application/json": {
                "message": "Property with key not found.",
                "statusCode": 404
              }
            },
            "schema": {
              "$ref": "#/definitions/OperationMessage"
            }
          }
        },
        "tags": [
          "App properties"
        ],
        "deprecated": false,
        "summary": "Delete app property",
        "x-atlassian-connect-scope": "NONE"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The key of the app, as defined in its descriptor.",
            "in": "path",
            "name": "addonKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The key of the property.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "examples": {
              "application/json": {
                "key": "propertyKey",
                "self": "https://your-domain.atlassian.net/jira/rest/atlassian-connect/1/addon/example.app.key/properties/propertyKey",
                "value": "propertyValue"
              }
            },
            "schema": {
              "$ref": "#/definitions/EntityProperty"
            }
          },
          "400": {
            "description": "Returned if the property key is longer than 127 characters.",
            "examples": {
              "application/json": {
                "message": "The property key cannot be longer than 127 characters.",
                "statusCode": 400
              }
            },
            "schema": {
              "$ref": "#/definitions/OperationMessage"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing.",
            "examples": {
              "application/json": {
                "message": "Access to this resource must be authenticated as an app.",
                "statusCode": 401
              }
            },
            "schema": {
              "$ref": "#/definitions/OperationMessage"
            }
          },
          "404": {
            "description": "Returned if the property is not found or doesn't belong to the app.",
            "examples": {
              "application/json": {
                "message": "Property with key not found.",
                "statusCode": 404
              }
            },
            "schema": {
              "$ref": "#/definitions/OperationMessage"
            }
          }
        },
        "tags": [
          "App properties"
        ],
        "deprecated": false,
        "summary": "Get app property",
        "x-atlassian-connect-scope": "NONE"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "description": "The key of the app, as defined in its descriptor.",
            "in": "path",
            "name": "addonKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "The key of the property.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the property is updated.",
            "examples": {
              "application/json": {
                "message": "Property updated.",
                "statusCode": 200
              }
            },
            "schema": {
              "$ref": "#/definitions/OperationMessage"
            }
          },
          "201": {
            "description": "Returned is the property is created.",
            "examples": {
              "application/json": {
                "message": "Property created.",
                "statusCode": 201
              }
            },
            "schema": {
              "$ref": "#/definitions/OperationMessage"
            }
          },
          "400": {
            "description": "Returned if:\n  * the property key is longer than 127 characters.\n  * the value is not valid JSON.\n  * the value is longer than 32768 characters.",
            "examples": {
              "application/json": {
                "message": "The property key cannot be longer than 127 characters.",
                "statusCode": 400
              }
            },
            "schema": {
              "$ref": "#/definitions/OperationMessage"
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing.",
            "examples": {
              "application/json": {
                "message": "Access to this resource must be authenticated as an app.",
                "statusCode": 401
              }
            },
            "schema": {
              "$ref": "#/definitions/OperationMessage"
            }
          }
        },
        "tags": [
          "App properties"
        ],
        "deprecated": false,
        "summary": "Set app property",
        "x-atlassian-connect-scope": "NONE"
      }
    },
    "/rest/atlassian-connect/1/app/module/dynamic": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "collectionFormat": "multi",
            "description": "The key of the module to remove. To include multiple module keys, provide multiple copies of this parameter.\nFor example, `moduleKey=dynamic-attachment-entity-property&moduleKey=dynamic-select-field`.\nNonexistent keys are ignored.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "moduleKey",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request is successful."
          },
          "401": {
            "description": "Returned if the call is not from a Connect app.",
            "examples": {
              "application/json": {
                "message": "The request is not from a Connect app."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "tags": [
          "Dynamic modules"
        ],
        "deprecated": false,
        "summary": "Remove modules",
        "x-atlassian-connect-scope": "NONE",
        "x-experimental": true
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful.",
            "schema": {
              "$ref": "#/definitions/ConnectModules"
            }
          },
          "401": {
            "description": "Returned if the call is not from a Connect app.",
            "examples": {
              "application/json": {
                "message": "The request is not from a Connect app."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "tags": [
          "Dynamic modules"
        ],
        "deprecated": false,
        "summary": "Get modules",
        "x-atlassian-connect-scope": "NONE",
        "x-experimental": true
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cloudid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectModules"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the request is successful."
          },
          "400": {
            "description": "Returned if:\n* any of the provided modules is invalid. For example, required properties are missing.\n* any of the modules conflict with registered dynamic modules or modules defined in the app descriptor. For example, there are duplicate keys.\n\nDetails of the issues encountered are included in the error message.",
            "examples": {
              "application/json": {
                "message": "Installation failed. The app com.example.app.key has duplicate module keys: [module-key]. Please contact the app vendor."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Returned if the call is not from a Connect app.",
            "examples": {
              "application/json": {
                "message": "The request is not from a Connect app."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "tags": [
          "Dynamic modules"
        ],
        "deprecated": false,
        "summary": "Register modules",
        "x-atlassian-connect-scope": "NONE",
        "x-experimental": true
      }
    }
  },
  "definitions": {
    "ActorInputBean": {
      "additionalProperties": false,
      "properties": {
        "group": {
          "description": "The name of the group to add as a default actor. This parameter accepts a comma-separated list. For example, `\"group\":[\"project-admin\", \"jira-developers\"]`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "user": {
          "description": "The account IDs of the users to add as default actors. This parameter accepts a comma-separated list. For example, `\"user\":[\"5b10a2844c20165700ede21g\", \"5b109f2e9729b51b54dc274d\"]`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ActorsMap": {
      "additionalProperties": false,
      "properties": {
        "group": {
          "description": "The name of the group to add.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "user": {
          "description": "The user account ID of the user to add.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AddFieldBean": {
      "additionalProperties": false,
      "properties": {
        "fieldId": {
          "description": "The ID of the field to add.",
          "type": "string"
        }
      },
      "required": [
        "fieldId"
      ],
      "type": "object"
    },
    "AddGroupBean": {
      "additionalProperties": true,
      "properties": {
        "name": {
          "description": "The name of the group.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "Application": {
      "additionalProperties": true,
      "description": "The application the linked item is in.",
      "properties": {
        "name": {
          "description": "The name of the application. Used in conjunction with the (remote) object icon title to display a tooltip for the link's icon. The tooltip takes the format \"\\[application name\\] icon title\". Blank items are excluded from the tooltip title. If both items are blank, the icon tooltop displays as \"Web Link\". Grouping and sorting of links may place links without an application name last.",
          "type": "string"
        },
        "type": {
          "description": "The name-spaced type of the application, used by registered rendering apps.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ApplicationProperty": {
      "additionalProperties": false,
      "description": "Details of an application property.",
      "properties": {
        "allowedValues": {
          "description": "The allowed values, if applicable.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "defaultValue": {
          "description": "The default value of the application property.",
          "type": "string"
        },
        "desc": {
          "description": "The description of the application property.",
          "type": "string"
        },
        "example": {
          "type": "string"
        },
        "id": {
          "description": "The ID of the application property. The ID and key are the same.",
          "type": "string"
        },
        "key": {
          "description": "The key of the application property. The ID and key are the same.",
          "type": "string"
        },
        "name": {
          "description": "The name of the application property.",
          "type": "string"
        },
        "type": {
          "description": "The data type of the application property.",
          "type": "string"
        },
        "value": {
          "description": "The new value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ApplicationRole": {
      "additionalProperties": false,
      "description": "Details of an application role.",
      "properties": {
        "defaultGroups": {
          "description": "The groups that are granted default access for this application role.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "defined": {
          "description": "Deprecated.",
          "type": "boolean"
        },
        "groups": {
          "description": "The groups associated with the application role.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "hasUnlimitedSeats": {
          "type": "boolean"
        },
        "key": {
          "description": "The key of the application role.",
          "type": "string"
        },
        "name": {
          "description": "The display name of the application role.",
          "type": "string"
        },
        "numberOfSeats": {
          "description": "The maximum count of users on your license.",
          "format": "int32",
          "type": "integer"
        },
        "platform": {
          "description": "Indicates if the application role belongs to Jira platform (`jira-core`).",
          "type": "boolean"
        },
        "remainingSeats": {
          "description": "The count of users remaining on your license.",
          "format": "int32",
          "type": "integer"
        },
        "selectedByDefault": {
          "description": "Determines whether this application role should be selected by default on user creation.",
          "type": "boolean"
        },
        "userCount": {
          "description": "The number of users counting against your license.",
          "format": "int32",
          "type": "integer"
        },
        "userCountDescription": {
          "description": "The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssociatedItemBean": {
      "additionalProperties": false,
      "description": "Details of an item associated with the changed record.",
      "properties": {
        "id": {
          "description": "The ID of the associated record.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the associated record.",
          "readOnly": true,
          "type": "string"
        },
        "parentId": {
          "description": "The ID of the associated parent record.",
          "readOnly": true,
          "type": "string"
        },
        "parentName": {
          "description": "The name of the associated parent record.",
          "readOnly": true,
          "type": "string"
        },
        "typeName": {
          "description": "The type of the associated record.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Attachment": {
      "additionalProperties": true,
      "description": "Details about an attachment.",
      "properties": {
        "author": {
          "allOf": [
            {
              "$ref": "#/definitions/UserDetails"
            }
          ],
          "description": "Details of the user who added the attachment.",
          "readOnly": true
        },
        "content": {
          "description": "The content of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The datetime the attachment was created.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "filename": {
          "description": "The file name of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the attachment details response.",
          "readOnly": true,
          "type": "string"
        },
        "size": {
          "description": "The size of the attachment.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "thumbnail": {
          "description": "The URL of a thumbnail representing the attachment.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "AttachmentArchiveEntry": {
      "additionalProperties": false,
      "properties": {
        "abbreviatedName": {
          "type": "string"
        },
        "entryIndex": {
          "format": "int64",
          "type": "integer"
        },
        "mediaType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "AttachmentArchiveImpl": {
      "additionalProperties": false,
      "properties": {
        "entries": {
          "description": "The list of the items included in the archive.",
          "items": {
            "$ref": "#/definitions/AttachmentArchiveEntry"
          },
          "type": "array"
        },
        "totalEntryCount": {
          "description": "The number of items in the archive.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "AttachmentArchiveItemReadable": {
      "additionalProperties": false,
      "description": "Metadata for an item in an attachment archive.",
      "properties": {
        "index": {
          "description": "The position of the item within the archive.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "label": {
          "description": "The label for the archive item.",
          "readOnly": true,
          "type": "string"
        },
        "mediaType": {
          "description": "The MIME type of the archive item.",
          "readOnly": true,
          "type": "string"
        },
        "path": {
          "description": "The path of the archive item.",
          "readOnly": true,
          "type": "string"
        },
        "size": {
          "description": "The size of the archive item.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "AttachmentArchiveMetadataReadable": {
      "additionalProperties": false,
      "description": "Metadata for an archive (for example a zip) and its contents.",
      "properties": {
        "entries": {
          "description": "The list of the items included in the archive.",
          "items": {
            "$ref": "#/definitions/AttachmentArchiveItemReadable"
          },
          "readOnly": true,
          "type": "array"
        },
        "id": {
          "description": "The ID of the attachment.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "mediaType": {
          "description": "The MIME type of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the archive file.",
          "readOnly": true,
          "type": "string"
        },
        "totalEntryCount": {
          "description": "The number of items included in the archive.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "AttachmentMetadata": {
      "additionalProperties": false,
      "description": "Metadata for an issue attachment.",
      "properties": {
        "author": {
          "allOf": [
            {
              "$ref": "#/definitions/User"
            }
          ],
          "description": "Details of the user who attached the file.",
          "readOnly": true
        },
        "content": {
          "description": "The URL of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The datetime the attachment was created.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "filename": {
          "description": "The name of the attachment file.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the attachment.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "mimeType": {
          "description": "The MIME type of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "readOnly": true
          },
          "description": "Additional properties of the attachment.",
          "readOnly": true,
          "type": "object"
        },
        "self": {
          "description": "The URL of the attachment metadata details.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "size": {
          "description": "The size of the attachment.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "thumbnail": {
          "description": "The URL of a thumbnail representing the attachment.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "attachment"
      }
    },
    "AttachmentSettings": {
      "additionalProperties": false,
      "description": "Details of the instance's attachment settings.",
      "properties": {
        "enabled": {
          "description": "Whether the ability to add attachments is enabled.",
          "readOnly": true,
          "type": "boolean"
        },
        "uploadLimit": {
          "description": "The maximum size of attachments permitted, in bytes.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "AuditRecordBean": {
      "additionalProperties": false,
      "description": "An audit record.",
      "properties": {
        "associatedItems": {
          "description": "The list of items associated with the changed record.",
          "items": {
            "$ref": "#/definitions/AssociatedItemBean"
          },
          "readOnly": true,
          "type": "array"
        },
        "authorKey": {
          "description": "Deprecated, use `authorAccountId` instead. The key of the user who created the audit record.",
          "readOnly": true,
          "type": "string"
        },
        "category": {
          "description": "The category of the audit record. For a list of these categories, see the help article [Auditing in Jira applications](https://confluence.atlassian.com/x/noXKM).",
          "readOnly": true,
          "type": "string"
        },
        "changedValues": {
          "description": "The list of values changed in the record event.",
          "items": {
            "$ref": "#/definitions/ChangedValueBean"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The date and time on which the audit record was created.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the audit record.",
          "readOnly": true,
          "type": "string"
        },
        "eventSource": {
          "description": "The event the audit record originated from.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the audit record.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "objectItem": {
          "$ref": "#/definitions/AssociatedItemBean"
        },
        "remoteAddress": {
          "description": "The URL of the computer where the creation of the audit record was initiated.",
          "readOnly": true,
          "type": "string"
        },
        "summary": {
          "description": "The summary of the audit record.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuditRecords": {
      "additionalProperties": false,
      "description": "Container for a list of audit records.",
      "properties": {
        "limit": {
          "description": "The requested or default limit on the number of audit items to be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "offset": {
          "description": "The number of audit items skipped before the first item in this list.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "records": {
          "description": "The list of audit items.",
          "items": {
            "$ref": "#/definitions/AuditRecordBean"
          },
          "readOnly": true,
          "type": "array"
        },
        "total": {
          "description": "The total number of audit items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "AutoCompleteSuggestion": {
      "additionalProperties": false,
      "description": "A field auto-complete suggestion.",
      "properties": {
        "displayName": {
          "description": "The display name of a suggested item. If `fieldValue` or `predicateValue` are provided, the matching text is highlighted with the HTML bold tag.",
          "type": "string"
        },
        "value": {
          "description": "The value of a suggested item.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AutoCompleteSuggestions": {
      "additionalProperties": false,
      "description": "The results from a JQL query.",
      "properties": {
        "results": {
          "description": "The list of suggested item.",
          "items": {
            "$ref": "#/definitions/AutoCompleteSuggestion"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Avatar": {
      "additionalProperties": false,
      "description": "Details of an avatar.",
      "properties": {
        "fileName": {
          "description": "The file name of the avatar icon. Returned for system avatars.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the avatar.",
          "type": "string"
        },
        "isDeletable": {
          "description": "Whether the avatar can be deleted.",
          "readOnly": true,
          "type": "boolean"
        },
        "isSelected": {
          "description": "Whether the avatar is used in Jira. For example, shown as a project's avatar.",
          "readOnly": true,
          "type": "boolean"
        },
        "isSystemAvatar": {
          "description": "Whether the avatar is a system avatar.",
          "readOnly": true,
          "type": "boolean"
        },
        "owner": {
          "description": "The owner of the avatar. For a system avatar the owner is null (and nothing is returned). For non-system avatars this is the appropriate identifier, such as the ID for a project or the account ID for a user.",
          "readOnly": true,
          "type": "string"
        },
        "urls": {
          "additionalProperties": {
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "description": "The list of avatar icon URLs.",
          "readOnly": true,
          "type": "object"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "AvatarUrlsBean": {
      "additionalProperties": false,
      "properties": {
        "16x16": {
          "description": "The URL of the item's 16x16 pixel avatar.",
          "format": "uri",
          "type": "string"
        },
        "24x24": {
          "description": "The URL of the item's 24x24 pixel avatar.",
          "format": "uri",
          "type": "string"
        },
        "32x32": {
          "description": "The URL of the item's 32x32 pixel avatar.",
          "format": "uri",
          "type": "string"
        },
        "48x48": {
          "description": "The URL of the item's 48x48 pixel avatar.",
          "format": "uri",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Avatars": {
      "additionalProperties": false,
      "description": "Details about system and custom avatars.",
      "properties": {
        "custom": {
          "description": "Custom avatars list.",
          "items": {
            "$ref": "#/definitions/Avatar"
          },
          "readOnly": true,
          "type": "array"
        },
        "system": {
          "description": "System avatars list.",
          "items": {
            "$ref": "#/definitions/Avatar"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "BulkCreateCustomFieldOptionRequest": {
      "additionalProperties": false,
      "description": "Details of options to create for a custom field.",
      "properties": {
        "options": {
          "description": "Details of options to create.",
          "items": {
            "$ref": "#/definitions/CustomFieldOptionValue"
          },
          "type": "array"
        }
      },
      "type": "object",
      "writeOnly": true
    },
    "BulkIssuePropertyUpdateRequest": {
      "additionalProperties": false,
      "description": "Bulk issue property update request details.",
      "properties": {
        "filter": {
          "allOf": [
            {
              "$ref": "#/definitions/IssueFilterForBulkPropertySet"
            }
          ],
          "description": "The bulk operation filter."
        },
        "value": {
          "description": "The value of the property. The value must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters."
        }
      },
      "type": "object"
    },
    "BulkOperationErrorResult": {
      "additionalProperties": false,
      "properties": {
        "elementErrors": {
          "$ref": "#/definitions/ErrorCollection"
        },
        "failedElementNumber": {
          "format": "int32",
          "type": "integer"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BulkPermissionGrants": {
      "additionalProperties": false,
      "description": "Details of global and project permissions granted to the user.",
      "properties": {
        "globalPermissions": {
          "description": "List of permissions granted to the user.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "projectPermissions": {
          "description": "List of project permissions and the projects and issues those permissions provide access to.",
          "items": {
            "$ref": "#/definitions/BulkProjectPermissionGrants"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "required": [
        "globalPermissions",
        "projectPermissions"
      ],
      "type": "object"
    },
    "BulkPermissionsRequestBean": {
      "additionalProperties": false,
      "description": "Details of global permissions to look up and project permissions with associated projects and issues to look up.",
      "properties": {
        "accountId": {
          "description": "The account ID of a user.",
          "type": "string"
        },
        "globalPermissions": {
          "description": "Global permissions to look up.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "projectPermissions": {
          "description": "Project permissions with associated projects and issues to look up.",
          "items": {
            "$ref": "#/definitions/BulkProjectPermissions"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "type": "object"
    },
    "BulkProjectPermissionGrants": {
      "additionalProperties": false,
      "description": "List of project permissions and the projects and issues those permissions grant access to.",
      "properties": {
        "issues": {
          "description": "IDs of the issues the user has the permission for.",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": true
        },
        "permission": {
          "description": "A project permission,",
          "type": "string"
        },
        "projects": {
          "description": "IDs of the projects the user has the permission for.",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "required": [
        "issues",
        "permission",
        "projects"
      ],
      "type": "object"
    },
    "BulkProjectPermissions": {
      "additionalProperties": false,
      "description": "Details of project permissions and associated issues and projects to look up.",
      "properties": {
        "issues": {
          "description": "List of issue IDs.",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": true
        },
        "permissions": {
          "description": "List of project permissions.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "projects": {
          "description": "List of project IDs.",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "required": [
        "permissions"
      ],
      "type": "object"
    },
    "ChangeDetails": {
      "additionalProperties": false,
      "description": "A change item.",
      "properties": {
        "field": {
          "description": "The name of the field changed.",
          "readOnly": true,
          "type": "string"
        },
        "fieldId": {
          "description": "The ID of the field changed.",
          "readOnly": true,
          "type": "string"
        },
        "fieldtype": {
          "description": "The type of the field changed.",
          "readOnly": true,
          "type": "string"
        },
        "from": {
          "description": "The details of the original value.",
          "readOnly": true,
          "type": "string"
        },
        "fromString": {
          "description": "The details of the original value as a string.",
          "readOnly": true,
          "type": "string"
        },
        "to": {
          "description": "The details of the new value.",
          "readOnly": true,
          "type": "string"
        },
        "toString": {
          "description": "The details of the new value as a string.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ChangedValueBean": {
      "additionalProperties": false,
      "description": "Details of names changed in the record event.",
      "properties": {
        "changedFrom": {
          "description": "The value of the field before the change.",
          "readOnly": true,
          "type": "string"
        },
        "changedTo": {
          "description": "The value of the field after the change.",
          "readOnly": true,
          "type": "string"
        },
        "fieldName": {
          "description": "The name of the field changed.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ChangedWorklog": {
      "additionalProperties": false,
      "description": "Details of a changed worklog.",
      "properties": {
        "properties": {
          "description": "Details of properties associated with the change.",
          "items": {
            "$ref": "#/definitions/EntityProperty"
          },
          "readOnly": true,
          "type": "array"
        },
        "updatedTime": {
          "description": "The datetime of the change.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "worklogId": {
          "description": "The ID of the worklog.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ChangedWorklogs": {
      "additionalProperties": false,
      "description": "List of changed worklogs.",
      "properties": {
        "lastPage": {
          "type": "boolean"
        },
        "nextPage": {
          "description": "The URL of the next list of changed worklogs.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of this changed worklogs list.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "since": {
          "description": "The datetime of the first worklog item in the list.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "until": {
          "description": "The datetime of the last worklog item in the list.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "Changed worklog list.",
          "items": {
            "$ref": "#/definitions/ChangedWorklog"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "Changelog": {
      "additionalProperties": false,
      "description": "A changelog.",
      "properties": {
        "author": {
          "allOf": [
            {
              "$ref": "#/definitions/UserDetails"
            }
          ],
          "description": "The user who made the change.",
          "readOnly": true
        },
        "created": {
          "description": "The date on which the change took place.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "historyMetadata": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoryMetadata"
            }
          ],
          "description": "The history metadata associated with the changed.",
          "readOnly": true
        },
        "id": {
          "description": "The ID of the changelog.",
          "readOnly": true,
          "type": "string"
        },
        "items": {
          "description": "The list of items changed.",
          "items": {
            "$ref": "#/definitions/ChangeDetails"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "ColumnItem": {
      "additionalProperties": false,
      "description": "Details of an issue navigator column item.",
      "properties": {
        "label": {
          "description": "The issue navigator column label.",
          "type": "string"
        },
        "value": {
          "description": "The issue navigator column value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Comment": {
      "additionalProperties": true,
      "description": "A comment.",
      "properties": {
        "author": {
          "allOf": [
            {
              "$ref": "#/definitions/UserDetails"
            }
          ],
          "description": "The ID of the user who created the comment.",
          "readOnly": true
        },
        "body": {
          "description": "The comment text in [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/)."
        },
        "created": {
          "description": "The date and time at which the comment was created.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the comment.",
          "readOnly": true,
          "type": "string"
        },
        "jsdPublic": {
          "description": "Whether the comment is visible in Jira Service Desk. Defaults to true when comments are created in the Jira Cloud Platform. This includes when the site doesn't use Jira Service Desk or the project isn't a Jira Service Desk project and, therefore, there is no Jira Service Desk for the issue to be visible on. To create a comment with its visibility in Jira Service Desk set to false, use the Jira Service Desk REST API [Create request comment](https://developer.atlassian.com/cloud/jira/service-desk/rest/#api-rest-servicedeskapi-request-issueIdOrKey-comment-post) operation.",
          "readOnly": true,
          "type": "boolean"
        },
        "properties": {
          "description": "A list of comment properties. Optional on create and update.",
          "items": {
            "$ref": "#/definitions/EntityProperty"
          },
          "type": "array"
        },
        "renderedBody": {
          "description": "The rendered version of the comment.",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the comment.",
          "readOnly": true,
          "type": "string"
        },
        "updateAuthor": {
          "allOf": [
            {
              "$ref": "#/definitions/UserDetails"
            }
          ],
          "description": "The ID of the user who updated the comment last.",
          "readOnly": true
        },
        "updated": {
          "description": "The date and time at which the comment was updated last.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "visibility": {
          "allOf": [
            {
              "$ref": "#/definitions/Visibility"
            }
          ],
          "description": "The group or role to which this comment is visible. Optional on create and update."
        }
      },
      "type": "object"
    },
    "Component": {
      "additionalProperties": false,
      "description": "Details about a project component.",
      "properties": {
        "assignee": {
          "allOf": [
            {
              "$ref": "#/definitions/User"
            }
          ],
          "description": "The details of the user associated with `assigneeType`, if any. See `realAssignee` for details of the user assigned to issues created with this component.",
          "readOnly": true
        },
        "assigneeType": {
          "description": "The nominal user type used to determine the assignee for issues created with this component. See `realAssigneeType` for details on how the type of the user, and hence the user, assigned to issues is determined. Can take the following values:\n\n *  `PROJECT_LEAD` the assignee to any issues created with this component is nominally the lead for the project the component is in.\n *  `COMPONENT_LEAD` the assignee to any issues created with this component is nominally the lead for the component.\n *  `UNASSIGNED` an assignee is not set for issues created with this component.\n *  `PROJECT_DEFAULT` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in.\n\nDefault value: `PROJECT_DEFAULT`.  \nOptional when creating or updating a component.",
          "enum": [
            "PROJECT_DEFAULT",
            "COMPONENT_LEAD",
            "PROJECT_LEAD",
            "UNASSIGNED"
          ],
          "type": "string"
        },
        "description": {
          "description": "The description for the component. Optional when creating or updating a component.",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for the component.",
          "readOnly": true,
          "type": "string"
        },
        "isAssigneeTypeValid": {
          "description": "Whether a user is associated with `assigneeType`. For example, if the `assigneeType` is set to `COMPONENT_LEAD` but the component lead is not set, then `false` is returned.",
          "readOnly": true,
          "type": "boolean"
        },
        "lead": {
          "allOf": [
            {
              "$ref": "#/definitions/User"
            }
          ],
          "description": "The user details for the component's lead user.",
          "readOnly": true
        },
        "leadAccountId": {
          "description": "The accountId of the component's lead user. The accountId uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
          "maxLength": 128,
          "type": "string"
        },
        "leadUserName": {
          "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
          "type": "string"
        },
        "name": {
          "description": "The unique name for the component in the project. Required when creating a component. Optional when updating a component. The maximum length is 255 characters.",
          "type": "string"
        },
        "project": {
          "description": "The key of the project the component is assigned to. Required when creating a component. Can't be updated.",
          "type": "string"
        },
        "projectId": {
          "description": "The ID of the project the component is assigned to.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "realAssignee": {
          "allOf": [
            {
              "$ref": "#/definitions/User"
            }
          ],
          "description": "The user assigned to issues created with this component, when `assigneeType` does not identify a valid assignee.",
          "readOnly": true
        },
        "realAssigneeType": {
          "description": "The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the `assigneeType`. For example, `assigneeType` is set to `COMPONENT_LEAD` but no component lead is set. This property is set to one of the following values:\n\n *  `PROJECT_LEAD` when `assigneeType` is `PROJECT_LEAD` and the project lead has permission to be assigned issues in the project that the component is in.\n *  `COMPONENT_LEAD` when `assignee`Type is `COMPONENT_LEAD` and the component lead has permission to be assigned issues in the project that the component is in.\n *  `UNASSIGNED` when `assigneeType` is `UNASSIGNED` and Jira is configured to allow unassigned issues.\n *  `PROJECT_DEFAULT` when none of the preceding cases are true.",
          "enum": [
            "PROJECT_DEFAULT",
            "COMPONENT_LEAD",
            "PROJECT_LEAD",
            "UNASSIGNED"
          ],
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the component.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "component"
      }
    },
    "ComponentIssuesCount": {
      "additionalProperties": false,
      "description": "Count of issues assigned to a component.",
      "properties": {
        "issueCount": {
          "description": "The count of issues assigned to a component.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "self": {
          "description": "The URL for this count of issues for a component.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "component"
      }
    },
    "ComponentWithIssueCount": {
      "additionalProperties": false,
      "description": "Details about a component with a count of the issues it contains.",
      "properties": {
        "assignee": {
          "allOf": [
            {
              "$ref": "#/definitions/User"
            }
          ],
          "description": "The details of the user associated with `assigneeType`, if any. See `realAssignee` for details of the user assigned to issues created with this component."
        },
        "assigneeType": {
          "description": "The nominal user type used to determine the assignee for issues created with this component. See `realAssigneeType` for details on how the type of the user, and hence the user, assigned to issues is determined. Takes the following values:\n\n *  `PROJECT_LEAD` the assignee to any issues created with this component is nominally the lead for the project the component is in.\n *  `COMPONENT_LEAD` the assignee to any issues created with this component is nominally the lead for the component.\n *  `UNASSIGNED` an assignee is not set for issues created with this component.\n *  `PROJECT_DEFAULT` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in.",
          "enum": [
            "PROJECT_DEFAULT",
            "COMPONENT_LEAD",
            "PROJECT_LEAD",
            "UNASSIGNED"
          ],
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description for the component.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for the component.",
          "readOnly": true,
          "type": "string"
        },
        "isAssigneeTypeValid": {
          "description": "Whether a user is associated with `assigneeType`. For example, if the `assigneeType` is set to `COMPONENT_LEAD` but the component lead is not set, then `false` is returned.",
          "readOnly": true,
          "type": "boolean"
        },
        "issueCount": {
          "description": "Count of issues for the component.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "lead": {
          "allOf": [
            {
              "$ref": "#/definitions/User"
            }
          ],
          "description": "The user details for the component's lead user."
        },
        "name": {
          "description": "The name for the component.",
          "readOnly": true,
          "type": "string"
        },
        "project": {
          "description": "The key of the project to which the component is assigned.",
          "readOnly": true,
          "type": "string"
        },
        "projectId": {
          "description": "Not used.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "realAssignee": {
          "allOf": [
            {
              "$ref": "#/definitions/User"
            }
          ],
          "description": "The user assigned to issues created with this component, when `assigneeType` does not identify a valid assignee."
        },
        "realAssigneeType": {
          "description": "The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the `assigneeType`. For example, `assigneeType` is set to `COMPONENT_LEAD` but no component lead is set. This property is set to one of the following values:\n\n *  `PROJECT_LEAD` when `assigneeType` is `PROJECT_LEAD` and the project lead has permission to be assigned issues in the project that the component is in.\n *  `COMPONENT_LEAD` when `assignee`Type is `COMPONENT_LEAD` and the component lead has permission to be assigned issues in the project that the component is in.\n *  `UNASSIGNED` when `assigneeType` is `UNASSIGNED` and Jira is configured to allow unassigned issues.\n *  `PROJECT_DEFAULT` when none of the preceding cases are true.",
          "enum": [
            "PROJECT_DEFAULT",
            "COMPONENT_LEAD",
            "PROJECT_LEAD",
            "UNASSIGNED"
          ],
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL for this count of the issues contained in the component.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CompoundClause": {
      "description": "A JQL query clause that consists of nested clauses. For example, `(labels in (urgent, blocker) OR lastCommentedBy = currentUser()). Note that, where nesting is not defined, the parser nests JQL clauses based on the operator precedence. For example, \"A OR B AND C\" is parsed as \"(A OR B) AND C\". See Setting the precedence of operators for more information about precedence in JQL queries.`",
      "properties": {
        "clauses": {
          "description": "The list of nested clauses.",
          "items": {
            "$ref": "#/definitions/JqlQueryClause"
          },
          "type": "array"
        },
        "operator": {
          "description": "The operator between the clauses.",
          "enum": [
            "and",
            "or",
            "not"
          ],
          "type": "string"
        }
      },
      "required": [
        "clauses",
        "operator"
      ],
      "type": "object"
    },
    "Configuration": {
      "additionalProperties": false,
      "description": "Details about the configuration of Jira.",
      "properties": {
        "attachmentsEnabled": {
          "description": "Whether the ability to add attachments to issues is enabled.",
          "readOnly": true,
          "type": "boolean"
        },
        "issueLinkingEnabled": {
          "description": "Whether the ability to link issues is enabled.",
          "readOnly": true,
          "type": "boolean"
        },
        "subTasksEnabled": {
          "description": "Whether the ability to create subtasks for issues is enabled.",
          "readOnly": true,
          "type": "boolean"
        },
        "timeTrackingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/TimeTrackingConfiguration"
            }
          ],
          "description": "The configuration of time tracking.",
          "readOnly": true
        },
        "timeTrackingEnabled": {
          "description": "Whether the ability to track time is enabled. This property is deprecated.",
          "readOnly": true,
          "type": "boolean"
        },
        "unassignedIssuesAllowed": {
          "description": "Whether the ability to create unassigned issues is enabled. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.",
          "readOnly": true,
          "type": "boolean"
        },
        "votingEnabled": {
          "description": "Whether the ability for users to vote on issues is enabled. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.",
          "readOnly": true,
          "type": "boolean"
        },
        "watchingEnabled": {
          "description": "Whether the ability for users to watch issues is enabled. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ConnectModule": {
      "description": "A [Connect module](https://developer.atlassian.com/cloud/jira/platform/about-jira-modules/) in the same format as in the\n[app descriptor](https://developer.atlassian.com/cloud/jira/platform/app-descriptor/).",
      "example": {
        "description": {
          "value": "field with team"
        },
        "extractions": [
          {
            "name": "categoryName",
            "path": "category",
            "type": "text"
          }
        ],
        "key": "team-field",
        "name": {
          "value": "Team"
        },
        "type": "single_select"
      },
      "type": "object"
    },
    "ConnectModules": {
      "additionalProperties": {
        "description": "A list of modules by type.",
        "items": {
          "$ref": "#/definitions/ConnectModule"
        },
        "type": "array"
      },
      "description": "A list of app modules in the same format as the `modules` property in the\n[app descriptor](https://developer.atlassian.com/cloud/jira/platform/app-descriptor/).",
      "example": {
        "jiraEntityProperties": [
          {
            "entityType": "issue",
            "key": "dynamic-attachment-entity-property",
            "keyConfigurations": [
              {
                "extractions": [
                  {
                    "alias": "attachmentExtension",
                    "objectName": "extension",
                    "type": "text"
                  }
                ],
                "propertyKey": "attachment"
              }
            ],
            "name": {
              "value": "Attachment Index Document"
            }
          }
        ],
        "jiraIssueFields": [
          {
            "description": {
              "value": "A dynamically added single-select field"
            },
            "extractions": [
              {
                "name": "categoryName",
                "path": "category",
                "type": "text"
              }
            ],
            "key": "dynamic-select-field",
            "name": {
              "value": "Dynamic single select"
            },
            "type": "single_select"
          }
        ]
      },
      "type": "object"
    },
    "ConnectWorkflowTransitionRule": {
      "additionalProperties": false,
      "description": "A workflow transition rule.",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/RuleConfiguration"
        },
        "id": {
          "description": "The ID of the transition rule.",
          "type": "string"
        },
        "key": {
          "description": "The key of the rule, as defined in the Connect app descriptor.",
          "readOnly": true,
          "type": "string"
        },
        "transition": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkflowTransition"
            }
          ],
          "readOnly": true
        }
      },
      "required": [
        "id",
        "key"
      ],
      "type": "object"
    },
    "ContainerForRegisteredWebhooks": {
      "additionalProperties": false,
      "description": "Container for a list of registered webhooks. Webhook details are returned in the same order as the request.",
      "properties": {
        "webhookRegistrationResult": {
          "description": "A list of registered webhooks.",
          "items": {
            "$ref": "#/definitions/RegisteredWebhook"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ContainerForWebhookIDs": {
      "additionalProperties": false,
      "description": "Container for a list of webhook IDs.",
      "properties": {
        "webhookIds": {
          "description": "A list of webhook IDs.",
          "items": {
            "description": "A list of webhook IDs.",
            "format": "int64",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "required": [
        "webhookIds"
      ],
      "type": "object"
    },
    "ContainerOfWorkflowSchemeAssociations": {
      "additionalProperties": false,
      "description": "A container for a list of workflow schemes together with the projects they are associated with.",
      "properties": {
        "values": {
          "description": "A list of workflow schemes together with projects they are associated with.",
          "items": {
            "$ref": "#/definitions/WorkflowSchemeAssociations"
          },
          "type": "array"
        }
      },
      "required": [
        "values"
      ],
      "type": "object"
    },
    "Context": {
      "additionalProperties": false,
      "description": "A context.",
      "properties": {
        "id": {
          "description": "The ID of the context.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "The name of the context.",
          "readOnly": true,
          "type": "string"
        },
        "scope": {
          "allOf": [
            {
              "$ref": "#/definitions/Scope"
            }
          ],
          "description": "The scope of the context."
        }
      },
      "type": "object"
    },
    "ConvertedJQLQueries": {
      "additionalProperties": false,
      "description": "The converted JQL queries.",
      "properties": {
        "queriesWithUnknownUsers": {
          "description": "List of queries containing user information that could not be mapped to an existing user",
          "items": {
            "$ref": "#/definitions/JQLQueryWithUnknownUsers"
          },
          "type": "array"
        },
        "queryStrings": {
          "description": "The list of converted query strings with account IDs in place of user identifiers.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreateUpdateRoleRequestBean": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "description": "A description of the project role. Required when fully updating a project role. Optional when creating or partially updating a project role.",
          "type": "string"
        },
        "name": {
          "description": "The name of the project role. Must be unique. Cannot begin or end with whitespace. The maximum length is 255 characters. Required when creating a project role. Optional when partially updating a project role.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreatedIssue": {
      "additionalProperties": false,
      "description": "Details about a created issue or subtask.",
      "properties": {
        "id": {
          "description": "The ID of the created issue or subtask.",
          "readOnly": true,
          "type": "string"
        },
        "key": {
          "description": "The key of the created issue or subtask.",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the created issue or subtask.",
          "readOnly": true,
          "type": "string"
        },
        "transition": {
          "allOf": [
            {
              "$ref": "#/definitions/NestedResponse"
            }
          ],
          "description": "The response code and messages related to any requested transition.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "CreatedIssues": {
      "additionalProperties": false,
      "description": "Details about the issues created and the errors for requests that failed.",
      "properties": {
        "errors": {
          "description": "Error details for failed issue creation requests.",
          "items": {
            "$ref": "#/definitions/BulkOperationErrorResult"
          },
          "readOnly": true,
          "type": "array"
        },
        "issues": {
          "description": "Details of the issues created.",
          "items": {
            "$ref": "#/definitions/CreatedIssue"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "CustomFieldDefinitionJsonBean": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "description": "The description of the custom field, which is displayed in Jira.",
          "type": "string"
        },
        "name": {
          "description": "The name of the custom field, which is displayed in Jira. This is not the unique identifier.",
          "type": "string"
        },
        "searcherKey": {
          "description": "The searcher defines the way the field is searched in Jira. For example, *com.atlassian.jira.plugin.system.customfieldtypes:grouppickersearcher*.  \nThe search UI (basic search and JQL search) will display different operations and values for the field, based on the field searcher. You must specify a searcher that is valid for the field type, as listed below (abbreviated values shown):\n\n *  `cascadingselect`: `cascadingselectsearcher`\n *  `datepicker`: `daterange`\n *  `datetime`: `datetimerange`\n *  `float`: `exactnumber` or `numberrange`\n *  `grouppicker`: `grouppickersearcher`\n *  `importid`: `exactnumber` or `numberrange`\n *  `labels`: `labelsearcher`\n *  `multicheckboxes`: `multiselectsearcher`\n *  `multigrouppicker`: `multiselectsearcher`\n *  `multiselect`: `multiselectsearcher`\n *  `multiuserpicker`: `userpickergroupsearcher`\n *  `multiversion`: `versionsearcher`\n *  `project`: `projectsearcher`\n *  `radiobuttons`: `multiselectsearcher`\n *  `readonlyfield`: `textsearcher`\n *  `select`: `multiselectsearcher`\n *  `textarea`: `textsearcher`\n *  `textfield`: `textsearcher`\n *  `url`: `exacttextsearcher`\n *  `userpicker`: `userpickergroupsearcher`\n *  `version`: `versionsearcher`",
          "enum": [
            "com.atlassian.jira.plugin.system.customfieldtypes:cascadingselectsearcher",
            "com.atlassian.jira.plugin.system.customfieldtypes:daterange",
            "com.atlassian.jira.plugin.system.customfieldtypes:datetimerange",
            "com.atlassian.jira.plugin.system.customfieldtypes:exactnumber",
            "com.atlassian.jira.plugin.system.customfieldtypes:exacttextsearcher",
            "com.atlassian.jira.plugin.system.customfieldtypes:grouppickersearcher",
            "com.atlassian.jira.plugin.system.customfieldtypes:labelsearcher",
            "com.atlassian.jira.plugin.system.customfieldtypes:multiselectsearcher",
            "com.atlassian.jira.plugin.system.customfieldtypes:numberrange",
            "com.atlassian.jira.plugin.system.customfieldtypes:projectsearcher",
            "com.atlassian.jira.plugin.system.customfieldtypes:textsearcher",
            "com.atlassian.jira.plugin.system.customfieldtypes:userpickergroupsearcher",
            "com.atlassian.jira.plugin.system.customfieldtypes:versionsearcher"
          ],
          "type": "string"
        },
        "type": {
          "description": "The type of the custom field. For example, *com.atlassian.jira.plugin.system.customfieldtypes:grouppicker*.\n\n *  `cascadingselect`: Allows multiple values to be selected using two select lists\n *  `datepicker`: Stores a date using a picker control\n *  `datetime`: Stores a date with a time component\n *  `float`: Stores and validates a numeric (floating point) input\n *  `grouppicker`: Stores a user group using a picker control\n *  `importid`: A read-only field that stores the previous ID of the issue from the system that it was imported from\n *  `labels`: Stores labels\n *  `multicheckboxes`: Stores multiple values using checkboxes\n *  `multigrouppicker`: Stores multiple user groups using a picker control\n *  `multiselect`: Stores multiple values using a select list\n *  `multiuserpicker`: Stores multiple users using a picker control\n *  `multiversion`: Stores multiple versions from the versions available in a project using a picker control\n *  `project`: Stores a project from a list of projects that the user is permitted to view\n *  `radiobuttons`: Stores a value using radio buttons\n *  `readonlyfield`: Stores a read-only text value, which can only be populated via the API\n *  `select`: Stores a value from a configurable list of options\n *  `textarea`: Stores a long text string using a multiline text area\n *  `textfield`: Stores a text string using a single-line text box\n *  `url`: Stores a URL\n *  `userpicker`: Stores a user using a picker control\n *  `version`: Stores a version using a picker control",
          "enum": [
            "com.atlassian.jira.plugin.system.customfieldtypes:cascadingselect",
            "com.atlassian.jira.plugin.system.customfieldtypes:datepicker",
            "com.atlassian.jira.plugin.system.customfieldtypes:datetime",
            "com.atlassian.jira.plugin.system.customfieldtypes:float",
            "com.atlassian.jira.plugin.system.customfieldtypes:grouppicker",
            "com.atlassian.jira.plugin.system.customfieldtypes:importid",
            "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes",
            "com.atlassian.jira.plugin.system.customfieldtypes:multigrouppicker",
            "com.atlassian.jira.plugin.system.customfieldtypes:multiselect",
            "com.atlassian.jira.plugin.system.customfieldtypes:multiuserpicker",
            "com.atlassian.jira.plugin.system.customfieldtypes:multiversion",
            "com.atlassian.jira.plugin.system.customfieldtypes:project",
            "com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons",
            "com.atlassian.jira.plugin.system.customfieldtypes:readonlyfield",
            "com.atlassian.jira.plugin.system.customfieldtypes:select",
            "com.atlassian.jira.plugin.system.customfieldtypes:textarea",
            "com.atlassian.jira.plugin.system.customfieldtypes:textfield",
            "com.atlassian.jira.plugin.system.customfieldtypes:url",
            "com.atlassian.jira.plugin.system.customfieldtypes:userpicker",
            "com.atlassian.jira.plugin.system.customfieldtypes:version"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "searcherKey",
        "type"
      ],
      "type": "object"
    },
    "CustomFieldOption": {
      "additionalProperties": false,
      "description": "Details of a custom option for a field.",
      "properties": {
        "self": {
          "description": "The URL of these custom field option details.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "The value of the custom field option.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "customFieldOption"
      }
    },
    "CustomFieldOptionDetails": {
      "additionalProperties": false,
      "description": "Details of a custom field option and its cascading options.",
      "properties": {
        "cascadingOptions": {
          "description": "The cascading options.",
          "items": {
            "readOnly": true,
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "id": {
          "description": "The ID of the custom field option.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "value": {
          "description": "The value of the custom field option.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomFieldOptionValue": {
      "additionalProperties": false,
      "description": "Value of a custom field option and the values of its cascading options.",
      "properties": {
        "cascadingOptions": {
          "description": "The cascading options.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "value": {
          "description": "The value of the custom field option.",
          "maxLength": 255,
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object",
      "writeOnly": true
    },
    "CustomFieldReplacement": {
      "additionalProperties": false,
      "description": "Details about the replacement for a deleted version.",
      "properties": {
        "customFieldId": {
          "description": "The ID of the custom field in which to replace the version number.",
          "format": "int64",
          "type": "integer"
        },
        "moveTo": {
          "description": "The version number to use as a replacement for the deleted version.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Dashboard": {
      "additionalProperties": false,
      "description": "Details of a dashboard.",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "description": "The ID of the dashboard.",
          "readOnly": true,
          "type": "string"
        },
        "isFavourite": {
          "description": "Whether the dashboard is selected as a favorite by the user.",
          "readOnly": true,
          "type": "boolean"
        },
        "name": {
          "description": "The name of the dashboard.",
          "readOnly": true,
          "type": "string"
        },
        "owner": {
          "allOf": [
            {
              "$ref": "#/definitions/UserBean"
            }
          ],
          "description": "The owner of the dashboard.",
          "readOnly": true
        },
        "popularity": {
          "description": "The number of users who have this dashboard as a favorite.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "rank": {
          "description": "The rank of this dashboard.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "self": {
          "description": "The URL of these dashboard details.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "sharePermissions": {
          "description": "The details of any share permissions for the dashboard.",
          "items": {
            "$ref": "#/definitions/SharePermission"
          },
          "readOnly": true,
          "type": "array"
        },
        "view": {
          "description": "The URL of the dashboard.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "DashboardRequest": {
      "additionalProperties": false,
      "description": "Details of a dashboard.",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "description": "The name of the dashboard.",
          "readOnly": true,
          "type": "string"
        },
        "sharePermissions": {
          "description": "The details of any share permissions for the dashboard.",
          "items": {
            "$ref": "#/definitions/SharePermission"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "DefaultShareScope": {
      "additionalProperties": false,
      "description": "Details of the scope of the default sharing for new filters and dashboards.",
      "properties": {
        "scope": {
          "description": "The scope of the default sharing for new filters and dashboards:\n\n *  `AUTHENTICATED` Shared with all logged-in users.\n *  `GLOBAL` Shared with all logged-in users. This shows as `AUTHENTICATED` in the response.\n *  `PRIVATE` Not shared with any users.",
          "enum": [
            "GLOBAL",
            "AUTHENTICATED",
            "PRIVATE"
          ],
          "type": "string"
        }
      },
      "required": [
        "scope"
      ],
      "type": "object",
      "xml": {
        "name": "defaultShareScope"
      }
    },
    "DefaultWorkflow": {
      "additionalProperties": false,
      "description": "Details about the default workflow.",
      "properties": {
        "updateDraftIfNeeded": {
          "description": "Whether a draft workflow scheme is created or updated when updating an active workflow scheme. The draft is updated with the new default workflow. Defaults to `false`.",
          "type": "boolean"
        },
        "workflow": {
          "description": "The name of the workflow to set as the default workflow.",
          "type": "string"
        }
      },
      "required": [
        "workflow"
      ],
      "type": "object"
    },
    "DeleteAndReplaceVersionBean": {
      "additionalProperties": false,
      "properties": {
        "customFieldReplacementList": {
          "description": "An array of custom field IDs (`customFieldId`) and version IDs (`moveTo`) to update when the fields contain the deleted version.",
          "items": {
            "$ref": "#/definitions/CustomFieldReplacement"
          },
          "type": "array"
        },
        "moveAffectedIssuesTo": {
          "description": "The ID of the version to update `affectedVersion` to when the field contains the deleted version.",
          "format": "int64",
          "type": "integer"
        },
        "moveFixIssuesTo": {
          "description": "The ID of the version to update `fixVersion` to when the field contains the deleted version.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DeprecatedWorkflow": {
      "additionalProperties": false,
      "description": "Details about a workflow.",
      "properties": {
        "default": {
          "type": "boolean"
        },
        "description": {
          "description": "The description of the workflow.",
          "readOnly": true,
          "type": "string"
        },
        "lastModifiedDate": {
          "description": "The datetime the workflow was last modified.",
          "readOnly": true,
          "type": "string"
        },
        "lastModifiedUser": {
          "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
          "readOnly": true,
          "type": "string"
        },
        "lastModifiedUserAccountId": {
          "description": "The account ID of the user that last modified the workflow.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the workflow.",
          "readOnly": true,
          "type": "string"
        },
        "scope": {
          "allOf": [
            {
              "$ref": "#/definitions/Scope"
            }
          ],
          "description": "The scope where this workflow applies",
          "readOnly": true
        },
        "steps": {
          "description": "The number of steps included in the workflow.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "EntityProperty": {
      "additionalProperties": false,
      "description": "An entity property, for more information see [Entity properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).",
      "properties": {
        "key": {
          "description": "The key of the property. Required on create and update.",
          "type": "string"
        },
        "value": {
          "description": "The value of the property. Required on create and update."
        }
      },
      "type": "object"
    },
    "ErrorCollection": {
      "additionalProperties": false,
      "description": "Error messages from an operation.",
      "properties": {
        "errorMessages": {
          "description": "The list of error messages produced by this operation. For example, \"input parameter 'key' must be provided\"",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "errors": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The list of errors by parameter returned by the operation. For example,\"projectKey\": \"Project keys must start with an uppercase letter, followed by one or more uppercase alphanumeric characters.\"",
          "type": "object"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ErrorMessage": {
      "additionalProperties": false,
      "example": {
        "message": "The request is not from a Connect app."
      },
      "properties": {
        "message": {
          "description": "The error message.",
          "type": "string"
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    },
    "EventNotification": {
      "additionalProperties": false,
      "description": "Details about a notification associated with an event.",
      "properties": {
        "emailAddress": {
          "description": "The email address.",
          "type": "string"
        },
        "expand": {
          "description": "Expand options that include additional event notification details in the response.",
          "type": "string"
        },
        "field": {
          "allOf": [
            {
              "$ref": "#/definitions/FieldDetails"
            }
          ],
          "description": "The custom user or group field."
        },
        "group": {
          "allOf": [
            {
              "$ref": "#/definitions/GroupName"
            }
          ],
          "description": "The specified group."
        },
        "id": {
          "description": "The ID of the notification.",
          "format": "int64",
          "type": "integer"
        },
        "notificationType": {
          "description": "Identifies the recipients of the notification.",
          "enum": [
            "CurrentAssignee",
            "Reporter",
            "CurrentUser",
            "ProjectLead",
            "ComponentLead",
            "User",
            "Group",
            "ProjectRole",
            "EmailAddress",
            "AllWatchers",
            "UserCustomField",
            "GroupCustomField"
          ],
          "type": "string"
        },
        "parameter": {
          "description": "The value of the `notificationType`:\n\n *  `User` The `parameter` is the user account ID.\n *  `Group` The `parameter` is the group name.\n *  `ProjectRole` The `parameter` is the project role ID.\n *  `UserCustomField` The `parameter` is the ID of the custom field.\n *  `GroupCustomField` The `parameter` is the ID of the custom field.",
          "type": "string"
        },
        "projectRole": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectRole"
            }
          ],
          "description": "The specified project role."
        },
        "user": {
          "allOf": [
            {
              "$ref": "#/definitions/UserDetails"
            }
          ],
          "description": "The specified user."
        }
      },
      "type": "object"
    },
    "FailedWebhook": {
      "additionalProperties": false,
      "description": "Details about a failed webhook.",
      "properties": {
        "body": {
          "description": "The webhook body.",
          "type": "string"
        },
        "failureTime": {
          "description": "The time the webhook was added to the list of failed webhooks (that is, the time of the last failed retry).",
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "description": "The webhook ID, as sent in the `X-Atlassian-Webhook-Identifier` header with the webhook.",
          "type": "string"
        },
        "url": {
          "description": "The original webhook destination.",
          "type": "string"
        }
      },
      "required": [
        "failureTime",
        "id",
        "url"
      ],
      "type": "object"
    },
    "FailedWebhooks": {
      "additionalProperties": false,
      "description": "A page of failed webhooks.",
      "properties": {
        "maxResults": {
          "description": "The maximum number of items on the page. If the list of values is shorter than this number, then there are no more pages.",
          "format": "int32",
          "type": "integer"
        },
        "next": {
          "description": "The URL to the next page of results. Present only if the request returned at least one result.The next page may be empty at the time of receiving the response, but new failed webhooks may appear in time. You can save the URL to the next page and query for new results periodically (for example, every hour).",
          "format": "uri",
          "type": "string"
        },
        "values": {
          "description": "The list of webhooks.",
          "items": {
            "$ref": "#/definitions/FailedWebhook"
          },
          "type": "array"
        }
      },
      "required": [
        "maxResults",
        "values"
      ],
      "type": "object"
    },
    "Field": {
      "additionalProperties": false,
      "description": "Details of a field.",
      "properties": {
        "contextsCount": {
          "description": "Number of contexts where the field is used.",
          "format": "int64",
          "type": "integer"
        },
        "description": {
          "description": "The description of the field.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the field.",
          "type": "string"
        },
        "isLocked": {
          "description": "Whether the field is locked.",
          "type": "boolean"
        },
        "key": {
          "description": "The key of the field.",
          "type": "string"
        },
        "lastUsed": {
          "$ref": "#/definitions/FieldLastUsed"
        },
        "name": {
          "description": "The name of the field.",
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/JsonTypeBean"
        },
        "screensCount": {
          "description": "Number of screens where the field is used.",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "type": "object"
    },
    "FieldChangedClause": {
      "description": "A clause that asserts whether a field was changed. For example, `status CHANGED AFTER startOfMonth(-1M)`.See [CHANGED](https://confluence.atlassian.com/x/dgiiLQ#Advancedsearching-operatorsreference-CHANGEDCHANGED) for more information about the CHANGED operator.",
      "properties": {
        "field": {
          "$ref": "#/definitions/JqlQueryField"
        },
        "operator": {
          "description": "The operator applied to the field.",
          "enum": [
            "changed"
          ],
          "type": "string"
        },
        "predicates": {
          "description": "The list of time predicates.",
          "items": {
            "$ref": "#/definitions/JqlQueryClauseTimePredicate"
          },
          "type": "array"
        }
      },
      "required": [
        "field",
        "operator",
        "predicates"
      ],
      "type": "object"
    },
    "FieldConfiguration": {
      "additionalProperties": false,
      "description": "Details of a field configuration.",
      "properties": {
        "description": {
          "description": "The description of the field configuration.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the field configuration.",
          "format": "int64",
          "type": "integer"
        },
        "isDefault": {
          "description": "Whether the field configuration is the default.",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the field configuration.",
          "type": "string"
        }
      },
      "required": [
        "description",
        "id",
        "name"
      ],
      "type": "object"
    },
    "FieldConfigurationIssueTypeItem": {
      "additionalProperties": false,
      "description": "The field configuration for an issue type.",
      "properties": {
        "fieldConfigurationId": {
          "description": "The ID of the field configuration.",
          "type": "string"
        },
        "fieldConfigurationSchemeId": {
          "description": "The ID of the field configuration scheme.",
          "type": "string"
        },
        "issueTypeId": {
          "description": "The ID of the issue type or *default*. When set to *default* this field configuration issue type item applies to all issue types without a field configuration.",
          "type": "string"
        }
      },
      "required": [
        "fieldConfigurationId",
        "fieldConfigurationSchemeId",
        "issueTypeId"
      ],
      "type": "object"
    },
    "FieldConfigurationItem": {
      "additionalProperties": false,
      "description": "A field within a field configuration.",
      "properties": {
        "description": {
          "description": "The description of the field within the field configuration.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the field within the field configuration.",
          "type": "string"
        },
        "isHidden": {
          "description": "Whether the field is hidden in the field configuration.",
          "type": "boolean"
        },
        "isRequired": {
          "description": "Whether the field is required in the field configuration.",
          "type": "boolean"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "FieldConfigurationScheme": {
      "additionalProperties": false,
      "description": "Details of a field configuration scheme.",
      "properties": {
        "description": {
          "description": "The description of the field configuration scheme.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the field configuration scheme.",
          "type": "string"
        },
        "name": {
          "description": "The name of the field configuration scheme.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "type": "object"
    },
    "FieldConfigurationSchemeProjectAssociation": {
      "additionalProperties": false,
      "description": "Associated field configuration scheme and project.",
      "properties": {
        "fieldConfigurationSchemeId": {
          "description": "The ID of the field configuration scheme. If the field configuration scheme ID is `null`, the operation assigns the default field configuration scheme.",
          "type": "string"
        },
        "projectId": {
          "description": "The ID of the project.",
          "type": "string"
        }
      },
      "required": [
        "projectId"
      ],
      "type": "object"
    },
    "FieldConfigurationSchemeProjects": {
      "additionalProperties": false,
      "description": "Project list with assigned field configuration schema.",
      "properties": {
        "fieldConfigurationScheme": {
          "$ref": "#/definitions/FieldConfigurationScheme"
        },
        "projectIds": {
          "description": "The IDs of projects using the field configuration scheme.",
          "items": {
            "description": "The IDs of projects using the field configuration scheme.",
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "projectIds"
      ],
      "type": "object"
    },
    "FieldDetails": {
      "additionalProperties": false,
      "description": "Details about a field.",
      "properties": {
        "clauseNames": {
          "description": "The names that can be used to reference the field in an advanced search. For more information, see [Advanced searching - fields reference](https://confluence.atlassian.com/x/gwORLQ).",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "custom": {
          "description": "Whether the field is a custom field.",
          "type": "boolean"
        },
        "id": {
          "description": "The ID of the field.",
          "type": "string"
        },
        "key": {
          "description": "The key of the field.",
          "type": "string"
        },
        "name": {
          "description": "The name of the field.",
          "type": "string"
        },
        "navigable": {
          "description": "Whether the field can be used as a column on the issue navigator.",
          "type": "boolean"
        },
        "orderable": {
          "description": "Whether the content of the field can be used to order lists.",
          "type": "boolean"
        },
        "schema": {
          "allOf": [
            {
              "$ref": "#/definitions/JsonTypeBean"
            }
          ],
          "description": "The data schema for the field."
        },
        "scope": {
          "allOf": [
            {
              "$ref": "#/definitions/Scope"
            }
          ],
          "description": "The scope of the field."
        },
        "searchable": {
          "description": "Whether the content of the field can be searched.",
          "type": "boolean"
        }
      },
      "type": "object",
      "xml": {
        "name": "field"
      }
    },
    "FieldLastUsed": {
      "additionalProperties": false,
      "description": "Information about the most recent use of a field.",
      "properties": {
        "type": {
          "description": "Last used value type:\n\n *  *TRACKED*: field is tracked and a last used date is available.\n *  *NOT\\_TRACKED*: field is not tracked, last used date is not available.\n *  *NO\\_INFORMATION*: field is tracked, but no last used date is available.",
          "enum": [
            "TRACKED",
            "NOT_TRACKED",
            "NO_INFORMATION"
          ],
          "type": "string"
        },
        "value": {
          "description": "The date when the value of the field last changed.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FieldMetadata": {
      "additionalProperties": false,
      "description": "The metadata describing an issue field.",
      "properties": {
        "allowedValues": {
          "description": "The list of values allowed in the field.",
          "items": {
            "readOnly": true
          },
          "readOnly": true,
          "type": "array"
        },
        "autoCompleteUrl": {
          "description": "The URL that can be used to automatically complete the field.",
          "readOnly": true,
          "type": "string"
        },
        "defaultValue": {
          "description": "The default value of the field.",
          "readOnly": true
        },
        "hasDefaultValue": {
          "description": "Whether the field has a default value.",
          "readOnly": true,
          "type": "boolean"
        },
        "key": {
          "description": "The key of the field.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the field.",
          "readOnly": true,
          "type": "string"
        },
        "operations": {
          "description": "The list of operations that can be performed on the field.",
          "items": {
            "readOnly": true,
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "required": {
          "description": "Whether the field is required.",
          "readOnly": true,
          "type": "boolean"
        },
        "schema": {
          "allOf": [
            {
              "$ref": "#/definitions/JsonTypeBean"
            }
          ],
          "description": "The data type of the field.",
          "readOnly": true
        }
      },
      "required": [
        "key",
        "name",
        "operations",
        "required"
      ],
      "type": "object",
      "xml": {
        "name": "availableField"
      }
    },
    "FieldReferenceData": {
      "additionalProperties": false,
      "description": "Details of a field that can be used in advanced searches.",
      "properties": {
        "auto": {
          "description": "Whether the field provide auto-complete suggestions.",
          "enum": [
            "true",
            "false"
          ],
          "type": "string"
        },
        "cfid": {
          "description": "If the item is a custom field, the ID of the custom field.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the field.",
          "type": "string"
        },
        "operators": {
          "description": "The valid search operators for the field.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "orderable": {
          "description": "Whether the field can be used in a query's `ORDER BY` clause.",
          "enum": [
            "true",
            "false"
          ],
          "type": "string"
        },
        "searchable": {
          "description": "Whether the content of this field can be searched.",
          "enum": [
            "true",
            "false"
          ],
          "type": "string"
        },
        "types": {
          "description": "The data types of items in the field.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "value": {
          "description": "The field identifier.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FieldUpdateOperation": {
      "additionalProperties": false,
      "description": "Details of an operation to perform on a field.",
      "properties": {
        "add": {
          "description": "A map containing the name of a field and the value to add to it.",
          "example": {
            "issuelinks": {
              "id": 10001
            },
            "labels": "Training"
          }
        },
        "edit": {
          "description": "A map containing the name of a field and the value to edit in it.",
          "example": {
            "timetracking": {
              "key": "JIRA"
            }
          }
        },
        "remove": {
          "description": "A map containing the name of a field and the value to removed from it.",
          "example": {
            "components": {
              "id": 10017
            },
            "labels": "Training"
          }
        },
        "set": {
          "description": "A map containing the name of a field and the value to set in it.",
          "example": {
            "issuetype": {
              "id": 10010
            },
            "summary": "A new summary"
          }
        }
      },
      "type": "object"
    },
    "FieldValueClause": {
      "description": "A clause that asserts the current value of a field. For example, `summary ~ test`.",
      "properties": {
        "field": {
          "$ref": "#/definitions/JqlQueryField"
        },
        "operand": {
          "$ref": "#/definitions/JqlQueryClauseOperand"
        },
        "operator": {
          "description": "The operator between the field and operand.",
          "enum": [
            "=",
            "!=",
            ">",
            "<",
            ">=",
            "<=",
            "in",
            "not in",
            null,
            "~=",
            "is",
            "is not"
          ],
          "type": "string"
        }
      },
      "required": [
        "field",
        "operand",
        "operator"
      ],
      "type": "object"
    },
    "FieldWasClause": {
      "description": "A clause that asserts a previous value of a field. For example, `status WAS \"Resolved\" BY currentUser() BEFORE \"2019/02/02\"`. See [WAS](https://confluence.atlassian.com/x/dgiiLQ#Advancedsearching-operatorsreference-WASWAS) for more information about the WAS operator.",
      "properties": {
        "field": {
          "$ref": "#/definitions/JqlQueryField"
        },
        "operand": {
          "$ref": "#/definitions/JqlQueryClauseOperand"
        },
        "operator": {
          "description": "The operator between the field and operand.",
          "enum": [
            "was",
            "was in",
            "was not in",
            "was not"
          ],
          "type": "string"
        },
        "predicates": {
          "description": "The list of time predicates.",
          "items": {
            "$ref": "#/definitions/JqlQueryClauseTimePredicate"
          },
          "type": "array"
        }
      },
      "required": [
        "field",
        "operand",
        "operator",
        "predicates"
      ],
      "type": "object"
    },
    "Fields": {
      "additionalProperties": false,
      "description": "Key fields from the linked issue.",
      "properties": {
        "assignee": {
          "allOf": [
            {
              "$ref": "#/definitions/UserDetails"
            }
          ],
          "description": "The assignee of the linked issue.",
          "readOnly": true
        },
        "issueType": {
          "allOf": [
            {
              "$ref": "#/definitions/IssueTypeDetails"
            }
          ],
          "description": "The type of the linked issue.",
          "readOnly": true
        },
        "issuetype": {
          "$ref": "#/definitions/IssueTypeDetails",
          "description": "The type of the linked issue."
        },
        "priority": {
          "allOf": [
            {
              "$ref": "#/definitions/Priority"
            }
          ],
          "description": "The priority of the linked issue.",
          "readOnly": true
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/StatusDetails"
            }
          ],
          "description": "The status of the linked issue.",
          "readOnly": true
        },
        "summary": {
          "description": "The summary description of the linked issue.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Filter": {
      "additionalProperties": false,
      "description": "Details about a filter.",
      "properties": {
        "description": {
          "description": "A description of the filter.",
          "type": "string"
        },
        "favourite": {
          "description": "Whether the filter is selected as a favorite.",
          "type": "boolean"
        },
        "favouritedCount": {
          "description": "The count of how many users have selected this filter as a favorite, including the filter owner.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "description": "The unique identifier for the filter.",
          "readOnly": true,
          "type": "string"
        },
        "jql": {
          "description": "The JQL query for the filter. For example, *project = SSP AND issuetype = Bug*.",
          "type": "string"
        },
        "name": {
          "description": "The name of the filter. Must be unique.",
          "type": "string"
        },
        "owner": {
          "allOf": [
            {
              "$ref": "#/definitions/User"
            }
          ],
          "description": "The user who owns the filter. This is defaulted to the creator of the filter, however Jira administrators can change the owner of a shared filter in the admin settings.",
          "readOnly": true
        },
        "searchUrl": {
          "description": "A URL to view the filter results in Jira, using the [Search for issues using JQL](#api-rest-api-3-filter-search-get) operation with the filter's JQL string to return the filter results. For example, *https://your-domain.atlassian.net/rest/api/3/search?jql=project+%3D+SSP+AND+issuetype+%3D+Bug*.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the filter.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "sharePermissions": {
          "description": "The groups and projects that the filter is shared with.",
          "items": {
            "$ref": "#/definitions/SharePermission"
          },
          "type": "array"
        },
        "sharedUsers": {
          "allOf": [
            {
              "$ref": "#/definitions/UserList"
            }
          ],
          "description": "A paginated list of the users that the filter is shared with. This includes users that are members of the groups or can browse the projects that the filter is shared with.",
          "readOnly": true
        },
        "subscriptions": {
          "allOf": [
            {
              "$ref": "#/definitions/FilterSubscriptionsList"
            }
          ],
          "description": "A paginated list of the users that are subscribed to the filter.",
          "readOnly": true
        },
        "viewUrl": {
          "description": "A URL to view the filter results in Jira, using the ID of the filter. For example, *https://your-domain.atlassian.net/issues/?filter=10100*.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object",
      "xml": {
        "name": "filter"
      }
    },
    "FilterSubscription": {
      "additionalProperties": false,
      "description": "Details of a user or group subscribing to a filter.",
      "properties": {
        "group": {
          "allOf": [
            {
              "$ref": "#/definitions/GroupName"
            }
          ],
          "description": "The group subscribing to filter.",
          "readOnly": true
        },
        "id": {
          "description": "The ID of the filter subscription.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "user": {
          "allOf": [
            {
              "$ref": "#/definitions/User"
            }
          ],
          "description": "The user subscribing to filter.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "FilterSubscriptionsList": {
      "additionalProperties": false,
      "description": "A paginated list of subscriptions to a filter.",
      "properties": {
        "end-index": {
          "description": "The index of the last item returned on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer",
          "xml": {
            "attribute": true,
            "name": "end-index"
          }
        },
        "items": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/FilterSubscription"
          },
          "readOnly": true,
          "type": "array"
        },
        "max-results": {
          "description": "The maximum number of results that could be on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer",
          "xml": {
            "attribute": true,
            "name": "max-results"
          }
        },
        "size": {
          "description": "The number of items on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer",
          "xml": {
            "attribute": true
          }
        },
        "start-index": {
          "description": "The index of the first item returned on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer",
          "xml": {
            "attribute": true,
            "name": "start-index"
          }
        }
      },
      "type": "object"
    },
    "FoundFilter": {
      "additionalProperties": false,
      "description": "Details of a filter identified as part of a search.",
      "properties": {
        "description": {
          "description": "A description of the filter.",
          "type": "string"
        },
        "favourite": {
          "description": "Whether the filter is selected as a favorite by any users, not including the filter owner.",
          "readOnly": true,
          "type": "boolean"
        },
        "favouritedCount": {
          "description": "The count of how many users have selected this filter as a favorite, including the filter owner.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "description": "The unique identifier for the filter.",
          "readOnly": true,
          "type": "string"
        },
        "jql": {
          "description": "The JQL query for the filter. For example, *project = SSP AND issuetype = Bug*.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the filter. Must be unique.",
          "type": "string"
        },
        "owner": {
          "allOf": [
            {
              "$ref": "#/definitions/User"
            }
          ],
          "description": "The user who owns the filter. This is defaulted to the creator of the filter, however Jira administrators can change the owner of a shared filter in the admin settings.",
          "readOnly": true
        },
        "searchUrl": {
          "description": "A URL to view the filter results in Jira, using the [Search for issues using JQL](#api-rest-api-3-filter-search-get) operation with the filter's JQL string to return the filter results. For example, *https://your-domain.atlassian.net/rest/api/3/search?jql=project+%3D+SSP+AND+issuetype+%3D+Bug*.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the filter.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "sharePermissions": {
          "description": "The groups and projects that the filter is shared with. This can be specified when updating a filter, but not when creating a filter.",
          "items": {
            "$ref": "#/definitions/SharePermission"
          },
          "type": "array"
        },
        "subscriptions": {
          "description": "The users that are subscribed to the filter.",
          "items": {
            "$ref": "#/definitions/FilterSubscription"
          },
          "readOnly": true,
          "type": "array"
        },
        "viewUrl": {
          "description": "A URL to view the filter results in Jira, using the ID of the filter. For example, *https://your-domain.atlassian.net/issues/?filter=10100*.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "FoundGroup": {
      "additionalProperties": false,
      "description": "A group found in a search.",
      "properties": {
        "groupId": {
          "description": "The ID of the group, if available, which uniquely identifies the group across all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*.",
          "type": "string"
        },
        "html": {
          "description": "The group name with the matched query string highlighted with the HTML bold tag.",
          "type": "string"
        },
        "labels": {
          "items": {
            "$ref": "#/definitions/GroupLabel"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of the group.",
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "group"
      }
    },
    "FoundGroups": {
      "additionalProperties": false,
      "description": "The list of groups found in a search, including header text (Showing X of Y matching groups) and total of matched groups.",
      "properties": {
        "groups": {
          "items": {
            "$ref": "#/definitions/FoundGroup"
          },
          "type": "array"
        },
        "header": {
          "description": "Header text indicating the number of groups in the response and the total number of groups found in the search.",
          "type": "string"
        },
        "total": {
          "description": "The total number of groups found in the search.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "xml": {
        "name": "groupsuggestions"
      }
    },
    "FoundUsers": {
      "additionalProperties": false,
      "description": "The list of users found in a search, including header text (Showing X of Y matching users) and total of matched users.",
      "properties": {
        "header": {
          "description": "Header text indicating the number of users in the response and the total number of users found in the search.",
          "type": "string"
        },
        "total": {
          "description": "The total number of users found in the search.",
          "format": "int32",
          "type": "integer"
        },
        "users": {
          "items": {
            "$ref": "#/definitions/UserPickerUser"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "FoundUsersAndGroups": {
      "additionalProperties": false,
      "description": "List of users and groups found in a search.",
      "properties": {
        "groups": {
          "$ref": "#/definitions/FoundGroups"
        },
        "users": {
          "$ref": "#/definitions/FoundUsers"
        }
      },
      "type": "object"
    },
    "FunctionOperand": {
      "description": "An operand that is a function. See [Advanced searching - functions reference](https://confluence.atlassian.com/x/dwiiLQ) for more information about JQL functions.",
      "properties": {
        "arguments": {
          "description": "The list of function arguments.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "function": {
          "description": "The name of the function.",
          "type": "string"
        }
      },
      "required": [
        "function"
      ],
      "type": "object"
    },
    "FunctionReferenceData": {
      "additionalProperties": false,
      "description": "Details of functions that can be used in advanced searches.",
      "properties": {
        "displayName": {
          "description": "The display name of the function.",
          "type": "string"
        },
        "isList": {
          "description": "Whether the function can take a list of arguments.",
          "enum": [
            "true",
            "false"
          ],
          "type": "string"
        },
        "types": {
          "description": "The data types returned by the function.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "value": {
          "description": "The function identifier.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GlobalScopeBean": {
      "additionalProperties": false,
      "properties": {
        "attributes": {
          "description": "Defines the behavior of the option in the global context.If notSelectable is set, the option cannot be set as the field's value. This is useful for archiving an option that has previously been selected but shouldn't be used anymore.If defaultValue is set, the option is selected by default.",
          "items": {
            "enum": [
              "notSelectable",
              "defaultValue"
            ],
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "type": "object"
    },
    "Group": {
      "additionalProperties": false,
      "properties": {
        "expand": {
          "description": "Expand options that include additional group details in the response.",
          "readOnly": true,
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "name": {
          "description": "The name of group.",
          "type": "string"
        },
        "self": {
          "description": "The URL for these group details.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "users": {
          "allOf": [
            {
              "$ref": "#/definitions/PagedListUserDetailsApplicationUser"
            }
          ],
          "description": "A paginated list of the users that are members of the group. A maximum of 50 users is returned in the list, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 50 users, use`?expand=users[51:100]`.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "GroupLabel": {
      "additionalProperties": false,
      "description": "A group label.",
      "properties": {
        "text": {
          "description": "The group label name.",
          "type": "string"
        },
        "title": {
          "description": "The title of the group label.",
          "type": "string"
        },
        "type": {
          "description": "The type of the group label.",
          "enum": [
            "ADMIN",
            "SINGLE",
            "MULTIPLE"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "grouplabel"
      }
    },
    "GroupName": {
      "additionalProperties": false,
      "description": "Details about a group name.",
      "properties": {
        "name": {
          "description": "The name of group.",
          "type": "string"
        },
        "self": {
          "description": "The URL for these group details.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "HealthCheckResult": {
      "additionalProperties": false,
      "description": "Jira instance health check results. Deprecated and no longer returned.",
      "properties": {
        "description": {
          "description": "The description of the Jira health check item.",
          "type": "string"
        },
        "name": {
          "description": "The name of the Jira health check item.",
          "type": "string"
        },
        "passed": {
          "description": "Whether the Jira health check item passed or failed.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Hierarchy": {
      "additionalProperties": false,
      "description": "Project Issue Type Hierarchy",
      "properties": {
        "level": {
          "items": {
            "$ref": "#/definitions/HierarchyLevel"
          },
          "type": "array"
        }
      },
      "type": "object",
      "xml": {
        "name": "hierarchy"
      }
    },
    "HierarchyLevel": {
      "additionalProperties": false,
      "properties": {
        "aboveLevelId": {
          "format": "int64",
          "type": "integer"
        },
        "belowLevelId": {
          "format": "int64",
          "type": "integer"
        },
        "externalUuid": {
          "format": "uuid",
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "issueTypeIds": {
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "projectConfigurationId": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "HistoryMetadata": {
      "additionalProperties": true,
      "description": "Details of issue history metadata.",
      "properties": {
        "activityDescription": {
          "description": "The activity described in the history record.",
          "type": "string"
        },
        "activityDescriptionKey": {
          "description": "The key of the activity described in the history record.",
          "type": "string"
        },
        "actor": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoryMetadataParticipant"
            }
          ],
          "description": "Details of the user whose action created the history record."
        },
        "cause": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoryMetadataParticipant"
            }
          ],
          "description": "Details of the cause that triggered the creation the history record."
        },
        "description": {
          "description": "The description of the history record.",
          "type": "string"
        },
        "descriptionKey": {
          "description": "The description key of the history record.",
          "type": "string"
        },
        "emailDescription": {
          "description": "The description of the email address associated the history record.",
          "type": "string"
        },
        "emailDescriptionKey": {
          "description": "The description key of the email address associated the history record.",
          "type": "string"
        },
        "extraData": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional arbitrary information about the history record.",
          "type": "object"
        },
        "generator": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoryMetadataParticipant"
            }
          ],
          "description": "Details of the system that generated the history record."
        },
        "type": {
          "description": "The type of the history record.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HistoryMetadataParticipant": {
      "additionalProperties": true,
      "description": "Details of user or system associated with a issue history metadata item.",
      "properties": {
        "avatarUrl": {
          "description": "The URL to an avatar for the user or system associated with a history record.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the user or system associated with a history record.",
          "type": "string"
        },
        "displayNameKey": {
          "description": "The key of the display name of the user or system associated with a history record.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the user or system associated with a history record.",
          "type": "string"
        },
        "type": {
          "description": "The type of the user or system associated with a history record.",
          "type": "string"
        },
        "url": {
          "description": "The URL of the user or system associated with a history record.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Icon": {
      "additionalProperties": true,
      "description": "An icon. If no icon is defined:\n\n *  for a status icon, no status icon displays in Jira.\n *  for the remote object icon, the default link icon displays in Jira.",
      "properties": {
        "link": {
          "description": "The URL of the tooltip, used only for a status icon. If not set, the status icon in Jira is not clickable.",
          "type": "string"
        },
        "title": {
          "description": "The title of the icon. This is used as follows:\n\n *  For a status icon it is used as a tooltip on the icon. If not set, the status icon doesn't display a tooltip in Jira.\n *  For the remote object icon it is used in conjunction with the application name to display a tooltip for the link's icon. The tooltip takes the format \"\\[application name\\] icon title\". Blank itemsare excluded from the tooltip title. If both items are blank, the icon tooltop displays as \"Web Link\".",
          "type": "string"
        },
        "url16x16": {
          "description": "The URL of an icon that displays at 16x16 pixel in Jira.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IconBean": {
      "additionalProperties": false,
      "description": "An icon.",
      "properties": {
        "link": {
          "description": "The URL of the tooltip, used only for a status icon.",
          "type": "string"
        },
        "title": {
          "description": "The title of the icon, for use as a tooltip on the icon.",
          "type": "string"
        },
        "url16x16": {
          "description": "The URL of a 16x16 pixel icon.",
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "icon"
      }
    },
    "IdBean": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "The ID of the permission scheme to associate with the project. Use the [Get all permission schemes](#api-rest-api-3-permissionscheme-get) resource to get a list of permission scheme IDs.",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "IdOrKeyBean": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "The ID of the referenced item.",
          "format": "int64",
          "type": "integer"
        },
        "key": {
          "description": "The key of the referenced item.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IncludedFields": {
      "additionalProperties": false,
      "properties": {
        "actuallyIncluded": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "excluded": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "included": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "type": "object"
    },
    "IssueBean": {
      "additionalProperties": false,
      "properties": {
        "changelog": {
          "allOf": [
            {
              "$ref": "#/definitions/PageOfChangelogs"
            }
          ],
          "description": "Details of changelogs associated with the issue.",
          "readOnly": true
        },
        "editmeta": {
          "allOf": [
            {
              "$ref": "#/definitions/IssueUpdateMetadata"
            }
          ],
          "description": "The metadata for the fields on the issue that can be amended.",
          "readOnly": true
        },
        "expand": {
          "description": "Expand options that include additional issue details in the response.",
          "readOnly": true,
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "fields": {
          "additionalProperties": {},
          "type": "object"
        },
        "fieldsToInclude": {
          "$ref": "#/definitions/IncludedFields"
        },
        "id": {
          "description": "The ID of the issue.",
          "readOnly": true,
          "type": "string"
        },
        "key": {
          "description": "The key of the issue.",
          "readOnly": true,
          "type": "string"
        },
        "names": {
          "additionalProperties": {
            "readOnly": true,
            "type": "string"
          },
          "description": "The ID and name of each field present on the issue.",
          "readOnly": true,
          "type": "object"
        },
        "operations": {
          "allOf": [
            {
              "$ref": "#/definitions/Operations"
            }
          ],
          "description": "The operations that can be performed on the issue.",
          "readOnly": true
        },
        "properties": {
          "additionalProperties": {
            "readOnly": true
          },
          "description": "Details of the issue properties identified in the request.",
          "readOnly": true,
          "type": "object"
        },
        "renderedFields": {
          "additionalProperties": {
            "readOnly": true
          },
          "description": "The rendered value of each field present on the issue.",
          "readOnly": true,
          "type": "object"
        },
        "schema": {
          "additionalProperties": {
            "$ref": "#/definitions/JsonTypeBean"
          },
          "description": "The schema describing each field present on the issue.",
          "readOnly": true,
          "type": "object"
        },
        "self": {
          "description": "The URL of the issue details.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "transitions": {
          "description": "The transitions that can be performed on the issue.",
          "items": {
            "$ref": "#/definitions/IssueTransition"
          },
          "readOnly": true,
          "type": "array"
        },
        "versionedRepresentations": {
          "additionalProperties": {
            "additionalProperties": {
              "readOnly": true
            },
            "readOnly": true,
            "type": "object"
          },
          "description": "The versions of each field on the issue.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object",
      "xml": {
        "name": "issue"
      }
    },
    "IssueCommentListRequestBean": {
      "additionalProperties": false,
      "properties": {
        "ids": {
          "description": "The list of comment IDs. A maximum of 1000 IDs can be specified.",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "required": [
        "ids"
      ],
      "type": "object"
    },
    "IssueCreateMetadata": {
      "additionalProperties": false,
      "description": "The wrapper for the issue creation metadata for a list of projects.",
      "properties": {
        "expand": {
          "description": "Expand options that include additional project details in the response.",
          "readOnly": true,
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "projects": {
          "description": "List of projects and their issue creation metadata.",
          "items": {
            "$ref": "#/definitions/ProjectIssueCreateMetadata"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "IssueEntityProperties": {
      "additionalProperties": false,
      "description": "Lists of issues and entity properties. See [Entity properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/) for more information.",
      "properties": {
        "entitiesIds": {
          "description": "A list of entity property IDs.",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "maxItems": 10000,
          "minItems": 1,
          "type": "array",
          "uniqueItems": true
        },
        "properties": {
          "additionalProperties": {
            "$ref": "#/definitions/JsonNode"
          },
          "description": "A list of entity property keys and values.",
          "maxProperties": 10,
          "minProperties": 1,
          "type": "object"
        }
      },
      "type": "object"
    },
    "IssueFieldOption": {
      "additionalProperties": false,
      "description": "Details of the options for a select list issue field.",
      "properties": {
        "config": {
          "$ref": "#/definitions/IssueFieldOptionConfiguration"
        },
        "id": {
          "description": "The unique identifier for the option. This is only unique within the select field's set of options.",
          "format": "int64",
          "type": "integer"
        },
        "properties": {
          "additionalProperties": {},
          "description": "The properties of the object, as arbitrary key-value pairs. These properties can be searched using JQL, if the extractions (see [Issue Field Option Property Index](https://developer.atlassian.com/cloud/jira/platform/modules/issue-field-option-property-index/)) are defined in the descriptor for the issue field module.",
          "type": "object"
        },
        "value": {
          "description": "The option's name, which is displayed in Jira.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "value"
      ],
      "type": "object"
    },
    "IssueFieldOptionConfiguration": {
      "additionalProperties": false,
      "description": "Details of the projects the option is available in.",
      "properties": {
        "attributes": {
          "description": "DEPRECATED",
          "items": {
            "enum": [
              "notSelectable",
              "defaultValue"
            ],
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "scope": {
          "allOf": [
            {
              "$ref": "#/definitions/IssueFieldOptionScopeBean"
            }
          ],
          "description": "Defines the projects that the option is available in. If the scope is not defined, then the option is available in all projects."
        }
      },
      "type": "object"
    },
    "IssueFieldOptionCreateBean": {
      "additionalProperties": true,
      "properties": {
        "config": {
          "$ref": "#/definitions/IssueFieldOptionConfiguration"
        },
        "properties": {
          "additionalProperties": {},
          "description": "The properties of the option as arbitrary key-value pairs. These properties can be searched using JQL, if the extractions (see https://developer.atlassian.com/cloud/jira/platform/modules/issue-field-option-property-index/) are defined in the descriptor for the issue field module.",
          "type": "object"
        },
        "value": {
          "description": "The option's name, which is displayed in Jira.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "IssueFieldOptionScopeBean": {
      "additionalProperties": false,
      "properties": {
        "global": {
          "allOf": [
            {
              "$ref": "#/definitions/GlobalScopeBean"
            }
          ],
          "description": "Defines the behavior of the option within the global context. If this property is set, even if set to an empty object, then the option is available in all projects."
        },
        "projects": {
          "description": "DEPRECATED",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": true
        },
        "projects2": {
          "description": "Defines the projects in which the option is available and the behavior of the option within each project. Specify one object per project. The behavior of the option in a project context overrides the behavior in the global context.",
          "items": {
            "$ref": "#/definitions/ProjectScopeBean"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "type": "object"
    },
    "IssueFilterForBulkPropertyDelete": {
      "additionalProperties": false,
      "description": "Bulk operation filter details.",
      "properties": {
        "currentValue": {
          "description": "The value of properties to perform the bulk operation on."
        },
        "entityIds": {
          "description": "List of issues to perform the bulk delete operation on.",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "type": "object"
    },
    "IssueFilterForBulkPropertySet": {
      "additionalProperties": false,
      "description": "Bulk operation filter details.",
      "properties": {
        "currentValue": {
          "description": "The value of properties to perform the bulk operation on."
        },
        "entityIds": {
          "description": "List of issues to perform the bulk operation on.",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": true
        },
        "hasProperty": {
          "description": "Whether the bulk operation occurs only when the property is present on or absent from an issue.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IssueLink": {
      "additionalProperties": false,
      "description": "Details of a link between issues.",
      "properties": {
        "id": {
          "description": "The ID of the issue link.",
          "readOnly": true,
          "type": "string"
        },
        "inwardIssue": {
          "allOf": [
            {
              "$ref": "#/definitions/LinkedIssue"
            }
          ],
          "description": "The issue the link joins to."
        },
        "outwardIssue": {
          "allOf": [
            {
              "$ref": "#/definitions/LinkedIssue"
            }
          ],
          "description": "The issue the link originates from."
        },
        "self": {
          "description": "The URL of the issue link.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "allOf": [
            {
              "$ref": "#/definitions/IssueLinkType"
            }
          ],
          "description": "The type of link between the issues."
        }
      },
      "type": "object",
      "xml": {
        "name": "issueLinks"
      }
    },
    "IssueLinkType": {
      "additionalProperties": false,
      "description": "This object is used as follows:\n\n *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it defines and reports on the type of link between the issues. Find a list of issue link types with [Get issue link types](#api-rest-api-3-issueLinkType-get).\n *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it defines and reports on issue link types.",
      "properties": {
        "id": {
          "description": "The ID of the issue link type and is used as follows:\n\n *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is the type of issue link. Required on create when `name` isn't provided. Otherwise, read only.\n *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is read only.",
          "type": "string"
        },
        "inward": {
          "description": "The description of the issue link type inward link and is used as follows:\n\n *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is read only.\n *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only.",
          "type": "string"
        },
        "name": {
          "description": "The name of the issue link type and is used as follows:\n\n *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is the type of issue link. Required on create when `id` isn't provided. Otherwise, read only.\n *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only.",
          "type": "string"
        },
        "outward": {
          "description": "The description of the issue link type outward link and is used as follows:\n\n *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is read only.\n *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only.",
          "type": "string"
        },
        "self": {
          "description": "The URL of the issue link type. Read only.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "IssueLinkTypes": {
      "additionalProperties": false,
      "description": "A list of issue link type beans.",
      "properties": {
        "issueLinkTypes": {
          "description": "The issue link type bean.",
          "items": {
            "$ref": "#/definitions/IssueLinkType"
          },
          "readOnly": true,
          "type": "array",
          "xml": {
            "name": "issueLinkTypes"
          }
        }
      },
      "type": "object",
      "xml": {
        "name": "issueLinkTypes"
      }
    },
    "IssueMatches": {
      "additionalProperties": false,
      "description": "A list of matched issues or errors for each JQL query, in the order the JQL queries were passed.",
      "properties": {
        "matches": {
          "items": {
            "$ref": "#/definitions/IssueMatchesForJQL"
          },
          "type": "array"
        }
      },
      "required": [
        "matches"
      ],
      "type": "object"
    },
    "IssueMatchesForJQL": {
      "additionalProperties": false,
      "description": "A list of the issues matched to a JQL query or details of errors encountered during matching.",
      "properties": {
        "errors": {
          "description": "A list of errors.",
          "items": {
            "description": "A list of errors.",
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "matchedIssues": {
          "description": "A list of issue IDs.",
          "items": {
            "description": "A list of issue IDs.",
            "format": "int64",
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "required": [
        "errors",
        "matchedIssues"
      ],
      "type": "object"
    },
    "IssuePickerSuggestions": {
      "additionalProperties": false,
      "description": "A list of issues suggested for use in auto-completion.",
      "properties": {
        "sections": {
          "description": "A list of issues for an issue type suggested for use in auto-completion.",
          "items": {
            "$ref": "#/definitions/IssuePickerSuggestionsIssueType"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "IssuePickerSuggestionsIssueType": {
      "additionalProperties": false,
      "description": "A type of issue suggested for use in auto-completion.",
      "properties": {
        "id": {
          "description": "The ID of the type of issues suggested for use in auto-completion.",
          "readOnly": true,
          "type": "string"
        },
        "issues": {
          "description": "A list of issues suggested for use in auto-completion.",
          "items": {
            "$ref": "#/definitions/SuggestedIssue"
          },
          "readOnly": true,
          "type": "array"
        },
        "label": {
          "description": "The label of the type of issues suggested for use in auto-completion.",
          "readOnly": true,
          "type": "string"
        },
        "msg": {
          "description": "If no issue suggestions are found, returns a message indicating no suggestions were found,",
          "readOnly": true,
          "type": "string"
        },
        "sub": {
          "description": "If issue suggestions are found, returns a message indicating the number of issues suggestions found and returned.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "IssueSecurityLevelMember": {
      "additionalProperties": false,
      "description": "Issue security level member.",
      "properties": {
        "holder": {
          "allOf": [
            {
              "$ref": "#/definitions/PermissionHolder"
            }
          ],
          "description": "The user or group being granted the permission. It consists of a `type` and a type-dependent `parameter`. See [Holder object](#holder-object) in *Get all permission schemes* for more information."
        },
        "id": {
          "description": "The ID of the issue security level member.",
          "format": "int64",
          "type": "integer"
        },
        "issueSecurityLevelId": {
          "description": "The ID of the issue security level.",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "id",
        "issueSecurityLevelId"
      ],
      "type": "object"
    },
    "IssueTransition": {
      "additionalProperties": true,
      "description": "Details of an issue transition.",
      "properties": {
        "expand": {
          "description": "Expand options that include additional transition details in the response.",
          "readOnly": true,
          "type": "string"
        },
        "fields": {
          "additionalProperties": {
            "$ref": "#/definitions/FieldMetadata"
          },
          "description": "Details of the fields associated with the issue transition screen. Use this information to populate `fields` and `update` in a transition request.",
          "readOnly": true,
          "type": "object"
        },
        "hasScreen": {
          "description": "Whether there is a screen associated with the issue transition.",
          "readOnly": true,
          "type": "boolean"
        },
        "id": {
          "description": "The ID of the issue transition. Required when specifying a transition to undertake.",
          "type": "string"
        },
        "isAvailable": {
          "description": "Whether the transition is available to be performed.",
          "readOnly": true,
          "type": "boolean"
        },
        "isConditional": {
          "description": "Whether the issue has to meet criteria before the issue transition is applied.",
          "readOnly": true,
          "type": "boolean"
        },
        "isGlobal": {
          "description": "Whether the issue transition is global, that is, the transition is applied to issues regardless of their status.",
          "readOnly": true,
          "type": "boolean"
        },
        "isInitial": {
          "description": "Whether this is the initial issue transition for the workflow.",
          "readOnly": true,
          "type": "boolean"
        },
        "name": {
          "description": "The name of the issue transition.",
          "readOnly": true,
          "type": "string"
        },
        "to": {
          "allOf": [
            {
              "$ref": "#/definitions/StatusDetails"
            }
          ],
          "description": "Details of the issue status after the transition.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "IssueTypeCreateBean": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "description": "The description of the issue type.",
          "type": "string"
        },
        "name": {
          "description": "The unique name for the issue type. The maximum length is 60 characters.",
          "type": "string"
        },
        "type": {
          "description": "Whether the issue type is `subtype` or `standard`. Defaults to `standard`.",
          "enum": [
            "subtask",
            "standard"
          ],
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "IssueTypeDetails": {
      "additionalProperties": false,
      "description": "Details about an issue type.",
      "properties": {
        "avatarId": {
          "description": "The ID of the issue type's avatar.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "description": {
          "description": "The description of the issue type.",
          "readOnly": true,
          "type": "string"
        },
        "entityId": {
          "description": "Unique ID for next-gen projects.",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "iconUrl": {
          "description": "The URL of the issue type's avatar.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the issue type.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the issue type.",
          "readOnly": true,
          "type": "string"
        },
        "scope": {
          "allOf": [
            {
              "$ref": "#/definitions/Scope"
            }
          ],
          "description": "Details of the next-gen projects the issue type is available in.",
          "readOnly": true
        },
        "self": {
          "description": "The URL of these issue type details.",
          "readOnly": true,
          "type": "string"
        },
        "subtask": {
          "description": "Whether this issue type is used to create subtasks.",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IssueTypeInfo": {
      "additionalProperties": false,
      "description": "Details of an issue type.",
      "properties": {
        "avatarId": {
          "description": "The avatar of the issue type.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "description": "The ID of the issue type.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "The name of the issue type.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "IssueTypeIssueCreateMetadata": {
      "additionalProperties": false,
      "description": "Details of the issue creation metadata for an issue type.",
      "properties": {
        "avatarId": {
          "description": "The ID of the issue type's avatar.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "description": {
          "description": "The description of the issue type.",
          "readOnly": true,
          "type": "string"
        },
        "entityId": {
          "description": "Unique ID for next-gen projects.",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "expand": {
          "description": "Expand options that include additional issue type metadata details in the response.",
          "readOnly": true,
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "fields": {
          "additionalProperties": {
            "$ref": "#/definitions/FieldMetadata"
          },
          "description": "List of the fields available when creating an issue for the issue type.",
          "readOnly": true,
          "type": "object"
        },
        "iconUrl": {
          "description": "The URL of the issue type's avatar.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the issue type.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the issue type.",
          "readOnly": true,
          "type": "string"
        },
        "scope": {
          "allOf": [
            {
              "$ref": "#/definitions/Scope"
            }
          ],
          "description": "Details of the next-gen projects the issue type is available in.",
          "readOnly": true
        },
        "self": {
          "description": "The URL of these issue type details.",
          "readOnly": true,
          "type": "string"
        },
        "subtask": {
          "description": "Whether this issue type is used to create subtasks.",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IssueTypeScheme": {
      "additionalProperties": false,
      "description": "Details of an issue type scheme.",
      "properties": {
        "defaultIssueTypeId": {
          "description": "The ID of the default issue type of the issue type scheme.",
          "type": "string"
        },
        "description": {
          "description": "The description of the issue type scheme.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the issue type scheme.",
          "type": "string"
        },
        "isDefault": {
          "description": "Whether the issue type scheme is the default.",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the issue type scheme.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "type": "object"
    },
    "IssueTypeSchemeMapping": {
      "additionalProperties": false,
      "description": "Issue type scheme item.",
      "properties": {
        "issueTypeId": {
          "description": "The ID of the issue type.",
          "type": "string"
        },
        "issueTypeSchemeId": {
          "description": "The ID of the issue type scheme.",
          "type": "string"
        }
      },
      "required": [
        "issueTypeId",
        "issueTypeSchemeId"
      ],
      "type": "object"
    },
    "IssueTypeSchemeProjectAssociation": {
      "additionalProperties": false,
      "description": "Details of the association between an issue type scheme and project.",
      "properties": {
        "issueTypeSchemeId": {
          "description": "The ID of the issue type scheme.",
          "type": "string"
        },
        "projectId": {
          "description": "The ID of the project.",
          "type": "string"
        }
      },
      "required": [
        "issueTypeSchemeId",
        "projectId"
      ],
      "type": "object"
    },
    "IssueTypeSchemeProjects": {
      "additionalProperties": false,
      "description": "Issue type scheme with a list of the projects that use it.",
      "properties": {
        "issueTypeScheme": {
          "allOf": [
            {
              "$ref": "#/definitions/IssueTypeScheme"
            }
          ],
          "description": "Details of an issue type scheme."
        },
        "projectIds": {
          "description": "The IDs of the projects using the issue type scheme.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "projectIds"
      ],
      "type": "object"
    },
    "IssueTypeScreenScheme": {
      "additionalProperties": false,
      "description": "Details of an issue type screen scheme.",
      "properties": {
        "description": {
          "description": "The description of the issue type screen scheme.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the issue type screen scheme.",
          "type": "string"
        },
        "name": {
          "description": "The name of the issue type screen scheme.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "type": "object"
    },
    "IssueTypeScreenSchemeItem": {
      "additionalProperties": false,
      "description": "The screen scheme for an issue type.",
      "properties": {
        "issueTypeId": {
          "description": "The ID of the issue type or *default*. When set to *default* this issue type screen scheme item applies to all issue types without a screen scheme.",
          "type": "string"
        },
        "issueTypeScreenSchemeId": {
          "description": "The ID of the issue type screen scheme.",
          "type": "string"
        },
        "screenSchemeId": {
          "description": "The ID of the screen scheme.",
          "type": "string"
        }
      },
      "required": [
        "issueTypeId",
        "issueTypeScreenSchemeId",
        "screenSchemeId"
      ],
      "type": "object"
    },
    "IssueTypeScreenSchemeProjectAssociation": {
      "additionalProperties": false,
      "description": "Associated issue type screen scheme and project.",
      "properties": {
        "issueTypeScreenSchemeId": {
          "description": "The ID of the issue type screen scheme.",
          "type": "string"
        },
        "projectId": {
          "description": "The ID of the project.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IssueTypeScreenSchemesProjects": {
      "additionalProperties": false,
      "description": "Issue type screen scheme with a list of the projects that use it.",
      "properties": {
        "issueTypeScreenScheme": {
          "allOf": [
            {
              "$ref": "#/definitions/IssueTypeScreenScheme"
            }
          ],
          "description": "Details of an issue type screen scheme."
        },
        "projectIds": {
          "description": "The IDs of the projects using the issue type screen scheme.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "projectIds"
      ],
      "type": "object"
    },
    "IssueTypeUpdateBean": {
      "additionalProperties": false,
      "properties": {
        "avatarId": {
          "description": "The ID of an issue type avatar.",
          "format": "int64",
          "type": "integer"
        },
        "description": {
          "description": "The description of the issue type.",
          "type": "string"
        },
        "name": {
          "description": "The unique name for the issue type. The maximum length is 60 characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IssueTypeWithStatus": {
      "additionalProperties": false,
      "description": "Status details for an issue type.",
      "properties": {
        "id": {
          "description": "The ID of the issue type.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the issue type.",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the issue type's status details.",
          "readOnly": true,
          "type": "string"
        },
        "statuses": {
          "description": "List of status details for the issue type.",
          "items": {
            "$ref": "#/definitions/StatusDetails"
          },
          "readOnly": true,
          "type": "array"
        },
        "subtask": {
          "description": "Whether this issue type represents subtasks.",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "name",
        "self",
        "statuses",
        "subtask"
      ],
      "type": "object"
    },
    "IssueTypeWorkflowMapping": {
      "additionalProperties": false,
      "description": "Details about the mapping between an issue type and a workflow.",
      "properties": {
        "issueType": {
          "description": "The ID of the issue type. Not required if updating the issue type-workflow mapping.",
          "type": "string"
        },
        "updateDraftIfNeeded": {
          "description": "Set to true to create or update the draft of a workflow scheme and update the mapping in the draft, when the workflow scheme cannot be edited. Defaults to `false`. Only applicable when updating the workflow-issue types mapping.",
          "type": "boolean"
        },
        "workflow": {
          "description": "The name of the workflow.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IssueTypesWorkflowMapping": {
      "additionalProperties": false,
      "description": "Details about the mapping between issue types and a workflow.",
      "properties": {
        "defaultMapping": {
          "description": "Whether the workflow is the default workflow for the workflow scheme.",
          "type": "boolean"
        },
        "issueTypes": {
          "description": "The list of issue type IDs.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "updateDraftIfNeeded": {
          "description": "Whether a draft workflow scheme is created or updated when updating an active workflow scheme. The draft is updated with the new workflow-issue types mapping. Defaults to `false`.",
          "type": "boolean"
        },
        "workflow": {
          "description": "The name of the workflow. Optional if updating the workflow-issue types mapping.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IssueUpdateDetails": {
      "additionalProperties": true,
      "description": "Details of an issue update request.",
      "properties": {
        "fields": {
          "additionalProperties": {},
          "description": "List of issue screen fields to update, specifying the sub-field to update and its value for each field. This field provides a straightforward option when setting a sub-field. When multiple sub-fields or other operations are required, use `update`. Fields included in here cannot be included in `update`.",
          "type": "object"
        },
        "historyMetadata": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoryMetadata"
            }
          ],
          "description": "Additional issue history details."
        },
        "properties": {
          "description": "Details of issue properties to be add or update.",
          "items": {
            "$ref": "#/definitions/EntityProperty"
          },
          "type": "array"
        },
        "transition": {
          "allOf": [
            {
              "$ref": "#/definitions/IssueTransition"
            }
          ],
          "description": "Details of a transition. Required when performing a transition, optional when creating or editing an issue."
        },
        "update": {
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/FieldUpdateOperation"
            },
            "type": "array"
          },
          "description": "List of operations to perform on issue screen fields. Note that fields included in here cannot be included in `fields`.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "IssueUpdateMetadata": {
      "additionalProperties": false,
      "description": "A list of editable field details.",
      "properties": {
        "fields": {
          "additionalProperties": {
            "$ref": "#/definitions/FieldMetadata"
          },
          "description": "A list of editable field details.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "IssuesAndJQLQueries": {
      "additionalProperties": false,
      "description": "List of issues and JQL queries.",
      "properties": {
        "issueIds": {
          "description": "A list of issue IDs.",
          "items": {
            "description": "A list of issue IDs.",
            "format": "int64",
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": true
        },
        "jqls": {
          "description": "A list of JQL queries.",
          "items": {
            "description": "A list of JQL queries.",
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "issueIds",
        "jqls"
      ],
      "type": "object"
    },
    "IssuesJqlMetaDataBean": {
      "additionalProperties": false,
      "description": "The description of the page of issues loaded by the provided JQL query.",
      "properties": {
        "count": {
          "description": "The number of issues that were loaded in this evaluation.",
          "format": "int32",
          "type": "integer"
        },
        "maxResults": {
          "description": "The maximum number of issues that could be loaded in this evaluation.",
          "format": "int32",
          "type": "integer"
        },
        "startAt": {
          "description": "The index of the first issue.",
          "format": "int64",
          "type": "integer"
        },
        "totalCount": {
          "description": "The total number of issues the JQL returned.",
          "format": "int64",
          "type": "integer"
        },
        "validationWarnings": {
          "description": "Any warnings related to the JQL query. Present only if the validation mode was set to `warn`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "count",
        "maxResults",
        "startAt",
        "totalCount"
      ],
      "type": "object"
    },
    "IssuesMetaBean": {
      "additionalProperties": false,
      "description": "Meta data describing the `issues` context variable.",
      "properties": {
        "jql": {
          "$ref": "#/definitions/IssuesJqlMetaDataBean"
        }
      },
      "type": "object"
    },
    "IssuesUpdateBean": {
      "additionalProperties": true,
      "properties": {
        "issueUpdates": {
          "items": {
            "$ref": "#/definitions/IssueUpdateDetails"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "JQLPersonalDataMigrationRequest": {
      "additionalProperties": false,
      "description": "The JQL queries to be converted.",
      "properties": {
        "queryStrings": {
          "description": "A list of queries with user identifiers. Maximum of 100 queries.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "JQLQueryWithUnknownUsers": {
      "additionalProperties": false,
      "description": "JQL queries that contained users that could not be found",
      "properties": {
        "convertedQuery": {
          "description": "The converted query, with accountIDs instead of user identifiers, or 'unknown' for users that could not be found",
          "type": "string"
        },
        "originalQuery": {
          "description": "The original query, for reference",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JQLReferenceData": {
      "additionalProperties": false,
      "description": "Lists of JQL reference data.",
      "properties": {
        "jqlReservedWords": {
          "description": "List of JQL query reserved words.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "visibleFieldNames": {
          "description": "List of fields usable in JQL queries.",
          "items": {
            "$ref": "#/definitions/FieldReferenceData"
          },
          "type": "array"
        },
        "visibleFunctionNames": {
          "description": "List of functions usable in JQL queries.",
          "items": {
            "$ref": "#/definitions/FunctionReferenceData"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "JexpIssues": {
      "additionalProperties": false,
      "description": "The JQL specifying the issues available in the evaluated Jira expression under the `issues` context variable.",
      "properties": {
        "jql": {
          "allOf": [
            {
              "$ref": "#/definitions/JexpJqlIssues"
            }
          ],
          "description": "The JQL query that specifies the set of issues available in the Jira expression."
        }
      },
      "type": "object"
    },
    "JexpJqlIssues": {
      "additionalProperties": false,
      "description": "The JQL specifying the issues available in the evaluated Jira expression under the `issues` context variable. Not all issues returned by the JQL query are loaded, only those described by the `startAt` and `maxResults` properties. To determine whether it is necessary to iterate to ensure all the issues returned by the JQL query are evaluated, inspect `meta.issues.jql.count` in the response.",
      "properties": {
        "maxResults": {
          "description": "The maximum number of issues to return from the JQL query. Inspect `meta.issues.jql.maxResults` in the response to ensure the maximum value has not been exceeded.",
          "format": "int32",
          "type": "integer"
        },
        "query": {
          "description": "The JQL query.",
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first issue to return from the JQL query.",
          "format": "int64",
          "type": "integer"
        },
        "validation": {
          "default": "strict",
          "description": "Determines how to validate the JQL query and treat the validation results.",
          "enum": [
            "strict",
            "warn",
            "none"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "JiraExpressionAnalysis": {
      "additionalProperties": false,
      "description": "Details about the analysed Jira expression.",
      "properties": {
        "errors": {
          "description": "A list of validation errors. Not included if the expression is valid.",
          "items": {
            "$ref": "#/definitions/JiraExpressionValidationError"
          },
          "type": "array"
        },
        "expression": {
          "description": "The analysed expression.",
          "type": "string"
        },
        "valid": {
          "description": "Whether the expression is valid and the interpreter will evaluate it. Note that the expression may fail at runtime (for example, if it executes too many expensive operations).",
          "type": "boolean"
        }
      },
      "required": [
        "expression",
        "valid"
      ],
      "type": "object"
    },
    "JiraExpressionEvalContextBean": {
      "additionalProperties": false,
      "properties": {
        "board": {
          "description": "The ID of the board that is available under the `board` variable when evaluating the expression.",
          "format": "int64",
          "type": "integer"
        },
        "customerRequest": {
          "description": "The ID of the customer request that is available under the `customerRequest` variable when evaluating the expression. This is the same as the ID of the underlying Jira issue, but the customer request context variable will have a different type.",
          "format": "int64",
          "type": "integer"
        },
        "issue": {
          "allOf": [
            {
              "$ref": "#/definitions/IdOrKeyBean"
            }
          ],
          "description": "The issue that is available under the `issue` variable when evaluating the expression."
        },
        "issues": {
          "allOf": [
            {
              "$ref": "#/definitions/JexpIssues"
            }
          ],
          "description": "The collection of issues that is available under the `issues` variable when evaluating the expression."
        },
        "project": {
          "allOf": [
            {
              "$ref": "#/definitions/IdOrKeyBean"
            }
          ],
          "description": "The project that is available under the `project` variable when evaluating the expression."
        },
        "serviceDesk": {
          "description": "The ID of the service desk that is available under the `serviceDesk` variable when evaluating the expression.",
          "format": "int64",
          "type": "integer"
        },
        "sprint": {
          "description": "The ID of the sprint that is available under the `sprint` variable when evaluating the expression.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "JiraExpressionEvalRequestBean": {
      "additionalProperties": false,
      "properties": {
        "context": {
          "allOf": [
            {
              "$ref": "#/definitions/JiraExpressionEvalContextBean"
            }
          ],
          "description": "The context in which the Jira expression is evaluated."
        },
        "expression": {
          "description": "The Jira expression to evaluate.",
          "example": "{ key: issue.key, type: issue.issueType.name, links: issue.links.map(link => link.linkedIssue.id) }",
          "type": "string"
        }
      },
      "required": [
        "expression"
      ],
      "type": "object"
    },
    "JiraExpressionEvaluationMetaDataBean": {
      "additionalProperties": false,
      "properties": {
        "complexity": {
          "allOf": [
            {
              "$ref": "#/definitions/JiraExpressionsComplexityBean"
            }
          ],
          "description": "Contains information about the expression complexity. For example, the number of steps it took to evaluate the expression."
        },
        "issues": {
          "allOf": [
            {
              "$ref": "#/definitions/IssuesMetaBean"
            }
          ],
          "description": "Contains information about the `issues` variable in the context. For example, is the issues were loaded with JQL, information about the page will be included here."
        }
      },
      "type": "object"
    },
    "JiraExpressionForAnalysis": {
      "additionalProperties": false,
      "description": "Details of Jira expressions for analysis.",
      "properties": {
        "expressions": {
          "description": "The list of Jira expressions to analyse.",
          "example": "a -> 1",
          "items": {
            "description": "The list of Jira expressions to analyse.",
            "example": "a -> 1",
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "expressions"
      ],
      "type": "object"
    },
    "JiraExpressionResult": {
      "additionalProperties": false,
      "description": "The result of evaluating a Jira expression.",
      "properties": {
        "meta": {
          "allOf": [
            {
              "$ref": "#/definitions/JiraExpressionEvaluationMetaDataBean"
            }
          ],
          "description": "Contains various characteristics of the performed expression evaluation."
        },
        "value": {
          "description": "The value of the evaluated expression. It may be a primitive JSON value or a Jira REST API object. (Some expressions do not produce any meaningful results—for example, an expression that returns a lambda function—if that's the case a simple string representation is returned. These string representations should not be relied upon and may change without notice.)"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "JiraExpressionValidationError": {
      "additionalProperties": false,
      "description": "Details about a syntax error.",
      "properties": {
        "column": {
          "description": "The text column in which the error occurred. If absent, the error pertains to the entire expression.",
          "format": "int32",
          "type": "integer"
        },
        "line": {
          "description": "The text line in which the error occurred. If absent, the error pertains to the entire expression.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "The detailed message about the error.",
          "example": "!, -, typeof, (, IDENTIFIER, null, true, false, NUMBER, STRING, new, [ or { expected, > encountered.",
          "type": "string"
        },
        "type": {
          "description": "The error type.",
          "enum": [
            "syntax",
            "other"
          ],
          "type": "string"
        }
      },
      "required": [
        "message",
        "type"
      ],
      "type": "object"
    },
    "JiraExpressionsAnalysis": {
      "additionalProperties": false,
      "description": "Details about the analysed Jira expression.",
      "properties": {
        "results": {
          "description": "The results of Jira expressions analysis.",
          "items": {
            "$ref": "#/definitions/JiraExpressionAnalysis"
          },
          "type": "array"
        }
      },
      "required": [
        "results"
      ],
      "type": "object"
    },
    "JiraExpressionsComplexityBean": {
      "additionalProperties": false,
      "properties": {
        "beans": {
          "allOf": [
            {
              "$ref": "#/definitions/JiraExpressionsComplexityValueBean"
            }
          ],
          "description": "The number of Jira REST API beans returned in the response."
        },
        "expensiveOperations": {
          "allOf": [
            {
              "$ref": "#/definitions/JiraExpressionsComplexityValueBean"
            }
          ],
          "description": "The number of expensive operations executed while evaluating the expression. Expensive operations are those that load additional data, such as entity properties, comments, or custom fields."
        },
        "primitiveValues": {
          "allOf": [
            {
              "$ref": "#/definitions/JiraExpressionsComplexityValueBean"
            }
          ],
          "description": "The number of primitive values returned in the response."
        },
        "steps": {
          "allOf": [
            {
              "$ref": "#/definitions/JiraExpressionsComplexityValueBean"
            }
          ],
          "description": "The number of steps it took to evaluate the expression, where a step is a high-level operation performed by the expression. A step is an operation such as arithmetic, accessing a property, accessing a context variable, or calling a function."
        }
      },
      "type": "object"
    },
    "JiraExpressionsComplexityValueBean": {
      "additionalProperties": false,
      "properties": {
        "limit": {
          "description": "The maximum allowed complexity. The evaluation will fail if this value is exceeded.",
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "description": "The complexity value of the current expression.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "limit",
        "value"
      ],
      "type": "object"
    },
    "JqlQueriesToParse": {
      "additionalProperties": false,
      "description": "A list of JQL queries to parse.",
      "properties": {
        "queries": {
          "description": "A list of queries to parse.",
          "items": {
            "minLength": 1,
            "type": "string"
          },
          "minLength": 1,
          "type": "array"
        }
      },
      "required": [
        "queries"
      ],
      "type": "object",
      "writeOnly": true
    },
    "JqlQuery": {
      "additionalProperties": false,
      "description": "A parsed JQL query.",
      "properties": {
        "orderBy": {
          "$ref": "#/definitions/JqlQueryOrderByClause"
        },
        "where": {
          "$ref": "#/definitions/JqlQueryClause"
        }
      },
      "type": "object"
    },
    "JqlQueryClause": {
      "additionalProperties": false,
      "description": "A JQL query clause.",
      "type": "object"
    },
    "JqlQueryClauseOperand": {
      "description": "Details of an operand in a JQL clause.",
      "type": "object"
    },
    "JqlQueryClauseTimePredicate": {
      "description": "A time predicate for a temporal JQL clause.",
      "properties": {
        "operand": {
          "$ref": "#/definitions/JqlQueryClauseOperand"
        },
        "operator": {
          "description": "The operator between the field and the operand.",
          "enum": [
            "before",
            "after",
            "from",
            "to",
            "on",
            "during",
            "by"
          ],
          "type": "string"
        }
      },
      "required": [
        "operand",
        "operator"
      ],
      "type": "object"
    },
    "JqlQueryField": {
      "additionalProperties": false,
      "description": "A field used in a JQL query. See [Advanced searching - fields reference](https://confluence.atlassian.com/x/dAiiLQ) for more information about fields in JQL queries.",
      "properties": {
        "name": {
          "description": "The name of the field.",
          "type": "string"
        },
        "property": {
          "description": "When the field refers to a value in an entity property, details of the entity property value.",
          "items": {
            "$ref": "#/definitions/JqlQueryFieldEntityProperty"
          },
          "type": "array"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "JqlQueryFieldEntityProperty": {
      "description": "Details of an entity property.",
      "properties": {
        "entity": {
          "description": "The object on which the property is set.",
          "example": "issue",
          "type": "string"
        },
        "key": {
          "description": "The key of the property.",
          "example": "stats",
          "type": "string"
        },
        "path": {
          "description": "The path in the property value to query.",
          "example": "comments.count",
          "type": "string"
        },
        "type": {
          "description": "The type of the property value extraction. Not available if the extraction for the property is not registered on the instance with the [Entity property](https://developer.atlassian.com/cloud/jira/platform/modules/entity-property/) module.",
          "enum": [
            "number",
            "string",
            "text",
            "date",
            "user"
          ],
          "example": "number",
          "type": "string"
        }
      },
      "required": [
        "entity",
        "key",
        "path"
      ],
      "type": "object"
    },
    "JqlQueryOrderByClause": {
      "additionalProperties": false,
      "description": "Details of the order-by JQL clause.",
      "properties": {
        "fields": {
          "description": "The list of order-by clause fields and their ordering directives.",
          "items": {
            "$ref": "#/definitions/JqlQueryOrderByClauseElement"
          },
          "type": "array"
        }
      },
      "required": [
        "fields"
      ],
      "type": "object"
    },
    "JqlQueryOrderByClauseElement": {
      "additionalProperties": false,
      "description": "An element of the order-by JQL clause.",
      "properties": {
        "direction": {
          "description": "The direction in which to order the results.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "field": {
          "$ref": "#/definitions/JqlQueryField"
        }
      },
      "type": "object"
    },
    "JqlQueryUnitaryOperand": {
      "description": "An operand that can be part of a list operand.",
      "type": "object"
    },
    "JsonNode": {
      "additionalProperties": false,
      "maxProperties": 10,
      "minProperties": 1,
      "properties": {
        "array": {
          "type": "boolean"
        },
        "bigDecimal": {
          "type": "boolean"
        },
        "bigInteger": {
          "type": "boolean"
        },
        "bigIntegerValue": {
          "type": "integer"
        },
        "binary": {
          "type": "boolean"
        },
        "binaryValue": {
          "items": {
            "format": "byte",
            "type": "string"
          },
          "type": "array"
        },
        "boolean": {
          "type": "boolean"
        },
        "booleanValue": {
          "type": "boolean"
        },
        "containerNode": {
          "type": "boolean"
        },
        "decimalValue": {
          "type": "number"
        },
        "double": {
          "type": "boolean"
        },
        "doubleValue": {
          "format": "double",
          "type": "number"
        },
        "elements": {
          "type": "object"
        },
        "fieldNames": {
          "type": "object"
        },
        "fields": {
          "type": "object"
        },
        "floatingPointNumber": {
          "type": "boolean"
        },
        "int": {
          "type": "boolean"
        },
        "intValue": {
          "format": "int32",
          "type": "integer"
        },
        "integralNumber": {
          "type": "boolean"
        },
        "long": {
          "type": "boolean"
        },
        "longValue": {
          "format": "int64",
          "type": "integer"
        },
        "missingNode": {
          "type": "boolean"
        },
        "null": {
          "type": "boolean"
        },
        "number": {
          "type": "boolean"
        },
        "numberType": {
          "enum": [
            "INT",
            "LONG",
            "BIG_INTEGER",
            "FLOAT",
            "DOUBLE",
            "BIG_DECIMAL"
          ],
          "type": "string"
        },
        "numberValue": {
          "type": "number"
        },
        "object": {
          "type": "boolean"
        },
        "pojo": {
          "type": "boolean"
        },
        "textValue": {
          "type": "string"
        },
        "textual": {
          "type": "boolean"
        },
        "valueAsBoolean": {
          "type": "boolean"
        },
        "valueAsDouble": {
          "format": "double",
          "type": "number"
        },
        "valueAsInt": {
          "format": "int32",
          "type": "integer"
        },
        "valueAsLong": {
          "format": "int64",
          "type": "integer"
        },
        "valueAsText": {
          "type": "string"
        },
        "valueNode": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "JsonTypeBean": {
      "additionalProperties": false,
      "description": "The schema of a field.",
      "properties": {
        "configuration": {
          "additionalProperties": {
            "readOnly": true
          },
          "description": "If the field is a custom field, the configuration of the field.",
          "readOnly": true,
          "type": "object"
        },
        "custom": {
          "description": "If the field is a custom field, the URI of the field.",
          "readOnly": true,
          "type": "string"
        },
        "customId": {
          "description": "If the field is a custom field, the custom ID of the field.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "items": {
          "description": "When the data type is an array, the name of the field items within the array.",
          "readOnly": true,
          "type": "string"
        },
        "system": {
          "description": "If the field is a system field, the name of the field.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The data type of the field.",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "KeywordOperand": {
      "description": "An operand that is a JQL keyword. See [Advanced searching - keywords reference](https://confluence.atlassian.com/jiracorecloud/advanced-searching-keywords-reference-765593717.html#Advancedsearching-keywordsreference-EMPTYEMPTY) for more information about operand keywords.",
      "properties": {
        "keyword": {
          "description": "The keyword that is the operand value.",
          "enum": [
            "empty"
          ],
          "type": "string"
        }
      },
      "required": [
        "keyword"
      ],
      "type": "object"
    },
    "LinkGroup": {
      "additionalProperties": false,
      "description": "Details a link group, which defines issue operations.",
      "properties": {
        "groups": {
          "items": {
            "$ref": "#/definitions/LinkGroup"
          },
          "type": "array"
        },
        "header": {
          "$ref": "#/definitions/SimpleLink"
        },
        "id": {
          "type": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/SimpleLink"
          },
          "type": "array"
        },
        "styleClass": {
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "LinkIssueRequestJsonBean": {
      "additionalProperties": false,
      "properties": {
        "comment": {
          "$ref": "#/definitions/Comment"
        },
        "inwardIssue": {
          "$ref": "#/definitions/LinkedIssue"
        },
        "outwardIssue": {
          "$ref": "#/definitions/LinkedIssue"
        },
        "type": {
          "$ref": "#/definitions/IssueLinkType"
        }
      },
      "type": "object"
    },
    "LinkedIssue": {
      "additionalProperties": false,
      "description": "The ID or key of a linked issue.",
      "properties": {
        "fields": {
          "allOf": [
            {
              "$ref": "#/definitions/Fields"
            }
          ],
          "description": "The fields associated with the issue.",
          "readOnly": true
        },
        "id": {
          "description": "The ID of an issue. Required if `key` isn't provided.",
          "type": "string"
        },
        "key": {
          "description": "The key of an issue. Required if `id` isn't provided.",
          "type": "string"
        },
        "self": {
          "description": "The URL of the issue.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListOperand": {
      "description": "An operand that is a list of values.",
      "properties": {
        "values": {
          "description": "The list of operand values.",
          "items": {
            "$ref": "#/definitions/JqlQueryUnitaryOperand"
          },
          "minLength": 1,
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListWrapperCallbackApplicationRole": {
      "additionalProperties": false,
      "type": "object"
    },
    "ListWrapperCallbackGroupName": {
      "additionalProperties": false,
      "type": "object"
    },
    "Locale": {
      "additionalProperties": false,
      "description": "Details of a locale.",
      "properties": {
        "locale": {
          "description": "The locale code. The Java the locale format is used: a two character language code (ISO 639), an underscore, and two letter country code (ISO 3166). For example, en\\_US represents a locale of English (United States). Required on create.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MoveFieldBean": {
      "additionalProperties": false,
      "properties": {
        "after": {
          "description": "The ID of the screen tab field after which to place the moved screen tab field. Required if `position` isn't provided.",
          "format": "uri",
          "type": "string"
        },
        "position": {
          "description": "The named position to which the screen tab field should be moved. Required if `after` isn't provided.",
          "enum": [
            "Earlier",
            "Later",
            "First",
            "Last"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "NestedResponse": {
      "additionalProperties": false,
      "properties": {
        "errorCollection": {
          "$ref": "#/definitions/ErrorCollection"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Notification": {
      "additionalProperties": true,
      "description": "Details about a notification.",
      "properties": {
        "htmlBody": {
          "description": "The HTML body of the email notification for the issue.",
          "type": "string"
        },
        "restrict": {
          "allOf": [
            {
              "$ref": "#/definitions/NotificationRecipientsRestrictions"
            }
          ],
          "description": "Restricts the notifications to users with the specified permissions."
        },
        "subject": {
          "description": "The subject of the email notification for the issue. If this is not specified, then the subject is set to the issue key and summary.",
          "type": "string"
        },
        "textBody": {
          "description": "The plain text body of the email notification for the issue.",
          "type": "string"
        },
        "to": {
          "allOf": [
            {
              "$ref": "#/definitions/NotificationRecipients"
            }
          ],
          "description": "The recipients of the email notification for the issue."
        }
      },
      "type": "object"
    },
    "NotificationEvent": {
      "additionalProperties": false,
      "description": "Details about a notification event.",
      "properties": {
        "description": {
          "description": "The description of the event.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the event. The event can be a [Jira system event](https://confluence.atlassian.com/x/8YdKLg#Creatinganotificationscheme-eventsEvents) or a [custom event](https://confluence.atlassian.com/x/AIlKLg).",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "The name of the event.",
          "type": "string"
        },
        "templateEvent": {
          "allOf": [
            {
              "$ref": "#/definitions/NotificationEvent"
            }
          ],
          "description": "The template of the event. Only custom events configured by Jira administrators have template."
        }
      },
      "type": "object"
    },
    "NotificationRecipients": {
      "additionalProperties": true,
      "description": "Details of the users and groups to receive the notification.",
      "properties": {
        "assignee": {
          "description": "Whether the notification should be sent to the issue's assignees.",
          "type": "boolean"
        },
        "groups": {
          "description": "List of groups to receive the notification.",
          "items": {
            "$ref": "#/definitions/GroupName"
          },
          "type": "array"
        },
        "reporter": {
          "description": "Whether the notification should be sent to the issue's reporter.",
          "type": "boolean"
        },
        "users": {
          "description": "List of users to receive the notification.",
          "items": {
            "$ref": "#/definitions/UserDetails"
          },
          "type": "array"
        },
        "voters": {
          "description": "Whether the notification should be sent to the issue's voters.",
          "type": "boolean"
        },
        "watchers": {
          "description": "Whether the notification should be sent to the issue's watchers.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "NotificationRecipientsRestrictions": {
      "additionalProperties": false,
      "description": "Details of the group membership or permissions needed to receive the notification.",
      "properties": {
        "groups": {
          "description": "List of group memberships required to receive the notification.",
          "items": {
            "$ref": "#/definitions/GroupName"
          },
          "type": "array"
        },
        "permissions": {
          "description": "List of permissions required to receive the notification.",
          "items": {
            "$ref": "#/definitions/RestrictedPermission"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "NotificationScheme": {
      "additionalProperties": false,
      "description": "Details about a notification scheme.",
      "properties": {
        "description": {
          "description": "The description of the notification scheme.",
          "type": "string"
        },
        "expand": {
          "description": "Expand options that include additional notification scheme details in the response.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the notification scheme.",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "The name of the notification scheme.",
          "type": "string"
        },
        "notificationSchemeEvents": {
          "description": "The notification events and associated recipients.",
          "items": {
            "$ref": "#/definitions/NotificationSchemeEvent"
          },
          "type": "array"
        },
        "scope": {
          "allOf": [
            {
              "$ref": "#/definitions/Scope"
            }
          ],
          "description": "The scope of the notification scheme."
        },
        "self": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "NotificationSchemeEvent": {
      "additionalProperties": false,
      "description": "Details about a notification scheme event.",
      "properties": {
        "event": {
          "$ref": "#/definitions/NotificationEvent"
        },
        "notifications": {
          "items": {
            "$ref": "#/definitions/EventNotification"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "OperationMessage": {
      "additionalProperties": false,
      "example": {
        "message": "An example message.",
        "statusCode": 200
      },
      "properties": {
        "message": {
          "description": "The human-readable message that describes the result.",
          "type": "string"
        },
        "statusCode": {
          "description": "The status code of the response.",
          "type": "integer"
        }
      },
      "required": [
        "message",
        "statusCode"
      ],
      "type": "object"
    },
    "Operations": {
      "additionalProperties": true,
      "description": "Details of the operations that can be performed on the issue.",
      "properties": {
        "linkGroups": {
          "description": "Details of the link groups defining issue operations.",
          "items": {
            "$ref": "#/definitions/LinkGroup"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanChangelog": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/Changelog"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanComment": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/Comment"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanComponentWithIssueCount": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/ComponentWithIssueCount"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanContext": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/Context"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanCustomFieldOptionDetails": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/CustomFieldOptionDetails"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanDashboard": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/Dashboard"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanField": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/Field"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanFieldConfiguration": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/FieldConfiguration"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanFieldConfigurationIssueTypeItem": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/FieldConfigurationIssueTypeItem"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanFieldConfigurationItem": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/FieldConfigurationItem"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanFieldConfigurationScheme": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/FieldConfigurationScheme"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanFieldConfigurationSchemeProjects": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/FieldConfigurationSchemeProjects"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanFoundFilter": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/FoundFilter"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanIssueFieldOption": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/IssueFieldOption"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanIssueSecurityLevelMember": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/IssueSecurityLevelMember"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanIssueTypeScheme": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/IssueTypeScheme"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanIssueTypeSchemeMapping": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/IssueTypeSchemeMapping"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanIssueTypeSchemeProjects": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/IssueTypeSchemeProjects"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanIssueTypeScreenScheme": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/IssueTypeScreenScheme"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanIssueTypeScreenSchemeItem": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/IssueTypeScreenSchemeItem"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanIssueTypeScreenSchemesProjects": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/IssueTypeScreenSchemesProjects"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanNotificationScheme": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/NotificationScheme"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanProject": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/Project"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanScreen": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/Screen"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanScreenScheme": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/ScreenScheme"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanString": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "readOnly": true,
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanUser": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/User"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanUserDetails": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/UserDetails"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanUserKey": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/UserKey"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanVersion": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/Version"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanWebhook": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/Webhook"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanWorkflow": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/Workflow"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanWorkflowScheme": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/WorkflowScheme"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageBeanWorkflowTransitionRules": {
      "additionalProperties": false,
      "description": "A page of items.",
      "properties": {
        "isLast": {
          "description": "Whether this is the last page.",
          "readOnly": true,
          "type": "boolean"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "nextPage": {
          "description": "If there is another page of results, the URL of the next page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the page.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "values": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/WorkflowTransitionRules"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageOfChangelogs": {
      "additionalProperties": false,
      "description": "A page of changelogs.",
      "properties": {
        "histories": {
          "description": "The list of changelogs.",
          "items": {
            "$ref": "#/definitions/Changelog"
          },
          "readOnly": true,
          "type": "array"
        },
        "maxResults": {
          "description": "The maximum number of results that could be on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "startAt": {
          "description": "The index of the first item returned on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of results on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "PageOfComments": {
      "additionalProperties": true,
      "description": "A page of comments.",
      "properties": {
        "comments": {
          "description": "The list of comments.",
          "items": {
            "$ref": "#/definitions/Comment"
          },
          "readOnly": true,
          "type": "array"
        },
        "maxResults": {
          "description": "The maximum number of items that could be returned.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "startAt": {
          "description": "The index of the first item returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of items returned.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "PageOfDashboards": {
      "additionalProperties": false,
      "description": "A page containing dashboard details.",
      "properties": {
        "dashboards": {
          "description": "List of dashboards.",
          "items": {
            "$ref": "#/definitions/Dashboard"
          },
          "readOnly": true,
          "type": "array"
        },
        "maxResults": {
          "description": "The maximum number of results that could be on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "next": {
          "description": "The URL of the next page of results, if any.",
          "readOnly": true,
          "type": "string"
        },
        "prev": {
          "description": "The URL of the previous page of results, if any.",
          "readOnly": true,
          "type": "string"
        },
        "startAt": {
          "description": "The index of the first item returned on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of results on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "PageOfWorklogs": {
      "additionalProperties": true,
      "description": "Paginated list of worklog details",
      "properties": {
        "maxResults": {
          "description": "The maximum number of results that could be on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "startAt": {
          "description": "The index of the first item returned on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of results on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "worklogs": {
          "description": "List of worklogs.",
          "items": {
            "$ref": "#/definitions/Worklog"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PagedListUserDetailsApplicationUser": {
      "additionalProperties": false,
      "description": "A paged list. To access additional details append `[start-index:end-index]` to the expand request. For example, `?expand=sharedUsers[10:40]` returns a list starting at item 10 and finishing at item 40.",
      "properties": {
        "end-index": {
          "description": "The index of the last item returned on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer",
          "xml": {
            "attribute": true,
            "name": "end-index"
          }
        },
        "items": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/UserDetails"
          },
          "readOnly": true,
          "type": "array"
        },
        "max-results": {
          "description": "The maximum number of results that could be on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer",
          "xml": {
            "attribute": true,
            "name": "max-results"
          }
        },
        "size": {
          "description": "The number of items on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer",
          "xml": {
            "attribute": true
          }
        },
        "start-index": {
          "description": "The index of the first item returned on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer",
          "xml": {
            "attribute": true,
            "name": "start-index"
          }
        }
      },
      "type": "object"
    },
    "ParsedJqlQueries": {
      "additionalProperties": false,
      "description": "A list of parsed JQL queries.",
      "properties": {
        "queries": {
          "description": "A list of parsed JQL queries.",
          "items": {
            "$ref": "#/definitions/ParsedJqlQuery"
          },
          "minLength": 1,
          "type": "array"
        }
      },
      "required": [
        "queries"
      ],
      "type": "object"
    },
    "ParsedJqlQuery": {
      "additionalProperties": false,
      "description": "Details of a parsed JQL query.",
      "minLength": 1,
      "properties": {
        "errors": {
          "description": "The list of syntax or validation errors.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "query": {
          "description": "The JQL query that was parsed and validated.",
          "type": "string"
        },
        "structure": {
          "allOf": [
            {
              "$ref": "#/definitions/JqlQuery"
            }
          ],
          "description": "The syntax tree of the query. Empty if the query was invalid."
        }
      },
      "required": [
        "query"
      ],
      "type": "object"
    },
    "PermissionGrant": {
      "additionalProperties": false,
      "description": "Details about a permission granted to a user or group.",
      "properties": {
        "holder": {
          "allOf": [
            {
              "$ref": "#/definitions/PermissionHolder"
            }
          ],
          "description": "The user or group being granted the permission. It consists of a `type` and a type-dependent `parameter`. See [Holder object](#holder-object) in *Get all permission schemes* for more information."
        },
        "id": {
          "description": "The ID of the permission granted details.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "permission": {
          "description": "The permission to grant. This permission can be one of the built-in permissions or a custom permission added by an app. See [Built-in permissions](#built-in-permissions) in *Get all permission schemes* for more information about the built-in permissions. See the [project permission](https://developer.atlassian.com/cloud/jira/platform/modules/project-permission/) and [global permission](https://developer.atlassian.com/cloud/jira/platform/modules/global-permission/) module documentation for more information about custom permissions.",
          "type": "string"
        },
        "self": {
          "description": "The URL of the permission granted details.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "PermissionGrants": {
      "additionalProperties": false,
      "description": "List of permission grants.",
      "properties": {
        "expand": {
          "description": "Expand options that include additional permission grant details in the response.",
          "readOnly": true,
          "type": "string"
        },
        "permissions": {
          "description": "Permission grants list.",
          "items": {
            "$ref": "#/definitions/PermissionGrant"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PermissionHolder": {
      "additionalProperties": false,
      "description": "Details of a user, group, field, or project role that holds a permission. See [Holder object](#holder-object) in *Get all permission schemes* for more information.",
      "properties": {
        "expand": {
          "description": "Expand options that include additional permission holder details in the response.",
          "readOnly": true,
          "type": "string"
        },
        "parameter": {
          "description": "The identifier of permission holder.",
          "type": "string"
        },
        "type": {
          "description": "The type of permission holder.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "PermissionScheme": {
      "additionalProperties": true,
      "description": "Details of a permission scheme.",
      "properties": {
        "description": {
          "description": "A description for the permission scheme.",
          "type": "string"
        },
        "expand": {
          "description": "The expand options available for the permission scheme.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the permission scheme.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "The name of the permission scheme. Must be unique.",
          "type": "string"
        },
        "permissions": {
          "description": "The permission scheme to create or update. See [About permission schemes and grants](#about-permission-schemes-and-grants) for more information.",
          "items": {
            "$ref": "#/definitions/PermissionGrant"
          },
          "type": "array"
        },
        "scope": {
          "allOf": [
            {
              "$ref": "#/definitions/Scope"
            }
          ],
          "description": "The scope of the permission scheme."
        },
        "self": {
          "description": "The URL of the permission scheme.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "PermissionSchemes": {
      "additionalProperties": false,
      "description": "List of all permission schemes.",
      "properties": {
        "permissionSchemes": {
          "description": "Permission schemes list.",
          "items": {
            "$ref": "#/definitions/PermissionScheme"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "Permissions": {
      "additionalProperties": false,
      "description": "Details about permissions.",
      "properties": {
        "permissions": {
          "additionalProperties": {
            "$ref": "#/definitions/UserPermission"
          },
          "description": "List of permissions.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "PermissionsKeysBean": {
      "additionalProperties": false,
      "properties": {
        "permissions": {
          "description": "A list of permission keys.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "permissions"
      ],
      "type": "object"
    },
    "PermittedProjects": {
      "additionalProperties": false,
      "description": "A list of projects in which a user is granted permissions.",
      "properties": {
        "projects": {
          "description": "A list of projects.",
          "items": {
            "$ref": "#/definitions/ProjectIdentifierBean"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "Priority": {
      "additionalProperties": true,
      "description": "An issue priority.",
      "properties": {
        "description": {
          "description": "The description of the issue priority.",
          "type": "string"
        },
        "iconUrl": {
          "description": "The URL of the icon for the issue priority.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the issue priority.",
          "type": "string"
        },
        "name": {
          "description": "The name of the issue priority.",
          "type": "string"
        },
        "self": {
          "description": "The URL of the issue priority.",
          "type": "string"
        },
        "statusColor": {
          "description": "The color used to indicate the issue priority.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Project": {
      "additionalProperties": false,
      "description": "Details about a project.",
      "properties": {
        "components": {
          "description": "List of the components contained in the project.",
          "items": {
            "$ref": "#/definitions/Component"
          },
          "readOnly": true,
          "type": "array"
        },
        "archived": {
          "description": "Whether the project is archived.",
          "readOnly": true,
          "type": "boolean"
        },
        "archivedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/User"
            }
          ],
          "description": "The user who archived the project.",
          "readOnly": true
        },
        "archivedDate": {
          "description": "The date when the project was archived.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "assigneeType": {
          "description": "The default assignee when creating issues for this project.",
          "enum": [
            "PROJECT_LEAD",
            "UNASSIGNED"
          ],
          "readOnly": true,
          "type": "string"
        },
        "avatarUrls": {
          "allOf": [
            {
              "$ref": "#/definitions/AvatarUrlsBean"
            }
          ],
          "description": "The URLs of the project's avatars.",
          "readOnly": true
        },
        "deleted": {
          "description": "Whether the project is marked as deleted.",
          "readOnly": true,
          "type": "boolean"
        },
        "deletedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/User"
            }
          ],
          "description": "The user who marked the project as deleted.",
          "readOnly": true
        },
        "deletedDate": {
          "description": "The date when the project was marked as deleted.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "A brief description of the project.",
          "readOnly": true,
          "type": "string"
        },
        "email": {
          "description": "An email address associated with the project.",
          "type": "string"
        },
        "expand": {
          "description": "Expand options that include additional project details in the response.",
          "readOnly": true,
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "favourite": {
          "description": "Whether the project is selected as a favorite.",
          "type": "boolean"
        },
        "id": {
          "description": "The ID of the project.",
          "type": "string"
        },
        "insight": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectInsight"
            }
          ],
          "description": "Insights about the project.",
          "readOnly": true
        },
        "isPrivate": {
          "description": "Whether the project is private.",
          "readOnly": true,
          "type": "boolean"
        },
        "issueTypeHierarchy": {
          "allOf": [
            {
              "$ref": "#/definitions/Hierarchy"
            }
          ],
          "description": "The issue type hierarchy for the project",
          "readOnly": true
        },
        "issueTypes": {
          "description": "List of the issue types available in the project.",
          "items": {
            "$ref": "#/definitions/IssueTypeDetails"
          },
          "readOnly": true,
          "type": "array"
        },
        "key": {
          "description": "The key of the project.",
          "readOnly": true,
          "type": "string"
        },
        "lead": {
          "allOf": [
            {
              "$ref": "#/definitions/User"
            }
          ],
          "description": "The username of the project lead.",
          "readOnly": true
        },
        "name": {
          "description": "The name of the project.",
          "readOnly": true,
          "type": "string"
        },
        "permissions": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectPermissions"
            }
          ],
          "description": "User permissions on the project",
          "readOnly": true
        },
        "projectCategory": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectCategory"
            }
          ],
          "description": "The category the project belongs to.",
          "readOnly": true
        },
        "projectTypeKey": {
          "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
          "enum": [
            "software",
            "service_desk",
            "business"
          ],
          "readOnly": true,
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "readOnly": true
          },
          "description": "Map of project properties",
          "readOnly": true,
          "type": "object"
        },
        "retentionTillDate": {
          "description": "The date when the project is deleted permanently.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "roles": {
          "additionalProperties": {
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "description": "The name and self URL for each role defined in the project. For more information, see [Create project role](#api-rest-api-3-role-post).",
          "readOnly": true,
          "type": "object"
        },
        "self": {
          "description": "The URL of the project details.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "simplified": {
          "description": "Whether the project is simplified.",
          "readOnly": true,
          "type": "boolean"
        },
        "style": {
          "description": "The type of the project.",
          "enum": [
            "CLASSIC",
            "NEXTGEN",
            "classic",
            "next-gen"
          ],
          "readOnly": true,
          "type": "string"
        },
        "url": {
          "description": "A link to information about this project, such as project documentation.",
          "readOnly": true,
          "type": "string"
        },
        "uuid": {
          "description": "Unique ID for next-gen projects.",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "versions": {
          "description": "The versions defined in the project. For more information, see [Create version](#api-rest-api-3-version-post).",
          "items": {
            "$ref": "#/definitions/Version"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object",
      "xml": {
        "name": "project"
      }
    },
    "ProjectAvatars": {
      "additionalProperties": false,
      "description": "List of project avatars.",
      "properties": {
        "custom": {
          "description": "List of avatars added to Jira. These avatars may be deleted.",
          "items": {
            "$ref": "#/definitions/Avatar"
          },
          "readOnly": true,
          "type": "array"
        },
        "system": {
          "description": "List of avatars included with Jira. These avatars cannot be deleted.",
          "items": {
            "$ref": "#/definitions/Avatar"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "ProjectCategory": {
      "additionalProperties": false,
      "description": "A project category.",
      "properties": {
        "description": {
          "description": "The description of the project category. Required on create, optional on update.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the project category.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the project category. Required on create, optional on update.",
          "type": "string"
        },
        "self": {
          "description": "The URL of the project category.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProjectForScope": {
      "additionalProperties": false,
      "description": "Details about a next-gen project.",
      "properties": {
        "avatarUrls": {
          "allOf": [
            {
              "$ref": "#/definitions/AvatarUrlsBean"
            }
          ],
          "description": "The URLs of the project's avatars.",
          "readOnly": true
        },
        "id": {
          "description": "The ID of the project.",
          "type": "string"
        },
        "key": {
          "description": "The key of the project.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the project.",
          "readOnly": true,
          "type": "string"
        },
        "projectCategory": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdatedProjectCategory"
            }
          ],
          "description": "The category the project belongs to.",
          "readOnly": true
        },
        "projectTypeKey": {
          "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
          "enum": [
            "software",
            "service_desk",
            "business"
          ],
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the project details.",
          "readOnly": true,
          "type": "string"
        },
        "simplified": {
          "description": "Whether or not the project is simplified.",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ProjectIdentifierBean": {
      "additionalProperties": false,
      "description": "The identifiers for a project.",
      "properties": {
        "id": {
          "description": "The ID of the project.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "key": {
          "description": "The key of the project.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProjectIdentifiers": {
      "additionalProperties": false,
      "description": "Identifiers for a project.",
      "properties": {
        "id": {
          "description": "The ID of the created project.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "key": {
          "description": "The key of the created project.",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the created project.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "id",
        "key",
        "self"
      ],
      "type": "object"
    },
    "ProjectInputBean": {
      "additionalProperties": false,
      "properties": {
        "assigneeType": {
          "description": "The default assignee when creating issues for this project.",
          "enum": [
            "PROJECT_LEAD",
            "UNASSIGNED"
          ],
          "type": "string"
        },
        "avatarId": {
          "description": "An integer value for the project's avatar.",
          "format": "int64",
          "type": "integer"
        },
        "categoryId": {
          "description": "The ID of the project's category. A complete list of category IDs is found using the [Get all project categories](#api-rest-api-3-projectCategory-get) operation.",
          "format": "int64",
          "type": "integer"
        },
        "description": {
          "description": "A brief description of the project.",
          "type": "string"
        },
        "issueSecurityScheme": {
          "description": "The ID of the issue security scheme for the project, which enables you to control who can and cannot view issues. Use the [Get issue security schemes](#api-rest-api-3-issuesecurityschemes-get) resource to get all issue security scheme IDs.",
          "format": "int64",
          "type": "integer"
        },
        "key": {
          "description": "Project keys must be unique and start with an uppercase letter followed by one or more uppercase alphanumeric characters. The maximum length is 10 characters. Required when creating a project. Optional when updating a project.",
          "type": "string"
        },
        "lead": {
          "description": "This parameter is deprecated because of privacy changes. Use `leadAccountId` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. The user name of the project lead. Either `lead` or `leadAccountId` must be set when creating a project. Optional when updating a project. Cannot be provided with `leadAccountId`.",
          "type": "string"
        },
        "leadAccountId": {
          "description": "The account ID of the project lead. Either `lead` or `leadAccountId` must be set when creating a project. Optional when updating a project. Cannot be provided with `lead`.",
          "maxLength": 128,
          "type": "string"
        },
        "name": {
          "description": "The name of the project. Required when creating a project. Optional when updating a project.",
          "type": "string"
        },
        "notificationScheme": {
          "description": "The ID of the notification scheme for the project. Use the [Get notification schemes](#api-rest-api-3-notificationscheme-get) resource to get a list of notification scheme IDs.",
          "format": "int64",
          "type": "integer"
        },
        "permissionScheme": {
          "description": "The ID of the permission scheme for the project. Use the [Get all permission schemes](#api-rest-api-3-permissionscheme-get) resource to see a list of all permission scheme IDs.",
          "format": "int64",
          "type": "integer"
        },
        "projectTemplateKey": {
          "description": "A prebuilt configuration for a project. The type of the `projectTemplateKey` must match with the type of the `projectTypeKey`. Required when creating a project. Not applicable for the Update project resource.",
          "enum": [
            "com.pyxis.greenhopper.jira:gh-simplified-agility-kanban",
            "com.pyxis.greenhopper.jira:gh-simplified-agility-scrum",
            "com.pyxis.greenhopper.jira:gh-simplified-basic",
            "com.pyxis.greenhopper.jira:gh-simplified-kanban-classic",
            "com.pyxis.greenhopper.jira:gh-simplified-scrum-classic",
            "com.atlassian.servicedesk:simplified-it-service-desk",
            "com.atlassian.servicedesk:simplified-internal-service-desk",
            "com.atlassian.servicedesk:simplified-external-service-desk",
            "com.atlassian.servicedesk:simplified-hr-service-desk",
            "com.atlassian.servicedesk:simplified-facilities-service-desk",
            "com.atlassian.jira-core-project-templates:jira-core-simplified-content-management",
            "com.atlassian.jira-core-project-templates:jira-core-simplified-document-approval",
            "com.atlassian.jira-core-project-templates:jira-core-simplified-lead-tracking",
            "com.atlassian.jira-core-project-templates:jira-core-simplified-process-control",
            "com.atlassian.jira-core-project-templates:jira-core-simplified-procurement",
            "com.atlassian.jira-core-project-templates:jira-core-simplified-project-management",
            "com.atlassian.jira-core-project-templates:jira-core-simplified-recruitment",
            "com.atlassian.jira-core-project-templates:jira-core-simplified-task-",
            "com.atlassian.jira.jira-incident-management-plugin:im-incident-management"
          ],
          "type": "string"
        },
        "projectTypeKey": {
          "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes), which dictates the application-specific feature set. Required when creating a project. Not applicable for the Update project resource.",
          "enum": [
            "software",
            "service_desk",
            "business"
          ],
          "type": "string"
        },
        "url": {
          "description": "A link to information about this project, such as project documentation",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProjectInsight": {
      "additionalProperties": false,
      "description": "Additional details about a project.",
      "properties": {
        "lastIssueUpdateTime": {
          "description": "The last issue update time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "totalIssueCount": {
          "description": "Total issue count.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ProjectIssueCreateMetadata": {
      "additionalProperties": false,
      "description": "Details of the issue creation metadata for a project.",
      "properties": {
        "avatarUrls": {
          "allOf": [
            {
              "$ref": "#/definitions/AvatarUrlsBean"
            }
          ],
          "description": "List of the project's avatars, returning the avatar size and associated URL.",
          "readOnly": true
        },
        "expand": {
          "description": "Expand options that include additional project issue create metadata details in the response.",
          "readOnly": true,
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "id": {
          "description": "The ID of the project.",
          "readOnly": true,
          "type": "string"
        },
        "issuetypes": {
          "description": "List of the issue types supported by the project.",
          "items": {
            "$ref": "#/definitions/IssueTypeIssueCreateMetadata"
          },
          "readOnly": true,
          "type": "array"
        },
        "key": {
          "description": "The key of the project.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the project.",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the project.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProjectIssueSecurityLevels": {
      "additionalProperties": false,
      "description": "List of issue level security items in a project.",
      "properties": {
        "levels": {
          "description": "Issue level security items list.",
          "items": {
            "$ref": "#/definitions/SecurityLevel"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "required": [
        "levels"
      ],
      "type": "object"
    },
    "ProjectIssueTypeHierarchy": {
      "additionalProperties": false,
      "description": "The hierarchy of issue types within a project.",
      "properties": {
        "hierarchy": {
          "description": "Details of an issue type hierarchy level.",
          "items": {
            "$ref": "#/definitions/ProjectIssueTypesHierarchyLevel"
          },
          "readOnly": true,
          "type": "array"
        },
        "projectId": {
          "description": "The ID of the project.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ProjectIssueTypesHierarchyLevel": {
      "additionalProperties": false,
      "description": "Details of an issue type hierarchy level.",
      "properties": {
        "entityId": {
          "description": "The ID of the issue type hierarchy level.",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "issueTypes": {
          "description": "The list of issue types in the hierarchy level.",
          "items": {
            "$ref": "#/definitions/IssueTypeInfo"
          },
          "readOnly": true,
          "type": "array"
        },
        "level": {
          "description": "The level of the issue type hierarchy level.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "The name of the issue type hierarchy level.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProjectPermissions": {
      "additionalProperties": false,
      "description": "Permissions which a user has on a project.",
      "properties": {
        "canEdit": {
          "description": "Whether the logged user can edit the project.",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ProjectRole": {
      "additionalProperties": false,
      "description": "Details about the roles in a project.",
      "properties": {
        "actors": {
          "description": "The list of users who act in this role.",
          "items": {
            "$ref": "#/definitions/RoleActor"
          },
          "readOnly": true,
          "type": "array"
        },
        "admin": {
          "description": "Whether this role is the admin role for the project.",
          "readOnly": true,
          "type": "boolean"
        },
        "currentUserRole": {
          "description": "Whether the calling user is part of this role.",
          "type": "boolean"
        },
        "default": {
          "description": "Whether this role is the default role for the project",
          "readOnly": true,
          "type": "boolean"
        },
        "description": {
          "description": "The description of the project role.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the project role.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "The name of the project role.",
          "type": "string"
        },
        "roleConfigurable": {
          "description": "Whether the roles are configurable for this project.",
          "readOnly": true,
          "type": "boolean"
        },
        "scope": {
          "allOf": [
            {
              "$ref": "#/definitions/Scope"
            }
          ],
          "description": "The scope of the role. Indicated for roles associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).",
          "readOnly": true
        },
        "self": {
          "description": "The URL the project role details.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "translatedName": {
          "description": "The translated name of the project role.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProjectRoleActorsUpdateBean": {
      "additionalProperties": false,
      "properties": {
        "categorisedActors": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": "The actors to add to the project role. Add groups using `atlassian-group-role-actor` and a list of group names. For example, `\"atlassian-group-role-actor\":[\"another\",\"administrators\"]}`. Add users using `atlassian-user-role-actor` and a list of account IDs. For example, `\"atlassian-user-role-actor\":[\"12345678-9abc-def1-2345-6789abcdef12\", \"abcdef12-3456-789a-bcde-f123456789ab\"]`.",
          "type": "object"
        },
        "id": {
          "description": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object",
      "xml": {
        "name": "actor"
      }
    },
    "ProjectRoleGroup": {
      "additionalProperties": false,
      "description": "Details of the group associated with the role.",
      "properties": {
        "displayName": {
          "description": "The display name of the group.",
          "type": "string"
        },
        "name": {
          "description": "The name of the group",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProjectRoleUser": {
      "additionalProperties": false,
      "description": "Details of the user associated with the role.",
      "properties": {
        "accountId": {
          "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Returns *unknown* if the record is deleted and corrupted, for example, as the result of a server import.",
          "maxLength": 128,
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProjectScopeBean": {
      "additionalProperties": false,
      "properties": {
        "attributes": {
          "description": "Defines the behavior of the option in the project.If notSelectable is set, the option cannot be set as the field's value. This is useful for archiving an option that has previously been selected but shouldn't be used anymore.If defaultValue is set, the option is selected by default.",
          "items": {
            "enum": [
              "notSelectable",
              "defaultValue"
            ],
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "id": {
          "description": "The ID of the project that the option's behavior applies to.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ProjectType": {
      "additionalProperties": false,
      "description": "Details about a project type.",
      "properties": {
        "color": {
          "description": "The color of the project type.",
          "readOnly": true,
          "type": "string"
        },
        "descriptionI18nKey": {
          "description": "The key of the project type's description.",
          "readOnly": true,
          "type": "string"
        },
        "formattedKey": {
          "description": "The formatted key of the project type.",
          "readOnly": true,
          "type": "string"
        },
        "icon": {
          "description": "The icon of the project type.",
          "readOnly": true,
          "type": "string"
        },
        "key": {
          "description": "The key of the project type.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "PropertyKey": {
      "additionalProperties": false,
      "description": "Property key details.",
      "properties": {
        "key": {
          "description": "The key of the property.",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the property.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "PropertyKeys": {
      "additionalProperties": false,
      "description": "List of property keys.",
      "properties": {
        "keys": {
          "description": "Property key details.",
          "items": {
            "$ref": "#/definitions/PropertyKey"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PublishedWorkflowId": {
      "additionalProperties": false,
      "description": "Properties that identify a published workflow.",
      "properties": {
        "name": {
          "description": "The name of the workflow.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "RegisteredWebhook": {
      "additionalProperties": false,
      "description": "ID of a registered webhook or error messages explaining why a webhook wasn't registered.",
      "properties": {
        "createdWebhookId": {
          "description": "The ID of the webhook. Returned if the webhook is created.",
          "format": "int64",
          "type": "integer"
        },
        "errors": {
          "description": "Error messages specifying why the webhook creation failed.",
          "items": {
            "description": "Error messages specifying why the webhook creation failed.",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RemoteIssueLink": {
      "additionalProperties": false,
      "description": "Details of an issue remote link.",
      "properties": {
        "application": {
          "allOf": [
            {
              "$ref": "#/definitions/Application"
            }
          ],
          "description": "Details of the remote application the linked item is in."
        },
        "globalId": {
          "description": "The global ID of the link, such as the ID of the item on the remote system.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the link.",
          "format": "int64",
          "type": "integer"
        },
        "object": {
          "allOf": [
            {
              "$ref": "#/definitions/RemoteObject"
            }
          ],
          "description": "Details of the item linked to."
        },
        "relationship": {
          "description": "Description of the relationship between the issue and the linked item.",
          "type": "string"
        },
        "self": {
          "description": "The URL of the link.",
          "format": "uri",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RemoteIssueLinkIdentifies": {
      "additionalProperties": false,
      "description": "Details of the identifiers for a created or updated remote issue link.",
      "properties": {
        "id": {
          "description": "The ID of the remote issue link, such as the ID of the item on the remote system.",
          "format": "int64",
          "readOnly": true,
          "type": "integer",
          "xml": {
            "attribute": true
          }
        },
        "self": {
          "description": "The URL of the remote issue link.",
          "readOnly": true,
          "type": "string",
          "xml": {
            "attribute": true
          }
        }
      },
      "type": "object"
    },
    "RemoteIssueLinkRequest": {
      "additionalProperties": true,
      "description": "Details of a remote issue link.",
      "properties": {
        "application": {
          "allOf": [
            {
              "$ref": "#/definitions/Application"
            }
          ],
          "description": "Details of the remote application the linked item is in. For example, trello."
        },
        "globalId": {
          "description": "An identifier for the remote item in the remote system. For example, the global ID for a remote item in Confluence would consist of the app ID and page ID, like this: `appId=456&pageId=123`.\n\nSetting this field enables the remote issue link details to be updated or deleted using remote system and item details as the record identifier, rather than using the record's Jira ID.\n\nThe maximum length is 255 characters.",
          "type": "string"
        },
        "object": {
          "allOf": [
            {
              "$ref": "#/definitions/RemoteObject"
            }
          ],
          "description": "Details of the item linked to."
        },
        "relationship": {
          "description": "Description of the relationship between the issue and the linked item. If not set, the relationship description \"links to\" is used in Jira.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RemoteObject": {
      "additionalProperties": true,
      "description": "The linked item.",
      "properties": {
        "icon": {
          "allOf": [
            {
              "$ref": "#/definitions/Icon"
            }
          ],
          "description": "Details of the icon for the item. If no icon is defined, the default link icon is used in Jira."
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/Status"
            }
          ],
          "description": "The status of the item."
        },
        "summary": {
          "description": "The summary details of the item.",
          "type": "string"
        },
        "title": {
          "description": "The title of the item.",
          "type": "string"
        },
        "url": {
          "description": "The URL of the item.",
          "type": "string"
        }
      },
      "required": [
        "title",
        "url"
      ],
      "type": "object"
    },
    "RemoveOptionFromIssuesResult": {
      "additionalProperties": false,
      "properties": {
        "errors": {
          "allOf": [
            {
              "$ref": "#/definitions/SimpleErrorCollection"
            }
          ],
          "description": "A collection of errors related to unchanged issues. The collection size is limited, which means not all errors may be returned."
        },
        "modifiedIssues": {
          "description": "The IDs of the modified issues.",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array"
        },
        "unmodifiedIssues": {
          "description": "The IDs of the unchanged issues, those issues where errors prevent modification.",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RenamedCascadingOption": {
      "additionalProperties": false,
      "description": "Details of a custom field cascading option to rename.",
      "properties": {
        "newValue": {
          "description": "The new value of the cascading option.",
          "maxLength": 255,
          "type": "string"
        },
        "value": {
          "description": "The value of the cascading option.",
          "type": "string"
        }
      },
      "required": [
        "newValue",
        "value"
      ],
      "type": "object",
      "writeOnly": true
    },
    "RenamedOption": {
      "additionalProperties": false,
      "description": "Details of a custom field option to rename.",
      "properties": {
        "cascadingOptions": {
          "description": "The new values for the cascading options of this option. Only used for Select List (cascading) fields.",
          "items": {
            "$ref": "#/definitions/RenamedCascadingOption"
          },
          "type": "array"
        },
        "newValue": {
          "description": "The new value of the option.",
          "maxLength": 255,
          "type": "string"
        },
        "value": {
          "description": "The current option value.",
          "type": "string"
        }
      },
      "required": [
        "newValue",
        "value"
      ],
      "type": "object",
      "writeOnly": true
    },
    "Resolution": {
      "additionalProperties": false,
      "description": "Details of an issue resolution.",
      "properties": {
        "description": {
          "description": "The description of the issue resolution.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the issue resolution.",
          "type": "string"
        },
        "name": {
          "description": "The name of the issue resolution.",
          "type": "string"
        },
        "self": {
          "description": "The URL of the issue resolution.",
          "format": "uri",
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "resolution"
      }
    },
    "RestrictedPermission": {
      "additionalProperties": true,
      "description": "Details of the permission.",
      "properties": {
        "id": {
          "description": "The ID of the permission. Either `id` or `key` must be specified. Use [Get all permissions](#api-rest-api-3-permissions-get) to get the list of permissions.",
          "type": "string"
        },
        "key": {
          "description": "The key of the permission. Either `id` or `key` must be specified. Use [Get all permissions](#api-rest-api-3-permissions-get) to get the list of permissions.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RichText": {
      "properties": {
        "emptyAdf": {
          "type": "boolean"
        },
        "valueSet": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RoleActor": {
      "additionalProperties": false,
      "description": "Details about a user assigned to a project role.",
      "properties": {
        "actorGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectRoleGroup"
            }
          ],
          "readOnly": true
        },
        "actorUser": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectRoleUser"
            }
          ],
          "readOnly": true
        },
        "avatarUrl": {
          "description": "The avatar of the role actor.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the role actor. For users, depending on the user’s privacy setting, this may return an alternative value for the user's name.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the role actor.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of role actor.",
          "enum": [
            "atlassian-group-role-actor",
            "atlassian-user-role-actor"
          ],
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "projectRoleActor"
      }
    },
    "RuleConfiguration": {
      "additionalProperties": false,
      "description": "A rule configuration.",
      "properties": {
        "value": {
          "description": "Configuration of the rule, as it is stored by the Connect app on the rule configuration page.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "Scope": {
      "additionalProperties": true,
      "description": "The projects the item is associated with. Indicated for items associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).",
      "properties": {
        "project": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectForScope"
            }
          ],
          "description": "The project the item has scope in.",
          "readOnly": true
        },
        "type": {
          "description": "The type of scope.",
          "enum": [
            "PROJECT",
            "TEMPLATE"
          ],
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Screen": {
      "additionalProperties": false,
      "description": "A screen.",
      "properties": {
        "id": {
          "description": "The ID of the screen.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "The name of the screen.",
          "readOnly": true,
          "type": "string"
        },
        "scope": {
          "allOf": [
            {
              "$ref": "#/definitions/Scope"
            }
          ],
          "description": "The scope of the screen."
        }
      },
      "type": "object"
    },
    "ScreenID": {
      "additionalProperties": false,
      "description": "ID of a screen.",
      "properties": {
        "id": {
          "description": "The ID of the screen.",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "ScreenScheme": {
      "additionalProperties": false,
      "description": "A screen scheme.",
      "properties": {
        "description": {
          "description": "The description of the screen scheme.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the screen scheme.",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "The name of the screen scheme.",
          "type": "string"
        },
        "screens": {
          "allOf": [
            {
              "$ref": "#/definitions/ScreenTypeIDsBean"
            }
          ],
          "description": "IDs of the screens for the associated screen types."
        }
      },
      "type": "object"
    },
    "ScreenTypeIDsBean": {
      "additionalProperties": false,
      "description": "IDs of the screens for the various screen types associated with the screen scheme.",
      "properties": {
        "create": {
          "description": "The ID of the create screen.",
          "format": "int64",
          "type": "integer"
        },
        "default": {
          "description": "The ID of the default screen.",
          "format": "int64",
          "type": "integer"
        },
        "edit": {
          "description": "The ID of the edit screen.",
          "format": "int64",
          "type": "integer"
        },
        "view": {
          "description": "The ID of the view screen.",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "create",
        "defaultScreen",
        "edit",
        "view"
      ],
      "type": "object"
    },
    "ScreenableField": {
      "additionalProperties": false,
      "description": "A screen tab field.",
      "properties": {
        "id": {
          "description": "The ID of the screen tab field.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the screen tab field. Required on create and update. The maximum length is 255 characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ScreenableTab": {
      "additionalProperties": false,
      "description": "A screen tab.",
      "properties": {
        "id": {
          "description": "The ID of the screen tab.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "The name of the screen tab. The maximum length is 255 characters.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "SearchRequestBean": {
      "additionalProperties": false,
      "properties": {
        "expand": {
          "description": "Use [expand](em>#expansion) to include additional information about issues in the response. Note that, unlike the majority of instances where `expand` is specified, `expand` is defined as a list of values. The expand options are:\n\n *  `renderedFields` Returns field values rendered in HTML format.\n *  `names` Returns the display name of each field.\n *  `schema` Returns the schema describing a field type.\n *  `transitions` Returns all possible transitions for the issue.\n *  `operations` Returns all possible operations for the issue.\n *  `editmeta` Returns information about how each field can be edited.\n *  `changelog` Returns a list of recent updates to an issue, sorted by date, starting from the most recent.\n *  `versionedRepresentations` Instead of `fields`, returns `versionedRepresentations` a JSON array containing each version of a field's value, with the highest numbered item representing the most recent version.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "fields": {
          "description": "A list of fields to return for each issue, use it to retrieve a subset of fields. This parameter accepts a comma-separated list. Expand options include:\n\n *  `*all` Returns all fields.\n *  `*navigable` Returns navigable fields.\n *  Any issue field, prefixed with a minus to exclude.\n\nThe default is `*navigable`.\n\nExamples:\n\n *  `summary,comment` Returns the summary and comments fields only.\n *  `-description` Returns all navigable (default) fields except description.\n *  `*all,-comment` Returns all fields except comments.\n\nMultiple `fields` parameters can be included in a request.\n\nNote: All navigable fields are returned by default. This differs from [GET issue](#api-rest-api-3-issue-issueIdOrKey-get) where the default is all fields.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "fieldsByKeys": {
          "description": "Reference fields by their key (rather than ID). The default is `false`.",
          "type": "boolean"
        },
        "jql": {
          "description": "A [JQL](https://confluence.atlassian.com/x/egORLQ) expression.",
          "type": "string"
        },
        "maxResults": {
          "default": 50,
          "description": "The maximum number of items to return per page.",
          "format": "int32",
          "type": "integer"
        },
        "properties": {
          "description": "A list of up to 5 issue properties to include in the results. This parameter accepts a comma-separated list.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "startAt": {
          "description": "The index of the first item to return in the page of results (page offset). The base index is `0`.",
          "format": "int32",
          "type": "integer"
        },
        "validateQuery": {
          "description": "Determines how to validate the JQL query and treat the validation results. Supported values:\n\n *  `strict` Returns a 400 response code if any errors are found, along with a list of all errors (and warnings).\n *  `warn` Returns all errors as warnings.\n *  `none` No validation is performed.\n *  `true` *Deprecated* A legacy synonym for `strict`.\n *  `false` *Deprecated* A legacy synonym for `warn`.\n\nThe default is `strict`.\n\nNote: If the JQL is not correctly formed a 400 response code is returned, regardless of the `validateQuery` value.",
          "enum": [
            "strict",
            "warn",
            "none",
            "true",
            "false"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "SearchResults": {
      "additionalProperties": false,
      "description": "The result of a JQL search.",
      "properties": {
        "expand": {
          "description": "Expand options that include additional search result details in the response.",
          "readOnly": true,
          "type": "string"
        },
        "issues": {
          "description": "The list of issues found by the search.",
          "items": {
            "$ref": "#/definitions/IssueBean"
          },
          "readOnly": true,
          "type": "array"
        },
        "maxResults": {
          "description": "The maximum number of results that could be on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "names": {
          "additionalProperties": {
            "readOnly": true,
            "type": "string"
          },
          "description": "The ID and name of each field in the search results.",
          "readOnly": true,
          "type": "object"
        },
        "schema": {
          "additionalProperties": {
            "$ref": "#/definitions/JsonTypeBean"
          },
          "description": "The schema describing the field types in the search results.",
          "readOnly": true,
          "type": "object"
        },
        "startAt": {
          "description": "The index of the first item returned on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The number of results on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "warningMessages": {
          "description": "Any warnings related to the JQL query.",
          "items": {
            "readOnly": true,
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "SecurityLevel": {
      "additionalProperties": false,
      "description": "Details of an issue level security item.",
      "properties": {
        "description": {
          "description": "The description of the issue level security item.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the issue level security item.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the issue level security item.",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the issue level security item.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "SecurityScheme": {
      "additionalProperties": false,
      "description": "Details about a security scheme.",
      "properties": {
        "defaultSecurityLevelId": {
          "description": "The ID of the default security level.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "description": {
          "description": "The description of the issue security scheme.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the issue security scheme.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "levels": {
          "items": {
            "$ref": "#/definitions/SecurityLevel"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of the issue security scheme.",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the issue security scheme.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "SecuritySchemes": {
      "additionalProperties": false,
      "description": "List of security schemes.",
      "properties": {
        "issueSecuritySchemes": {
          "description": "List of security schemes.",
          "items": {
            "$ref": "#/definitions/SecurityScheme"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "ServerInformation": {
      "additionalProperties": false,
      "description": "Details about the Jira instance.",
      "properties": {
        "baseUrl": {
          "description": "The base URL of the Jira instance.",
          "type": "string"
        },
        "buildDate": {
          "description": "The timestamp when the Jira version was built.",
          "format": "date-time",
          "type": "string"
        },
        "buildNumber": {
          "description": "The build number of the Jira version.",
          "format": "int32",
          "type": "integer"
        },
        "deploymentType": {
          "description": "The type of server deployment. This is always returned as *Cloud*.",
          "type": "string"
        },
        "healthChecks": {
          "description": "Jira instance health check results. Deprecated and no longer returned.",
          "items": {
            "$ref": "#/definitions/HealthCheckResult"
          },
          "type": "array"
        },
        "scmInfo": {
          "description": "The unique identifier of the Jira version.",
          "type": "string"
        },
        "serverTime": {
          "description": "The time in Jira when this request was responded to.",
          "format": "date-time",
          "type": "string"
        },
        "serverTitle": {
          "description": "The name of the Jira instance.",
          "type": "string"
        },
        "version": {
          "description": "The version of Jira.",
          "type": "string"
        },
        "versionNumbers": {
          "description": "The major, minor, and revision version numbers of the Jira version.",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SharePermission": {
      "additionalProperties": false,
      "description": "Details of a share permission for the filter.",
      "properties": {
        "group": {
          "allOf": [
            {
              "$ref": "#/definitions/GroupName"
            }
          ],
          "description": "The group that the filter is shared with. For a request, specify the `name` property for the group."
        },
        "id": {
          "description": "The unique identifier of the share permission.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "project": {
          "allOf": [
            {
              "$ref": "#/definitions/Project"
            }
          ],
          "description": "The project that the filter is shared with. This is similar to the project object returned by [Get project](#api-rest-api-3-project-projectIdOrKey-get) but it contains a subset of the properties, which are: `self`, `id`, `key`, `assigneeType`, `name`, `roles`, `avatarUrls`, `projectType`, `simplified`.  \nFor a request, specify the `id` for the project."
        },
        "role": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectRole"
            }
          ],
          "description": "The project role that the filter is shared with.  \nFor a request, specify the `id` for the role. You must also specify the `project` object and `id` for the project that the role is in."
        },
        "type": {
          "description": "The type of share permission:\n\n *  `group` Shared with a group. If set in a request, then specify `sharePermission.group` as well.\n *  `project` Shared with a project. If set in a request, then specify `sharePermission.project` as well.\n *  `projectRole` Share with a project role in a project. This value is not returned in responses. It is used in requests, where it needs to be specify with `projectId` and `projectRoleId`.\n *  `global` Shared globally. If set in a request, no other `sharePermission` properties need to be specified.\n *  `loggedin` Shared with all logged-in users. Note: This value is set in a request by specifying `authenticated` as the `type`.\n *  `project-unknown` Shared with a project that the user does not have access to. Cannot be set in a request.",
          "enum": [
            "group",
            "project",
            "projectRole",
            "global",
            "loggedin",
            "authenticated",
            "project-unknown"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "SharePermissionInputBean": {
      "additionalProperties": false,
      "properties": {
        "groupname": {
          "description": "The name of the group to share the filter with. Set `type` to `group`.",
          "type": "string"
        },
        "projectId": {
          "description": "The ID of the project to share the filter with. Set `type` to `project`.",
          "type": "string"
        },
        "projectRoleId": {
          "description": "The ID of the project role to share the filter with. Set `type` to `projectRole` and the `projectId` for the project that the role is in.",
          "type": "string"
        },
        "type": {
          "description": "The type of the share permission.Specify the type as follows:\n\n *  `group` Share with a group. Specify `groupname` as well.\n *  `project` Share with a project. Specify `projectId` as well.\n *  `projectRole` Share with a project role in a project. Specify `projectId` and `projectRoleId` as well.\n *  `global` Share globally, including anonymous users. If set, this type overrides all existing share permissions and must be deleted before any non-global share permissions is set.\n *  `authenticated` Share with all logged-in users. This shows as `loggedin` in the response. If set, this type overrides all existing share permissions and must be deleted before any non-global share permissions is set.",
          "enum": [
            "project",
            "group",
            "projectRole",
            "global",
            "authenticated"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "SimpleApplicationPropertyBean": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "The ID of the application property.",
          "type": "string"
        },
        "value": {
          "description": "The new value.",
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "applicationProperty"
      }
    },
    "SimpleErrorCollection": {
      "additionalProperties": false,
      "properties": {
        "errorMessages": {
          "description": "The list of error messages produced by this operation. For example, \"input parameter 'key' must be provided\"",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "errors": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The list of errors by parameter returned by the operation. For example,\"projectKey\": \"Project keys must start with an uppercase letter, followed by one or more uppercase alphanumeric characters.\"",
          "type": "object"
        },
        "httpStatusCode": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SimpleLink": {
      "additionalProperties": false,
      "description": "Details about the operations available in this version.",
      "properties": {
        "href": {
          "type": "string"
        },
        "iconClass": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "styleClass": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "xml": {
        "name": "link"
      }
    },
    "SimpleListWrapperApplicationRole": {
      "additionalProperties": false,
      "properties": {
        "callback": {
          "$ref": "#/definitions/ListWrapperCallbackApplicationRole"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/ApplicationRole"
          },
          "type": "array"
        },
        "max-results": {
          "format": "int32",
          "type": "integer",
          "xml": {
            "attribute": true,
            "name": "max-results"
          }
        },
        "pagingCallback": {
          "$ref": "#/definitions/ListWrapperCallbackApplicationRole"
        },
        "size": {
          "format": "int32",
          "type": "integer",
          "xml": {
            "attribute": true
          }
        }
      },
      "type": "object",
      "xml": {
        "name": "list"
      }
    },
    "SimpleListWrapperGroupName": {
      "additionalProperties": false,
      "properties": {
        "callback": {
          "$ref": "#/definitions/ListWrapperCallbackGroupName"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/GroupName"
          },
          "type": "array"
        },
        "max-results": {
          "format": "int32",
          "type": "integer",
          "xml": {
            "attribute": true,
            "name": "max-results"
          }
        },
        "pagingCallback": {
          "$ref": "#/definitions/ListWrapperCallbackGroupName"
        },
        "size": {
          "format": "int32",
          "type": "integer",
          "xml": {
            "attribute": true
          }
        }
      },
      "type": "object",
      "xml": {
        "name": "list"
      }
    },
    "Status": {
      "additionalProperties": true,
      "description": "The status of the item.",
      "properties": {
        "icon": {
          "allOf": [
            {
              "$ref": "#/definitions/Icon"
            }
          ],
          "description": "Details of the icon representing the status. If not provided, no status icon displays in Jira."
        },
        "resolved": {
          "description": "Whether the item is resolved. If set to \"true\", the link to the issue is displayed in a strikethrough font, otherwise the link displays in normal font.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "StatusCategory": {
      "additionalProperties": true,
      "description": "A status category.",
      "properties": {
        "colorName": {
          "description": "The name of the color used to represent the status category.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the status category.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "key": {
          "description": "The key of the status category.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the status category.",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the status category.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "StatusDetails": {
      "additionalProperties": true,
      "description": "A status.",
      "properties": {
        "description": {
          "description": "The description of the status.",
          "readOnly": true,
          "type": "string"
        },
        "iconUrl": {
          "description": "The URL of the icon used to represent the status.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the status.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the status.",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the status.",
          "readOnly": true,
          "type": "string"
        },
        "statusCategory": {
          "allOf": [
            {
              "$ref": "#/definitions/StatusCategory"
            }
          ],
          "description": "The category assigned to the status.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "SuggestedIssue": {
      "additionalProperties": false,
      "description": "An issue suggested for use in the issue picker auto-completion.",
      "properties": {
        "id": {
          "description": "The ID of the issue.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "img": {
          "description": "The URL of the issue type's avatar.",
          "readOnly": true,
          "type": "string"
        },
        "key": {
          "description": "The key of the issue.",
          "readOnly": true,
          "type": "string"
        },
        "keyHtml": {
          "description": "The key of the issue in HTML format.",
          "readOnly": true,
          "type": "string"
        },
        "summary": {
          "description": "The phrase containing the query string in HTML format, with the string highlighted with HTML bold tags.",
          "readOnly": true,
          "type": "string"
        },
        "summaryText": {
          "description": "The phrase containing the query string, as plain text.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "SystemAvatars": {
      "additionalProperties": false,
      "description": "List of system avatars.",
      "properties": {
        "system": {
          "description": "A list of avatar details.",
          "items": {
            "$ref": "#/definitions/Avatar"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "TaskProgressBeanObject": {
      "additionalProperties": false,
      "description": "Details about a task.",
      "properties": {
        "description": {
          "description": "The description of the task.",
          "type": "string"
        },
        "elapsedRuntime": {
          "description": "The execution time of the task, in milliseconds.",
          "format": "int64",
          "type": "integer"
        },
        "finished": {
          "description": "A timestamp recording when the task was finished.",
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "description": "The ID of the task.",
          "type": "string"
        },
        "lastUpdate": {
          "description": "A timestamp recording when the task progress was last updated.",
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Information about the progress of the task.",
          "type": "string"
        },
        "progress": {
          "description": "The progress of the task, as a percentage complete.",
          "format": "int64",
          "type": "integer"
        },
        "result": {
          "description": "The result of the task execution."
        },
        "self": {
          "description": "The URL of the task.",
          "format": "uri",
          "type": "string"
        },
        "started": {
          "description": "A timestamp recording when the task was started.",
          "format": "int64",
          "type": "integer"
        },
        "status": {
          "description": "The status of the task.",
          "enum": [
            "ENQUEUED",
            "RUNNING",
            "COMPLETE",
            "FAILED",
            "CANCEL_REQUESTED",
            "CANCELLED",
            "DEAD"
          ],
          "type": "string"
        },
        "submitted": {
          "description": "A timestamp recording when the task was submitted.",
          "format": "int64",
          "type": "integer"
        },
        "submittedBy": {
          "description": "The ID of the user who submitted the task.",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "elapsedRuntime",
        "id",
        "lastUpdate",
        "progress",
        "self",
        "status",
        "submitted",
        "submittedBy"
      ],
      "type": "object"
    },
    "TaskProgressBeanRemoveOptionFromIssuesResult": {
      "additionalProperties": false,
      "description": "Details about a task.",
      "properties": {
        "description": {
          "description": "The description of the task.",
          "type": "string"
        },
        "elapsedRuntime": {
          "description": "The execution time of the task, in milliseconds.",
          "format": "int64",
          "type": "integer"
        },
        "finished": {
          "description": "A timestamp recording when the task was finished.",
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "description": "The ID of the task.",
          "type": "string"
        },
        "lastUpdate": {
          "description": "A timestamp recording when the task progress was last updated.",
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Information about the progress of the task.",
          "type": "string"
        },
        "progress": {
          "description": "The progress of the task, as a percentage complete.",
          "format": "int64",
          "type": "integer"
        },
        "result": {
          "allOf": [
            {
              "$ref": "#/definitions/RemoveOptionFromIssuesResult"
            }
          ],
          "description": "The result of the task execution."
        },
        "self": {
          "description": "The URL of the task.",
          "format": "uri",
          "type": "string"
        },
        "started": {
          "description": "A timestamp recording when the task was started.",
          "format": "int64",
          "type": "integer"
        },
        "status": {
          "description": "The status of the task.",
          "enum": [
            "ENQUEUED",
            "RUNNING",
            "COMPLETE",
            "FAILED",
            "CANCEL_REQUESTED",
            "CANCELLED",
            "DEAD"
          ],
          "type": "string"
        },
        "submitted": {
          "description": "A timestamp recording when the task was submitted.",
          "format": "int64",
          "type": "integer"
        },
        "submittedBy": {
          "description": "The ID of the user who submitted the task.",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "elapsedRuntime",
        "id",
        "lastUpdate",
        "progress",
        "self",
        "status",
        "submitted",
        "submittedBy"
      ],
      "type": "object"
    },
    "TimeTrackingConfiguration": {
      "additionalProperties": false,
      "description": "Details of the time tracking configuration.",
      "properties": {
        "defaultUnit": {
          "description": "The default unit of time applied to logged time.",
          "enum": [
            "minute",
            "hour",
            "day",
            "week"
          ],
          "type": "string"
        },
        "timeFormat": {
          "description": "The format that will appear on an issue's *Time Spent* field.",
          "enum": [
            "pretty",
            "days",
            "hours"
          ],
          "type": "string"
        },
        "workingDaysPerWeek": {
          "description": "The number of days in a working week.",
          "format": "double",
          "type": "number"
        },
        "workingHoursPerDay": {
          "description": "The number of hours in a working day.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "defaultUnit",
        "timeFormat",
        "workingDaysPerWeek",
        "workingHoursPerDay"
      ],
      "type": "object"
    },
    "TimeTrackingProvider": {
      "additionalProperties": false,
      "description": "Details about the time tracking provider.",
      "properties": {
        "key": {
          "description": "The key for the time tracking provider. For example, *JIRA*.",
          "type": "string"
        },
        "name": {
          "description": "The name of the time tracking provider. For example, *JIRA provided time tracking*.",
          "type": "string"
        },
        "url": {
          "description": "The URL of the configuration page for the time tracking provider app. For example, */example/config/url*. This property is only returned if the `adminPageKey` property is set in the module descriptor of the time tracking provider app.",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "key"
      ],
      "type": "object"
    },
    "Transition": {
      "additionalProperties": false,
      "description": "Details of a workflow transition.",
      "properties": {
        "description": {
          "description": "The description of the transition.",
          "type": "string"
        },
        "from": {
          "description": "The statuses the transition can start from.",
          "items": {
            "description": "The statuses the transition can start from.",
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "description": "The ID of the transition.",
          "type": "string"
        },
        "name": {
          "description": "The name of the transition.",
          "type": "string"
        },
        "rules": {
          "$ref": "#/definitions/WorkflowRules"
        },
        "screen": {
          "$ref": "#/definitions/ScreenID"
        },
        "to": {
          "description": "The status the transition goes to.",
          "type": "string"
        },
        "type": {
          "description": "The type of the transition.",
          "enum": [
            "global",
            "initial",
            "directed"
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "from",
        "id",
        "name",
        "to",
        "type"
      ],
      "type": "object"
    },
    "Transitions": {
      "additionalProperties": false,
      "description": "List of issue transitions.",
      "properties": {
        "expand": {
          "description": "Expand options that include additional transitions details in the response.",
          "readOnly": true,
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "transitions": {
          "description": "List of issue transitions.",
          "items": {
            "$ref": "#/definitions/IssueTransition"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "UnrestrictedUserEmail": {
      "additionalProperties": false,
      "properties": {
        "accountId": {
          "description": "The accountId of the user",
          "type": "string"
        },
        "email": {
          "description": "The email of the user",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateCustomFieldOption": {
      "additionalProperties": false,
      "description": "Details of the options to update for a custom field.",
      "properties": {
        "options": {
          "description": "Details of the options to update.",
          "items": {
            "$ref": "#/definitions/RenamedOption"
          },
          "type": "array"
        }
      },
      "type": "object",
      "writeOnly": true
    },
    "UpdateUserToGroupBean": {
      "additionalProperties": true,
      "properties": {
        "accountId": {
          "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
          "maxLength": 128,
          "type": "string"
        },
        "name": {
          "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdatedProjectCategory": {
      "additionalProperties": false,
      "description": "A project category.",
      "properties": {
        "description": {
          "description": "The name of the project category.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the project category.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The description of the project category.",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the project category.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "User": {
      "additionalProperties": false,
      "description": "A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:\n\n *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, `displayName` provides an indication and other parameters have default values or are blank (for example, email is blank).\n *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, `accountId` returns *unknown* and all other parameters have fallback values.\n *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.",
      "properties": {
        "accountId": {
          "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.",
          "maxLength": 128,
          "type": "string"
        },
        "accountType": {
          "description": "The user account type. Can take the following values:\n\n *  `atlassian` regular Atlassian user account\n *  `app` system account used for Connect applications and OAuth to represent external systems\n *  `customer` Jira Service Desk account representing an external service desk",
          "enum": [
            "atlassian",
            "app",
            "customer",
            "unknown"
          ],
          "readOnly": true,
          "type": "string"
        },
        "active": {
          "description": "Whether the user is active.",
          "readOnly": true,
          "type": "boolean"
        },
        "applicationRoles": {
          "allOf": [
            {
              "$ref": "#/definitions/SimpleListWrapperApplicationRole"
            }
          ],
          "description": "The application roles the user is assigned to.",
          "readOnly": true
        },
        "avatarUrls": {
          "allOf": [
            {
              "$ref": "#/definitions/AvatarUrlsBean"
            }
          ],
          "description": "The avatars of the user.",
          "readOnly": true
        },
        "displayName": {
          "description": "The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.",
          "readOnly": true,
          "type": "string"
        },
        "emailAddress": {
          "description": "The email address of the user. Depending on the user’s privacy setting, this may be returned as null.",
          "readOnly": true,
          "type": "string"
        },
        "expand": {
          "description": "Expand options that include additional user details in the response.",
          "readOnly": true,
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "groups": {
          "allOf": [
            {
              "$ref": "#/definitions/SimpleListWrapperGroupName"
            }
          ],
          "description": "The groups that the user belongs to.",
          "readOnly": true
        },
        "key": {
          "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
          "type": "string"
        },
        "locale": {
          "description": "The locale of the user. Depending on the user’s privacy setting, this may be returned as null.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
          "type": "string"
        },
        "self": {
          "description": "The URL of the user.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "timeZone": {
          "description": "The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "user"
      }
    },
    "UserBean": {
      "additionalProperties": false,
      "properties": {
        "accountId": {
          "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
          "maxLength": 128,
          "type": "string"
        },
        "active": {
          "description": "Whether the user is active.",
          "type": "boolean"
        },
        "avatarUrls": {
          "allOf": [
            {
              "$ref": "#/definitions/UserBeanAvatarUrls"
            }
          ],
          "description": "The avatars of the user."
        },
        "displayName": {
          "description": "The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.",
          "type": "string"
        },
        "key": {
          "description": "This property is deprecated in favor of `accountId` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.  \nThe key of the user.",
          "type": "string"
        },
        "name": {
          "description": "This property is deprecated in favor of `accountId` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.  \nThe username of the user.",
          "type": "string"
        },
        "self": {
          "description": "The URL of the user.",
          "format": "uri",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserBeanAvatarUrls": {
      "additionalProperties": false,
      "properties": {
        "16x16": {
          "description": "The URL of the user's 16x16 pixel avatar.",
          "format": "uri",
          "type": "string"
        },
        "24x24": {
          "description": "The URL of the user's 24x24 pixel avatar.",
          "format": "uri",
          "type": "string"
        },
        "32x32": {
          "description": "The URL of the user's 32x32 pixel avatar.",
          "format": "uri",
          "type": "string"
        },
        "48x48": {
          "description": "The URL of the user's 48x48 pixel avatar.",
          "format": "uri",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserDetails": {
      "additionalProperties": false,
      "description": "User details permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:\n\n *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, `displayName` provides an indication and other parameters have default values or are blank (for example, email is blank).\n *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, `accountId` returns *unknown* and all other parameters have fallback values.\n *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.",
      "properties": {
        "accountId": {
          "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
          "maxLength": 128,
          "type": "string"
        },
        "accountType": {
          "description": "The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)",
          "readOnly": true,
          "type": "string"
        },
        "active": {
          "description": "Whether the user is active.",
          "readOnly": true,
          "type": "boolean"
        },
        "avatarUrls": {
          "allOf": [
            {
              "$ref": "#/definitions/AvatarUrlsBean"
            }
          ],
          "description": "The avatars of the user.",
          "readOnly": true
        },
        "displayName": {
          "description": "The display name of the user. Depending on the user’s privacy settings, this may return an alternative value.",
          "readOnly": true,
          "type": "string"
        },
        "emailAddress": {
          "description": "The email address of the user. Depending on the user’s privacy settings, this may be returned as null.",
          "readOnly": true,
          "type": "string"
        },
        "key": {
          "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
          "readOnly": true,
          "type": "string"
        },
        "self": {
          "description": "The URL of the user.",
          "readOnly": true,
          "type": "string"
        },
        "timeZone": {
          "description": "The time zone specified in the user's profile. Depending on the user’s privacy settings, this may be returned as null.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserKey": {
      "additionalProperties": false,
      "description": "List of user account IDs.",
      "properties": {
        "accountId": {
          "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Returns *unknown* if the record is deleted and corrupted, for example, as the result of a server import.",
          "maxLength": 128,
          "type": "string"
        },
        "key": {
          "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserList": {
      "additionalProperties": false,
      "description": "A paginated list of users sharing the filter. This includes users that are members of the groups or can browse the projects that the filter is shared with.",
      "properties": {
        "end-index": {
          "description": "The index of the last item returned on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer",
          "xml": {
            "attribute": true,
            "name": "end-index"
          }
        },
        "items": {
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/User"
          },
          "readOnly": true,
          "type": "array"
        },
        "max-results": {
          "description": "The maximum number of results that could be on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer",
          "xml": {
            "attribute": true,
            "name": "max-results"
          }
        },
        "size": {
          "description": "The number of items on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer",
          "xml": {
            "attribute": true
          }
        },
        "start-index": {
          "description": "The index of the first item returned on the page.",
          "format": "int32",
          "readOnly": true,
          "type": "integer",
          "xml": {
            "attribute": true,
            "name": "start-index"
          }
        }
      },
      "type": "object"
    },
    "UserMigrationBean": {
      "additionalProperties": false,
      "properties": {
        "accountId": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserPermission": {
      "additionalProperties": true,
      "description": "Details of a permission and its availability to a user.",
      "properties": {
        "deprecatedKey": {
          "description": "Indicate whether the permission key is deprecated. Note that deprecated keys cannot be used in the `permissions parameter of Get my permissions. Deprecated keys are not returned by Get all permissions.`",
          "type": "boolean"
        },
        "description": {
          "description": "The description of the permission.",
          "type": "string"
        },
        "havePermission": {
          "description": "Whether the permission is available to the user in the queried context.",
          "type": "boolean"
        },
        "id": {
          "description": "The ID of the permission. Either `id` or `key` must be specified. Use [Get all permissions](#api-rest-api-3-permissions-get) to get the list of permissions.",
          "type": "string"
        },
        "key": {
          "description": "The key of the permission. Either `id` or `key` must be specified. Use [Get all permissions](#api-rest-api-3-permissions-get) to get the list of permissions.",
          "type": "string"
        },
        "name": {
          "description": "The name of the permission.",
          "type": "string"
        },
        "type": {
          "description": "The type of the permission.",
          "enum": [
            "GLOBAL",
            "PROJECT"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserPickerUser": {
      "additionalProperties": false,
      "description": "A user found in a search.",
      "properties": {
        "accountId": {
          "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
          "type": "string"
        },
        "avatarUrl": {
          "description": "The avatar URL of the user.",
          "format": "uri",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the user. Depending on the user’s privacy setting, this may be returned as null.",
          "type": "string"
        },
        "html": {
          "description": "The display name, email address, and key of the user with the matched query string highlighted with the HTML bold tag.",
          "type": "string"
        },
        "key": {
          "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
          "type": "string"
        },
        "name": {
          "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserWriteBean": {
      "additionalProperties": true,
      "properties": {
        "applicationKeys": {
          "description": "Deprecated, do not use.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "displayName": {
          "description": "The display name for the user.",
          "type": "string"
        },
        "emailAddress": {
          "description": "The email address for the user.",
          "type": "string"
        },
        "key": {
          "description": "The key for the user. When provided with `name`, overrides the value in `name` to set both `name` and `key`. This property is deprecated because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
          "type": "string"
        },
        "name": {
          "description": "The username for the user. This property is deprecated because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
          "type": "string"
        },
        "notification": {
          "description": "Sends the user an email confirmation that they have been added to Jira. Default is `false`.",
          "type": "string"
        },
        "password": {
          "description": "A password for the user. If a password is not set, a random password is generated.",
          "type": "string"
        },
        "self": {
          "description": "The URL of the user.",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "displayName",
        "emailAddress"
      ],
      "type": "object"
    },
    "ValueOperand": {
      "description": "An operand that is a user-provided value.",
      "properties": {
        "value": {
          "description": "The operand value.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "Version": {
      "additionalProperties": false,
      "description": "Details about a project version.",
      "properties": {
        "archived": {
          "description": "Indicates that the version is archived. Optional when creating or updating a version.",
          "type": "boolean"
        },
        "description": {
          "description": "The description of the version. Optional when creating or updating a version.",
          "type": "string"
        },
        "expand": {
          "description": "Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `operations` Returns the list of operations available for this version.\n *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.\n\nOptional for create and update.",
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "id": {
          "description": "The ID of the version.",
          "readOnly": true,
          "type": "string"
        },
        "issuesStatusForFixVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/VersionIssuesStatus"
            }
          ],
          "description": "If the expand option `issuesstatus` is used, returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.",
          "readOnly": true
        },
        "moveUnfixedIssuesTo": {
          "description": "The URL of the self link to the version to which all unfixed issues are moved when a version is released. Not applicable when creating a version. Optional when updating a version.",
          "format": "uri",
          "type": "string"
        },
        "name": {
          "description": "The unique name of the version. Required when creating a version. Optional when updating a version. The maximum length is 255 characters.",
          "type": "string"
        },
        "operations": {
          "description": "If the expand option `operations` is used, returns the list of operations available for this version.",
          "items": {
            "$ref": "#/definitions/SimpleLink"
          },
          "readOnly": true,
          "type": "array"
        },
        "overdue": {
          "description": "Indicates that the version is overdue.",
          "readOnly": true,
          "type": "boolean"
        },
        "project": {
          "description": "Deprecated. Use `projectId`.",
          "type": "string"
        },
        "projectId": {
          "description": "The ID of the project to which this version is attached. Required when creating a version. Not applicable when updating a version.",
          "format": "int64",
          "type": "integer"
        },
        "releaseDate": {
          "description": "The release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.",
          "format": "date",
          "type": "string"
        },
        "released": {
          "description": "Indicates that the version is released. If the version is released a request to release again is ignored. Not applicable when creating a version. Optional when updating a version.",
          "type": "boolean"
        },
        "self": {
          "description": "The URL of the version.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "startDate": {
          "description": "The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.",
          "format": "date",
          "type": "string"
        },
        "userReleaseDate": {
          "description": "The date on which work on this version is expected to finish, expressed in the instance's *Day/Month/Year Format* date format.",
          "readOnly": true,
          "type": "string"
        },
        "userStartDate": {
          "description": "The date on which work on this version is expected to start, expressed in the instance's *Day/Month/Year Format* date format.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "version"
      }
    },
    "VersionIssueCounts": {
      "additionalProperties": false,
      "description": "Various counts of issues within a version.",
      "properties": {
        "customFieldUsage": {
          "description": "List of custom fields using the version.",
          "items": {
            "$ref": "#/definitions/VersionUsageInCustomField"
          },
          "readOnly": true,
          "type": "array"
        },
        "issueCountWithCustomFieldsShowingVersion": {
          "description": "Count of issues where a version custom field is set to the version.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "issuesAffectedCount": {
          "description": "Count of issues where the `affectedVersion` is set to the version.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "issuesFixedCount": {
          "description": "Count of issues where the `fixVersion` is set to the version.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "self": {
          "description": "The URL of these count details.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "version"
      }
    },
    "VersionIssuesStatus": {
      "additionalProperties": true,
      "description": "Counts of the number of issues in various statuses.",
      "properties": {
        "done": {
          "description": "Count of issues with status *done*.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "inProgress": {
          "description": "Count of issues with status *in progress*.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "toDo": {
          "description": "Count of issues with status *to do*.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "unmapped": {
          "description": "Count of issues with a status other than *to do*, *in progress*, and *done*.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "VersionMoveBean": {
      "additionalProperties": false,
      "properties": {
        "after": {
          "description": "The URL (self link) of the version after which to place the moved version. Cannot be used with `position`.",
          "format": "uri",
          "type": "string"
        },
        "position": {
          "description": "An absolute position in which to place the moved version. Cannot be used with `after`.",
          "enum": [
            "Earlier",
            "Later",
            "First",
            "Last"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "version"
      }
    },
    "VersionUnresolvedIssuesCount": {
      "additionalProperties": false,
      "description": "Count of a version's unresolved issues.",
      "properties": {
        "issuesCount": {
          "description": "Count of issues.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "issuesUnresolvedCount": {
          "description": "Count of unresolved issues.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "self": {
          "description": "The URL of these count details.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "version"
      }
    },
    "VersionUsageInCustomField": {
      "additionalProperties": false,
      "description": "List of custom fields using the version.",
      "properties": {
        "customFieldId": {
          "description": "The ID of the custom field.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "fieldName": {
          "description": "The name of the custom field.",
          "readOnly": true,
          "type": "string"
        },
        "issueCountWithVersionInCustomField": {
          "description": "Count of the issues where the custom field contains the version.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Visibility": {
      "additionalProperties": true,
      "description": "The group or role to which this item is visible.",
      "properties": {
        "type": {
          "description": "Whether visibility of this item is restricted to a group or role.",
          "enum": [
            "group",
            "role"
          ],
          "type": "string"
        },
        "value": {
          "description": "The name of the group or role to which visibility of this item is restricted.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Votes": {
      "additionalProperties": false,
      "description": "The details of votes on an issue.",
      "properties": {
        "hasVoted": {
          "description": "Whether the user making this request has voted on the issue.",
          "readOnly": true,
          "type": "boolean"
        },
        "self": {
          "description": "The URL of these issue vote details.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "voters": {
          "description": "List of the users who have voted on this issue. An empty list is returned when the calling user doesn't have the *View voters and watchers* project permission.",
          "items": {
            "$ref": "#/definitions/User"
          },
          "readOnly": true,
          "type": "array"
        },
        "votes": {
          "description": "The number of votes on the issue.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Watchers": {
      "additionalProperties": false,
      "description": "The details of watchers on an issue.",
      "properties": {
        "isWatching": {
          "description": "Whether the calling user is watching this issue.",
          "readOnly": true,
          "type": "boolean"
        },
        "self": {
          "description": "The URL of these issue watcher details.",
          "readOnly": true,
          "type": "string"
        },
        "watchCount": {
          "description": "The number of users watching this issue.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "watchers": {
          "description": "Details of the users watching this issue.",
          "items": {
            "$ref": "#/definitions/UserDetails"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object",
      "xml": {
        "name": "watchers"
      }
    },
    "Webhook": {
      "additionalProperties": false,
      "description": "A webhook.",
      "properties": {
        "events": {
          "description": "The Jira events that trigger the webhook.",
          "items": {
            "enum": [
              "jira:issue_created",
              "jira:issue_updated",
              "jira:issue_deleted",
              "comment_created",
              "comment_updated",
              "comment_deleted",
              "issue_property_set",
              "issue_property_deleted"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "expirationDate": {
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "description": "The ID of the webhook.",
          "format": "int64",
          "type": "integer"
        },
        "jqlFilter": {
          "description": "The JQL filter that specifies which issues the webhook is sent for.",
          "type": "string"
        }
      },
      "required": [
        "expirationDate",
        "id",
        "jqlFilter"
      ],
      "type": "object"
    },
    "WebhookDetails": {
      "additionalProperties": false,
      "description": "A list of webhooks.",
      "properties": {
        "events": {
          "description": "The Jira events that trigger the webhook.",
          "items": {
            "enum": [
              "jira:issue_created",
              "jira:issue_updated",
              "jira:issue_deleted",
              "comment_created",
              "comment_updated",
              "comment_deleted",
              "issue_property_set",
              "issue_property_deleted"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "jqlFilter": {
          "description": "The JQL filter that specifies which issues the webhook is sent for. Only a subset of JQL can be used. The supported elements are:\n\n *  Fields: `issueKey`, `project`, `issuetype`, `status`, `assignee`, `reporter`, `issue.property`, and `cf[id]` (for custom fields—only the epic label custom field is supported).\n *  Operators: `=`, `!=`, `IN`, and `NOT IN`.",
          "type": "string"
        }
      },
      "required": [
        "jqlFilter"
      ],
      "type": "object"
    },
    "WebhookRegistrationDetails": {
      "additionalProperties": false,
      "description": "Details of webhooks to register.",
      "properties": {
        "url": {
          "description": "The URL that specifies where to send the webhooks.",
          "type": "string"
        },
        "webhooks": {
          "description": "A list of webhooks.",
          "items": {
            "$ref": "#/definitions/WebhookDetails"
          },
          "type": "array"
        }
      },
      "required": [
        "url",
        "webhooks"
      ],
      "type": "object"
    },
    "WebhooksExpirationDate": {
      "additionalProperties": false,
      "description": "The date the newly refreshed webhooks expire.",
      "properties": {
        "expirationDate": {
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        }
      },
      "required": [
        "expirationDate"
      ],
      "type": "object"
    },
    "Workflow": {
      "additionalProperties": false,
      "description": "Details about a workflow.",
      "properties": {
        "description": {
          "description": "The description of the workflow.",
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/PublishedWorkflowId"
        },
        "statuses": {
          "description": "The statuses of the workflow.",
          "items": {
            "$ref": "#/definitions/WorkflowStatus"
          },
          "type": "array"
        },
        "transitions": {
          "description": "The transitions of the workflow.",
          "items": {
            "$ref": "#/definitions/Transition"
          },
          "type": "array"
        }
      },
      "required": [
        "description"
      ],
      "type": "object"
    },
    "WorkflowId": {
      "additionalProperties": false,
      "description": "Properties that identify a workflow.",
      "properties": {
        "draft": {
          "description": "Whether the workflow is in the draft state.",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the workflow.",
          "type": "string"
        }
      },
      "required": [
        "draft",
        "name"
      ],
      "type": "object"
    },
    "WorkflowRules": {
      "additionalProperties": false,
      "description": "A collection of transition rules.",
      "properties": {
        "conditions": {
          "description": "The workflow conditions.",
          "items": {
            "$ref": "#/definitions/WorkflowTransitionRule"
          },
          "type": "array"
        },
        "postFunctions": {
          "description": "The workflow post functions.",
          "items": {
            "$ref": "#/definitions/WorkflowTransitionRule"
          },
          "type": "array"
        },
        "validators": {
          "description": "The workflow validators.",
          "items": {
            "$ref": "#/definitions/WorkflowTransitionRule"
          },
          "type": "array"
        }
      },
      "required": [
        "conditions",
        "postFunctions",
        "validators"
      ],
      "type": "object"
    },
    "WorkflowScheme": {
      "additionalProperties": false,
      "description": "Details about a workflow scheme.",
      "properties": {
        "defaultWorkflow": {
          "description": "The name of the default workflow for the workflow scheme. The default workflow has *All Unassigned Issue Types* assigned to it in Jira. If `defaultWorkflow` is not specified when creating a workflow scheme, it is set to *Jira Workflow (jira)*.",
          "type": "string"
        },
        "description": {
          "description": "The description of the workflow scheme.",
          "type": "string"
        },
        "draft": {
          "description": "Whether the workflow scheme is a draft or not.",
          "readOnly": true,
          "type": "boolean"
        },
        "id": {
          "description": "The ID of the workflow scheme.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "issueTypeMappings": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The issue type to workflow mappings, where each mapping is an issue type ID and workflow name pair. Note that an issue type can only be mapped to one workflow in a workflow scheme.",
          "type": "object"
        },
        "issueTypes": {
          "additionalProperties": {
            "$ref": "#/definitions/IssueTypeDetails"
          },
          "description": "The issue types available in Jira.",
          "readOnly": true,
          "type": "object"
        },
        "lastModified": {
          "description": "The date-time that the draft workflow scheme was last modified. A modification is a change to the issue type-project mappings only. This property does not apply to non-draft workflows.",
          "readOnly": true,
          "type": "string"
        },
        "lastModifiedUser": {
          "allOf": [
            {
              "$ref": "#/definitions/User"
            }
          ],
          "description": "The user that last modified the draft workflow scheme. A modification is a change to the issue type-project mappings only. This property does not apply to non-draft workflows.",
          "readOnly": true
        },
        "name": {
          "description": "The name of the workflow scheme. The name must be unique. The maximum length is 255 characters. Required when creating a workflow scheme.",
          "type": "string"
        },
        "originalDefaultWorkflow": {
          "description": "For draft workflow schemes, this property is the name of the default workflow for the original workflow scheme. The default workflow has *All Unassigned Issue Types* assigned to it in Jira.",
          "readOnly": true,
          "type": "string"
        },
        "originalIssueTypeMappings": {
          "additionalProperties": {
            "readOnly": true,
            "type": "string"
          },
          "description": "For draft workflow schemes, this property is the issue type to workflow mappings for the original workflow scheme, where each mapping is an issue type ID and workflow name pair. Note that an issue type can only be mapped to one workflow in a workflow scheme.",
          "readOnly": true,
          "type": "object"
        },
        "self": {
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "updateDraftIfNeeded": {
          "description": "Whether to create or update a draft workflow scheme when updating an active workflow scheme. An active workflow scheme is a workflow scheme that is used by at least one project. The following examples show how this property works:\n\n *  Update an active workflow scheme with `updateDraftIfNeeded` set to `true`: If a draft workflow scheme exists, it is updated. Otherwise, a draft workflow scheme is created.\n *  Update an active workflow scheme with `updateDraftIfNeeded` set to `false`: An error is returned, as active workflow schemes cannot be updated.\n *  Update an inactive workflow scheme with `updateDraftIfNeeded` set to `true`: The workflow scheme is updated, as inactive workflow schemes do not require drafts to update.\n\nDefaults to `false`.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "WorkflowSchemeAssociations": {
      "additionalProperties": false,
      "description": "A workflow scheme along with a list of projects that use it.",
      "properties": {
        "projectIds": {
          "description": "The list of projects that use the workflow scheme.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "workflowScheme": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkflowScheme"
            }
          ],
          "description": "The workflow scheme."
        }
      },
      "required": [
        "projectIds"
      ],
      "type": "object"
    },
    "WorkflowStatus": {
      "additionalProperties": false,
      "description": "Details of a workflow status.",
      "properties": {
        "id": {
          "description": "The ID of the issue status.",
          "type": "string"
        },
        "name": {
          "description": "The name of the status in the workflow.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/WorkflowStatusProperties"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "type": "object"
    },
    "WorkflowStatusProperties": {
      "additionalProperties": false,
      "description": "Properties of a workflow status.",
      "properties": {
        "issueEditable": {
          "description": "Whether issues are editable in this status.",
          "type": "boolean"
        }
      },
      "required": [
        "issueEditable"
      ],
      "type": "object"
    },
    "WorkflowTransition": {
      "additionalProperties": false,
      "description": "A workflow transition.",
      "properties": {
        "id": {
          "description": "The transition ID.",
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "description": "The transition name.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "type": "object"
    },
    "WorkflowTransitionProperty": {
      "additionalProperties": true,
      "description": "Details about the server Jira is running on.",
      "properties": {
        "id": {
          "description": "The ID of the transition property.",
          "readOnly": true,
          "type": "string"
        },
        "key": {
          "description": "The key of the transition property. Also known as the name of the transition property.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "The value of the transition property.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "WorkflowTransitionRule": {
      "additionalProperties": false,
      "description": "A workflow transition rule.",
      "properties": {
        "configuration": {
          "description": "The configuration of the transition rule. This is currently returned only for some of the rule types. Availability of this property is subject to change."
        },
        "type": {
          "description": "The type of the transition rule.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "WorkflowTransitionRules": {
      "additionalProperties": false,
      "description": "A workflow with transition rules.",
      "properties": {
        "conditions": {
          "description": "The list of conditions within the workflow.",
          "items": {
            "$ref": "#/definitions/ConnectWorkflowTransitionRule"
          },
          "type": "array"
        },
        "postFunctions": {
          "description": "The list of post functions within the workflow.",
          "items": {
            "$ref": "#/definitions/ConnectWorkflowTransitionRule"
          },
          "type": "array"
        },
        "validators": {
          "description": "The list of validators within the workflow.",
          "items": {
            "$ref": "#/definitions/ConnectWorkflowTransitionRule"
          },
          "type": "array"
        },
        "workflowId": {
          "$ref": "#/definitions/WorkflowId"
        }
      },
      "type": "object"
    },
    "WorkflowTransitionRulesUpdate": {
      "additionalProperties": false,
      "description": "Details about a workflow configuration update request.",
      "properties": {
        "workflows": {
          "description": "The list of workflows with transition rules to update.",
          "items": {
            "$ref": "#/definitions/WorkflowTransitionRules"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WorkflowTransitionRulesUpdateErrorDetails": {
      "additionalProperties": false,
      "description": "Details of any errors encountered while updating workflow transition rules for a workflow.",
      "properties": {
        "ruleUpdateErrors": {
          "additionalProperties": {
            "description": "A list of transition rule update errors, indexed by the transition rule ID. Any transition rule that appears here wasn't updated.",
            "items": {
              "description": "A list of transition rule update errors, indexed by the transition rule ID. Any transition rule that appears here wasn't updated.",
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "description": "A list of transition rule update errors, indexed by the transition rule ID. Any transition rule that appears here wasn't updated.",
          "type": "object"
        },
        "updateErrors": {
          "description": "The list of errors that specify why the workflow update failed. The workflow was not updated if the list contains any entries.",
          "items": {
            "description": "An error specifying why the workflow update failed.",
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "workflowId": {
          "$ref": "#/definitions/WorkflowId"
        }
      },
      "required": [
        "ruleUpdateErrors"
      ],
      "type": "object"
    },
    "WorkflowTransitionRulesUpdateErrors": {
      "additionalProperties": false,
      "description": "Details of any errors encountered while updating workflow transition rules.",
      "properties": {
        "updateResults": {
          "description": "A list of workflows.",
          "items": {
            "$ref": "#/definitions/WorkflowTransitionRulesUpdateErrorDetails"
          },
          "type": "array"
        }
      },
      "required": [
        "updateResults"
      ],
      "type": "object"
    },
    "Worklog": {
      "additionalProperties": true,
      "description": "Details of a worklog.",
      "properties": {
        "author": {
          "allOf": [
            {
              "$ref": "#/definitions/UserDetails"
            }
          ],
          "description": "Details of the user who created the worklog.",
          "readOnly": true
        },
        "comment": {
          "description": "A comment about the worklog in [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/). Optional when creating or updating a worklog."
        },
        "created": {
          "description": "The datetime on which the worklog was created.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the worklog record.",
          "readOnly": true,
          "type": "string"
        },
        "issueId": {
          "description": "The ID of the issue this worklog is for.",
          "readOnly": true,
          "type": "string"
        },
        "properties": {
          "description": "Details of properties for the worklog. Optional when creating or updating a worklog.",
          "items": {
            "$ref": "#/definitions/EntityProperty"
          },
          "type": "array"
        },
        "self": {
          "description": "The URL of the worklog item.",
          "format": "uri",
          "readOnly": true,
          "type": "string"
        },
        "started": {
          "description": "The datetime on which the worklog effort was started. Required when creating a worklog. Optional when updating a worklog.",
          "format": "date-time",
          "type": "string"
        },
        "timeSpent": {
          "description": "The time spent working on the issue as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). Required when creating a worklog if `timeSpentSeconds` isn't provided. Optional when updating a worklog. Cannot be provided if `timeSpentSecond` is provided.",
          "type": "string"
        },
        "timeSpentSeconds": {
          "description": "The time in seconds spent working on the issue. Required when creating a worklog if `timeSpent` isn't provided. Optional when updating a worklog. Cannot be provided if `timeSpent` is provided.",
          "format": "int64",
          "type": "integer"
        },
        "updateAuthor": {
          "allOf": [
            {
              "$ref": "#/definitions/UserDetails"
            }
          ],
          "description": "Details of the user who last updated the worklog.",
          "readOnly": true
        },
        "updated": {
          "description": "The datetime on which the worklog was last updated.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "visibility": {
          "allOf": [
            {
              "$ref": "#/definitions/Visibility"
            }
          ],
          "description": "Details about any restrictions in the visibility of the worklog. Optional when creating or updating a worklog."
        }
      },
      "type": "object",
      "xml": {
        "name": "worklog"
      }
    },
    "WorklogIdsRequestBean": {
      "additionalProperties": false,
      "properties": {
        "ids": {
          "description": "A list of worklog IDs.",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "required": [
        "ids"
      ],
      "type": "object"
    },
    "avatarUrls": {
      "$ref": "#/definitions/AvatarUrlsBean",
      "description": "The avatars of the user."
    }
  },
  "tags": [
    {
      "description": "This resource represents application roles. Use it to get details of an application role or all application roles.",
      "name": "Application roles"
    },
    {
      "description": "This resource represents audits that record activities undertaken in Jira. Use it to get a list of audit records.",
      "name": "Audit records"
    },
    {
      "description": "This resource represents system and custom avatars. Use it to obtain the details of system or custom avatars as well as add and remove avatars from a project or issue type.",
      "name": "Avatars"
    },
    {
      "description": "This resource represents dashboards. Use it to obtain the details of dashboards as well as add and remove item properties from dashboards.",
      "name": "Dashboards"
    },
    {
      "description": "This resource represents [filters](https://confluence.atlassian.com/x/eQiiLQ). Use it to get, create, update, or delete filters. Also use it to configure the columns for a filter and set favorite filters.",
      "name": "Filters"
    },
    {
      "description": "This resource represents options for sharing [filters](#api-group-Filters). Use it to get share scopes as well as add and remove share scopes from filters.",
      "name": "Filter sharing"
    },
    {
      "description": "This resource represents a list of users and a list of groups. Use it to obtain the details to populate user and group picker suggestions list.",
      "name": "Group and user picker"
    },
    {
      "description": "This resource represents groups of users. Use it to get, create, find, and delete groups as well as add and remove users from groups.",
      "name": "Groups"
    },
    {
      "description": "This resource represents Jira issues. Use it to:\n\n *  create or edit issues, individually or in bulk.\n *  retrieve metadata about the options for creating or editing issues.\n *  delete an issue.\n *  assign a user to an issue.\n *  get issue changelogs.\n *  send notifications about an issue.\n *  get details of the transitions available for an issue.\n *  transition an issue.",
      "name": "Issues"
    },
    {
      "description": "This resource represents issue attachments and the attachment settings for Jira. Use it to get the metadata for an attachment, delete an attachment, and view the metadata for the contents of an attachment. Also, use it to get the attachment settings for Jira.",
      "name": "Issue attachments"
    },
    {
      "description": "This resource represents issue comments. Used it to:\n\n *  get, create, update, and delete a comment from an issue.\n *  get all comments from issue.\n *  get a list of comments by comment ID.",
      "name": "Issue comments"
    },
    {
      "description": "This resource represents [issue comment](#api-group-Issue-comments) properties, which provides for storing custom data against an issue comment. Use is to get, set, and delete issue comment properties as well as obtain the keys of all properties on a comment. Comment properties are a type of [entity property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).",
      "name": "Issue comment properties"
    },
    {
      "description": "This resource represents issue fields, both system and custom fields. Use it to get fields, field configurations, and create custom fields.",
      "name": "Issue fields"
    },
    {
      "description": "This resource represents issue field configurations. Use it to get, set, and delete field configurations and field configuration schemes.",
      "name": "Issue field configurations"
    },
    {
      "description": "This resource represents custom issue field select list options created in Jira or using the REST API. See [Issue custom field options (apps)](#api-group-Issue-custom-field-options--apps-) to manipulate custom issue field select list options created by a Connect app.\n\nA select list issue field is a type of [issue field](https://developer.atlassian.com/cloud/jira/platform/modules/issue-field/) that enables a user to select an option from a list. Use this resource to add and retrieve the options of a select list issue field.",
      "name": "Issue custom field options"
    },
    {
      "description": "This resource represents custom issue field select list options created by a Connect app. See [Issue custom field options](#api-group-Issue-custom-field-options) to manipulate options created in Jira or using the REST API.\n\nA select list issue field is a type of [issue field](https://developer.atlassian.com/cloud/jira/platform/modules/issue-field/) that enables a user to select an option from a list. Use this resource to add, remove, and update the options of a select list issue field.",
      "name": "Issue custom field options (apps)"
    },
    {
      "description": "This resource represents links between issues. Use it to get, create, and delete links between issues.\n\nTo use this resource, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.",
      "name": "Issue links"
    },
    {
      "description": "This resource represents [issue link](#api-group-Issue-links) types. Use it to get, create, update, and delete link issue types as well as get lists of all link issue types.\n\nTo use this resource, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.",
      "name": "Issue link types"
    },
    {
      "description": "This resource represents issue navigator settings. Use it to get and set issue navigator default columns.",
      "name": "Issue navigator settings"
    },
    {
      "description": "This resource represents notification schemes, lists of events and the recipients who will receive notifications for those events. Use this resource to get details of a notification scheme and a list of notification schemes.",
      "name": "Issue notification schemes"
    },
    {
      "description": "This resource represents issue priorities. Use it to obtain a list of issue priorities and details for individual issue priorities.",
      "name": "Issue priorities"
    },
    {
      "description": "This resource represents [issue](#api-group-Issues) properties, which provides for storing custom data against an issue. Use it to get, set, and delete issue properties as well as obtain details of all properties on an issue. Operations to bulk update and delete issue properties are also provided. Issue properties are a type of [entity property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).",
      "name": "Issue properties"
    },
    {
      "description": "This resource represents remote issue links, a way of linking Jira to information in other systems. Use this resource to get, create, update, and delete remote issue links either by ID or global ID. The global ID provides a way of accessing remote issue links using information about the item's remote system host and remote system identifier.",
      "name": "Issue remote links"
    },
    {
      "description": "This resource represents issue resolution values. Use it to obtain a list of all issue resolution values and the details of individual resolution values.",
      "name": "Issue resolutions"
    },
    {
      "description": "This resource represents various ways to search for issues. Use it to search for issues with a JQL query and find issues to populate an issue picker.",
      "name": "Issue search"
    },
    {
      "description": "This resource represents issue security levels. Use it to obtain the details of any issue security level. For more information about issue security levels, see [Configuring issue-level security](https://confluence.atlassian.com/x/J4lKLg).",
      "name": "Issue security level"
    },
    {
      "description": "This resource represents issue security schemes. Use it to get an issue security scheme or list of issues security schemes.\n\nIssue security schemes control which users or groups of users can view an issue. When an issue security scheme is associated with a project, its security levels can be applied to issues in that project. Sub-tasks also inherit the security level of their parent issue.",
      "name": "Issue security schemes"
    },
    {
      "description": "This resource represents issues types. Use it to:\n\n *  get, create, update, and delete issue types.\n *  get all issue types for a user.\n *  get alternative issue types.\n *  set an avatar for an issue type.",
      "name": "Issue types"
    },
    {
      "description": "This resource represents issue type schemes. Use it to:\n\n *  get issue type schemes and a list of the projects that use them.\n *  associate issue type schemes with projects.",
      "name": "Issue type schemes"
    },
    {
      "description": "This resource represents issue type screen schemes. Use it to:\n\n *  get issue type screen schemes and a list of the projects that use them.\n *  associate issue type screen schemes with projects.",
      "name": "Issue type screen schemes"
    },
    {
      "description": "This resource represents [issue type](#api-group-Issue-types) properties, which provides for storing custom data against an issue type. Use it to get, create, and delete issue type properties as well as obtain the keys of all properties on a issues type. Issue type properties are a type of [entity property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).",
      "name": "Issue type properties"
    },
    {
      "description": "This resource represents votes cast by users on an issue. Use it to get details of votes on an issue as well as cast and withdrawal votes.",
      "name": "Issue votes"
    },
    {
      "description": "This resource represents users watching an issue. Use it to get details of users watching an issue as well as start and stop a user watching an issue.",
      "name": "Issue watchers"
    },
    {
      "description": "This resource represents issue worklogs. Use it to:\n\n *  get, create, update, and delete worklogs.\n *  obtain lists of updated or deleted worklogs.",
      "name": "Issue worklogs"
    },
    {
      "description": "This resource represents [issue worklog](#api-group-Issue-worklogs) properties, which provides for storing custom data against an issue worklog. Use it to get, create, and delete issue worklog properties as well as obtain the keys of all properties on a issue worklog. Issue worklog properties are a type of [entity property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).",
      "name": "Issue worklog properties"
    },
    {
      "description": "This resource is a collection of operations for [Jira expressions](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/).",
      "name": "Jira expressions"
    },
    {
      "description": "This resource represents various settings in Jira. Use it to get and update Jira settings and properties.",
      "name": "Jira settings"
    },
    {
      "description": "This resource represents JQL search auto-complete details. Use it to obtain JQL search auto-complete data and suggestions for use in programmatic construction of queries or custom query builders. It also provides an operation to convert one or more JQL queries with user identifiers (username or user key) to equivalent JQL queries with account IDs.",
      "name": "JQL"
    },
    {
      "description": "This resource represents available labels. Use it to get available labels for the global label field.",
      "name": "Labels"
    },
    {
      "description": "This resource represents information about the current user, such as basic details, group membership, application roles, preferences, and locale. Use it to get, create, update, and delete (restore default) values of the user's preferences and locale.",
      "name": "Myself"
    },
    {
      "description": "This resource represents permissions. Use it to obtain details of all permissions and determine whether the user has certain permissions.",
      "name": "Permissions"
    },
    {
      "description": "This resource represents permission schemes. Use it to get, create, update, and delete permission schemes as well as get, create, update, and delete details of the permissions granted in those schemes.",
      "name": "Permission schemes"
    },
    {
      "description": "This resource represents projects. Use this resource to get, create, update, and delete projects. Also get statuses available to a project, a project's notification schemes, and update a project's type.",
      "name": "Projects"
    },
    {
      "description": "This resource represents avatars associated with a project. Use it to get, load, set, and remove project avatars.",
      "name": "Project avatars"
    },
    {
      "description": "This resource represents project categories. Use it to create, update, and delete project categories as well as obtain a list of all project categories and details of individual categories. For more information on managing project categories, see [Adding, assigning, and deleting project categories](https://confluence.atlassian.com/x/-A5WMg).",
      "name": "Project categories"
    },
    {
      "description": "This resource represents project components. Uses to get, create, update, and delete project components. Also get components for project and get a count of issues by component.",
      "name": "Project components"
    },
    {
      "description": "This resource provides validation for project keys and names.",
      "name": "Project key and name validation"
    },
    {
      "description": "This resource represents permission schemes for a project. Use this resource to:\n\n *  get details of a project's issue security levels available to the calling user.\n *  get the permission scheme associated with the project or assign different permission scheme to the project.\n *  get details of a project's issue security scheme.\n\nSee [Managing project permissions](https://confluence.atlassian.com/x/yodKLg) for more information about permission schemes.",
      "name": "Project permission schemes"
    },
    {
      "description": "This resource represents [project](#api-group-Projects) properties, which provides for storing custom data against a project. Use it to get, create, and delete project properties as well as get a list of property keys for a project. Project properties are a type of [entity property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).",
      "name": "Project properties"
    },
    {
      "description": "This resource represents the roles that users can play in projects. Use this resource to get, create, update, and delete project roles.",
      "name": "Project roles"
    },
    {
      "description": "This resource represents the users assigned to [project roles](#api-group-Issue-comments). Use this resource to get, add, and remove default users from project roles. Also use this resource to add and remove users from a project role associated with a project.",
      "name": "Project role actors"
    },
    {
      "description": "This resource represents project types. Use it to obtain a list of all project types, a list of project types accessible to the calling user, and details of a project type.",
      "name": "Project types"
    },
    {
      "description": "This resource represents project versions. Use it to get, get lists of, create, update, move, merge, and delete project versions. This resource also provides counts of issues by version.",
      "name": "Project versions"
    },
    {
      "description": "This resource represents the screens used to record issue details. Use this resource to:\n\n *  get details of all screens.\n *  get details of all the fields available for use on screens.\n *  add a field to the default screen.\n *  get, create, update, move, and delete screen tabs.\n *  get, add, move, and remove fields from screen tabs.",
      "name": "Screens"
    },
    {
      "description": "This resource provides information about the Jira instance.",
      "name": "Server info"
    },
    {
      "description": "This resource represents a [long-running asynchronous tasks](#async-operations). Use it to obtain details about the progress of a long-running task or cancel a long-running task.",
      "name": "Tasks"
    },
    {
      "description": "This resource represents time tracking and time tracking providers. Use it to get and set the time tracking provider, get and set the time tracking options, and disable time tracking.",
      "name": "Time tracking"
    },
    {
      "description": "This resource represent users. Use this resource to:\n\n *  get, get a list of, create, and delete users.\n *  get, set, and reset a user's default issue table columns.\n *  get a list of the groups the user belongs to.\n *  get a list of user account IDs for a list of usernames or user keys.",
      "name": "Users"
    },
    {
      "description": "This resource represents [user](#api-group-Users) properties and provides for storing custom data against a user. Use it to get, create, and delete user properties as well as get a list of property keys for a user. This resourse is designed for integrations and apps to store per-user data and settings. This enables data used to customized the user experience to be kept in the Jira Cloud instance's database. User properties are a type of [entity property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).\n\nThis resource does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.",
      "name": "User properties"
    },
    {
      "description": "This resource represents various ways to search for and find users. Use it to obtain list of users including users assignable to projects and issues, users with permissions, user lists for pickup fields, and user lists generated using structured queries. Note that the operations in this resource only return users found within the first 1000 users.",
      "name": "User search"
    },
    {
      "description": "This resource represents webhooks. Webhooks are calls sent to a URL when an event occurs in Jira for issues specified by a JQL query. Only Connect apps can register webhooks. For more information, see [Webhooks](https://developer.atlassian.com/cloud/jira/platform/webhooks/#registering-a-webhook-via-the-jira-rest-api-for-connect-apps).",
      "name": "Webhooks"
    },
    {
      "description": "This resource represents workflows. Use it to get a list of workflows.",
      "name": "Workflows"
    },
    {
      "description": "This resource represents workflow transition rules. Workflow transition rules define a Connect app routine, such as a [workflow post functions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-post-function/) that is executed in association with the workflow. Use this resource to read and modify configuration of workflow transition rules.",
      "name": "Workflow transition rules"
    },
    {
      "description": "This resource represents workflow schemes. Use this resource to manage workflow schemes and the workflow scheme's workflows and issue types.\n\nA workflow scheme maps issue types to workflows. A workflow scheme can be associated with one or more projects, which enables the projects to use the workflow-issue type mappings.\n\nActive workflow schemes (workflow schemes that are used by projects) cannot be edited. When an active workflow scheme is edited, a draft copy of the scheme is created. The draft workflow scheme is then be edited and published (replacing the active scheme).\n\nSee [Configuring workflow schemes](https://confluence.atlassian.com/x/tohKLg) for more information.",
      "name": "Workflow schemes"
    },
    {
      "description": "This resource represents the associations between workflow schemes and projects.\n\nFor more information, see [Managing your workflows](https://confluence.atlassian.com/x/q4hKLg).",
      "name": "Workflow scheme project associations"
    },
    {
      "description": "This resource represents draft workflow schemes. Use this resource to manage drafts of workflow schemes.\n\nA workflow scheme maps issue types to workflows. A workflow scheme can be associated with one or more projects, which enables the projects to use the workflow-issue type mappings.\n\nActive workflow schemes (workflow schemes that are used by projects) cannot be edited. Edting an active workflow scheme creates a draft copy of the scheme. The draft workflow scheme can then be edited and published (replacing the active scheme).\n\nSee [Configuring workflow schemes](https://confluence.atlassian.com/x/tohKLg) for more information.",
      "name": "Workflow scheme drafts"
    },
    {
      "description": "This resource represents issue workflow statuses. Use it to obtain a list of all statuses associated with workflows and the details of a status.",
      "name": "Workflow statuses"
    },
    {
      "description": "This resource represents status categories. Use it to obtain a list of all status categories and the details of a category. Status categories provided a mechanism for categorizing [statuses](#api-group-Workflow-statuses).",
      "name": "Workflow status categories"
    },
    {
      "description": "This resource represents workflow transition properties, which provides for storing custom data against a workflow transition. Use it to get, create, and delete workflow transition properties as well as get a list of property keys for a workflow transition. Workflow transition properties are a type of [entity property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).",
      "name": "Workflow transition properties"
    },
    {
      "description": "This resource represents app properties. Use it to store arbitrary data for your\n[Connect app](https://developer.atlassian.com/cloud/jira/platform/integrating-with-jira-cloud/#atlassian-connect).",
      "name": "App properties"
    },
    {
      "description": "This resource represents [modules registered dynamically](https://developer.atlassian.com/cloud/jira/platform/dynamic-modules/)\nby [Connect apps](https://developer.atlassian.com/cloud/jira/platform/integrating-with-jira-cloud/#atlassian-connect).",
      "name": "Dynamic modules"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Atlassian products and services.",
    "url": "http://www.atlassian.com"
  }
}
